head	1.6;
access;
symbols;
locks; strict;
comment	@ * @;


1.6
date	2011.11.21.17.05.31;	author john;	state Exp;
branches;
next	1.5;

1.5
date	98.08.27.20.10.58;	author john;	state Exp;
branches;
next	1.4;

1.4
date	97.07.30.21.14.57;	author john;	state Exp;
branches;
next	1.3;

1.3
date	94.03.22.11.39.09;	author jstockwe;	state Exp;
branches;
next	1.2;

1.2
date	93.06.25.09.33.08;	author jstockwe;	state Exp;
branches;
next	1.1;

1.1
date	92.10.29.14.14.55;	author jstockwe;	state Exp;
branches;
next	;


desc
@resconv.c
@


1.6
log
@copyright
@
text
@/* Copyright (c) Colorado School of Mines, 2011.*/
/* All rights reserved.                       */

/*********************** self documentation **********************/
/******************************************************************************
RESCONV - general purpose resource type converters

XtcwpStringToFloat	convert  string to float in resource

*******************************************************************************
Function Prototype:
void XtcwpStringToFloat (XrmValue *args, int *nargs, 
	XrmValue *fromVal, XrmValue *toVal);

*******************************************************************************
Author:  Dave Hale, Colorado School of Mines, 08/28/90
******************************************************************************/
/**************** end self doc ********************************/

#include "Xtcwp/Xtcwp.h"

void XtcwpStringToFloat (XrmValue *args, int *nargs, 
	XrmValue *fromVal, XrmValue *toVal)
{
	static float result;
	
	/* ensure number of arguments is zero */
	if (*nargs!=(args-args)/*0*/)
		XtWarning("String to Float conversion needs no arguments!");
	
	/* convert string in fromVal to float in toVal */
	if (sscanf((char *)fromVal->addr,"%f",&result)==1) {

		/* toVal points to the result */
		toVal->size = sizeof(float); 
		toVal->addr = (char *)&result;
	
	/* if sscanf fails */
	} else {
		XtStringConversionWarning((char *)fromVal->addr,"Float");
	}
}
@


1.5
log
@replaced caddr_t with char *
@
text
@d1 3
@


1.4
log
@Stew Levin's fixes
@
text
@d33 1
a33 1
		toVal->addr = (caddr_t)&result;
@


1.3
log
@added dummy selfdoc
@
text
@d25 1
a25 1
	if (*nargs!=0)
@


1.2
log
@removed redundant "copyright" statement and simplified includes
@
text
@d1 1
d3 4
a6 1
resconv.c:  general purpose resource type converters
d8 5
d15 1
@


1.1
log
@Initial revision
@
text
@a0 3
/* Copyright (c) Colorado School of Mines, 1990.
/* All rights reserved.                       */

d7 1
a7 2
#include <X11/Intrinsic.h>
#include <X11/StringDefs.h>
@
