%!PS-Adobe-2.0
%%Creator: dvips 5.51 Copyright 1986, 1993 Radical Eye Software
%%Title: answers.dvi
%%CreationDate: Tue Mar 14 12:19:18 1995
%%Pages: 137
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips answers.dvi -o -X 300 -Y 300
%DVIPSSource:  TeX output 1994.07.29:1207
%%BeginProcSet: tex.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N /X{S N}
B /TR{translate}N /isls false N /vsize 11 72 mul N /@rigin{isls{[0 -1 1 0 0 0]
concat}if 72 Resolution div 72 VResolution div neg scale isls{Resolution hsize
-72 div mul 0 TR}if Resolution VResolution vsize -72 div 1 add mul TR matrix
currentmatrix dup dup 4 get round 4 exch put dup dup 5 get round 5 exch put
setmatrix}N /@landscape{/isls true N}B /@manualfeed{statusdict /manualfeed
true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N
/IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn begin /FontType 3 N /FontMatrix
fntrx N /FontBBox FBB N string /base X array /BitMaps X /BuildChar{
CharBuilder}N /Encoding IE N end dup{/foo setfont}2 array copy cvx N load 0 nn
put /ctr 0 N[}B /df{/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0
0 sf neg 0 0]N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data
dup length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128
ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127
sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp 0 N
/cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2 index get
S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff ch-yoff ch-height
sub ch-xoff ch-width add ch-yoff setcachedevice ch-width ch-height true[1 0 0
-1 -.1 ch-xoff sub ch-yoff .1 add]{ch-image}imagemask restore}B /D{/cc X dup
type /stringtype ne{]}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1
ne{dup dup length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}
B /I{cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage userdict
/eop-hook known{eop-hook}if}N /@start{userdict /start-hook known{start-hook}
if pop /VResolution X /Resolution X 1000 div /DVImag X /IE 256 array N 0 1 255
{IE S 1 string dup 0 3 index put cvn put}for 65781.76 div /vsize X 65781.76
div /hsize X}N /p{show}N /RMat[1 0 0 -1 0 0]N /BDot 260 string N /rulex 0 N
/ruley 0 N /v{/ruley X /rulex X V}B /V{}B /RV statusdict begin /product where{
pop product dup length 7 ge{0 7 getinterval dup(Display)eq exch 0 4
getinterval(NeXT)eq or}{pop false}ifelse}{false}ifelse end{{gsave TR -.1 -.1
TR 1 1 scale rulex ruley false RMat{BDot}imagemask grestore}}{{gsave TR -.1
-.1 TR rulex ruley scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{
gsave transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N
/tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{4 M}B
/w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{p 1 w}B /r{
p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p a}B /bos{/SS save
N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N /vs
792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen false N
/rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B /@scaleunit 100 N
/@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit div /vsc X}B /@hsize{/hs
X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{/CLIP 2 N}B /@hoffset{/ho X}B
/@voffset{/vo X}B /@angle{/ang X}B /@rwi{10 div /rwi X /rwiSeen true N}B /@rhi
{10 div /rhi X /rhiSeen true N}B /@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B
/@ury{/ury X}B /magscale true def end /@MacSetUp{userdict /md known{userdict
/md get type /dicttype eq{userdict begin md length 10 add md maxlength ge{/md
md dup length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{
}N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath clippath
mark{transform{itransform moveto}}{transform{itransform lineto}}{6 -2 roll
transform 6 -2 roll transform 6 -2 roll transform{itransform 6 2 roll
itransform 6 2 roll itransform 6 2 roll curveto}}{{closepath}}pathforall
newpath counttomark array astore /gc xdf pop ct 39 0 put 10 fz 0 fs 2
F/|______Courier fnt invertflag{PaintBlack}if}N /txpose{pxs pys scale ppr
aload pop por{noflips{pop S neg S TR pop 1 -1 scale}if xflip yflip and{pop S
neg S TR 180 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0
get neg sub neg TR}if xflip yflip not and{pop S neg S TR pop 180 rotate ppr 3
get ppr 1 get neg sub neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get
neg TR}if}{noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop
pop 90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get
neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr 0
get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add 2 div 3
1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp{pop pop
showpage pm restore}N end}if}if}N /normalscale{Resolution 72 div VResolution
72 div neg scale magscale{DVImag dup scale}if 0 setgray}N /psfts{S 65781.76
div N}N /startTexFig{/psf$SavedState save N userdict maxlength dict begin
/magscale false def normalscale currentpoint TR /psf$ury psfts /psf$urx psfts
/psf$lly psfts /psf$llx psfts /psf$y psfts /psf$x psfts currentpoint /psf$cy X
/psf$cx X /psf$sx psf$x psf$urx psf$llx sub div N /psf$sy psf$y psf$ury
psf$lly sub div N psf$sx psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy
psf$sy div psf$ury sub TR /showpage{}N /erasepage{}N /copypage{}N /p 3 def
@MacSetUp}N /doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto closepath
clip newpath moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{
SDict begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial{CLIP
1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto closepath
clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx sub div rhiSeen{
rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly
sub div dup scale llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly
moveto urx lly lineto urx ury lineto llx ury lineto closepath clip}if
/showpage{}N /erasepage{}N /copypage{}N newpath}N /@endspecial{count ocount
sub{pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N /@defspecial{SDict begin}N /@fedspecial{end}B /li{lineto}B /rl{
rlineto}B /rc{rcurveto}B /np{/SaveX currentpoint /SaveY X N 1 setlinecap
newpath}N /st{stroke SaveX SaveY moveto}N /fil{fill SaveX SaveY moveto}N
/ellipse{/endangle X /startangle X /yrad X /xrad X /savematrix matrix
currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc savematrix
setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 300 300
(/private/Net/shrock/scratch/jkc/BookMma/MakeManuals/answers.dvi)
@start /Fa 2 119 df<003F1C0001FFBC0003E1FC000F807C001F007C001F007C003E00F8007E
00F8007E00F8007E00F800FC01F000FC01F000FC01F000FC01F180FC03E3007C03E3007C07E300
3E1FE6001FF9FC0007E0780019147F931D>97 D<0780781FE0FC39E0FC31F1FC61F0FC63E0FCC3
E01C07C00C07C00C07C00C0F80180F80180F80300F80300F80600F80600F80C007C38003FF0000
FC0016147F931A>118 D E /Fb 5 113 df<FFFFF0FFFFF014027D881B>0
D<0000010000000080000000800000004000000020FFFFFFFCFFFFFFFC00000020000000400000
008000000080000001001E0C7E8D23>33 D<060F0F0E1E1E1C3C383830707060E0C04008117F91
0A>48 D<0F8007C019E01C202070301040184008C00C8004800780048007000480038004800780
048004C00C400860082030381010E01E600F8007C01E0E7E8D23>I<0000000800000018000000
30000000300000006000000060000000C0000000C0000001800000030000000300000006000000
060000000C0000000C00000018000000180030003000D8003000180060000C0060000C00C00006
00C000060180000301800003030000018600000186000000CC000000CC00000078000000780000
00300000003000001D227F811D>112 D E /Fc 2 52 df<1F00618040C08060C0600060006000
C00180030006000C00102020207FC0FFC00B107F8F0F>50 D<1F00218060C060C000C000800180
0F00008000400060C060C060804060801F000B107F8F0F>I E /Fd 22 119
df<C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0021B7A800E>12
D<0006000C001800300070006000C001C0018003800300070006000E000C001C001C0018003800
380038003000700070007000700070007000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E000E000E000700070007000700070007000300038003800380018001C00
1C000C000E000600070003000380018001C000C00060007000300018000C00060F4A788119>16
D<C0006000300018001C000C000600070003000380018001C000C000E000600070007000300038
003800380018001C001C001C001C001C001C000E000E000E000E000E000E000E000E000E000E00
0E000E000E000E000E000E000E000E001C001C001C001C001C001C001800380038003800300070
0070006000E000C001C0018003800300070006000C001C00180030006000C0000F4A7F8119>I<
0000300000600000C0000180000300000700000E00000C0000180000380000300000700000E000
00C00001C0000180000380000380000300000700000600000E00000E00000C00001C00001C0000
1C0000180000380000380000380000380000700000700000700000700000700000700000700000
E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000
E00000E00000E00000E00000E00000E00000E00000E00000700000700000700000700000700000
7000007000003800003800003800003800001800001C00001C00001C00000C00000E00000E0000
06000007000003000003800003800001800001C00000C00000E000007000003000003800001800
000C00000E000007000003000001800000C0000060000030146377811F>I<C000006000003000
001800000C00000E000007000003000001800001C00000C00000E0000070000030000038000018
00001C00001C00000C00000E000006000007000007000003000003800003800003800001800001
C00001C00001C00001C00000E00000E00000E00000E00000E00000E00000E00000700000700000
700000700000700000700000700000700000700000700000700000700000700000700000700000
700000700000700000700000700000700000E00000E00000E00000E00000E00000E00000E00001
C00001C00001C00001C0000180000380000380000380000300000700000700000600000E00000C
00001C00001C0000180000380000300000700000E00000C00001C0000180000300000700000E00
000C0000180000300000600000C0000014637F811F>I<FFE0FFE0FFE0E000E000E000E000E000
E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
E000E000E000E000E000E000E000E000E000E000FFE0FFE0FFE00B63768116>I<FFE0FFE0FFE0
00E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E000E000E000E000E000E000E000E000E000E000E0FFE0FFE0FFE00B6380
8116>I<0000700001F00003C0000780000E00001C0000380000700000700000F00000E00000E0
0000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E0
0000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E0
0000E00000E00001C00001C00001C0000380000700000600000E0000380000700000C000007000
003800000E000006000007000003800001C00001C00001C00000E00000E00000E00000E00000E0
0000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E0
0000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000F0
00007000007000003800001C00000E000007800003C00001F000007014637B811F>26
D<00000C0000180000380000300000600000E00000C00001C0000380000380000700000700000E
00000E00001C00001C0000380000380000780000700000F00000F00000E00001E00001E00003C0
0003C00003C00003C0000780000780000780000F80000F00000F00000F00001F00001F00001E00
001E00001E00003E00003E00003E00003E00003C00003C00003C00007C00007C00007C00007C00
007C00007C00007C00007C0000780000780000F80000F80000F80000F80000F80000F80000F800
00F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000164B748024>48
D<C000006000007000003000001800001C00000C00000E000007000007000003800003800001C0
0001C00000E00000E000007000007000007800003800003C00003C00001C00001E00001E00000F
00000F00000F00000F000007800007800007800007C00003C00003C00003C00003E00003E00001
E00001E00001E00001F00001F00001F00001F00000F00000F00000F00000F80000F80000F80000
F80000F80000F80000F80000F800007800007800007C00007C00007C00007C00007C00007C0000
7C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C164B7F8024>I<F8
0000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F8
0000F80000F80000F800007800007800007C00007C00007C00007C00007C00007C00007C00007C
00003C00003C00003C00003E00003E00003E00003E00001E00001E00001E00001F00001F00000F
00000F00000F00000F800007800007800007800003C00003C00003C00003C00001E00001E00000
E00000F00000F000007000007800003800003800001C00001C00000E00000E0000070000070000
03800003800001C00000C00000E000006000003000003800001800000C164B748224>64
D<00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C0000
7C00007C00007C00007C00007C0000780000780000F80000F80000F80000F80000F80000F80000
F80000F80000F00000F00000F00001F00001F00001F00001F00001E00001E00001E00003E00003
E00003C00003C00003C00007C0000780000780000780000F00000F00000F00000F00001E00001E
00001C00003C00003C0000380000780000700000700000E00000E00001C00001C0000380000380
000700000700000E00000C00001C0000180000300000700000600000C00000164B7F8224>I<00
00F800018400030600060E000604000E00000E00000E00001C00001C00001C00001C00001C0000
1C00001C00001C00001C00001C0000380000380000380000380000380000380000380000380000
380000380000700000700000700000700000700000700000700000700000700000700000E00000
E00000E00040C000E0C000C180004300003E0000172E7E7F14>82 D<FFFFFFFFFFFFC0FFFFFFFF
FFFFE07F00000001FFE07F000000001FE03F8000000003F01FC000000000F00FC000000000380F
E0000000001807F0000000000C03F8000000000403F8000000000401FC000000000200FE000000
0000007F0000000000007F0000000000003F8000000000001FC000000000000FC000000000000F
E0000000000007F0000000000003F8000000000003F8000000000001FC000000000000FE000000
0000007E0000000000007F0000000000003F8000000000001FC000000000001FC000000000000F
C000000000000780000000000003800000000000070000000000000E0000000000001C00000000
0000380000000000007000000000000070000000000000E0000000000001C00000000000038000
00000000070000000000000E0000000000000E0000000000001C00000000020038000000000400
70000000000400E0000000000C01E0000000001801C00000000038038000000000F80700000000
01F00E000000000FF01C00000001FFF03FFFFFFFFFFFE03FFFFFFFFFFFE07FFFFFFFFFFFE0FFFF
FFFFFFFFC0373A7E7F3C>88 D<000000038000000006600000000C700000000CF00000001CF000
000018600000001800000000380000000038000000003000000000700000000070000000007000
000000F000000000E000000000E000000000E000000001E000000001E000000001C000000001C0
00000003C000000003C000000003C000000003C000000007800000000780000000078000000007
8000000007800000000F800000000F000000000F000000000F000000001F000000001F00000000
1F000000001F000000001E000000003E000000003E000000003E000000003E000000007C000000
007C000000007C000000007C000000007C000000007C00000000F800000000F800000000F80000
0000F800000000F000000001F000000001F000000001F000000001F000000001E000000001E000
000001E000000003E000000003C000000003C000000003C000000003C000000003C00000000780
000000078000000007800000000780000000070000000007000000000F000000000F000000000E
000000000E000000000E000000001E000000001C000000001C000000001C000000003800000000
38000000003800000000300000006070000000F060000000F0C0000000E0C00000006300000000
1E00000000245C7E7F17>90 D<00000000020000000006000000000C000000000C000000001800
00000018000000003000000000300000000060000000006000000000C000000000C00000000180
000000018000000003000000000300000000060000000006000000000C000000000C0000000018
00000000180000000030000000003000000000600008000060001C0000C0003C0000C000CE0001
80000E000180000E0003000007000300000700060000038006000003800C000001C00C000001C0
18000001E018000000E030000000E0300000007060000000706000000038C000000038C0000000
1D800000001D800000001F000000000F000000000E000000000600000027327C812A>112
D<000000000200000000060000000006000000000C000000000C000000000C0000000018000000
001800000000180000000030000000003000000000300000000060000000006000000000600000
0000C000000000C000000000C00000000180000000018000000001800000000300000000030000
000003000000000600000000060000000006000000000C000000000C000000000C000000001800
000000180000000018000000003000000000300000000030000000006000000000600008000060
001C0000C0003C0000C0007C0000C000DC000180008E000180000E000180000E00030000070003
0000070003000007000600000380060000038006000003800C000003800C000001C00C000001C0
18000001C018000000E018000000E030000000E030000000E03000000070600000007060000000
706000000038C000000038C000000038C00000001D800000001D800000001D800000001F000000
000F000000000F000000000E00000000060000000006000000274B7C812A>I<00000000020000
0000060000000006000000000C000000000C000000000C000000000C0000000018000000001800
000000180000000018000000003000000000300000000030000000003000000000600000000060
0000000060000000006000000000C000000000C000000000C000000000C0000000018000000001
800000000180000000018000000001800000000300000000030000000003000000000300000000
06000000000600000000060000000006000000000C000000000C000000000C000000000C000000
001800000000180000000018000000001800000000300000000030000000003000000000300000
000060000000006000000000600008000060001C0000C0001C0000C0003C0000C0005C0000C000
5C000180008E000180000E000180000E000180000E000300000700030000070003000007000300
00070006000007000600000380060000038006000003800C000003800C000001C00C000001C00C
000001C018000001C018000001C018000000E018000000E018000000E030000000E030000000E0
300000007030000000706000000070600000007060000000386000000038C000000038C0000000
38C000000038C00000001D800000001D800000001D800000001D800000000F000000000F000000
000F000000000F000000000E0000000006000000000600000027647C812A>I<00000000020000
00000600000000060000000006000000000C000000000C000000000C000000000C000000000C00
000000180000000018000000001800000000180000000018000000003000000000300000000030
000000003000000000300000000060000000006000000000600000000060000000006000000000
C000000000C000000000C000000000C000000000C0000000018000000001800000000180000000
018000000001800000000300000000030000000003000000000300000000030000000006000000
00060000000006000000000600000000060000000006000000000C000000000C000000000C0000
00000C000000000C00000000180000000018000000001800000000180000000018000000003000
000000300000000030000000003000000000300000000060000000006000000000600008000060
0008000060001C0000C0001C0000C0003C0000C0003C0000C0005C0000C0005C000180008E0001
80000E000180000E000180000E000180000E000300000E00030000070003000007000300000700
03000007000600000700060000038006000003800600000380060000038006000003800C000003
800C000001C00C000001C00C000001C00C000001C018000001C018000001C018000000E0180000
00E018000000E030000000E030000000E030000000703000000070300000007060000000706000
000070600000007060000000386000000038C000000038C000000038C000000038C000000038C0
0000001D800000001D800000001D800000001D800000001D800000000F000000000F000000000F
000000000F000000000F000000000E000000000600000000060000000006000000277D7C812A>
I<0000018000000180000001800000018000000180000001800000018000000180000001800800
01800C0001801C0001801C0001802E0001802E0001804E00018047000180870001808700018007
00018003800180038001800380018001C0018001C0018001C0018000E0018000E0018000E00180
00700180007001800070018000380180003801800038018000380180001C0180001C0180001C01
80000E0180000E0180000E01800007018000070180000701800003818000038180000381800003
81800001C1800001C1800001C1800000E1800000E1800000E18000007180000071800000718000
003980000039800000398000001D8000001D8000001D8000001D8000000F8000000F8000000F80
0000078000000780000007800000038000000380000003800000018000000100194C7B802C>I<
C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0021B64802C>I<7FFF80FFFF
80C00000C00000C00000C00000C00000C00000C00000C00000C00000C00000C00000C00000C000
00C00000C00000C00000C00000C00000C00000C00000C00000C00000C00000C00000111A64812C
>I E /Fe 15 117 df<0030000030000030000030000030000030000030000030000030000030
00003000FFFFFCFFFFFC0030000030000030000030000030000030000030000030000030000030
0000300016187E931B>43 D<07C018303018701C600C600CE00EE00EE00EE00EE00EE00EE00EE0
0EE00E600C600C701C30181C7007C00F157F9412>48 D<03000700FF0007000700070007000700
0700070007000700070007000700070007000700070007007FF00C157E9412>I<0F8030E04070
8030C038E0384038003800700070006000C00180030006000C08080810183FF07FF0FFF00D157E
9412>I<0FE030306018701C701C001C00180038006007E000300018000C000E000EE00EE00EC0
0C401830300FE00F157F9412>I<00300030007000F001F0017002700470087018701070207040
70C070FFFE0070007000700070007003FE0F157F9412>I<20303FE03FC0240020002000200020
002F8030E020700030003800384038E038E0388030406020C01F000D157E9412>I<01F0060808
0C181C301C70006000E000E3E0EC30F018F00CE00EE00EE00E600E600E300C3018183007C00F15
7F9412>I<07E018302018600C600C700C78183E101F600FC00FF018F8607C601EC00EC006C006
C004600C38300FE00F157F9412>56 D<07C0183030186018E00CE00CE00EE00EE00E601E301E18
6E0F8E000E000C001C70187018603020C01F800F157F9412>I<FFFFFCFFFFFC00000000000000
0000000000000000000000FFFFFCFFFFFC160A7E8C1B>61 D<007E00000E00000E00000E00000E
00000E00000E00000E00000E0007CE001C3E00300E00700E00600E00E00E00E00E00E00E00E00E
00600E00700E00301E00182E0007CFC012177F9614>100 D<FC00001C00001C00001C00001C00
001C00001C00001C00001C00001C7C001D8E001E07001C07001C07001C07001C07001C07001C07
001C07001C07001C07001C0700FF9FE01317809614>104 D<FC7C001D8E001E07001C07001C07
001C07001C07001C07001C07001C07001C07001C07001C0700FF9FE0130E808D14>110
D<080008000800180018003800FF80380038003800380038003800380038403840384038401C80
0F000A147F930E>116 D E /Ff 23 123 df<0FFFC01FFFC02108004110008110000210000210
000210000610000410000C10000C1800181800180800120E7F8D14>25 D<60F0F06004047D830A
>58 D<0008001800300030003000600060006000C000C000C00180018001800300030006000600
06000C000C000C00180018001800300030003000600060006000C000C0000D217E9812>61
D<07F0000FE000F0001E0000B8001E0000B8002E0000B8004E000138005C000138009C00013801
1C00011C011C00021C023800021C043800021C043800021C083800041C107000040E107000040E
207000040E407000080E40E000080E80E000080F00E000080700E000180601C000FE040FF80023
177F9622>77 D<07FFF00000E01C0000E0060000E0070000E0070001C0070001C0070001C00700
01C00E0003801C000380700003FF80000380E000070070000700380007003800070038000E0070
000E0070000E0070800E0070801C003100FF801E0019177F961B>82 D<003E1000C1A00100E002
00600600600C00400C00400E00000F000007E00007FC0001FE00003F0000078000038000038020
0180400300400300600600600400D8180087E00014177E9615>I<1FFFFE381C0E201C04601C04
401C0440380480380400380000380000700000700000700000700000E00000E00000E00000E000
01C00001C00001C00001C00003C0007FFC0017177F9615>I<071018F0307060706060C060C060
C06080C080C480C4C1C446C838700E0E7E8D13>97 D<7C00180018001800180030003000300030
00678068C070406060C060C060C060C06080C080C08180C10046003C000B177E960F>I<07C00C
20107020706000C000C000C00080008000C010C02060C03F000C0E7E8D0F>I<003E000C000C00
0C000C0018001800180018073018F0307060706060C060C060C06080C080C480C4C1C446C83870
0F177E9612>I<1F0006000600060006000C000C000C000C0018F01B181C081808381830183018
30306030603160616062C022C03C10177E9614>104 D<03000380030000000000000000000000
00001C002400460046008C000C0018001800180031003100320032001C0009177F960C>I<1F00
06000600060006000C000C000C000C00181C1866188E190C32003C003F00318060C060C460C460
C8C0C8C0700F177E9612>107 D<383C1E0044C6630047028100460301008E0703000C0603000C
0603000C060600180C0600180C0620180C0C20180C0C4030180440301807801B0E7F8D1F>109
D<383C0044C6004702004602008E06000C06000C06000C0C00180C00180C401818401818803008
80300F00120E7F8D15>I<1C3C22462382230346030603060306030C060C060C0C0C081A3019E0
18001800300030003000FC001014808D12>112 D<071018D0307060706060C060C060C06080C0
80C080C0C1C047803980018001800300030003001FC00C147E8D10>I<38F04518463846308C00
0C000C000C001800180018001800300030000D0E7F8D10>I<030003000600060006000600FFC0
0C000C000C001800180018001800300030803080310031001E000A147F930D>116
D<0F1F0011A18020C38020C300418000018000018000018000030000030200C30200E70400C508
0078F000110E7F8D14>120 D<1C02260646064606860C0C0C0C0C0C0C18181818181818380C70
07B000300060706070C021801E000F147F8D11>I<07840FCC1878101000200040018002000400
080810083C3043E081C00E0E7F8D10>I E /Fg 15 113 df<FFFFFFC0FFFFFFC01A027C8B23>0
D<70F8F8F87005057C8D0D>I<400004C0000C6000183000301800600C00C00601800303000186
0000CC0000780000300000300000780000CC000186000303000601800C00C01800603000306000
18C0000C40000416187A9623>I<01800180018001800180E187718E399C0FF003C003C00FF039
9C718EE1870180018001800180018010147D9417>I<0001000000030000000300000003000000
030000000300000003000000030000000300000003000000030000000300000003000000030000
00030000FFFFFFFCFFFFFFFC000300000003000000030000000300000003000000030000000300
00000300000003000000030000000300000003000000030000FFFFFFFCFFFFFFFC1E207E9E23>
6 D<FFFFFFFC7FFFFFFC00000000000000000000000000000000000000000000000000000000FF
FFFFFCFFFFFFFC000000000000000000000000000000000000000000000000000000007FFFFFFC
FFFFFFFC1E147E9423>17 D<07C000041FF800043FFC0004783F000CE007801CC003F0788000FF
F080007FE080000F80000000000000000007C000041FF800043FFC0004783F000CE007801CC003
F0788000FFF080007FE080000F801E147E9523>25 D<0000000600000000060000000006000000
00030000000003000000000380000000018000000000C0000000006000000000700000000018FF
FFFFFFFFFFFFFFFFFF00000000180000000070000000006000000000C000000001800000000380
0000000300000000030000000006000000000600000000060028187E962D>33
D<000000C000000000C00000000060000000006000000000300000000018000000000C007FFFFF
FE00FFFFFFFF0000000001C000000000E0000000003C000000000F000000003C00000000700000
0001C00000000380FFFFFFFE007FFFFFFC00000000180000000018000000003000000000600000
00006000000000C000000000C000281A7E972D>41 D<03F0000FC00FFC003FF01C7F007018300F
80C0046007C180064003E300024001F600028000FC000180007C000180007C000180003E000180
003E000180003F000140006F80024000C7C002600183E006200301F00C180E00FE380FFC003FF0
03F0000FC028147E932D>49 D<00000C00000C0000180000180000300000300000600000600000
C00000C0000180000180000180000300000300000600000600000C00000C000018000018000030
0000300000600000600000C00000C0000180000180000300000300000600000600000600000C00
000C0000180000180000300000300000600000600000C00000400000162C7AA000>54
D<000F0038006000E001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C0
038007001E00F8001E000700038001C001C001C001C001C001C001C001C001C001C001C001C001
C001C001C000E000600038000F102D7DA117>102 D<F8001E000700038001C001C001C001C001
C001C001C001C001C001C001C001C001C001C001C000E000600038000F0038006000E001C001C0
01C001C001C001C001C001C001C001C001C001C001C001C001C0038007001E00F800102D7DA117
>I<C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0
C0C0C0C0C0C0C0C0022D7BA10D>106 D<00000000080000000018000000003000000000300000
000060000000006000000000C000000000C0000000018000000001800000000300000000030000
0000060000000006000000000C000000000C000000001800000000180000000030000000003000
00000060000000006000000000C000060000C0001E000180002F000180004F0003000087800300
00078006000003C006000003C00C000003C00C000001E018000001E018000000F030000000F030
000000786000000078600000003CC00000003CC00000001F800000001F800000000F000000000F
00000000060000000006000000252E7E8126>112 D E /Fh 55 123 df<007E000001C3000003
0180800E00C0801E00E0801C00E1003C00E1007800E1007800E2007800E400F000E400F000E800
F000F000F000F000F000E0007000E00070016000300671001818320007E01C0019147E931D>11
D<0000F800030600040600080300100300200300400700400700800700800601000E01000C0107
F80104700207D802001C02001C02001E04001E04001E04001E04001E08003C08003C08003C0800
781800701400F01400E01201C0218700207C002000002000004000004000004000004000008000
0080000080000018297F9F1A>I<001E0000630000C38001C1800381800301C00701C00F01C00E
01C01E03C01C03C03C03C03C03C03C03C07807807FFF807FFF80780780F00F00F00F00F00F00F0
0E00F01E00E01C00E03C00E03800E0300060700060E00070C0003180001E000012207E9F15>18
D<0FFFFC1FFFFE3FFFFC608200C08200818200010600010400030400030400020400060C00060E
000C0E000C0E001C0E001C0E00180F0038070030060017147E931A>25 D<000F800038C0006060
00C07001C0700380780380780700780700780700780E00F00E00F00E00F00E01E01C01C01C01C0
1E03801E0700390C0038F000380000380000700000700000700000700000E00000E00000E00000
C00000151E7F9318>I<0000400000400000800000800000800000800001000001000001000001
00000200000200001FC000E27003841806040C0C040E1C0406380807300807700807700807E010
0EE0100EE0100CE0101C6020387020303020601821C00E470003F8000040000040000080000080
0000800000800001000001000001000018297E9F1B>30 D<70F8F8F87005057C840D>58
D<70F0F8F878080808101010202040050E7C840D>I<000001C00000078000001E000000780000
01E00000078000000E00000038000000F0000003C000000F0000003C000000F0000000F0000000
3C0000000F00000003C0000000F0000000380000000E0000000780000001E0000000780000001E
0000000780000001C01A1A7C9723>I<0000400000C00001800001800001800003000003000003
00000600000600000C00000C00000C000018000018000018000030000030000060000060000060
0000C00000C00000C0000180000180000180000300000300000600000600000600000C00000C00
000C0000180000180000300000300000300000600000600000600000C00000C00000122D7EA117
>I<E0000000780000001E0000000780000001E0000000780000001C0000000700000003C00000
00F00000003C0000000F00000003C0000003C000000F0000003C000000F0000003C00000070000
001C00000078000001E00000078000001E00000078000000E00000001A1A7C9723>I<001F0000
60C000806001003002001803801C03C01C07801C03001C00001E00001E00001E003E1E00C11E03
809C07007C0E007C1C007C3C007C3800787800787800787800F0F000F0F000E0F000E0F001C0F0
01C0F00380700300700600380C001C380007E00017227EA018>64 D<000002000000060000000E
0000000E0000001E0000001F0000002F0000006F0000004F0000008F0000008F0000010F000003
0F0000020F0000040F8000040F800008078000180780001007800020078000200780007FFF8000
80078000800780010007C0010003C0020003C0040003C0040003C00C0003C03C0007C0FF003FFC
1E207E9F22>I<00007F00800003C0C180000E00230000380017000070000F0000E0000F0001C0
000600038000060007000006000F000006000E000004001E000004003C000000003C0000000078
00000000780000000078000000007800000000F000000000F000000000F000000000F000000000
7000002000700000200070000020007000004000380000800038000080001C000100000E000600
00070018000001C0600000007F80000021217F9F21>67 D<01FFFFE000001E003800001E000E00
001E000700001E000700003C000380003C000380003C0001C0003C0001C000780001C000780001
C000780001C000780001C000F00003C000F00003C000F00003C000F00003C001E000078001E000
078001E000070001E0000F0003C0000E0003C0001E0003C0001C0003C000380007800070000780
00E000078001C00007800700000F001C0000FFFFF00000221F7E9E26>I<01FFFFFF001E001E00
1E0006001E0006001E0002003C0002003C0002003C0002003C0002007800040078020000780200
0078020000F0040000F00C0000FFFC0000F00C0001E0080001E0080001E0080001E0080003C000
0003C0000003C0000003C00000078000000780000007800000078000000F800000FFFC0000201F
7E9E1D>70 D<00007F00800003C0C180000E00230000380017000070000F0000E0000F0001C000
0600038000060007000006000F000006000E000004001E000004003C000000003C000000007800
000000780000000078000000007800000000F000000000F0003FFE00F00000F000F00000F00070
0001E000700001E000700001E000700001E000380003C000380003C0001C0007C0000E0005C000
070019800001C0608000007F80000021217F9F24>I<01FFF0FFF8001F000F80001E000F00001E
000F00001E000F00003C001E00003C001E00003C001E00003C001E000078003C000078003C0000
78003C000078003C0000F000780000FFFFF80000F000780000F000780001E000F00001E000F000
01E000F00001E000F00003C001E00003C001E00003C001E00003C001E000078003C000078003C0
00078003C000078003C0000F8007C000FFF87FFC00251F7E9E26>I<01FFF0001F00001E00001E
00001E00003C00003C00003C00003C0000780000780000780000780000F00000F00000F00000F0
0001E00001E00001E00001E00003C00003C00003C00003C0000780000780000780000780000F80
00FFF000141F7E9E14>I<000FFF8000007C000000780000007800000078000000F0000000F000
0000F0000000F0000001E0000001E0000001E0000001E0000003C0000003C0000003C0000003C0
0000078000000780000007800000078000000F0000000F0000300F0000780F0000F81E0000F81E
0000F03C0000803800004070000020E000001F80000019207E9E19>I<01FFF00FF8001F0003E0
001E000380001E000200001E000400003C001000003C002000003C004000003C01800000780200
0000780400000078080000007838000000F078000000F0F8000000F13C000000F43C000001E81E
000001F01E000001E01F000001E00F000003C00F000003C007800003C007800003C007C0000780
03C000078003C000078001E000078001E0000F8001F000FFF80FFE00251F7E9E27>I<01FFF800
001F0000001E0000001E0000001E0000003C0000003C0000003C0000003C000000780000007800
00007800000078000000F0000000F0000000F0000000F0000001E0000001E0000001E0000001E0
004003C0008003C0008003C0018003C0010007800300078003000780060007800E000F007C00FF
FFFC001A1F7E9E1F>I<01FE00000FF8001E00001F80001700001F00001700002F00001700004F
00002700005E00002700009E00002700011E00002700011E00004380023C00004380023C000043
80043C00004380083C000083800878000083801078000083802078000081C02078000101C040F0
000101C080F0000101C080F0000101C100F0000201C101E0000201C201E0000201C401E0000200
E401E0000400E803C0000400F003C0000400F003C0000C00E003C0001E00C007C000FFC0C07FFC
002D1F7E9E2C>I<01FFFFE0001E0078001E001C001E000E001E000F003C000F003C000F003C00
0F003C000F0078001E0078001E0078003C0078007800F000E000F003C000FFFE0000F0000001E0
000001E0000001E0000001E0000003C0000003C0000003C0000003C00000078000000780000007
800000078000000F800000FFF80000201F7E9E1D>80 D<0000FF00000781C0001C00E000380070
0070003801E0001C03C0001C0380001E0700001E0F00000E1E00000E1E00000E3C00000E3C0000
1E7800001E7800001E7800001E7800001EF000003CF000003CF0000038F0000078F00000707000
00F0700000E0700E01C078300380384087001C408E001C409C000E40F00003C1C02000FFC02000
00C0600000C0400000C0C00000E1800000FF800000FF0000007E0000003C001F297F9F24>I<01
FFFF80001E00F0001E0038001E001C001E001C003C001E003C001E003C001E003C001E0078003C
0078003C00780078007800F000F001C000F0070000FFF80000F00E0001E0070001E0078001E003
8001E003C003C0078003C0078003C0078003C0078007800F0007800F0207800F0207800F040F80
0704FFF80308000001F01F207E9E23>I<0FFFFFFC1E03C0381803C0181003C0082003C0082007
8008600780084007800840078008800F0010000F0000000F0000000F0000001E0000001E000000
1E0000001E0000003C0000003C0000003C0000003C000000780000007800000078000000780000
00F0000000F0000000F0000000F0000001F000007FFFC0001E1F7F9E1B>84
D<FFF001FF0F8000780F0000300F0000200F0000400F0000800F80008007800100078003000780
020007800400078004000780080007C0100007C0100003C0200003C0600003C0400003C0800003
C0800003C1000003E2000001E2000001E4000001E8000001E8000001F0000001F0000001E00000
01C0000000C000000080000020207E9E1B>86 D<FFF03FFC0FF81F8007C003C00F00078001800F
00078001000F00078002000F000F8002000F000F8004000F00178004000F0017C008000F0023C0
08000F0023C010000F0043C030000F00C3C020000F0083C040000F8103C040000F8103C0800007
8203C08000078203C10000078403C10000078403C20000078803C40000079003C40000079003C8
000007A003C8000007A003F0000007C001F0000007C001E00000078001E00000078001C0000007
00018000000600018000000600010000002D207E9E2B>I<00FFF01FF8000FC00780000F800600
00078004000007C008000007C010000003C020000003E040000001E0C0000001F180000001F300
000000F200000000FC0000000078000000007C000000007C000000007C00000000BE000000011E
000000021F000000041F0000000C0F000000180F80000010078000002007C000004007C0000080
03C000010003E000070001E0001F0003F000FFC01FFE00251F7F9E26>I<FFF001FF0F8000780F
8000300F800040078000C007C0008003C0010003E0020003E0040001E0080001F0180001F01000
00F0200000F8400000788000007D8000007D0000003E0000003C0000003C000000380000007800
0000780000007800000070000000F0000000F0000000F0000000F0000001E000001FFE0000201F
7F9E1A>I<00F1800389C00707800E03801C03803C0380380700780700780700780700F00E00F0
0E00F00E00F00E10F01C20F01C20703C20705C40308C400F078014147E9318>97
D<07803F8007000700070007000E000E000E000E001C001C001CF01D0C3A0E3C0E380F380F700F
700F700F700FE01EE01EE01EE01CE03CE038607060E031C01F0010207E9F14>I<007C0001C300
0700800E07801E07801C07003C0200780000780000780000F00000F00000F00000F00000F00000
7001007002003004001838000FC00011147E9314>I<0000780003F80000700000700000700000
700000E00000E00000E00000E00001C00001C000F1C00389C00707800E03801C03803C03803807
00780700780700780700F00E00F00E00F00E00F00E10F01C20F01C20703C20705C40308C400F07
8015207E9F18>I<007C018207010E011C013C013802780C7BF07C00F000F000F000F000700070
017002300418380FC010147E9315>I<00007C0000CE00019E00039E00030C0007000007000007
00000700000E00000E00000E0000FFF0000E00000E00001C00001C00001C00001C00001C000038
0000380000380000380000380000700000700000700000700000700000E00000E00000E00000E0
0000C00001C000318000798000F300006200003C000017297E9F16>I<001E3000713800E0F001
C0700380700780700700E00F00E00F00E00F00E01E01C01E01C01E01C01E01C01E03801E03800E
07800E0B8006170001E700000700000700000E00000E00300E00781C00F038006070003FC00015
1D809316>I<01E0000FE00001C00001C00001C00001C000038000038000038000038000070000
070000071F000761800E80C00F00C00E00E00E00E01C01C01C01C01C01C01C01C0380380380380
380380380704700708700E08700E10700610E006206003C016207E9F1A>I<00E001E001E000C0
00000000000000000000000000000E00130023804380438043808700070007000E000E001C001C
001C20384038403840388019000E000B1F7E9E10>I<0000C00001E00001E00001C00000000000
00000000000000000000000000000000001E000023000043800083800103800103800207000007
00000700000700000E00000E00000E00000E00001C00001C00001C00001C000038000038000038
0000380000700000700030700078E000F1C0006380003E00001328819E13>I<01E0000FE00001
C00001C00001C00001C0000380000380000380000380000700000700000701E00706100E08700E
10F00E20F00E20601C40001D80001E00001FC000387000383800383800381C2070384070384070
3840701880E01880600F0014207E9F18>I<01C01FC0038003800380038007000700070007000E
000E000E000E001C001C001C001C0038003800380038007000700070007100E200E200E200E200
640038000A207E9F0E>I<1E07C07C00231861860023A032030043C03403004380380380438038
038087007007000700700700070070070007007007000E00E00E000E00E00E000E00E00E000E00
E01C101C01C01C201C01C038201C01C038401C01C0184038038018801801800F0024147E9328>
I<1E07802318C023A06043C0704380704380708700E00700E00700E00700E00E01C00E01C00E01
C00E03821C03841C07041C07081C03083803101801E017147E931B>I<03C1E004621804741C08
781C08701E08701E10E01E00E01E00E01E00E01E01C03C01C03C01C03C01C03803807803807003
80E003C1C0072380071E000700000700000E00000E00000E00000E00001C00001C0000FFC00017
1D819317>112 D<00F0400388C00705800E03801C03803C0380380700780700780700780700F0
0E00F00E00F00E00F00E00F01C00F01C00703C00705C0030B8000F380000380000380000700000
700000700000700000E00000E0000FFC00121D7E9314>I<1C1E00262100474380478780470780
4703008E00000E00000E00000E00001C00001C00001C00001C0000380000380000380000380000
70000030000011147E9315>I<00FC000303000600800C01800C03800C03000E00000F80000FF8
0007FC0001FE00001F00000700700700F00600F00600E004004008002030001FC00011147E9315
>I<018001C0038003800380038007000700FFF807000E000E000E000E001C001C001C001C0038
00380038003810702070207040708031001E000D1C7F9B10>I<0F00601180702180E021C0E041
C0E04380E08381C00701C00701C00701C00E03800E03800E03800E03840E07080C07080C07080E
0F1006131003E1E016147E931A>I<1E01C02303C02303E04381E04300E04700608700400E0040
0E00400E00401C00801C00801C00801C01001C01001C02001C04000C04000E180003E00013147E
9316>I<03C1C00C62201034701038F02038F020386040700000700000700000700000E00000E0
0000E00000E02061C040F1C040F1C080E2C080446300383C0014147E931A>120
D<1E00602300702300E04380E04300E04700E08701C00E01C00E01C00E01C01C03801C03801C03
801C03801C07001807001C07001C0F000C3E0003CE00000E00000E00001C00F01800F03800E070
00C0600041C0003F0000141D7E9316>I<01C02003F04007F8C00C1F8008010000020000040000
080000100000600000C0000100000200000400800801001003003F060063FE0040FC0080700013
147E9315>I E /Fi 3 106 df<FFFFFF000F000F000F0003000F0003000F0001000F0001800F00
00800F0000800F0000800F0000800F0080000F0080000F0080000F0080000F0180000FFF80000F
0180000F0080000F0080000F0080000F0080000F0000000F0000000F0000000F0000000F000000
0F0000000F0000000F0000000F800000FFFC0000191F7C9E20>70 D<007E080381980700780C00
381C0018380018780008700008F00000F00000F00000F00000F00000F003FEF000387000387800
383800381C00380C00380700380380D8007F0817177E961D>103 D<FF801C001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C00FF8009177E96
0E>105 D E /Fj 90 126 df<60F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0600000000060F0F06004
19779816>33 D<E038F078F078F078F078F078F078F078E038E03860300D0B7C9816>I<00C000
01C00001C00001C00007F0001FFC003FFE007DCF0071C780E1C380E1C780E1C780F1C30079C000
3FC0001FF00007FC0001FE0001CF0001C70061C380F1C380F1C380E1C38071C70079DF003FFE00
1FF80007E00001C00001C00000C00011207E9C16>36 D<3801807C03807C0380EE0700EE0700EE
0E00EE0E00EE0E00EE1C007C1C007C380038380000700000700000700000E00000E00001C00001
C00001C0000380000383800707C00707C00E0EE00E0EE00E0EE01C0EE01C0EE03807C03807C018
038013207F9C16>I<03800007E0000FE0001E70001C70001C70001C70001CF7E01CE7E01DC7E0
0FC7000F8E000F0E001F0E003F1C007B9C00739C00E1F800E1F800E0F0E0E0F0E071F8E07FFFC0
3F9FC01E070013197F9816>I<30787C3C1C1C1C1C3878F0E040060D789816>I<00E001E0038007
000E001C001C0038003800700070007000E000E000E000E000E000E000E000E000E00070007000
7000380038001C001C000E000700038001E000E00B217A9C16>I<C000E000700038001C000E00
0E000700070003800380038001C001C001C001C001C001C001C001C001C0038003800380070007
000E000E001C0038007000E000C0000A217B9C16>I<0380038003800380E38EF39EFFFE3FF80F
E00FE03FF8FFFEF39EE38E03800380038003800F127D9516>I<00E00000E00000E00000E00000
E00000E00000E00000E000FFFFE0FFFFE0FFFFE000E00000E00000E00000E00000E00000E00000
E00000E00013137F9516>I<387C7E7E3E0E1E1C78F060070B798416>I<FFFF80FFFF80FFFF8011
037E8D16>I<70F8F8F8700505788416>I<000180000380000380000700000700000E00000E0000
1C00001C0000380000380000700000700000E00000E00001C00001C00003800003800007000007
00000E00000E00001C00001C0000380000380000700000700000E00000E00000C0000011207E9C
16>I<03E0000FF8001FFC001E3C00380E00780F00700700700700E00380E00380E00380E00380
E00380E00380E00380E00380F00780700700700700780F003C1E001E3C001FFC000FF80003E000
11197E9816>I<0300070007000F001F00FF00FF00E70007000700070007000700070007000700
070007000700070007000700FFF8FFF8FFF80D197B9816>I<07E0001FF8003FFC00783E00E007
00F00780F00380600380000380000380000700000700000E00001C0000380000700000E00001C0
000380000F00001E03803803807FFF80FFFF807FFF8011197E9816>I<07E0001FF8003FFC0078
1E00780700300700000700000700000E00003E0007FC0007F00007FC00001E0000070000030000
0380000380600380F00380E00700781E003FFC001FF80007E00011197E9816>I<007C0000FC00
00DC0001DC00039C00039C00071C000F1C000E1C001E1C003C1C00381C00781C00F01C00FFFFE0
FFFFE0FFFFE0001C00001C00001C00001C00001C0001FFC001FFC001FFC013197F9816>I<3FFE
007FFE007FFE0070000070000070000070000070000070000070000077F0007FFC007FFE00780F
00300700000380000380600380F00380F00380E00700781E003FFC001FF80007E00011197E9816
>I<00F80003FC0007FE000F07001C0F00380F00780600700000700000E3F800EFFC00FFFE00F8
0F00F00700F00380E00380E003807003807003807007803807003C1E001FFC000FF80003E00011
197E9816>I<E00000FFFF80FFFF80FFFF80E00F00E01E00001C0000380000780000700000E000
00E00001C00001C00001C000038000038000038000038000070000070000070000070000070000
070000070000111A7E9916>I<07F0001FFC003FFE007C1F00F00780E00380E00380E003807007
007C1F001FFC0007F0001FFC003C1E00700700F00780E00380E00380E00380F007807007007C1F
003FFE001FFC0007F00011197E9816>I<03E0000FF8001FFC003C1E00700E00700700E00700E0
0780E00380E00380E00780700780780F803FFF801FFB800FE380000700000700300700780E0078
1C00707C003FF8001FE0000F800011197E9816>I<70F8F8F870000000000000000070F8F8F870
0512789116>I<387C7C7C38000000000000000038787C7C3C1C1C3870F0400618799116>I<0001
80000780001F80003E0000F80001F00007C0000F80003E0000FC0000F00000FC00003E00000F80
0007C00001F00000F800003E00001F8000078000018011157E9616>I<7FFFC0FFFFE0FFFFE000
0000000000000000000000000000FFFFE0FFFFE07FFFC0130B7F9116>I<C00000F00000FC0000
3E00000F800007C00001F00000F800003E00001F80000780001F80003E0000F80001F00007C000
0F80003E0000FC0000F00000C0000011157E9616>I<0FF0003FFE007FFF00F00F80F00380F003
80600780001F00003E0000780000F00001C00001C00001C00001C00001C0000180000000000000
0000000000000001800003C00003C00001800011197E9816>I<00F80003FC0007FE000F07001C
3B8038FF8079FF8073C7C07383C0E701C0E701C0E701C0E701C0E701C0E701C0E701C073838073
C78079FF0038FE001C38000F03C007FFC003FF0000FC0012197E9816>I<00E00001F00001F000
01B00001B00003B80003B80003B800031800071C00071C00071C00071C00071C000E0E000E0E00
0FFE000FFE001FFF001C07001C07001C07007E0FC0FF1FE07E0FC013197F9816>I<7FF800FFFE
007FFF001C07001C07801C03801C03801C03801C03801C07001FFF001FFE001FFE001C1F001C03
801C03C01C01C01C01C01C01C01C01C01C03C01C07807FFF80FFFF007FFC0012197F9816>I<01
F18007FB800FFF801F0F803C0780380380700380700380F00000E00000E00000E00000E00000E0
0000E00000E00000F000007003807003803803803C07001F0F000FFE0007FC0001F00011197E98
16>I<7FF800FFFE007FFF001C0F001C07801C03C01C01C01C01C01C01E01C00E01C00E01C00E0
1C00E01C00E01C00E01C00E01C00E01C01C01C01C01C03C01C07801C0F807FFF00FFFE007FF800
1319809816>I<7FFFC0FFFFC07FFFC01C01C01C01C01C01C01C01C01C00001C00001C1C001C1C
001FFC001FFC001FFC001C1C001C1C001C00001C00E01C00E01C00E01C00E01C00E07FFFE0FFFF
E07FFFE013197F9816>I<7FFFE0FFFFE07FFFE01C00E01C00E01C00E01C00E01C00001C00001C
1C001C1C001FFC001FFC001FFC001C1C001C1C001C00001C00001C00001C00001C00001C00007F
8000FFC0007F800013197F9816>I<01F18007FB800FFF801F0F803C0780380380700380700380
F00000E00000E00000E00000E00000E01FC0E01FE0E01FC0F003807003807007803807803C0780
1E0F800FFF8007FB8001F38013197F9816>I<7F07F0FF8FF87F07F01C01C01C01C01C01C01C01
C01C01C01C01C01C01C01FFFC01FFFC01FFFC01C01C01C01C01C01C01C01C01C01C01C01C01C01
C01C01C01C01C07F07F0FF8FF87F07F01519809816>I<7FFCFFFE7FFC03800380038003800380
038003800380038003800380038003800380038003800380038003807FFCFFFE7FFC0F197D9816
>I<01FF0003FF8001FF00001C00001C00001C00001C00001C00001C00001C00001C00001C0000
1C00001C00001C00001C00001C00001C00001C00601C00F01C00F038007FF8007FF0001FC00011
197E9816>I<7F0FE0FF8FF07F0FE01C07801C0F001C0E001C1C001C3C001C78001CF0001CE000
1DF0001FF0001FF8001F38001E1C001C1C001C0E001C0E001C07001C07001C03807F07E0FF8FF0
7F07E01419809816>I<FF8000FFC000FF80001C00001C00001C00001C00001C00001C00001C00
001C00001C00001C00001C00001C00001C00001C00001C00401C00E01C00E01C00E01C00E0FFFF
E0FFFFE0FFFFE013197F9816>I<FC07E0FE0FE0FE0FE03A0B803B1B803B1B803B1B803B1B803B
1B803BBB8039B38039B38039B38039B38039F38038E38038E38038038038038038038038038038
0380FE0FE0FE0FE0FE0FE013197F9816>I<7E07F0FF0FF87F07F01D81C01D81C01D81C01DC1C0
1CC1C01CE1C01CE1C01C61C01C71C01C71C01C71C01C31C01C39C01C39C01C19C01C1DC01C0DC0
1C0DC01C0DC07F07C0FF87C07F03C01519809816>I<1FFC003FFE007FFF00780F00F00780E003
80E00380E00380E00380E00380E00380E00380E00380E00380E00380E00380E00380E00380E003
80F00780F00780780F007FFF003FFE001FFC0011197E9816>I<7FF800FFFE007FFF001C0F801C
03801C03C01C01C01C01C01C01C01C03C01C03801C0F801FFF001FFE001FF8001C00001C00001C
00001C00001C00001C00001C00007F0000FF80007F000012197F9816>I<1FFC003FFE007FFF00
780F00F00780E00380E00380E00380E00380E00380E00380E00380E00380E00380E00380E00380
E00380E00380E0E380E1E380F0F780787F007FFF003FFE001FFC00001C00001E00000E00000F00
000700000700111F7E9816>I<7FF000FFFC007FFE001C0F001C07801C03801C03801C03801C03
801C07801C0F001FFE001FFC001FFE001C0E001C07001C07001C07001C07001C07101C07381C07
387F03F0FF83F07F01E01519809816>I<07E3001FFF003FFF00781F00F00700E00700E00700E0
0000F000007800003F80001FF00007FC0000FE00000F00000700000380000380600380E00380E0
0700F80F00FFFE00FFFC00C7F00011197E9816>I<7FFFE0FFFFE0FFFFE0E0E0E0E0E0E0E0E0E0
E0E0E000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E000
00E00000E00000E00007FC000FFE0007FC0013197F9816>I<7F07F0FF8FF87F07F01C01C01C01
C01C01C01C01C01C01C01C01C01C01C01C01C01C01C01C01C01C01C01C01C01C01C01C01C01C01
C01C01C00E03800E038007070007FF0003FE0000F8001519809816>I<FE0FE0FE0FE0FE0FE038
03803C07801C07001C07001C07001E0F000E0E000E0E000E0E000E0E00071C00071C00071C0007
1C0003180003B80003B80003B80001B00001F00001F00000E00013197F9816>I<7E03F0FF07F8
7E03F03800E03800E03800E03800E01C01C01C01C01C01C01C71C01CF9C01CF9C01CD9C01CD9C0
0CD9800CD9800CD9800DDD800D8D800D8D800D8D80078F00078F000707001519809816>I<7F1F
807F3FC07F1F800E1E000E1C00071C0007380003B80003F00001F00001E00000E00001E00001F0
0003F00003B80007B800071C000F1C000E0E000E0E001C07007E0FC0FF1FE07E0FC013197F9816
>I<FE0FE0FF1FE0FE0FE01C07001C07000E0E000E0E00071C00071C00071C0003B80003B80001
F00001F00000E00000E00000E00000E00000E00000E00000E00000E00003F80007FC0003F80013
197F9816>I<7FFF80FFFF80FFFF80E00700E00F00E01E00E01C00003C0000780000700000F000
01E00001C00003C0000780000700000F00001E03801C03803C0380780380700380FFFF80FFFF80
FFFF8011197E9816>I<FFF0FFF0FFF0E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E000E000E000E000E000E000E000E000E000E000FFF0FFF0FFF00C20789C
16>I<FFF0FFF0FFF0007000700070007000700070007000700070007000700070007000700070
00700070007000700070007000700070007000700070FFF0FFF0FFF00C207F9C16>93
D<03000F803FE0FDF8F07840100D067C9816>I<FFFF80FFFF80FFFF8011037E7E16>I<081C3C78
70E0E0E0E0F0F87830060D789B16>I<1FE0003FF0007FF800783C00300E00000E00000E0003FE
001FFE003E0E00700E00E00E00E00E00E00E00783E007FFFE03FE7E00F83E013127E9116>I<FC
0000FC0000FC00001C00001C00001C00001C00001C7C001DFE001FFF001F07801E03C01C01C01C
00E01C00E01C00E01C00E01C00E01C00E01C01C01E03C01F07801FFF001DFE000C780013197F98
16>I<03F80FFC1FFE3C1E780C7000E000E000E000E000E000F000700778073E0E1FFC0FF803F0
10127D9116>I<003F00003F00003F0000070000070000070000070003C7000FF7001FFF003C1F
00780F00700700E00700E00700E00700E00700E00700E00700700F00780F003C1F001FFFE00FF7
E007C7E013197F9816>I<03F0000FFC001FFE003C0F00780700700380E00380FFFF80FFFF80FF
FF80E00000E000007003807803803E07801FFF0007FE0001F80011127E9116>I<001E00007F00
01FF8001C7800383000380000380007FFF00FFFF00FFFF00038000038000038000038000038000
0380000380000380000380000380000380000380007FFC00FFFE007FFC0011197F9816>I<03E3
C007F7E00FFFE01C1CC0380E00380E00380E00380E00380E001C1C000FF8001FF0001BE0003800
001800001FFC001FFF003FFF807003C0E000E0E000E0E000E0E000E07001C07C07C03FFF800FFE
0003F800131C7F9116>I<FC0000FC0000FC00001C00001C00001C00001C00001C78001DFC001F
FE001F0F001E07001C07001C07001C07001C07001C07001C07001C07001C07001C07001C0700FF
8FE0FF9FE0FF8FE013197F9816>I<03000780078003000000000000000000FF80FF80FF800380
03800380038003800380038003800380038003800380FFFCFFFEFFFC0F1A7C9916>I<00300078
0078003000000000000000000FF81FF80FF8003800380038003800380038003800380038003800
38003800380038003800380038003800386070F0F0FFE07FC03F800D237E9916>I<7E0000FE00
007E00000E00000E00000E00000E00000E7FE00E7FE00E7FE00E0F000E1E000E3C000E78000EF0
000FF0000FF8000FBC000F1E000E0E000E07000E07807F87F0FFCFF07F87F01419809816>I<7F
C000FFC0007FC00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001
C00001C00001C00001C00001C00001C00001C00001C00001C0007FFF00FFFF807FFF0011197E98
16>I<F9C380FFEFC0FFFFE03C78E03C78E03870E03870E03870E03870E03870E03870E03870E0
3870E03870E03870E0FE7CF8FE7CF8FE7CF81512809116>I<FC7800FDFC00FFFE001F0F001E07
001C07001C07001C07001C07001C07001C07001C07001C07001C07001C0700FF8FE0FF9FE0FF8F
E013127F9116>I<03E0000FF8001FFC003C1E00780F00700700E00380E00380E00380E00380E0
0380F00780700700780F003C1E001FFC000FF80003E00011127E9116>I<FC7C00FDFE00FFFF00
1F07801E03C01C01C01C00E01C00E01C00E01C00E01C00E01C00E01C01C01E03C01F07801FFF00
1DFE001C78001C00001C00001C00001C00001C00001C0000FF8000FF8000FF8000131B7F9116>
I<03E3800FF3801FFB803E0F80780780700780E00380E00380E00380E00380E00380E003807007
807807803C1F801FFB800FF38003E380000380000380000380000380000380000380001FF0003F
F8001FF0151B7F9116>I<7F0FC0FF3FE07F7FE007F04007C00007800007800007000007000007
00000700000700000700000700000700007FFC00FFFC007FFC0013127F9116>I<0FEC3FFC7FFC
F03CE01CE01C70007F801FF007F8003C600EE00EF00EF81EFFFCFFF8C7E00F127D9116>I<0300
000700000700000700000700007FFF00FFFF00FFFF000700000700000700000700000700000700
0007000007010007038007038007038007870003FE0001FC0000F80011177F9616>I<FC3F00FC
3F00FC3F001C07001C07001C07001C07001C07001C07001C07001C07001C07001C07001C07001C
1F001FFFE00FF7E007C7E013127F9116>I<7F1FC0FF9FE07F1FC01C07001C07000E0E000E0E00
0E0E00071C00071C00071C00071C0003B80003B80003B80001F00001F00000E00013127F9116>
I<FF1FE0FF1FE0FF1FE038038038038038038038038039F38039F38019F30019B30019B30019B3
001DB7001D17001F1F000F1E000E0E0013127F9116>I<7F1FC07F3FC07F1FC00F1E00073C0003
B80003F00001F00000E00001E00001F00003B800073C00071C000E0E007F1FC0FF3FE07F1FC013
127F9116>I<7F1FC0FF9FE07F1FC01C07000E07000E0E000E0E00070E00071C00071C00039C00
039C0003980001B80001B80000F00000F00000F00000E00000E00000E00001C00079C0007BC000
7F80007F00003C0000131B7F9116>I<3FFFC07FFFC07FFFC0700780700F00701E00003C000078
0001F00003E0000780000F00001E01C03C01C07801C0FFFFC0FFFFC0FFFFC012127F9116>I<00
1F80007F8000FF8001E00001C00001C00001C00001C00001C00001C00001C00001C00001C00003
C0007F8000FF0000FF00007F800003C00001C00001C00001C00001C00001C00001C00001C00001
C00001C00001E00000FF80007F80001F8011207E9C16>I<7C0000FF0000FF800003C00001C000
01C00001C00001C00001C00001C00001C00001C00001C00001E00000FF00007F80007F8000FF00
01E00001C00001C00001C00001C00001C00001C00001C00001C00001C00003C000FF8000FF0000
7C000011207E9C16>125 D E /Fk 65 126 df<387C7C7E3E0E0E0E1C1C38F8F0C0070E789B18>
39 D<007000F001E003C007800F001E001C00380038007000700070007000E000E000E000E000
E000E000E000E0007000700070007000380038001C001E000F00078003C001F000F000700C2479
9F18>I<6000F00078003C001E000F000780038001C001C000E000E000E000E000700070007000
70007000700070007000E000E000E000E001C001C0038007800F001E003C007800F00060000C24
7C9F18>I<01C00001C00001C00001C00041C100F1C780FDDF807FFF001FFC0007F00007F0001F
FC007FFF00FDDF80F1C78041C10001C00001C00001C00001C00011147D9718>I<00600000F000
00F00000F00000F00000F00000F00000F0007FFFC0FFFFE0FFFFE07FFFC000F00000F00000F000
00F00000F00000F00000F00000600013147E9718>I<1C3E7E7F3F1F070E1E7CF860080C788518>
I<7FFFC0FFFFE0FFFFE07FFFC013047E8F18>I<3078FCFC78300606778518>I<00030000078000
0780000F80000F00001F00001E00001E00003E00003C00007C0000780000780000F80000F00001
F00001E00003E00003C00003C00007C0000780000F80000F00000F00001F00001E00003E00003C
00003C00007C0000780000F80000F00000F0000060000011247D9F18>I<01F00007FC000FFE00
1F1F001C07003803807803C07001C07001C0E000E0E000E0E000E0E000E0E000E0E000E0E000E0
E000E0E000E0F001E07001C07001C07803C03803801C07001F1F000FFE0007FC0001F000131C7E
9B18>I<01800380038007800F803F80FF80FB8043800380038003800380038003800380038003
8003800380038003800380038003807FFCFFFE7FFC0F1C7B9B18>I<03F0000FFE003FFF007C0F
807003C0E001C0F000E0F000E06000E00000E00000E00001C00001C00003C0000780000F00001E
00003C0000780000F00001E00007C0000F80001E00E03C00E07FFFE0FFFFE07FFFE0131C7E9B18
>I<07F8001FFE003FFF007807807803C07801C03001C00001C0000380000380000F0003FF0003
FE0003FF000007800003C00001C00000E00000E00000E0F000E0F000E0F001C0F003C07C07803F
FF001FFE0003F800131C7E9B18>I<001F00003F0000770000770000E70001E70001C700038700
0787000707000E07001E07003C0700380700780700F00700FFFFF8FFFFF8FFFFF8000700000700
000700000700000700000700007FF0007FF0007FF0151C7F9B18>I<3FFF803FFF803FFF803800
003800003800003800003800003800003800003800003BF8003FFE003FFF003C07803003C00001
C00000E00000E06000E0F000E0F000E0E001C07003C07C0F803FFF001FFC0003F000131C7E9B18
>I<007E0001FF0007FF800F83C01E03C01C03C0380180380000700000700000E1F800E7FE00FF
FF00FE0780F803C0F001C0F000E0E000E0F000E07000E07000E07000E03801C03C03C01E07800F
FF0007FE0001F800131C7E9B18>I<E00000FFFFE0FFFFE0FFFFC0E00380E00700000F00001E00
001C0000380000380000700000F00000E00000E00001C00001C00001C000038000038000038000
038000070000070000070000070000070000070000070000131D7E9C18>I<03F8000FFE001FFF
003E0F803803807001C07001C07001C07001C03803803C07801FFF0007FC000FFE001F1F003C07
807001C0F001E0E000E0E000E0E000E0E000E07001C07803C03E0F801FFF000FFE0003F800131C
7E9B18>I<03F0000FFC001FFE003C0F00780780700380E001C0E001C0E001C0E001E0E001E070
01E07803E03C0FE01FFFE00FFEE003F0E00000E00001C00001C00001C0300380780780780F0078
3E003FFC001FF00007C000131C7E9B18>I<3078FCFC783000000000000000003078FCFC783006
14779318>I<7FFFC0FFFFE0FFFFE0FFFFE0000000000000000000000000FFFFE0FFFFE0FFFFE0
7FFFC0130C7E9318>61 D<600000F80000FC00007F00003F80000FE00007F00001FC0000FE0000
3F80001FC00007E00007E0001FC0003F8000FE0001FC0007F0000FE0003F80007F0000FC0000F8
000060000013187E9918>I<00700000F80000F80000D80000D80001DC0001DC0001DC00018C00
038E00038E00038E00038E000707000707000707000707000707000FFF800FFF800FFF800E0380
1C01C01C01C01C01C07F07F0FF07F87F07F0151C7F9B18>65 D<7FFC00FFFF007FFF801C03C01C
01C01C00E01C00E01C00E01C00E01C01E01C01C01C07C01FFF801FFF001FFFC01C03C01C00E01C
00F01C00701C00701C00701C00701C00F01C00E01C03E07FFFC0FFFF807FFE00141C7F9B18>I<
00F8E003FEE007FFE00F07E01E03E03C01E03800E07000E07000E0700000E00000E00000E00000
E00000E00000E00000E00000E000007000007000E07000E03800E03C00E01E01C00F07C007FF80
03FE0000F800131C7E9B18>I<7FF800FFFE007FFF001C0F801C03C01C03C01C01E01C00E01C00
E01C00F01C00701C00701C00701C00701C00701C00701C00701C00701C00F01C00E01C00E01C01
E01C01C01C03C01C0F807FFF00FFFE007FF800141C7F9B18>I<FFFFF0FFFFF0FFFFF01C00701C
00701C00701C00701C00001C00001C0E001C0E001C0E001FFE001FFE001FFE001C0E001C0E001C
0E001C00001C00001C00381C00381C00381C00381C0038FFFFF8FFFFF8FFFFF8151C7F9B18>I<
FFFFF8FFFFF8FFFFF81C00381C00381C00381C00381C00001C00001C07001C07001C07001FFF00
1FFF001FFF001C07001C07001C07001C00001C00001C00001C00001C00001C00001C0000FFC000
FFC000FFC000151C7F9B18>I<7FFF00FFFF807FFF0001C00001C00001C00001C00001C00001C0
0001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C0
0001C00001C00001C0007FFF00FFFF807FFF00111C7D9B18>73 D<FFC000FFC000FFC0001C0000
1C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C0000
1C00001C00001C00001C00E01C00E01C00E01C00E01C00E0FFFFE0FFFFE0FFFFE0131C7E9B18>
76 D<FC01F8FE03F8FE03F83B06E03B06E03B06E03B06E03B8EE03B8EE0398CE0398CE039DCE0
39DCE039DCE038D8E038D8E038F8E03870E03870E03800E03800E03800E03800E03800E03800E0
FE03F8FE03F8FE03F8151C7F9B18>I<7E07F0FF0FF87F07F01D81C01D81C01D81C01DC1C01CC1
C01CC1C01CE1C01CE1C01CE1C01C61C01C71C01C71C01C31C01C39C01C39C01C39C01C19C01C19
C01C1DC01C0DC01C0DC01C0DC07F07C0FF87C07F03C0151C7F9B18>I<FFFE00FFFF80FFFFC01C
03C01C01E01C00E01C00701C00701C00701C00701C00701C00E01C01E01C03C01FFFC01FFF801F
FE001C00001C00001C00001C00001C00001C00001C00001C0000FF8000FF8000FF8000141C7F9B
18>80 D<7FF800FFFE007FFF001C0F801C03801C03C01C01C01C01C01C01C01C03C01C03801C0F
801FFF001FFE001FFE001C0F001C07001C03801C03801C03801C03801C03801C039C1C039C1C03
9C7F01F8FF81F87F00F0161C7F9B18>82 D<03F1C01FFFC03FFFC07C0FC07003C0E001C0E001C0
E001C0E000007000007800003F00001FF00007FE0000FF00000F800003C00001C00000E00000E0
6000E0E000E0E001E0F001C0F80780FFFF80FFFE00E7F800131C7E9B18>I<7FFFF8FFFFF8FFFF
F8E07038E07038E07038E070380070000070000070000070000070000070000070000070000070
0000700000700000700000700000700000700000700000700000700007FF0007FF0007FF00151C
7F9B18>I<FE03F8FE03F8FE03F87000707000707000703800E03800E03800E03800E03800E038
F8E039FCE039DCE039DCE019DCC019DCC019DCC0198CC0198CC01D8DC01D8DC01D8DC01D05C00D
05800F07800F07800E0380151C7F9B18>87 D<FFF8FFF8FFF8E000E000E000E000E000E000E000
E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000FFF8FFF8FFF80D24779F18>91 D<FFF8FFF8FFF8003800380038003800380038
003800380038003800380038003800380038003800380038003800380038003800380038003800
380038003800380038FFF8FFF8FFF80D247F9F18>93 D<018007C01FF07EFCF83EE00E0F067C9B
18>I<0FF0001FFC003FFE003C0F0018070000038000038000FF8007FF801FFF807F0380780380
E00380E00380E00380F00780780F803FFFF81FFDF807F0F815147E9318>97
D<7E0000FE00007E00000E00000E00000E00000E00000E00000E3E000EFF800FFFC00FC1E00F80
E00F00700E00700E00380E00380E00380E00380E00380E00380F00700F00700F80E00FC1E00FFF
C00EFF80063E00151C809B18>I<01FE0007FF001FFF803E0780380300700000700000E00000E0
0000E00000E00000E00000E000007000007001C03801C03E03C01FFF8007FF0001FC0012147D93
18>I<001F80003F80001F8000038000038000038000038000038003E3800FFB801FFF803C1F80
380F80700780700380E00380E00380E00380E00380E00380E00380700780700780380F803C1F80
1FFFF00FFBF803E3F0151C7E9B18>I<01F00007FC001FFE003E0F00380780700380700380E001
C0E001C0FFFFC0FFFFC0FFFFC0E000007000007001C03801C03E07C01FFF8007FF0001F8001214
7D9318>I<001F80007FC000FFE000E1E001C0C001C00001C00001C0007FFFC0FFFFC0FFFFC001
C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001
C0007FFF007FFF007FFF00131C7F9B18>I<01E1F007FFF80FFFF81E1E301C0E00380700380700
3807003807003807001C0E001E1E001FFC001FF80039E0003800001C00001FFE001FFFC03FFFE0
7801F0700070E00038E00038E00038E000387800F07E03F01FFFC00FFF8001FC00151F7F9318>
I<7E0000FE00007E00000E00000E00000E00000E00000E00000E3E000EFF800FFFC00FC1C00F80
E00F00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E07FC7
FCFFE7FE7FC7FC171C809B18>I<038007C007C007C0038000000000000000007FC0FFC07FC001
C001C001C001C001C001C001C001C001C001C001C001C001C001C0FFFFFFFFFFFF101D7C9C18>
I<7E0000FE00007E00000E00000E00000E00000E00000E00000E3FF00E3FF00E3FF00E07800E0F
000E1E000E3C000E78000EF0000FF8000FFC000F9C000F0E000E0F000E07000E03800E03C07FC7
F8FFC7F87FC7F8151C7F9B18>107 D<FFC000FFC000FFC00001C00001C00001C00001C00001C0
0001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C0
0001C00001C00001C00001C000FFFF80FFFF80FFFF80111C7D9B18>I<F9C1C0FFF7F0FFFFF03E
3E383C3C383C3C3838383838383838383838383838383838383838383838383838383838383838
3838FE3E3EFE7E7EFE3E3E1714809318>I<7E3E00FEFF807FFFC00FC1C00F80E00F00E00E00E0
0E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E07FC7FCFFE7FE7FC7FC
1714809318>I<01F0000FFE001FFF003E0F803803807001C07001C0E000E0E000E0E000E0E000
E0E000E0F001E07001C07803C03C07803E0F801FFF000FFE0001F00013147E9318>I<7E3E00FE
FF807FFFC00FC1E00F80E00F00700E00700E00380E00380E00380E00380E00380E00380F00700F
00700F80E00FC1E00FFFC00EFF800E3E000E00000E00000E00000E00000E00000E00000E00007F
C000FFE0007FC000151E809318>I<01F38007FB801FFF803E1F80380F80700780700780E00380
E00380E00380E00380E00380E00380700780700780380F803C1F801FFF800FFB8003E380000380
000380000380000380000380000380000380001FF0003FF8001FF0151E7E9318>I<FF0FC0FF3F
E0FF7FF007F0F007E06007C0000780000780000700000700000700000700000700000700000700
00070000070000FFFC00FFFE00FFFC0014147E9318>I<07F7003FFF007FFF00780F00E00700E0
0700E007007C00007FE0001FFC0003FE00001F00600780E00380E00380F00380F80F00FFFF00FF
FC00E7F00011147D9318>I<0180000380000380000380000380007FFFC0FFFFC0FFFFC0038000
0380000380000380000380000380000380000380000380000380400380E00380E00380E001C1C0
01FFC000FF80003E0013197F9818>I<7E07E0FE0FE07E07E00E00E00E00E00E00E00E00E00E00
E00E00E00E00E00E00E00E00E00E00E00E00E00E00E00E01E00F03E007FFFC03FFFE01FCFC1714
809318>I<7F8FF0FF8FF87F8FF01C01C00E03800E03800E0380070700070700070700078F0003
8E00038E00038E0001DC0001DC0001DC0000F80000F80000700015147F9318>I<7F8FF07F9FF0
7F8FF00F0700078E00039E0001DC0001F80000F80000700000F00000F80001DC00039E00038E00
0707000E07807F8FF0FF8FF87F8FF015147F9318>120 D<7F8FF0FF8FF87F8FF00E01C00E0380
0E0380070380070700070700038700038700038E0001CE0001CE0001CC0000CC0000DC00007800
00780000780000700000700000700000F00000E00079E0007BC0007F80003F00001E0000151E7F
9318>I<0007E0001FE0007FE000780000E00000E00000E00000E00000E00000E00000E00000E0
0000E00000E00000E00001E0007FC000FF8000FF80007FC00001E00000E00000E00000E00000E0
0000E00000E00000E00000E00000E00000E00000E000007800007FE0001FE00007E013247E9F18
>123 D<7C0000FF0000FFC00003C00000E00000E00000E00000E00000E00000E00000E00000E0
0000E00000E00000E00000F000007FC0003FE0003FE0007FC000F00000E00000E00000E00000E0
0000E00000E00000E00000E00000E00000E00000E00003C000FFC000FF00007C000013247E9F18
>125 D E /Fl 47 125 df<000F00000030800C0060401E00C0203C01C0201C0180E0040381E0
080303C008070180100700002007000040060001800678024007C40C4007041020060420200F04
40101D0840103CF0581038007C10780078107800301078000010F0000020F0000020F0000040F0
000040700000807000010038000300180004000E0018000780E00000FF00001F227BA023>38
D<1C3E7E7E3A020404080810204080070E769F0E>I<7FF0FFE07FE00C037D8A10>45
D<001F000061C00080E00100E00200700240700440700420700840F00840F00840F00880E00901
E00601C0000380000700000C0000180000600000C0000300000400000800401000401000802001
807E038047FF0041FE0080FC00807800141F7C9D17>50 D<001F800060E0008070010030020038
04403804403804203804407004C0700380600000E00001C000030000FE00001C00000600000700
000780000780000780300780780780780780F00F00800F00401E00401C0040380030E0000F8000
151F7C9D17>I<00000200000006000000060000000E0000001E0000001E0000003F0000002F00
00004F000000CF0000008F0000010F0000010F0000020F0000020F0000040F0000080F0000080F
0000100F800010078000200780003FFF8000400780008007800080078001000780010007800200
078006000780040007801E0007C0FF807FF81D207E9F22>65 D<01FFFFC0001E00F0001E007800
1E0038001E003C003C003C003C003C003C003C003C003C0078007800780078007800F0007801E0
00F0078000FFFE0000F00F8000F003C001E001C001E001E001E001E001E001E003C001E003C001
E003C001E003C001C0078003C00780078007800F0007801E000F007C00FFFFE0001E1F7D9E20>
I<0000FE0200078186001C004C0038003C0060003C00C0001C01C0001803800018070000180F00
00181E0000101E0000103C0000003C00000078000000780000007800000078000000F0000000F0
000000F0000000F0000000F0000080700000807000008070000100380001003800020018000400
0C001800060020000381C00000FE00001F217A9F21>I<00FFFF80001E00E0001E0070001E0038
001E001C003C001C003C000E003C000E003C000E0078000E0078000E0078000E0078000E00F000
1E00F0001E00F0001E00F0001E01E0003C01E0003C01E0003C01E0007803C0007003C0007003C0
00E003C001C0078003C00780038007800E0007801C000F007000FFFFC0001F1F7D9E22>I<01FF
FFFC001E0038001E0018001E0008001E0008003C0008003C0008003C0008003C00080078001000
780800007808000078080000F0100000F0300000FFF00000F0300001E0200001E0200001E02000
01E0200003C0000003C0000003C0000003C00000078000000780000007800000078000000F8000
00FFF800001E1F7D9E1E>70 D<01FFF0001F00001E00001E00001E00003C00003C00003C00003C
0000780000780000780000780000F00000F00000F00000F00001E00001E00001E00001E00003C0
0003C00003C00003C0000780000780000780000780000F8000FFF000141F7D9E12>73
D<01FFF800001F0000001E0000001E0000001E0000003C0000003C0000003C0000003C00000078
000000780000007800000078000000F0000000F0000000F0000000F0000001E0000001E0000001
E0000001E0008003C0010003C0010003C0030003C00200078006000780060007800C0007801C00
0F007800FFFFF800191F7D9E1D>76 D<01FE00007FC0001E0000FC00001E0000F8000017000178
0000170001780000270002F00000270004F00000270004F00000270008F00000470009E0000047
0011E00000470021E00000470021E00000870043C00000838043C00000838083C00000838083C0
000103810780000103820780000103820780000103840780000203840F00000203880F00000203
900F00000203900F00000401E01E00000401E01E00000401C01E00000C01801E00001C01803E00
00FF8103FFC0002A1F7D9E29>I<00FF003FE0001F000F00001F00040000178004000017800400
00278008000023C008000023C008000023C008000041E010000041E010000041F010000040F010
000080F0200000807820000080782000008078200001003C400001003C400001003C400001001E
400002001E800002001E800002000F800002000F800004000F0000040007000004000700000C00
0700001C00020000FF80020000231F7D9E22>I<0001FC0000070700001C01C0003000E000E000
6001C000700380007007800038070000380E0000381E0000381C0000383C0000383C0000387800
0078780000787800007878000078F00000F0F00000F0F00000E0F00001E0F00001C0F00003C070
0003807000070078000F0038001E0038003C001C0070000E00E0000783800001FC00001D217A9F
23>I<00FFFF00001E03C0001E00E0001E0070001E0078003C0078003C0078003C0078003C0078
007800F0007800F0007801E0007801C000F0070000F01E0000FFF00000F01C0001E00E0001E00F
0001E0070001E0078003C00F0003C00F0003C00F0003C00F0007801E0007801E0807801E080780
1E100F800E10FFF00E20000003C01D207D9E21>82 D<0007E040001C18C0003005800060038000
C0038001C00180018001000380010003800100038001000380000003C0000003C0000003F80000
01FF800001FFE000007FF000001FF0000001F80000007800000078000000380000003800200038
00200038002000300060007000600060006000E0007000C000E8038000C606000081F800001A21
7D9F1A>I<0FFFFFFC1E03C0381803C0181003C0082003C0082007800860078008400780084007
8008800F0010000F0000000F0000000F0000001E0000001E0000001E0000001E0000003C000000
3C0000003C0000003C00000078000000780000007800000078000000F0000000F0000000F00000
00F0000001F000007FFF80001E1F799E21>I<3FFC0FF807C003C0078001000780010007800100
0F0002000F0002000F0002000F0002001E0004001E0004001E0004001E0004003C0008003C0008
003C0008003C00080078001000780010007800100078001000F0002000F0002000F0002000F000
4000F0004000700080007001000030020000380400000C18000007E000001D20779E22>I<FFF0
03FC1F0000E00F0000C00F0000800F0001000F0001000F0002000F0002000F0004000F0008000F
800800078010000780300007802000078040000780400007808000078180000781000007C20000
03C2000003C4000003CC000003C8000003D0000003D0000003E0000003C0000003C00000038000
0001800000010000001E20779E22>I<FFE1FFC07F801F003E001C001E003C0018001E003C0010
001E003E0010001E001E0020001F001E0020000F003E0040000F003E0040000F005E0080000F00
9E0080000F009E0100000F011E0200000F011E0200000F021E0400000F021E0400000F041E0800
000F041E0800000F081E1000000F081E1000000F101E2000000F201E2000000F201E4000000F40
1E8000000F401E8000000F801F0000000F800F0000000F000E00000007000E00000006000C0000
0006000C0000000400080000002920779E2D>I<00F1800389C00707800E03801C03803C038038
0700780700780700780700F00E00F00E00F00E00F00E20F01C40F01C40703C40705C40308C800F
070013147C9317>97 D<07803F8007000700070007000E000E000E000E001C001C001CF01D0C3A
0E3C0E380F380F700F700F700F700FE01EE01EE01EE01CE03CE038607060E031C01F0010207B9F
15>I<007E0001C1000300800E07801E07801C07003C0200780000780000780000F00000F00000
F00000F00000F0000070010070020030040018380007C00011147C9315>I<0000780003F80000
700000700000700000700000E00000E00000E00000E00001C00001C000F1C00389C00707800E03
801C03803C0380380700780700780700780700F00E00F00E00F00E00F00E20F01C40F01C40703C
40705C40308C800F070015207C9F17>I<007C01C207010E011C013C013802780C7BF07C00F000
F000F000F0007000700170023804183807C010147C9315>I<00007800019C00033C00033C0007
18000700000700000E00000E00000E00000E00000E0000FFE0001C00001C00001C00001C000038
0000380000380000380000380000700000700000700000700000700000E00000E00000E00000E0
0000E00001C00001C00001C0000180003180007B0000F300006600003C00001629829F0E>I<00
1E3000713800E0F001C0700380700780700700E00F00E00F00E00F00E01E01C01E01C01E01C01E
01C01E03801E03800E07800E0B8006170001E700000700000700000E00000E00300E00781C00F0
38006070003FC000151D7F9315>I<01E0000FE00001C00001C00001C00001C000038000038000
038000038000070000070000071E000763000E81800F01C00E01C00E01C01C03801C03801C0380
1C0380380700380700380700380E10700E20700E20701C20700C40E00C8060070014207D9F17>
I<00C001E001E001C000000000000000000000000000000E001300230043804700470087000E00
0E000E001C001C001C003840388038807080310032001C000B1F7C9E0E>I<0001800003C00003
C0000380000000000000000000000000000000000000000000003C000046000087000087000107
00010700020E00000E00000E00000E00001C00001C00001C00001C000038000038000038000038
0000700000700000700000700000E00000E00030E00079C000F180006300003C00001228829E0E
>I<01E0000FE00001C00001C00001C00001C00003800003800003800003800007000007000007
03C00704200E08E00E11E00E21E00E40C01C80001D00001E00001FC00038E00038700038700038
3840707080707080707080703100E03100601E0013207D9F15>I<03C01FC00380038003800380
07000700070007000E000E000E000E001C001C001C001C00380038003800380070007000700071
00E200E200E200E200640038000A207C9F0C>I<1C0F80F0002630C318004740640C004780680E
004700700E004700700E008E00E01C000E00E01C000E00E01C000E00E01C001C01C038001C01C0
38001C01C038001C01C0708038038071003803807100380380E100380380620070070064003003
00380021147C9325>I<1C0F802630C04740604780604700704700708E00E00E00E00E00E00E00
E01C01C01C01C01C01C01C03843803883803883807083803107003303001C016147C931A>I<00
7C0001C3000301800E01C01E01C01C01E03C01E07801E07801E07801E0F003C0F003C0F003C0F0
0780F00700700F00700E0030180018700007C00013147C9317>I<01C1E002621804741C04781C
04701E04701E08E01E00E01E00E01E00E01E01C03C01C03C01C03C01C0380380780380700380E0
03C1C0072380071E000700000700000E00000E00000E00000E00001C00001C0000FF8000171D80
9317>I<00F0400388C00705800E03801C03803C0380380700780700780700780700F00E00F00E
00F00E00F00E00F01C00F01C00703C00705C0030B8000F38000038000038000070000070000070
0000700000E00000E0000FFE00121D7C9315>I<1C1E002661002783804787804707804703008E
00000E00000E00000E00001C00001C00001C00001C000038000038000038000038000070000030
000011147C9313>I<00FC030206010C030C070C060C000F800FF007F803FC003E000E700EF00C
F00CE008401020601F8010147D9313>I<018001C0038003800380038007000700FFF007000E00
0E000E000E001C001C001C001C003800380038003820704070407080708031001E000C1C7C9B0F
>I<0E00C01300E02301C04381C04701C04701C08703800E03800E03800E03801C07001C07001C
07001C07101C0E20180E20180E201C1E400C264007C38014147C9318>I<0E03801307802307C0
4383C04701C04700C08700800E00800E00800E00801C01001C01001C01001C02001C02001C0400
1C04001C08000E300003C00012147C9315>I<0E00C1C01300E3C02301C3E04381C1E04701C0E0
4701C060870380400E0380400E0380400E0380401C0700801C0700801C0700801C0701001C0701
001C0601001C0F02000C0F04000E13080003E1F0001B147C931E>I<0383800CC4401068E01071
E02071E02070C040E00000E00000E00000E00001C00001C00001C00001C040638080F38080F381
00E5810084C60078780013147D9315>I<0E00C01300E02301C04381C04701C04701C08703800E
03800E03800E03801C07001C07001C07001C07001C0E00180E00180E001C1E000C3C0007DC0000
1C00001C00003800F03800F07000E06000C0C0004380003E0000131D7C9316>I<FFFFFFFFFF80
29017B8C2E>124 D E /Fm 55 125 df<0001FF81FE00001FFFEFFF80007F80FF87C000FC00FE
0FE001F801FE0FE003F801FC0FE007F001FC0FE007F001FC07C007F001FC000007F001FC000007
F001FC000007F001FC000007F001FC000007F001FC000007F001FC0000FFFFFFFFF800FFFFFFFF
F800FFFFFFFFF80007F001FC000007F001FC000007F001FC000007F001FC000007F001FC000007
F001FC000007F001FC000007F001FC000007F001FC000007F001FC000007F001FC000007F001FC
000007F001FC000007F001FC000007F001FC000007F001FC000007F001FC000007F001FC000007
F001FC000007F001FC000007F001FC00007FFF1FFFE0007FFF1FFFE0007FFF1FFFE0002B2A7FA9
28>11 D<0001FF0000001FFFC000007F80F00000FC00F80001F801F80003F803FC0007F003FC00
07F003FC0007F003FC0007F001F80007F000F00007F000000007F000000007F000000007F00000
00FFFFFFFC00FFFFFFFC00FFFFFFFC0007F001FC0007F001FC0007F001FC0007F001FC0007F001
FC0007F001FC0007F001FC0007F001FC0007F001FC0007F001FC0007F001FC0007F001FC0007F0
01FC0007F001FC0007F001FC0007F001FC0007F001FC0007F001FC0007F001FC0007F001FC0007
F001FC007FFF1FFFC07FFF1FFFC07FFF1FFFC0222A7FA926>I<0001F0000000000FF800000000
1F1C000000003C0E000000007C0600000000FC0700000000F80700000001F80700000001F80700
000001F80700000001F80E00000001FC0C00000001FC1C00000001FC3800000001FC3000000000
FE60007FFC00FEC0007FFC00FF80007FFC00FF00000700007F00000700007F80000E00003F8000
1C00007FC0001C0000FFC000380001DFE0007000038FF0007000078FF000E0000F07F801C0001F
03FC0380003F03FE0380007F01FF070000FF00FF8E0000FF007F9C0000FF003FF80000FF001FF0
0000FF800FF000387F8007FC00383FC00FFE00703FE07EFF81F00FFFF83FFFE007FFE00FFFC000
FF0001FE002E2A7DA935>38 D<1C007F007F00FF80FFC0FFC07FC07FC01CC000C000C001800180
01800300030006000C001800300020000A157BA913>I<00030007000E001C0038007000F001E0
03C003C007C007800F800F001F001F003F003E003E007E007E007E007C007C00FC00FC00FC00FC
00FC00FC00FC00FC00FC00FC00FC00FC007C007C007E007E007E003E003E003F001F001F000F00
0F80078007C003C003C001E000F000700038001C000E00070003103C7AAC1B>I<8000C000E000
700038001C001E000F000780078007C003C003E001E001F001F001F800F800F800FC00FC00FC00
7C007C007E007E007E007E007E007E007E007E007E007E007E007E007C007C00FC00FC00FC00F8
00F801F801F001F001E003E003C007C0078007800F001E001C0038007000E000C00080000F3C7B
AC1B>I<1C007F007F00FF80FFC0FFC07FC07FC01CC000C000C00180018001800300030006000C
001800300020000A157B8813>44 D<00FF800003FFF0000FFFFC001F03FE003800FF007C007F80
FE003FC0FF003FC0FF003FE0FF001FE0FF001FE07E001FE03C003FE000003FE000003FC000003F
C000007F8000007F000000FE000000FC000001F8000003F0000003E00000078000000F0000001E
0000003C00E0007000E000E000E001C001C0038001C0070001C00FFFFFC01FFFFFC03FFFFFC07F
FFFFC0FFFFFF80FFFFFF80FFFFFF801B277DA622>50 D<007F800003FFF00007FFF8000F81FE00
1F00FE003F80FF003F807F803F807F803F807F801F807F800F007F800000FF000000FF000000FE
000001FC000001F8000007F00000FFC00000FFF0000001FC000000FE0000007F0000007F800000
3FC000003FC000003FE000003FE03C003FE07E003FE0FF003FE0FF003FE0FF003FC0FF007FC07E
007F807C007F003F01FE001FFFFC0007FFF00000FF80001B277DA622>I<000003800000000007
C00000000007C0000000000FE0000000000FE0000000000FE0000000001FF0000000001FF00000
00003FF8000000003FF8000000003FF80000000073FC0000000073FC00000000F3FE00000000E1
FE00000001E1FF00000001C0FF00000001C0FF00000003C0FF80000003807F80000007807FC000
0007003FC0000007003FC000000E001FE000000E001FE000001E001FF000001C000FF000001FFF
FFF000003FFFFFF800003FFFFFF80000780007FC0000700003FC0000F00003FE0000E00001FE00
00E00001FE0001E00001FF0001C00000FF0003C00000FF80FFFE001FFFFEFFFE001FFFFEFFFE00
1FFFFE2F297EA834>65 D<FFFFFFFC0000FFFFFFFF8000FFFFFFFFC00003F8001FF00003F8000F
F80003F80007FC0003F80003FC0003F80003FC0003F80003FE0003F80001FE0003F80001FE0003
F80001FE0003F80003FE0003F80003FC0003F80003FC0003F80007F80003F8000FF00003F8001F
E00003F800FFC00003FFFFFE000003FFFFFFE00003F80007F00003F80003FC0003F80001FE0003
F80001FE0003F80000FF0003F80000FF0003F80000FF8003F80000FF8003F80000FF8003F80000
FF8003F80000FF8003F80000FF8003F80000FF0003F80001FF0003F80003FE0003F80007FC0003
F8001FF800FFFFFFFFF000FFFFFFFFC000FFFFFFFE000029297DA831>I<00003FF001800003FF
FE0380000FFFFF8780003FF007DF8000FF8001FF8001FE00007F8003FC00003F8007F000001F80
0FF000000F801FE0000007801FE0000007803FC0000007803FC0000003807FC0000003807F8000
0003807F8000000000FF8000000000FF8000000000FF8000000000FF8000000000FF8000000000
FF8000000000FF8000000000FF8000000000FF80000000007F80000000007F80000000007FC000
0003803FC0000003803FC0000003801FE0000003801FE0000007000FF00000070007F000000E00
03FC00001E0001FE00003C0000FF8000F800003FF007E000000FFFFFC0000003FFFF000000003F
F8000029297CA832>I<FFFFFFF80000FFFFFFFF8000FFFFFFFFE00003FC001FF80003FC0007FC
0003FC0001FE0003FC0000FF0003FC00007F8003FC00003FC003FC00001FC003FC00001FE003FC
00001FE003FC00000FF003FC00000FF003FC00000FF003FC00000FF003FC00000FF803FC00000F
F803FC00000FF803FC00000FF803FC00000FF803FC00000FF803FC00000FF803FC00000FF803FC
00000FF803FC00000FF803FC00000FF003FC00000FF003FC00000FF003FC00001FE003FC00001F
E003FC00001FC003FC00003FC003FC00007F8003FC00007F0003FC0001FE0003FC0003FC0003FC
001FF800FFFFFFFFE000FFFFFFFF8000FFFFFFFC00002D297DA835>I<FFFFFFFFF0FFFFFFFFF0
FFFFFFFFF003FC000FF003FC0003F803FC0001F803FC0000F803FC00007803FC00003803FC0000
3803FC00003803FC00E03C03FC00E01C03FC00E01C03FC00E01C03FC01E00003FC01E00003FC07
E00003FFFFE00003FFFFE00003FFFFE00003FC07E00003FC01E00003FC01E00003FC00E00703FC
00E00703FC00E00703FC00E00E03FC00000E03FC00000E03FC00001E03FC00001E03FC00001C03
FC00003C03FC00007C03FC0000FC03FC0001FC03FC000FFCFFFFFFFFF8FFFFFFFFF8FFFFFFFFF8
28297EA82D>I<FFFFFFFFE0FFFFFFFFE0FFFFFFFFE003FC001FE003FC0007F003FC0001F003FC
0001F003FC0000F003FC00007003FC00007003FC00007003FC00007803FC00E03803FC00E03803
FC00E03803FC00E00003FC01E00003FC01E00003FC07E00003FFFFE00003FFFFE00003FFFFE000
03FC07E00003FC01E00003FC01E00003FC00E00003FC00E00003FC00E00003FC00E00003FC0000
0003FC00000003FC00000003FC00000003FC00000003FC00000003FC00000003FC00000003FC00
0000FFFFFC0000FFFFFC0000FFFFFC000025297EA82B>I<00003FF001800003FFFE0380000FFF
FF8780003FF007DF8000FF8001FF8001FE00007F8003FC00003F8007F000001F800FF000000F80
1FE0000007801FE0000007803FC0000007803FC0000003807FC0000003807F80000003807F8000
000000FF8000000000FF8000000000FF8000000000FF8000000000FF8000000000FF8000000000
FF8000000000FF8000000000FF80007FFFFC7F80007FFFFC7F80007FFFFC7FC000007F803FC000
007F803FC000007F801FE000007F801FE000007F800FF000007F8007F800007F8003FC00007F80
01FE00007F8000FF8000FF80003FF003DF80000FFFFF8F800003FFFF078000003FF801802E297C
A836>I<FFFFF01FFFFEFFFFF01FFFFEFFFFF01FFFFE03FC00007F8003FC00007F8003FC00007F
8003FC00007F8003FC00007F8003FC00007F8003FC00007F8003FC00007F8003FC00007F8003FC
00007F8003FC00007F8003FC00007F8003FC00007F8003FC00007F8003FC00007F8003FFFFFFFF
8003FFFFFFFF8003FFFFFFFF8003FC00007F8003FC00007F8003FC00007F8003FC00007F8003FC
00007F8003FC00007F8003FC00007F8003FC00007F8003FC00007F8003FC00007F8003FC00007F
8003FC00007F8003FC00007F8003FC00007F8003FC00007F8003FC00007F8003FC00007F80FFFF
F01FFFFEFFFFF01FFFFEFFFFF01FFFFE2F297DA836>I<FFFFFCFFFFFCFFFFFC01FE0001FE0001
FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001
FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001
FE0001FE0001FE0001FE0001FE0001FE0001FE00FFFFFCFFFFFCFFFFFC16297EA81A>I<FFFFFC
0000FFFFFC0000FFFFFC000003FC00000003FC00000003FC00000003FC00000003FC00000003FC
00000003FC00000003FC00000003FC00000003FC00000003FC00000003FC00000003FC00000003
FC00000003FC00000003FC00000003FC00000003FC00000003FC00000003FC00000003FC000000
03FC0000E003FC0000E003FC0000E003FC0000E003FC0001E003FC0001C003FC0001C003FC0003
C003FC0003C003FC0007C003FC0007C003FC000FC003FC003FC003FC00FF80FFFFFFFF80FFFFFF
FF80FFFFFFFF8023297EA829>76 D<FFFE0000001FFFC0FFFE0000001FFFC0FFFF0000003FFFC0
03FF0000003FF00003FF0000003FF00003BF80000077F00003BF80000077F000039FC00000E7F0
00039FC00000E7F000038FE00001C7F000038FE00001C7F0000387F0000387F0000387F0000387
F0000387F0000387F0000383F8000707F0000383F8000707F0000381FC000E07F0000381FC000E
07F0000380FE001C07F0000380FE001C07F0000380FF003807F00003807F003807F00003807F00
3807F00003803F807007F00003803F807007F00003801FC0E007F00003801FC0E007F00003800F
E1C007F00003800FE1C007F00003800FE1C007F000038007F38007F000038007F38007F0000380
03FF0007F000038003FF0007F000038001FE0007F000038001FE0007F000038000FC0007F00003
8000FC0007F000FFFE00FC01FFFFC0FFFE007801FFFFC0FFFE007801FFFFC03A297DA841>I<FF
FC0000FFFEFFFE0000FFFEFFFF0000FFFE03FF8000038003FF8000038003BFC0000380039FE000
0380039FF0000380038FF80003800387F80003800383FC0003800381FE0003800381FF00038003
80FF80038003807FC0038003803FC0038003801FE0038003800FF0038003800FF80380038007FC
0380038003FC0380038001FE0380038000FF0380038000FF83800380007FC3800380003FE38003
80001FE3800380000FF38003800007FB8003800007FF8003800003FF8003800001FF8003800000
FF80038000007F80038000007F80038000003F80038000001F80038000000F80FFFE00000780FF
FE00000380FFFE000003802F297DA836>I<0000FFE000000007FFFC0000003FC07F8000007F00
1FC00001FC0007F00003F80003F80007F00001FC000FF00001FE001FE00000FF001FE00000FF00
3FC000007F803FC000007F807FC000007FC07F8000003FC07F8000003FC07F8000003FC0FF8000
003FE0FF8000003FE0FF8000003FE0FF8000003FE0FF8000003FE0FF8000003FE0FF8000003FE0
FF8000003FE0FF8000003FE0FF8000003FE07F8000003FC07FC000007FC07FC000007FC03FC000
007F803FC000007F801FE00000FF001FE00000FF000FF00001FE0007F00001FC0003F80003F800
01FC0007F00000FF001FE000003FC07F8000000FFFFE00000000FFE000002B297CA834>I<FFFF
FFF800FFFFFFFF00FFFFFFFFC003FC003FE003FC000FF003FC0007F803FC0007FC03FC0003FC03
FC0003FE03FC0003FE03FC0003FE03FC0003FE03FC0003FE03FC0003FE03FC0003FE03FC0003FC
03FC0007FC03FC0007F803FC000FF003FC003FE003FFFFFF8003FFFFFE0003FC00000003FC0000
0003FC00000003FC00000003FC00000003FC00000003FC00000003FC00000003FC00000003FC00
000003FC00000003FC00000003FC00000003FC00000003FC00000003FC000000FFFFF00000FFFF
F00000FFFFF0000027297DA82F>I<FFFFFFE00000FFFFFFFE0000FFFFFFFF800003FC007FE000
03FC000FF00003FC0007F80003FC0007FC0003FC0003FC0003FC0003FE0003FC0003FE0003FC00
03FE0003FC0003FE0003FC0003FE0003FC0003FE0003FC0003FC0003FC0007F80003FC0007F800
03FC001FE00003FC007FC00003FFFFFE000003FFFFF8000003FC00FC000003FC007F000003FC00
3F800003FC003F800003FC001FC00003FC001FE00003FC001FE00003FC001FE00003FC001FE000
03FC001FE00003FC001FF00003FC001FF00003FC001FF00003FC001FF00703FC001FF80703FC00
0FF80703FC0007F80EFFFFF003FE1CFFFFF001FFF8FFFFF0003FF030297DA834>82
D<007F806003FFF0E007FFF9E00F807FE01F001FE03E0007E07C0003E07C0001E0FC0001E0FC00
01E0FC0000E0FE0000E0FE0000E0FF000000FFC000007FFE00007FFFE0003FFFFC001FFFFE000F
FFFF8007FFFFC003FFFFC0007FFFE00007FFF000007FF000000FF8000007F8000003F8600001F8
E00001F8E00001F8E00001F8F00001F0F00001F0F80003F0FC0003E0FF0007C0FFE01F80F3FFFF
00E1FFFE00C01FF0001D297CA826>I<7FFFFFFFFFC07FFFFFFFFFC07FFFFFFFFFC07F803FC03F
C07E003FC007C078003FC003C078003FC003C070003FC001C0F0003FC001E0F0003FC001E0E000
3FC000E0E0003FC000E0E0003FC000E0E0003FC000E0E0003FC000E000003FC0000000003FC000
0000003FC0000000003FC0000000003FC0000000003FC0000000003FC0000000003FC000000000
3FC0000000003FC0000000003FC0000000003FC0000000003FC0000000003FC0000000003FC000
0000003FC0000000003FC0000000003FC0000000003FC0000000003FC0000000003FC000000000
3FC00000007FFFFFE000007FFFFFE000007FFFFFE0002B287EA730>I<FFFFF001FFFCFFFFF001
FFFCFFFFF001FFFC03FC0000070003FC0000070003FC0000070003FC0000070003FC0000070003
FC0000070003FC0000070003FC0000070003FC0000070003FC0000070003FC0000070003FC0000
070003FC0000070003FC0000070003FC0000070003FC0000070003FC0000070003FC0000070003
FC0000070003FC0000070003FC0000070003FC0000070003FC0000070003FC0000070003FC0000
070003FC0000070003FC0000070003FC0000070001FC00000E0001FE00000E0000FE00001C0000
7E00001C00007F00003800003FC000F000000FF007E0000007FFFFC0000001FFFF000000001FF8
00002E297DA835>I<FFFFF0003FFF80FFFFF0003FFF80FFFFF0003FFF8003FE000001E00001FE
000001C00001FF000001C00000FF000003800000FF000003800000FF8000078000007F80000700
00007FC0000F0000003FC0000E0000003FE0001E0000001FE0001C0000001FF0001C0000000FF0
00380000000FF000380000000FF8007800000007F8007000000007FC00F000000003FC00E00000
0003FE01E000000001FE01C000000001FF01C000000000FF038000000000FF038000000000FF87
80000000007F8700000000007FCF00000000003FCE00000000003FEE00000000001FFC00000000
001FFC00000000000FF800000000000FF800000000000FF8000000000007F0000000000007F000
0000000003E0000000000003E0000000000001C000000031297FA834>I<FFFFE07FFFF007FFF0
FFFFE07FFFF007FFF0FFFFE07FFFF007FFF003FC0001FE00001C0003FC0001FE00001C0001FE00
01FF0000380001FE0000FF0000380001FE0000FF0000380000FF0000FF8000700000FF0000FF80
00700000FF8001FFC000F000007F8001FFC000E000007F8001FFC000E000003FC003FFE001C000
003FC0039FE001C000003FC0039FE001C000001FE0070FF0038000001FE0070FF0038000001FF0
0F0FF8078000000FF00E07F8070000000FF00E07F80700000007F81E07FC0E00000007F81C03FC
0E00000007FC1C03FC1E00000003FC3801FE1C00000003FC3801FE1C00000003FE7801FF3C0000
0001FE7000FF3800000001FE7000FF3800000000FFE0007FF000000000FFE0007FF000000000FF
E0007FF0000000007FC0003FE0000000007FC0003FE0000000007FC0003FE0000000003F80001F
C0000000003F80001FC0000000001F00000F80000000001F00000F80000000001F00000F800000
00000E00000700000044297FA847>I<03FF80000FFFF0001F01F8003F807E003F807E003F803F
001F003F800E003F8000003F8000003F8000003F80000FFF8000FFFF8007FC3F800FE03F803F80
3F803F003F807F003F80FE003F80FE003F80FE003F80FE003F807E007F807F00DF803F839FFC0F
FF0FFC01FC03FC1E1B7E9A21>97 D<FFE0000000FFE0000000FFE00000000FE00000000FE00000
000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE000
00000FE00000000FE00000000FE1FE00000FE7FF80000FFE07E0000FF801F0000FF000F8000FE0
00FC000FE000FE000FE0007F000FE0007F000FE0007F000FE0007F800FE0007F800FE0007F800F
E0007F800FE0007F800FE0007F800FE0007F800FE0007F000FE0007F000FE0007F000FE000FE00
0FE000FC000FF001F8000FF803F0000F9E0FE0000F0FFF80000E01FC0000212A7EA926>I<003F
F80000FFFE0003F01F0007E03F800FC03F801F803F803F801F007F000E007F0000007F000000FF
000000FF000000FF000000FF000000FF000000FF000000FF0000007F0000007F0000007F800000
3F8001C01F8001C00FC0038007E0070003F01E0000FFFC00003FE0001A1B7E9A1F>I<00003FF8
0000003FF80000003FF800000003F800000003F800000003F800000003F800000003F800000003
F800000003F800000003F800000003F800000003F800000003F800000003F800001FE3F80000FF
FBF80003F83FF80007E00FF8000FC007F8001F8003F8003F8003F8007F0003F8007F0003F8007F
0003F800FF0003F800FF0003F800FF0003F800FF0003F800FF0003F800FF0003F800FF0003F800
7F0003F8007F0003F8007F0003F8003F8003F8001F8003F8000F8007F80007C00FF80003F03FFF
8000FFF3FF80003FC3FF80212A7EA926>I<003FE00001FFF80003F07E0007C01F000F801F801F
800F803F800FC07F000FC07F0007C07F0007E0FF0007E0FF0007E0FFFFFFE0FFFFFFE0FF000000
FF000000FF0000007F0000007F0000007F0000003F8000E01F8000E00FC001C007E0038003F81F
0000FFFE00001FF0001B1B7E9A20>I<0007F0003FFC00FE3E01F87F03F87F03F07F07F07F07F0
3E07F00007F00007F00007F00007F00007F00007F000FFFFC0FFFFC0FFFFC007F00007F00007F0
0007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F0
0007F00007F00007F00007F00007F0007FFF807FFF807FFF80182A7EA915>I<00FF81F003FFE7
F80FC1FE7C1F80FC7C1F007C383F007E107F007F007F007F007F007F007F007F007F007F007F00
7F003F007E001F007C001F80FC000FC1F8001FFFE00018FF800038000000380000003C0000003E
0000003FFFF8001FFFFF001FFFFF800FFFFFC007FFFFE01FFFFFF03C0007F07C0001F8F80000F8
F80000F8F80000F8F80000F87C0001F03C0001E01F0007C00FC01F8003FFFE00007FF0001E287E
9A22>I<FFE0000000FFE0000000FFE00000000FE00000000FE00000000FE00000000FE0000000
0FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000
000FE07F00000FE1FFC0000FE787E0000FEE03F0000FF803F0000FF803F8000FF003F8000FF003
F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE0
03F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000F
E003F800FFFE3FFF80FFFE3FFF80FFFE3FFF80212A7DA926>I<07000F801FC03FE03FE03FE01F
C00F8007000000000000000000000000000000FFE0FFE0FFE00FE00FE00FE00FE00FE00FE00FE0
0FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE0FFFEFFFEFFFE0F2B7DAA14
>I<FFE00000FFE00000FFE000000FE000000FE000000FE000000FE000000FE000000FE000000F
E000000FE000000FE000000FE000000FE000000FE000000FE01FFC0FE01FFC0FE01FFC0FE00780
0FE00F000FE01E000FE03C000FE078000FE0E0000FE3C0000FE7C0000FEFE0000FFFE0000FFFF0
000FF3F8000FE3F8000FC1FC000FC0FE000FC07F000FC07F000FC03F800FC01FC00FC00FC00FC0
0FE0FFFC3FFEFFFC3FFEFFFC3FFE1F2A7EA924>107 D<FFE0FFE0FFE00FE00FE00FE00FE00FE0
0FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00F
E00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE0FFFEFFFEFFFE0F2A7DA914>I<FFC07F
800FF000FFC1FFE03FFC00FFC383F0707E000FC603F8C07F000FCC01F9803F000FD801FF003F80
0FF001FE003F800FF001FE003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC
003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800F
E001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC003F800FE001FC00
3F800FE001FC003F80FFFE1FFFC3FFF8FFFE1FFFC3FFF8FFFE1FFFC3FFF8351B7D9A3A>I<FFC0
7F0000FFC1FFC000FFC787E0000FCE03F0000FD803F0000FD803F8000FF003F8000FF003F8000F
E003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F800
0FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8
00FFFE3FFF80FFFE3FFF80FFFE3FFF80211B7D9A26>I<003FE00001FFFC0003F07E000FC01F80
1F800FC03F800FE03F0007E07F0007F07F0007F07F0007F0FF0007F8FF0007F8FF0007F8FF0007
F8FF0007F8FF0007F8FF0007F8FF0007F87F0007F07F0007F03F800FE03F800FE01F800FC00FC0
1F8007F07F0001FFFC00003FE0001D1B7E9A22>I<FFE1FE0000FFE7FF8000FFFE07E0000FF803
F0000FF001F8000FE000FC000FE000FE000FE000FF000FE0007F000FE0007F000FE0007F800FE0
007F800FE0007F800FE0007F800FE0007F800FE0007F800FE0007F800FE0007F000FE000FF000F
E000FF000FE000FE000FE001FC000FF001F8000FF803F0000FFE0FE0000FEFFF80000FE1FC0000
0FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000
000FE0000000FFFE000000FFFE000000FFFE00000021277E9A26>I<001FC0380000FFF0780003
F838F80007E00DF8000FC007F8001FC007F8003F8003F8007F8003F8007F8003F8007F0003F800
FF0003F800FF0003F800FF0003F800FF0003F800FF0003F800FF0003F800FF0003F8007F0003F8
007F0003F8007F8003F8003F8003F8001F8007F8000FC007F80007E01FF80003F03BF80000FFF3
F800003FC3F800000003F800000003F800000003F800000003F800000003F800000003F8000000
03F800000003F800000003F80000003FFF8000003FFF8000003FFF8021277E9A24>I<FFC1F0FF
C7FCFFCE3E0FD87F0FD87F0FF07F0FF03E0FF01C0FE0000FE0000FE0000FE0000FE0000FE0000F
E0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE000FFFF00FFFF00FFFF0018
1B7E9A1C>I<03FE300FFFF01E03F03800F0700070F00070F00070F80070FE0000FFE0007FFE00
7FFF803FFFE01FFFF007FFF800FFF80007FC6000FCE0007CE0003CF0003CF00038F80038FC0070
FF01E0F7FFC0C1FF00161B7E9A1B>I<00700000700000700000700000F00000F00000F00001F0
0003F00003F00007F0001FFFF0FFFFF0FFFFF007F00007F00007F00007F00007F00007F00007F0
0007F00007F00007F00007F00007F00007F00007F03807F03807F03807F03807F03807F03803F0
3803F87001F86000FFC0001F8015267FA51B>I<FFE03FF800FFE03FF800FFE03FF8000FE003F8
000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003
F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE003F8000FE0
03F8000FE003F8000FE007F80007E007F80007E00FF80003F03BFF8001FFF3FF80003FC3FF8021
1B7D9A26>I<FFFE03FF80FFFE03FF80FFFE03FF800FF000780007F000700007F800F00003F800
E00003FC01E00001FC01C00001FC01C00000FE03800000FE03800000FF078000007F070000007F
8F0000003F8E0000003FCE0000001FDC0000001FDC0000000FF80000000FF80000000FF8000000
07F000000007F000000003E000000003E000000001C00000211B7F9A24>I<FFFC3FFC0FFEFFFC
3FFC0FFEFFFC3FFC0FFE0FE007E000E007F003F001C007F003F001C007F807F803C003F807F803
8003F807F8038001FC0EFC070001FC0EFC070001FC1EFE0F0000FE1C7E0E0000FE1C7E0E0000FF
383F1E00007F383F1C00007F783F1C00003FF01FB800003FF01FB800003FE00FF800001FE00FF0
00001FE00FF000000FC007E000000FC007E000000FC007E00000078003C00000078003C0002F1B
7F9A32>I<FFFC0FFF00FFFC0FFF00FFFC0FFF0007F003C00003F803800001FC07800000FE0F00
0000FF1E0000007F3C0000003FF80000001FF00000001FF00000000FF000000007F000000007F8
0000000FFC0000001FFE0000001EFE0000003C7F000000783F800000F01FC00001E01FE00003C0
0FE00003C007F000FFF01FFF80FFF01FFF80FFF01FFF80211B7F9A24>I<FFFE03FF80FFFE03FF
80FFFE03FF800FF000780007F000700007F800F00003F800E00003FC01E00001FC01C00001FC01
C00000FE03800000FE03800000FF078000007F070000007F8F0000003F8E0000003FCE0000001F
DC0000001FDC0000000FF80000000FF80000000FF800000007F000000007F000000003E0000000
03E000000001C000000001C000000003800000000380000038078000007C07000000FE0F000000
FE0E000000FE1C000000FE3C0000007C780000003FE00000000F8000000021277F9A24>I<3FFF
FF803FFFFF803F007F003C00FE003801FE007803FC007803F8007007F800700FF000700FE00000
1FC000003FC000007F8000007F000000FF000001FE038001FC038003F8038007F803800FF00780
0FE007801FE007003FC00F003F801F007F007F00FFFFFF00FFFFFF00191B7E9A1F>I<FFFFFFFF
FFFFFFFFF0FFFFFFFFFFFFFFFFF04402809145>124 D E /Fn 66 125 df<000FF07F00007FF9
FF8000F83FC7C001E07F8FC003E07F0FC007C07F0FC007C03F078007C01F000007C01F000007C0
1F000007C01F000007C01F0000FFFFFFF800FFFFFFF80007C01F000007C01F000007C01F000007
C01F000007C01F000007C01F000007C01F000007C01F000007C01F000007C01F000007C01F0000
07C01F000007C01F000007C01F000007C01F000007C01F00003FF8FFF0003FF8FFF0002220809F
1F>11 D<000FE000007FF80000F81C0001E07C0003E07C0007C07C0007C07C0007C0380007C000
0007C0000007C0000007C1FE00FFFFFE00FFFFFE0007C03E0007C03E0007C03E0007C03E0007C0
3E0007C03E0007C03E0007C03E0007C03E0007C03E0007C03E0007C03E0007C03E0007C03E0007
C03E0007C03E003FF9FFC03FF9FFC01A20809F1D>I<001F000000003F80000000F0C0000000E0
60000001E060000003E060000003E060000003E060000003E0C0000003E180000003E300000003
E600000001FC007FE001F8007FE001F0000E0000F8000C0000F8000C0001FC001800077E003000
0E3E0060001E3F0060003C1F80C0007C0FC18000FC07C30000FC07E60000FC03FC0000FC01F800
007E007C00607E00FF00E03F07DFC1C00FFF07FF8003F800FE0023207E9F29>38
D<387CFEFFFF7F3B030306060E0C18302008107C9F0F>I<0030006000C00180038007000F000E
001E001C003C003C0038007800780078007800F800F000F000F000F000F000F000F000F000F000
F800780078007800780038003C003C001C001E000E000F0007000380018000C0006000300C2D7C
A114>I<C0006000300018001C000E000F0007000780038003C003C001C001E001E001E001E001
F000F000F000F000F000F000F000F000F000F001F001E001E001E001E001C003C003C003800780
07000F000E001C00180030006000C0000C2D7DA114>I<387CFEFFFF7F3B030306060E0C183020
08107C860F>44 D<387CFEFEFE7C3807077C860F>46 D<01FC0007FF001F07C01E03C03E03E07C
01F07C01F07C01F0FC01F8FC01F8FC01F8FC01F8FC01F8FC01F8FC01F8FC01F8FC01F8FC01F8FC
01F8FC01F8FC01F87C01F07C01F07C01F03E03E01E03C01F8FC007FF0001FC00151D7E9C1A>48
D<00700000F00007F000FFF000F9F00001F00001F00001F00001F00001F00001F00001F00001F0
0001F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F0
0001F0007FFFC07FFFC0121D7D9C1A>I<03FC001FFF80381FC07C07E0FE03F0FE03F0FE03F8FE
01F87C01F83801F80003F80003F00003F00007E0000FC0000F00001E00003C0000700000E00001
C0180380180600180C00381FFFF03FFFF07FFFF0FFFFF0FFFFF0151D7E9C1A>I<03FC000FFF80
1C0FC03C07E07E03F07E03F07E03F07E07F03C07E00007E0000FC0003F8003FE0003FC00000F80
0007C00003E00003F00003F83803F87C03F8FE03F8FE03F8FE03F0FC03F07807E03C0FC01FFF80
03FC00151D7E9C1A>I<0001C00003C00007C00007C0000FC0001FC0003BC00073C00063C000C3
C00183C00383C00703C00E03C00C03C01803C03803C07003C0E003C0FFFFFEFFFFFE0007C00007
C00007C00007C00007C00007C000FFFE00FFFE171D7F9C1A>I<1C00E01FFFE01FFFC01FFF801F
FF001FFC001FC00018000018000018000018000019FE001FFF801E07C01803E01001F00001F000
01F80001F87801F8FC01F8FC01F8FC01F8FC01F07803F07003E03C0FC00FFF0003FC00151D7E9C
1A>I<003F0001FFC007C0E00F81E01F03F01E03F03E03F07C03F07C01E07C0000FC1000FCFF00
FDFFC0FD03E0FE01F0FE01F0FC01F8FC01F8FC01F8FC01F87C01F87C01F87C01F83C01F03E01F0
1E03E00F07C007FF8001FE00151D7E9C1A>I<6000007FFFF87FFFF87FFFF07FFFE07FFFC0E001
80C00300C00300C00600000C0000180000380000300000700000F00000F00001E00001E00003E0
0003E00003E00003E00007E00007E00007E00007E00007E00003C000018000151E7D9D1A>I<01
FE000FFF801E07C03801E03800F07800F07800F07C00F07F00F07FC1E03FE3C01FFF800FFE0007
FF8007FFC01FFFE03C3FF0780FF07803F8F001F8F000F8F00078F00078F000707800707C00E03E
03C00FFF8003FC00151D7E9C1A>I<01FC000FFF001F07803E03C07C03E07C01E0FC01F0FC01F0
FC01F0FC01F8FC01F8FC01F8FC01F87C03F87C03F83E05F81FFDF807F9F80041F80001F03C01F0
7E01F07E03E07E03E07E03C03C0780381F001FFC0007F000151D7E9C1A>I<0000E000000000E0
00000001F000000001F000000001F000000003F800000003F800000006FC00000006FC0000000E
FE0000000C7E0000000C7E000000183F000000183F000000303F800000301F800000701FC00000
600FC00000600FC00000C007E00000FFFFE00001FFFFF000018003F000038003F800030001F800
030001F800060000FC00060000FC000E0000FE00FFE00FFFE0FFE00FFFE0231F7E9E28>65
D<FFFFFE00FFFFFFC007C007E007C003F007C001F807C001FC07C001FC07C001FC07C001FC07C0
01FC07C001F807C003F807C003F007C00FE007FFFF8007FFFFC007C003F007C001F807C001FC07
C000FC07C000FE07C000FE07C000FE07C000FE07C000FE07C000FC07C001FC07C003F807C007F0
FFFFFFE0FFFFFF001F1F7E9E25>I<0007FC02003FFF0E00FE03DE03F000FE07E0003E0FC0001E
1F80001E3F00000E3F00000E7F0000067E0000067E000006FE000000FE000000FE000000FE0000
00FE000000FE000000FE0000007E0000007E0000067F0000063F0000063F00000C1F80000C0FC0
001807E0003803F0007000FE01C0003FFF800007FC001F1F7D9E26>I<FFFFFE0000FFFFFFC000
07E007F00007E001F80007E000FC0007E0007E0007E0003F0007E0003F0007E0001F8007E0001F
8007E0001F8007E0001FC007E0001FC007E0001FC007E0001FC007E0001FC007E0001FC007E000
1FC007E0001FC007E0001FC007E0001F8007E0001F8007E0001F8007E0003F0007E0003F0007E0
007E0007E000FC0007E001F80007E007F000FFFFFFC000FFFFFE0000221F7E9E28>I<FFFFFFE0
FFFFFFE007E007E007E001E007E000E007E0006007E0007007E0003007E0003007E0303007E030
3007E0300007E0700007E0F00007FFF00007FFF00007E0F00007E0700007E0300007E0300C07E0
300C07E0000C07E0001807E0001807E0001807E0003807E0007807E000F807E003F0FFFFFFF0FF
FFFFF01E1F7E9E22>I<FFFFFFE0FFFFFFE007E007E007E001E007E000E007E0006007E0007007
E0003007E0003007E0303007E0303007E0300007E0700007E0F00007FFF00007FFF00007E0F000
07E0700007E0300007E0300007E0300007E0000007E0000007E0000007E0000007E0000007E000
0007E0000007E00000FFFF8000FFFF80001C1F7E9E21>I<0007FC0200003FFF0E0000FE03DE00
03F000FE0007E0003E000FC0001E001F80001E003F00000E003F00000E007F000006007E000006
007E00000600FE00000000FE00000000FE00000000FE00000000FE00000000FE001FFFE0FE001F
FFE07E00007E007E00007E007F00007E003F00007E003F00007E001F80007E000FC0007E0007E0
007E0003F000FE0000FE01FE00003FFF8E000007FC0600231F7D9E29>I<FFFF0FFFF0FFFF0FFF
F007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E000
7E0007E0007E0007E0007E0007E0007E0007E0007E0007FFFFFE0007FFFFFE0007E0007E0007E0
007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007E0007
E0007E0007E0007E0007E0007E0007E0007E00FFFF0FFFF0FFFF0FFFF0241F7E9E29>I<FFFFFF
FF07E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E0
07E007E007E007E007E007E007E007E0FFFFFFFF101F7E9E14>I<03FFFC03FFFC000FC0000FC0
000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0
000FC0000FC0000FC0000FC0000FC0100FC07C0FC0FE0FC0FE0FC0FE0F80FC1F80783F003FFE00
0FF000161F7F9E1B>I<FFFF8000FFFF800007E0000007E0000007E0000007E0000007E0000007
E0000007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E00000
07E0000007E0000007E000C007E000C007E000C007E001C007E001C007E001C007E0038007E003
8007E00F8007E01F80FFFFFF80FFFFFF801A1F7E9E1F>76 D<FFE000003FF8FFF000007FF807F0
00007F0006F80000DF0006F80000DF0006F80000DF00067C00019F00067C00019F00063E00031F
00063E00031F00061F00061F00061F00061F00060F800C1F00060F800C1F000607C0181F000607
C0181F000607C0181F000603E0301F000603E0301F000601F0601F000601F0601F000600F8C01F
000600F8C01F0006007D801F0006007D801F0006003F001F0006003F001F0006003F001F000600
1E001F00FFF01E03FFF8FFF00C03FFF82D1F7E9E32>I<FFE000FFF0FFF000FFF007F000060007
F800060006FC000600067E000600063F000600063F800600061F800600060FC006000607E00600
0603F006000601F806000601FC06000600FC060006007E060006003F060006001F860006001FC6
0006000FE600060007E600060003F600060001FE00060000FE00060000FE000600007E00060000
3E000600001E000600000E00FFF0000600FFF0000600241F7E9E29>I<001FF80000FFFF0001F8
1F8007E007E00FC003F01F8001F81F0000F83F0000FC7F0000FE7E00007E7E00007EFE00007FFE
00007FFE00007FFE00007FFE00007FFE00007FFE00007FFE00007FFE00007F7E00007E7F0000FE
7F0000FE3F0000FC3F8001FC1F8001F80FC003F007E007E001F81F8000FFFF00001FF800201F7D
9E27>I<FFFFFE00FFFFFF8007E00FE007E003F007E001F807E001F807E001FC07E001FC07E001
FC07E001FC07E001FC07E001F807E001F807E003F007E00FE007FFFF8007FFFE0007E0000007E0
000007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E0000007
E00000FFFF0000FFFF00001E1F7E9E24>I<FFFFFC0000FFFFFF800007E00FE00007E003F00007
E003F80007E001F80007E001FC0007E001FC0007E001FC0007E001FC0007E001F80007E003F800
07E003F00007E00FE00007FFFF800007FFFC000007E03F000007E00F800007E00FC00007E007C0
0007E007E00007E007E00007E007E00007E007F00007E007F00007E007F00007E007F03007E003
F83007E001F860FFFF00FFC0FFFF003F80241F7E9E27>82 D<03FC080FFF381E03F83800F87000
78700038F00038F00018F00018F80000FC00007FC0007FFE003FFF801FFFC00FFFE007FFF000FF
F80007F80000FC00007C00003CC0003CC0003CC0003CE00038E00078F80070FE01E0EFFFC081FF
00161F7D9E1D>I<7FFFFFFC7FFFFFFC7C07E07C7007E01C6007E00C6007E00CE007E00EC007E0
06C007E006C007E006C007E0060007E0000007E0000007E0000007E0000007E0000007E0000007
E0000007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E0000007E00000
07E00003FFFFC003FFFFC01F1E7E9D24>I<FFFF01FFE0FFFF01FFE007E0000C0007E0000C0007
E0000C0007E0000C0007E0000C0007E0000C0007E0000C0007E0000C0007E0000C0007E0000C00
07E0000C0007E0000C0007E0000C0007E0000C0007E0000C0007E0000C0007E0000C0007E0000C
0007E0000C0007E0000C0007E0000C0007E0000C0003E000180001F000180001F000300000F800
6000007E03C000001FFF80000003FC0000231F7E9E28>I<FFFE003FF8FFFE003FF80FE0000380
07E000030007F000070003F000060003F800060001F8000C0001FC000C0000FC00180000FC0018
00007E003000007E003000007F007000003F006000003F80E000001F80C000001FC0C000000FC1
8000000FC180000007E300000007E300000003F600000003F600000003FE00000001FC00000001
FC00000000F800000000F8000000007000000000700000251F7F9E28>I<FFFC0FFFC0FFE0FFFC
0FFFC0FFE00FC000FC000E000FE000FC000E0007E000FE000C0007E000FE000C0007F000FE001C
0003F001BF00180003F001BF00180001F801BF00300001F8031F80300001F8031F80300000FC07
1FC0600000FC060FC0600000FE060FC0E000007E0C07E0C000007E0C07E0C000003F0C07E18000
003F1803F18000003F1803F18000001FB803FB0000001FB001FB0000001FF001FF0000000FE000
FE0000000FE000FE00000007E000FC00000007C0007C00000007C0007C00000003C00078000000
03800038000000018000300000331F7F9E36>I<07FC001FFF803F07C03F03E03F01F03F01F00C
01F00001F0003FF007FDF01F81F03E01F07C01F0F801F0F801F0F801F0FC02F07E0CF03FF87E0F
E03E17147F9319>97 D<FF0000FF00001F00001F00001F00001F00001F00001F00001F00001F00
001F00001F00001F1FC01F7FF01FE0F81F807C1F007E1F003E1F003E1F003F1F003F1F003F1F00
3F1F003F1F003F1F003E1F003E1F007C1F807C1EC1F81C7FE0181F8018207E9F1D>I<01FE0007
FF801F0FC03E0FC03E0FC07C0FC07C0300FC0000FC0000FC0000FC0000FC0000FC00007C00007E
00003E00603F00C01F81C007FF0001FC0013147E9317>I<0007F80007F80000F80000F80000F8
0000F80000F80000F80000F80000F80000F80000F801F8F807FEF81F83F83E01F87E00F87C00F8
7C00F8FC00F8FC00F8FC00F8FC00F8FC00F8FC00F87C00F87C00F87E00F83E01F81F07F80FFEFF
03F8FF18207E9F1D>I<01FE0007FF800F83C01E01E03E00F07C00F07C00F8FC00F8FFFFF8FFFF
F8FC0000FC0000FC00007C00007C00003E00181E00180F807007FFE000FF8015147F9318>I<00
3F8000FFC003E3E007C7E00787E00F87E00F83C00F80000F80000F80000F80000F8000FFFC00FF
FC000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F
80000F80000F80000F80007FF8007FF80013207F9F10>I<03FC3C0FFFFE1E079E3C03DE7C03E0
7C03E07C03E07C03E07C03E03C03C01E07801FFF0013FC003000003000003800003FFF801FFFF0
0FFFF81FFFFC78007C70003EF0001EF0001EF0001E78003C78003C3F01F80FFFE001FF00171E7F
931A>I<FF0000FF00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F00
001F0FC01F3FE01F61F01FC0F81F80F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00
F81F00F81F00F81F00F81F00F81F00F8FFE7FFFFE7FF18207D9F1D>I<1C003E007F007F007F00
3E001C00000000000000000000000000FF00FF001F001F001F001F001F001F001F001F001F001F
001F001F001F001F001F001F00FFE0FFE00B217EA00E>I<0038007C00FE00FE00FE007C003800
000000000000000000000001FE01FE003E003E003E003E003E003E003E003E003E003E003E003E
003E003E003E003E003E003E003E003E303E783EFC3CFC7C78783FF01FC00F2A83A010>I<FF00
00FF00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F01FE1F01
FE1F00F01F00C01F03801F07001F0C001F18001F7C001FFC001F9E001F0F001E0F801E07C01E03
C01E01E01E01F01E00F8FFC3FFFFC3FF18207E9F1C>I<FF00FF001F001F001F001F001F001F00
1F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F
001F001F00FFE0FFE00B207E9F0E>I<FE0FE03F80FE1FF07FC01E70F9C3E01E407D01F01E807E
01F01F807E01F01F007C01F01F007C01F01F007C01F01F007C01F01F007C01F01F007C01F01F00
7C01F01F007C01F01F007C01F01F007C01F01F007C01F01F007C01F0FFE3FF8FFEFFE3FF8FFE27
147D932C>I<FE0FC0FE3FE01E61F01EC0F81E80F81F00F81F00F81F00F81F00F81F00F81F00F8
1F00F81F00F81F00F81F00F81F00F81F00F81F00F8FFE7FFFFE7FF18147D931D>I<01FF0007FF
C01F83F03E00F83E00F87C007C7C007CFC007EFC007EFC007EFC007EFC007EFC007E7C007C7C00
7C3E00F83E00F81F83F007FFC001FF0017147F931A>I<FF1FC0FF7FF01FE1F81F80FC1F007E1F
007E1F003E1F003F1F003F1F003F1F003F1F003F1F003F1F003E1F007E1F007C1F80FC1FC1F81F
7FE01F1F801F00001F00001F00001F00001F00001F00001F0000FFE000FFE000181D7E931D>I<
01F81807FE381F87783F01F83E01F87E00F87C00F8FC00F8FC00F8FC00F8FC00F8FC00F8FC00F8
7C00F87E00F87E00F83F01F81F87F80FFEF803F8F80000F80000F80000F80000F80000F80000F8
0000F80007FF0007FF181D7E931C>I<FE3E00FE7F801ECFC01E8FC01E8FC01F8FC01F03001F00
001F00001F00001F00001F00001F00001F00001F00001F00001F00001F0000FFF000FFF0001214
7E9316>I<0FE63FFE701E600EE006E006F800FFC07FF83FFC1FFE03FE001FC007C007E007F006
F81EFFFCC7F010147E9315>I<0300030003000300070007000F000F003F00FFFCFFFC1F001F00
1F001F001F001F001F001F001F001F001F061F061F061F061F060F8C07F803F00F1D7F9C14>I<
FF07F8FF07F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F8
1F00F81F00F81F01F81F01F80F06F807FCFF03F8FF18147D931D>I<FFE07F80FFE07F801F001C
000F8018000F80180007C0300007C0300003E0600003E0600003F0E00001F0C00001F9C00000F9
800000FF8000007F0000007F0000003E0000003E0000001C0000001C000019147F931C>I<FFC7
FE1FE0FFC7FE1FE01F00F003001F00F803000F80F806000F80F806000FC1BC0E0007C1BC0C0007
C3BE0C0003E31E180003E31E180003F60F380001F60F300001FE0FB00000FC07E00000FC07E000
00F803E000007803C000007803C000003001800023147F9326>I<FFC0FF00FFC0FF000F807000
07C0600007E0C00003E1800001F3800000FF0000007E0000003E0000003F0000007F8000006F80
0000C7C0000183E0000381F0000700F8000E00FC00FF81FF80FF81FF8019147F931C>I<FFE07F
80FFE07F801F001C000F8018000F80180007C0300007C0300003E0600003E0600003F0E00001F0
C00001F9C00000F9800000FF8000007F0000007F0000003E0000003E0000001C0000001C000000
1800000018000078300000FC300000FC600000C0E00000E1C000007F8000001E000000191D7F93
1C>I<3FFFE03FFFE03C07C0380F80701F80603F00603E00607C0000F80001F80003F00003E060
07C0600F80601F80E03F00C03E01C07C03C0FFFFC0FFFFC013147F9317>I<FFFFFFFFFFFFE0FF
FFFFFFFFFFE03302808C34>124 D E /Fo 7 85 df<00000000C00000000000E00000000001E0
0000000003E00000000003E00000000007E00000000007E0000000000FE0000000000FE0000000
001FE0000000001FE00000000037E00000000067E00000000067E000000000C7E000000000C7F0
0000000183F00000000183F00000000303F00000000703F00000000603F00000000C03F0000000
0C03F00000001803F00000001803F00000003003F00000003003F00000006003F0000000C003F0
000000C003F00000018003F00000018003F8000003FFFFF8000003FFFFF80000060001F800000E
0001F800000C0001F80000180001F80000180001F80000300001F80000300001F80000600001F8
0000E00001F80000C00001F80001C00001F80001C00001F80007C00001FC001FC00003FC00FFF8
007FFFE0FFF8007FFFE02B327BB135>65 D<0000007F8008000003FFE01800001FC0703800003E
0018780000F8000CF00001F00007F00007C00007F0000F800003F0001F000003E0003E000003E0
007E000001E000FC000001E001F8000001C001F8000001C003F0000001C007F0000001C007E000
0001800FE0000001800FC0000001801FC0000001801FC0000000003F80000000003F8000000000
3F80000000007F00000000007F00000000007F00000000007F00000000007E0000000000FE0000
000000FE0000000000FE0000000000FE0000001800FE0000001800FE0000001800FE0000003000
7E00000030007E00000030007E00000060007E000000C0003E000000C0003E00000180001F0000
0300001F00000600000F80000C000007C00018000003E00030000001F000E0000000FC07800000
003FFE0000000007F80000002D3375B133>67 D<000FFFFFFFFE000FFFFFFFFE00007F0000FE00
007E00003E00007E00001E00007E00001E00007E00000C0000FC00000C0000FC00000C0000FC00
000C0000FC00000C0001F800000C0001F800000C0001F800000C0001F800000C0003F000400800
03F000C0000003F000C0000003F000C0000007E00180000007E00180000007E00380000007E00F
8000000FFFFF0000000FFFFF0000000FC00F0000000FC0070000001F80060000001F8006000000
1F80060000001F80060000003F000C0020003F00040060003F00000060003F000000C0007E0000
00C0007E00000180007E00000180007E0000030000FC0000030000FC0000070000FC00000E0000
FC00000E0001F800001C0001F800003C0001F80000F80003F8000FF800FFFFFFFFF000FFFFFFFF
F0002F317BB031>69 D<000FFFFC0FFFFC000FFFFC0FFFFC00007F00007F0000007E00007E0000
007E00007E0000007E00007E0000007E00007E000000FC0000FC000000FC0000FC000000FC0000
FC000000FC0000FC000001F80001F8000001F80001F8000001F80001F8000001F80001F8000003
F00003F0000003F00003F0000003F00003F0000003F00003F0000007E00007E0000007E00007E0
000007E00007E0000007E00007E000000FFFFFFFC000000FFFFFFFC000000FC0000FC000000FC0
000FC000001F80001F8000001F80001F8000001F80001F8000001F80001F8000003F00003F0000
003F00003F0000003F00003F0000003F00003F0000007E00007E0000007E00007E0000007E0000
7E0000007E00007E000000FC0000FC000000FC0000FC000000FC0000FC000000FC0000FC000001
F80001F8000001F80001F8000001F80001F8000003F80003F80000FFFFE0FFFFE000FFFFE0FFFF
E00036317BB035>72 D<001FFFFE001FFFFE00007F0000007E0000007E0000007E0000007E0000
00FC000000FC000000FC000000FC000001F8000001F8000001F8000001F8000003F0000003F000
0003F0000003F0000007E0000007E0000007E0000007E000000FC000000FC000000FC000000FC0
00001F8000001F8000001F8000001F8000003F0000003F0000003F0000003F0000007E0000007E
0000007E0000007E000000FC000000FC000000FC000000FC000001F8000001F8000001F8000003
F80000FFFFE000FFFFE0001F317BB01C>I<000FFF00000007FF80000FFF0000000FFF8000007F
0000000FE00000006F8000001FC00000006F8000001FC00000006F80000037C00000006F800000
67C0000000CF8000006F80000000CF800000CF80000000CF800000CF80000000CF8000018F8000
00018F8000031F000000018F8000031F0000000187C000061F0000000187C000061F0000000307
C0000C3E0000000307C000183E0000000307C000183E0000000307C000303E0000000607C00030
7C0000000607C000607C0000000607C000C07C0000000607C000C07C0000000C03E00180F80000
000C03E00180F80000000C03E00300F80000000C03E00600F80000001803E00601F00000001803
E00C01F00000001803E00C01F00000001803E01801F00000003003E03003E00000003003E03003
E00000003003E06003E00000003001F06003E00000006001F0C007C00000006001F18007C00000
006001F18007C00000006001F30007C0000000C001F3000F80000000C001F6000F80000000C001
FC000F80000000C001FC000F80000001C001F8001F00000001C000F8001F00000003C000F0001F
0000000FE000E0003F000000FFFE00E00FFFFC0000FFFE00C00FFFFC000041317BB040>77
D<07FFFFFFFFF00FFFFFFFFFF00FC00FE003F01E000FC000F01C000FC000E018000FC000E03800
0FC0006030001F8000E030001F8000E060001F8000C060001F8000C060003F0000C0C0003F0000
C0C0003F0000C0C0003F0000C080007E00008000007E00000000007E00000000007E0000000000
FC0000000000FC0000000000FC0000000000FC0000000001F80000000001F80000000001F80000
000001F80000000003F00000000003F00000000003F00000000003F00000000007E00000000007
E00000000007E00000000007E0000000000FC0000000000FC0000000000FC0000000000FC00000
00001F80000000001F80000000001F80000000001F80000000003F00000000003F00000000003F
0000000000FF00000000FFFFFF000000FFFFFF0000002C3173B033>84 D
E /Fp 35 122 df<00003F000000000000FFC00000000003FFE00000000007E0E0000000000FC0
70000000001F8070000000001F8038000000003F8038000000003F0038000000007F0038000000
007F0038000000007F0038000000007F0070000000007F80F0000000007F80E0000000007F81C0
000000007F83C0000000007F8780000000003FCF00007FFF003FDE00007FFF003FFC00007FFF00
3FF8000007E0001FF000000380001FE000000780000FF000000F00000FF800000E00001FF80000
1C00007FFC00003C0000FFFC0000380001E3FE0000700003E3FF0000F00007C1FF8000E0000FC0
FF8001C0003F80FFC003C0003F807FE00780007F803FF00F00007F801FF80E0000FF801FFC1C00
00FF800FFE3C0000FF8007FE780000FF8003FFF00000FFC001FFE000007FC000FFE0000E7FC000
3FF0000E3FE0003FF8001C1FF001FFFE003C0FF80FF1FF81F807FFFFC07FFFF001FFFE001FFFC0
001FF00001FF0038327DB140>38 D<1F003F807FC0FFE0FFE0FFF0FFF0FFF07FF03FF01F700070
007000E000E000E001C001C00380038007000E001C00380010000C197AB117>I<1F003F807FC0
FFE0FFE0FFE0FFE0FFE07FC03F801F000B0B7A8A17>46 D<0000007C0000000000007C00000000
0000FE000000000000FE000000000000FE000000000001FF000000000001FF000000000003FF80
0000000003FF800000000007FFC00000000007FFC00000000007FFC0000000000FFFE000000000
0F7FE0000000001F7FF0000000001E3FF0000000001E3FF0000000003E3FF8000000003C1FF800
0000007C1FFC00000000780FFC00000000780FFC00000000F80FFE00000000F007FE00000001F0
07FF00000001E003FF00000001E003FF00000003E003FF80000003C001FF80000007C001FFC000
00078000FFC00000078000FFC000000FFFFFFFE000000FFFFFFFE000001FFFFFFFF000001E0000
3FF000001E00003FF000003C00003FF800003C00001FF800007C00001FFC00007800000FFC0000
7800000FFC0000F0000007FE0000F0000007FE0001F0000007FF0003F8000003FF00FFFFC001FF
FFFEFFFFC001FFFFFEFFFFC001FFFFFE37317DB03E>65 D<000003FF80018000003FFFF0038000
01FFFFFC0F800007FF007F1F80001FF8000FBF80003FE00003FF8000FF800000FF8001FF000000
7F8003FE0000003F8007FC0000003F8007FC0000001F800FF80000001F801FF80000000F801FF0
0000000F803FF000000007803FF000000007807FF000000007807FE000000007807FE000000000
007FE00000000000FFE00000000000FFE00000000000FFE00000000000FFE00000000000FFE000
00000000FFE00000000000FFE00000000000FFE00000000000FFE000000000007FE00000000000
7FE000000000007FE000000000007FF000000003803FF000000003803FF000000003801FF00000
0003801FF800000007800FF8000000070007FC000000070007FC0000000E0003FE0000001E0001
FF0000003C0000FF8000007800003FE00000F000001FF80003E0000007FF003F80000001FFFFFE
000000003FFFF80000000003FF80000031317BB03C>67 D<FFFFFFFFFFF000FFFFFFFFFFF000FF
FFFFFFFFF00000FFC0003FF00000FFC00007F80000FFC00003F80000FFC00000F80000FFC00000
F80000FFC00000780000FFC00000780000FFC00000380000FFC00000380000FFC00000380000FF
C000001C0000FFC007001C0000FFC007001C0000FFC007001C0000FFC00700000000FFC0070000
0000FFC00F00000000FFC01F00000000FFC03F00000000FFFFFF00000000FFFFFF00000000FFFF
FF00000000FFC03F00000000FFC01F00000000FFC00F00000000FFC00700000000FFC007000000
00FFC00700038000FFC00700038000FFC00700038000FFC00000070000FFC00000070000FFC000
00070000FFC00000070000FFC000000F0000FFC000000F0000FFC000001E0000FFC000001E0000
FFC000003E0000FFC000007E0000FFC00000FE0000FFC00003FE0000FFC0001FFE00FFFFFFFFFF
FC00FFFFFFFFFFFC00FFFFFFFFFFFC0031317EB036>69 D<FFFFFFFFFFF0FFFFFFFFFFF0FFFFFF
FFFFF000FFC0003FF000FFC00007F800FFC00003F800FFC00000F800FFC00000F800FFC0000078
00FFC000007800FFC000003800FFC000003800FFC000003800FFC000001C00FFC000001C00FFC0
07001C00FFC007001C00FFC007000000FFC007000000FFC007000000FFC00F000000FFC01F0000
00FFC03F000000FFFFFF000000FFFFFF000000FFFFFF000000FFC03F000000FFC01F000000FFC0
0F000000FFC007000000FFC007000000FFC007000000FFC007000000FFC007000000FFC0000000
00FFC000000000FFC000000000FFC000000000FFC000000000FFC000000000FFC000000000FFC0
00000000FFC000000000FFC000000000FFC000000000FFC0000000FFFFFFF00000FFFFFFF00000
FFFFFFF000002E317EB034>I<000003FF80018000003FFFF003800001FFFFFC0F800007FF007F
1F80001FF8000FBF80003FE00003FF8000FF800000FF8001FF0000007F8003FE0000003F8007FC
0000003F8007FC0000001F800FF80000001F801FF80000000F801FF00000000F803FF000000007
803FF000000007807FF000000007807FE000000007807FE000000000007FE00000000000FFE000
00000000FFE00000000000FFE00000000000FFE00000000000FFE00000000000FFE00000000000
FFE00000000000FFE00000000000FFE00007FFFFFE7FE00007FFFFFE7FE00007FFFFFE7FE00000
01FF807FF0000001FF803FF0000001FF803FF0000001FF801FF0000001FF801FF8000001FF800F
F8000001FF8007FC000001FF8007FC000001FF8003FE000001FF8001FF000001FF8000FF800001
FF80003FE00003FF80001FF80007FF800007FF803F3F800001FFFFFE1F8000003FFFF807800000
03FFC0018037317BB041>I<FFFFFFC03FFFFFF0FFFFFFC03FFFFFF0FFFFFFC03FFFFFF000FFC0
00003FF00000FFC000003FF00000FFC000003FF00000FFC000003FF00000FFC000003FF00000FF
C000003FF00000FFC000003FF00000FFC000003FF00000FFC000003FF00000FFC000003FF00000
FFC000003FF00000FFC000003FF00000FFC000003FF00000FFC000003FF00000FFC000003FF000
00FFC000003FF00000FFC000003FF00000FFC000003FF00000FFC000003FF00000FFFFFFFFFFF0
0000FFFFFFFFFFF00000FFFFFFFFFFF00000FFC000003FF00000FFC000003FF00000FFC000003F
F00000FFC000003FF00000FFC000003FF00000FFC000003FF00000FFC000003FF00000FFC00000
3FF00000FFC000003FF00000FFC000003FF00000FFC000003FF00000FFC000003FF00000FFC000
003FF00000FFC000003FF00000FFC000003FF00000FFC000003FF00000FFC000003FF00000FFC0
00003FF00000FFC000003FF00000FFC000003FF00000FFC000003FF000FFFFFFC03FFFFFF0FFFF
FFC03FFFFFF0FFFFFFC03FFFFFF03C317EB041>I<FFFFFFC0FFFFFFC0FFFFFFC000FFC00000FF
C00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000
FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC000
00FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC0
0000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FFC00000FF
C00000FFC00000FFC000FFFFFFC0FFFFFFC0FFFFFFC01A317EB01F>I<003FFFFFF0003FFFFFF0
003FFFFFF000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC
0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000F
FC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC000000
0FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000000FFC0000
000FFC0000000FFC000E000FFC003F800FFC007FC00FFC007FC00FFC00FFE00FFC00FFE00FFC00
FFE00FF800FFE01FF8007FC01FF0007FC03FE0003F80FFC0001FFFFF800007FFFE000000FFE000
0024317EB02B>I<FFFFFFC0007FFFC0FFFFFFC0007FFFC0FFFFFFC0007FFFC000FFC0000007F0
0000FFC0000003C00000FFC000000F800000FFC000001F000000FFC000003C000000FFC0000078
000000FFC00001F0000000FFC00003E0000000FFC0000780000000FFC0000F00000000FFC0003E
00000000FFC0007C00000000FFC000F000000000FFC001E000000000FFC007C000000000FFC00F
8000000000FFC01F0000000000FFC03F8000000000FFC07FC000000000FFC1FFE000000000FFC3
FFF000000000FFC7FFF000000000FFCF3FF800000000FFFE1FFC00000000FFFC0FFE00000000FF
F007FE00000000FFE007FF00000000FFC003FF80000000FFC001FFC0000000FFC000FFE0000000
FFC000FFE0000000FFC0007FF0000000FFC0003FF8000000FFC0001FFC000000FFC0000FFC0000
00FFC0000FFE000000FFC00007FF000000FFC00003FF800000FFC00001FFC00000FFC00001FFC0
0000FFC00000FFE00000FFC000007FF00000FFC000007FF800FFFFFFC00FFFFFE0FFFFFFC00FFF
FFE0FFFFFFC00FFFFFE03B317EB041>I<FFFFFFF00000FFFFFFF00000FFFFFFF0000000FFC000
000000FFC000000000FFC000000000FFC000000000FFC000000000FFC000000000FFC000000000
FFC000000000FFC000000000FFC000000000FFC000000000FFC000000000FFC000000000FFC000
000000FFC000000000FFC000000000FFC000000000FFC000000000FFC000000000FFC000000000
FFC000000000FFC000000000FFC000000000FFC000000000FFC000000000FFC000000000FFC000
000000FFC000007000FFC000007000FFC000007000FFC00000F000FFC00000F000FFC00000E000
FFC00000E000FFC00001E000FFC00001E000FFC00003E000FFC00003E000FFC00007E000FFC000
0FE000FFC0001FE000FFC0007FC000FFC003FFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC02C
317EB032>I<FFFF8000000001FFFF80FFFFC000000003FFFF80FFFFE000000007FFFF8000FFE0
00000007FF800000EFF00000000EFF800000EFF00000000EFF800000EFF00000000EFF800000E7
F80000001CFF800000E7F80000001CFF800000E3FC00000038FF800000E3FC00000038FF800000
E1FE00000070FF800000E1FE00000070FF800000E0FF000000E0FF800000E0FF000000E0FF8000
00E07F800001C0FF800000E07F800001C0FF800000E03FC0000380FF800000E03FC0000380FF80
0000E03FC0000380FF800000E01FE0000700FF800000E01FE0000700FF800000E00FF0000E00FF
800000E00FF0000E00FF800000E007F8001C00FF800000E007F8001C00FF800000E003FC003800
FF800000E003FC003800FF800000E001FE007000FF800000E001FE007000FF800000E000FF00E0
00FF800000E000FF00E000FF800000E000FF00E000FF800000E0007F81C000FF800000E0007F81
C000FF800000E0003FC38000FF800000E0003FC38000FF800000E0001FE70000FF800000E0001F
E70000FF800000E0000FFE0000FF800000E0000FFE0000FF800000E00007FC0000FF800000E000
07FC0000FF800000E00007FC0000FF800000E00003F80000FF800001F00003F80000FF8000FFFF
E001F000FFFFFF80FFFFE001F000FFFFFF80FFFFE000E000FFFFFF8049317EB04E>I<FFFFC000
007FFFF0FFFFE000007FFFF0FFFFF000007FFFF000FFF8000000F80000FFFC000000700000FFFE
000000700000EFFF000000700000E7FF800000700000E3FF800000700000E1FFC00000700000E0
FFE00000700000E07FF00000700000E07FF80000700000E03FFC0000700000E01FFE0000700000
E00FFF0000700000E007FF8000700000E003FF8000700000E001FFC000700000E000FFE0007000
00E0007FF000700000E0007FF800700000E0003FFC00700000E0001FFE00700000E0000FFF0070
0000E00007FF80700000E00003FF80700000E00001FFC0700000E00000FFE0700000E000007FF0
700000E000007FF8700000E000003FFC700000E000001FFE700000E000000FFF700000E0000007
FFF00000E0000003FFF00000E0000001FFF00000E0000000FFF00000E00000007FF00000E00000
007FF00000E00000003FF00000E00000001FF00000E00000000FF00000E000000007F00000E000
000003F00001F000000001F000FFFFE0000000F000FFFFE00000007000FFFFE000000070003C31
7EB041>I<00000FFE0000000000FFFFE000000007FFFFFC0000001FFC07FF0000003FE000FF80
0000FF80003FE00001FF00001FF00003FE00000FF80007FC000007FC0007FC000007FC000FF800
0003FE001FF8000003FF001FF0000001FF003FF0000001FF803FF0000001FF803FF0000001FF80
7FE0000000FFC07FE0000000FFC07FE0000000FFC0FFE0000000FFE0FFE0000000FFE0FFE00000
00FFE0FFE0000000FFE0FFE0000000FFE0FFE0000000FFE0FFE0000000FFE0FFE0000000FFE0FF
E0000000FFE0FFE0000000FFE0FFE0000000FFE07FE0000000FFC07FE0000000FFC07FF0000001
FFC07FF0000001FFC03FF0000001FF803FF0000001FF801FF8000003FF001FF8000003FF000FFC
000007FE000FFC000007FE0007FE00000FFC0003FF00001FF80001FF80003FF00000FFC0007FE0
00003FE000FF8000001FFC07FF00000007FFFFFC00000000FFFFE0000000000FFE00000033317B
B03E>I<FFFFFFFFE000FFFFFFFFFE00FFFFFFFFFF8000FFC001FFE000FFC0003FF000FFC0001F
F800FFC0000FFC00FFC0000FFC00FFC00007FE00FFC00007FE00FFC00007FF00FFC00007FF00FF
C00007FF00FFC00007FF00FFC00007FF00FFC00007FF00FFC00007FF00FFC00007FE00FFC00007
FE00FFC0000FFC00FFC0000FFC00FFC0001FF800FFC0003FF000FFC001FFE000FFFFFFFF8000FF
FFFFFE0000FFFFFFE00000FFC000000000FFC000000000FFC000000000FFC000000000FFC00000
0000FFC000000000FFC000000000FFC000000000FFC000000000FFC000000000FFC000000000FF
C000000000FFC000000000FFC000000000FFC000000000FFC000000000FFC000000000FFC00000
0000FFC0000000FFFFFFC00000FFFFFFC00000FFFFFFC0000030317EB038>I<FFFFFFFFC00000
00FFFFFFFFFC000000FFFFFFFFFF80000000FFC001FFE0000000FFC0003FF0000000FFC0000FFC
000000FFC00007FC000000FFC00007FE000000FFC00003FF000000FFC00003FF000000FFC00003
FF800000FFC00003FF800000FFC00003FF800000FFC00003FF800000FFC00003FF800000FFC000
03FF800000FFC00003FF000000FFC00003FF000000FFC00007FE000000FFC00007FC000000FFC0
000FFC000000FFC0003FF0000000FFC001FFE0000000FFFFFFFF80000000FFFFFFFC00000000FF
FFFFFE00000000FFC003FF00000000FFC000FFC0000000FFC0007FE0000000FFC0003FE0000000
FFC0003FF0000000FFC0001FF0000000FFC0001FF8000000FFC0001FF8000000FFC0001FF80000
00FFC0001FF8000000FFC0001FF8000000FFC0001FFC000000FFC0001FFC000000FFC0001FFC00
0000FFC0001FFC004000FFC0001FFC00E000FFC0001FFE00E000FFC0000FFE00E000FFC0000FFF
01C000FFC00007FF83C0FFFFFFC003FFFF80FFFFFFC000FFFF00FFFFFFC0000FFC003B317EB03E
>82 D<001FF0018000FFFF038003FFFFC78007F00FFF800F8001FF801F00007F803F00001F803E
00000F807E00000F807E00000780FE00000780FE00000780FE00000380FF00000380FF00000380
FF80000000FFE00000007FFC0000007FFFE000007FFFFE00003FFFFFC0001FFFFFF0001FFFFFF8
000FFFFFFC0003FFFFFE0001FFFFFF00007FFFFF80001FFFFF800000FFFFC0000007FFC0000000
FFE00000003FE00000003FE00000001FE06000001FE0E000000FE0E000000FE0E000000FE0E000
000FC0F000000FC0F000000FC0F800001F80FC00001F80FF00003F00FFC0007E00FFFC01FC00F1
FFFFF800E03FFFE000C007FF000023317BB02E>I<3FFFFFFFFFFF003FFFFFFFFFFF003FFFFFFF
FFFF003FE00FFC01FF007F000FFC003F807E000FFC001F807C000FFC000F8078000FFC00078078
000FFC00078070000FFC00038070000FFC00038070000FFC00038070000FFC000380E0000FFC00
01C0E0000FFC0001C0E0000FFC0001C0E0000FFC0001C000000FFC00000000000FFC0000000000
0FFC00000000000FFC00000000000FFC00000000000FFC00000000000FFC00000000000FFC0000
0000000FFC00000000000FFC00000000000FFC00000000000FFC00000000000FFC00000000000F
FC00000000000FFC00000000000FFC00000000000FFC00000000000FFC00000000000FFC000000
00000FFC00000000000FFC00000000000FFC00000000000FFC00000000000FFC00000000000FFC
00000000000FFC00000000000FFC00000000000FFC000000007FFFFFFF8000007FFFFFFF800000
7FFFFFFF800032307DAF39>I<FFFFFFC003FFFFC0FFFFFFC003FFFFC0FFFFFFC003FFFFC000FF
C0000007E00000FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC0000003C00000
FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC0000003C000
00FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC0000003C0
0000FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC0000003
C00000FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC00000
03C00000FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC0000003C00000FFC000
0003C00000FFC0000003C00000FFC0000003C00000FFC0000003C000007FC00000038000007FC0
0000078000007FE00000078000003FE000000F0000003FE000000F0000001FF000001E0000000F
F800003E00000007FC00007C00000003FE0001F800000000FFC00FE0000000003FFFFF80000000
000FFFFE000000000000FFF00000003A317EB03F>I<FFFFFE07FFFFF801FFFFFFFFFE07FFFFF8
01FFFFFFFFFE07FFFFF801FFFF03FF00000FFC000007E003FF80000FFC000003C001FF80000FFE
0000038001FF800007FE0000038001FFC00007FE0000078000FFC00007FF0000070000FFE00003
FF00000700007FE00003FF80000E00007FE00003FF80000E00007FF00003FF80001E00003FF000
07FFC0001C00003FF80007FFC0001C00001FF80007FFE0003800001FF8000E7FE0003800001FFC
000E7FE0007800000FFC001E7FF0007000000FFC001C3FF00070000007FE001C3FF000E0000007
FE00381FF800E0000007FF00381FF801E0000003FF00781FFC01C0000003FF00700FFC01C00000
03FF80700FFC03C0000001FF80F00FFE0380000001FFC0E007FE0380000000FFC0E007FF070000
0000FFC1C003FF0700000000FFE1C003FF0F000000007FE3C003FF8E000000007FE38001FF8E00
0000003FF38001FF9C000000003FF70000FFDC000000003FFF0000FFFC000000001FFF0000FFF8
000000001FFE00007FF8000000000FFE00007FF0000000000FFC00003FF0000000000FFC00003F
F00000000007FC00003FE00000000007F800001FE00000000007F800001FE00000000003F80000
1FC00000000003F000000FC00000000001F000000F800000000001E0000007800000000000E000
000700000050317EB055>87 D<007FF8000003FFFF000007FFFFC0000FE01FE0001FF007F0001F
F003F8001FF003FC001FF001FE000FE001FE0007C001FE00010001FE00000001FE00000001FE00
0001FFFE00003FFFFE0001FFF1FE0007FE01FE000FF001FE001FC001FE003F8001FE007F8001FE
00FF0001FE00FF0001FE00FF0001FE00FF0001FE00FF0003FE007F8003FE007FC00EFE003FF03C
FF000FFFF87FF807FFF03FF800FF800FF825207E9F28>97 D<01F8000000FFF8000000FFF80000
00FFF80000000FF800000007F800000007F800000007F800000007F800000007F800000007F800
000007F800000007F800000007F800000007F800000007F800000007F800000007F800000007F8
0FF00007F87FFE0007F9FFFF8007FFE03FC007FF000FE007FE0007F007F80003F807F80003FC07
F80003FC07F80001FE07F80001FE07F80001FE07F80001FF07F80001FF07F80001FF07F80001FF
07F80001FF07F80001FF07F80001FF07F80001FF07F80001FE07F80001FE07F80001FE07F80003
FC07F80003FC07FC0007F807FE0007F007F7001FE007E3E07FC007C1FFFF0007807FFE0007001F
E00028327EB12E>I<0007FF00007FFFE000FFFFF003FC03F807F007FC0FE007FC1FE007FC3FC0
07FC3FC003F87FC001F07F8000407F800000FF800000FF800000FF800000FF800000FF800000FF
800000FF800000FF8000007F8000007FC000007FC000003FC0000E3FE0000E1FE0001C0FF0001C
07F8007803FF01F000FFFFE0007FFF800007FC001F207D9F25>I<0007FC0000003FFF800000FF
FFE00003FC07F00007F801F8000FE000FC001FE0007E003FC0007E003FC0003F007FC0003F007F
80003F007F80003F80FF80003F80FF80003F80FFFFFFFF80FFFFFFFF80FFFFFFFF80FF80000000
FF80000000FF800000007F800000007F800000003FC00000003FC00003801FC00003801FE00007
800FF0000F0007F8001E0003FE00FC0000FFFFF800003FFFE0000003FF000021207E9F26>101
D<0000FF000007FFC0001FFFE0003FC7F0007F0FF800FE0FF801FE0FF801FC0FF803FC07F003FC
03E003FC01C003FC000003FC000003FC000003FC000003FC000003FC000003FC0000FFFFF800FF
FFF800FFFFF80003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC0000
03FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC00
0003FC000003FC000003FC000003FC000003FC000003FC000003FC000003FC00007FFFF0007FFF
F0007FFFF0001D327EB119>I<001FF007E000FFFE3FF001FFFF7FF807F83FF1F80FE00FE1F80F
E00FE0F01FC007F0601FC007F0003FC007F8003FC007F8003FC007F8003FC007F8003FC007F800
1FC007F0001FC007F0000FE00FE0000FE00FE00007F83FC00007FFFF000006FFFE00000E1FF000
000E000000001E000000001E000000001F000000001F800000001FFFFFC0000FFFFFF8000FFFFF
FE0007FFFFFF0003FFFFFF8007FFFFFFC01FFFFFFFE03F00007FE07E00000FF0FC000007F0FC00
0003F0FC000003F0FC000003F0FC000003F07E000007E03F00000FC01FC0003F800FF801FF0007
FFFFFE0000FFFFF000001FFF8000252F7E9F29>I<01F800000000FFF800000000FFF800000000
FFF8000000000FF80000000007F80000000007F80000000007F80000000007F80000000007F800
00000007F80000000007F80000000007F80000000007F80000000007F80000000007F800000000
07F80000000007F80000000007F807F8000007F83FFF000007F87FFF800007F8F03FC00007F9C0
1FE00007FB000FE00007FE000FF00007FE000FF00007FC000FF00007FC000FF00007F8000FF000
07F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F800
0FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF000
07F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF000FFFFC1FFFF80FFFFC1
FFFF80FFFFC1FFFF8029327DB12E>I<03C0000FF0000FF0001FF8001FF8001FFC001FF8001FF8
000FF0000FF00003C00000000000000000000000000000000000000000000000000001F800FFF8
00FFF800FFF8000FF80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F8
0007F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F80007F8
0007F800FFFF80FFFF80FFFF8011337DB217>I<01F8000000FFF8000000FFF8000000FFF80000
000FF800000007F800000007F800000007F800000007F800000007F800000007F800000007F800
000007F800000007F800000007F800000007F800000007F800000007F800000007F8007FFC07F8
007FFC07F8007FFC07F8001FC007F8001F0007F8003E0007F800780007F801F00007F803E00007
F807800007F81F000007F83E000007F87C000007F9FE000007FBFF000007FFFF800007FF7FC000
07FE3FE00007F81FE00007F01FF00007F00FF80007F007FC0007F003FE0007F001FF0007F000FF
0007F000FF8007F0007FC007F0003FE007F0003FF0FFFF80FFFFFFFF80FFFFFFFF80FFFF28327E
B12C>107 D<03F007F80000FFF03FFF0000FFF07FFF8000FFF0F03FC0000FF1C01FE00007F300
0FE00007F6000FF00007FE000FF00007FC000FF00007FC000FF00007F8000FF00007F8000FF000
07F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F800
0FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF00007F8000FF000
07F8000FF00007F8000FF00007F8000FF00007F8000FF000FFFFC1FFFF80FFFFC1FFFF80FFFFC1
FFFF8029207D9F2E>110 D<0007FE0000003FFFC00000FFFFF00003FC03FC0007F000FE000FE0
007F001FC0003F803FC0003FC03FC0003FC07F80001FE07F80001FE07F80001FE0FF80001FF0FF
80001FF0FF80001FF0FF80001FF0FF80001FF0FF80001FF0FF80001FF0FF80001FF07F80001FE0
7F80001FE07F80001FE03FC0003FC03FC0003FC01FE0007F800FE0007F0007F801FE0003FE07FC
0001FFFFF800003FFFC0000007FE000024207E9F29>I<03F03F00FFF07FC0FFF1FFE0FFF3C7F0
0FF38FF807F70FF807F60FF807FE0FF807FC07F007FC03E007FC008007F8000007F8000007F800
0007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8
000007F8000007F8000007F8000007F8000007F80000FFFFE000FFFFE000FFFFE0001D207E9F22
>114 D<FFFF801FFEFFFF801FFEFFFF801FFE07F80003E007F80001C007FC0003C003FC000380
03FE00078001FE00070001FF000F0000FF000E0000FF801E00007F801C00007FC03C00003FC038
00003FE03800001FE07000001FE07000000FF0E000000FF0E000000FF9E0000007F9C0000007FF
C0000003FF80000003FF80000001FF00000001FF00000000FE00000000FE000000007C00000000
7C000000003800000000380000000070000000007000000000F000003C00E000007E01E00000FF
01C00000FF03800000FF07800000FF0F0000007A3E0000007FFC0000003FF80000000FC0000000
272E7E9F2C>121 D E /Fq 90 128 df<00008000000001C000000001C000000003E000000003
E000000005F000000004F000000008F80000000878000000107C000000103C000000201E000000
601F000000400F000000C00F80000080078000018007C000010003C000020003E000020001E000
040001F000040000F000080000F80008000078001000007C001000003C002000003E002000001E
007FFFFFFF007FFFFFFF00FFFFFFFF80211F7E9E26>1 D<001F83E000F06E3001C078780380F8
780300F03007007000070070000700700007007000070070000700700007007000FFFFFF800700
700007007000070070000700700007007000070070000700700007007000070070000700700007
007000070070000700700007007000070070000700700007007000070070007FE3FF001D20809F
1B>11 D<003F0000E0C001C0C00381E00701E00701E00700000700000700000700000700000700
00FFFFE00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700
E00700E00700E00700E00700E00700E00700E07FC3FE1720809F19>I<003FE000E0E001C1E003
81E00700E00700E00700E00700E00700E00700E00700E00700E0FFFFE00700E00700E00700E007
00E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E007
00E00700E07FE7FE1720809F19>I<001F81F80000F04F040001C07C06000380F80F000300F00F
000700F00F00070070000007007000000700700000070070000007007000000700700000FFFFFF
FF0007007007000700700700070070070007007007000700700700070070070007007007000700
700700070070070007007007000700700700070070070007007007000700700700070070070007
00700700070070070007007007007FE3FE3FF02420809F26>I<FFFF10017D9917>22
D<0E000F0001C000E000E000E001C07F8080000B097B7F14>24 D<70F8F8F8F8F8F87070707070
70707070702020202020000000000070F8F8F87005207C9F0D>33 D<7038F87CFC7EFC7E743A04
02040204020804080410081008201040200F0E7E9F17>I<0F0000301880007030600060703001
E0602C07C06013F980E0100380E0100700E0100600E0100E00E0101C00E0101800601038006020
7000702060003040E0001881C0000F018000000380E00003031000070608000E0604000C0C0400
1C0C0400381C0200301C0200701C0200E01C0200C01C0201C01C0203801C0203000C0407000C04
0E0006040C0006081C000310180000E01F257DA126>37 D<70F8FCFC7404040408081010204006
0E7C9F0D>39 D<0020004000800100020006000C000C0018001800300030003000700060006000
6000E000E000E000E000E000E000E000E000E000E000E000E00060006000600070003000300030
00180018000C000C000600020001000080004000200B2E7DA112>I<800040002000100008000C
00060006000300030001800180018001C000C000C000C000E000E000E000E000E000E000E000E0
00E000E000E000E000C000C000C001C001800180018003000300060006000C0008001000200040
0080000B2E7DA112>I<0006000000060000000600000006000000060000000600000006000000
06000000060000000600000006000000060000000600000006000000060000FFFFFFF0FFFFFFF0
000600000006000000060000000600000006000000060000000600000006000000060000000600
0000060000000600000006000000060000000600001C207D9A23>43 D<70F8FCFC740404040808
10102040060E7C840D>I<FFC0FFC00A027F8A0F>I<70F8F8F87005057C840D>I<000300030007
00060006000E000C000C001C0018001800380030003000700060006000E000C000C001C0018001
8001800380030003000700060006000E000C000C001C0018001800380030003000700060006000
E000C000C000102D7DA117>I<03F0000E1C001C0E00380700380700700380700380700380F003
C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C07003
807003807003803807003807001C0E000E1C0003F000121D7E9C17>I<018003800F80F3800380
038003800380038003800380038003800380038003800380038003800380038003800380038003
800380038007C0FFFE0F1D7C9C17>I<07F000181C00200F00400700400780F007C0F803C0F803
C0F803C02007C00007C0000780000780000F00000E00001C0000380000700000600000C0000180
000300000600400C00401800401000803FFF807FFF80FFFF80121D7E9C17>I<07F000181C0020
0E00780F00780F80780780380780000F80000F00000F00000E00001C0000380003F000001C0000
0E00000F000007800007800007C02007C0F807C0F807C0F80780F00780400F00200E00181C0007
F000121D7E9C17>I<000600000600000E00001E00001E00002E00006E00004E00008E00010E00
010E00020E00040E000C0E00080E00100E00300E00200E00400E00C00E00FFFFF0000E00000E00
000E00000E00000E00000E00000E0000FFE0141D7F9C17>I<1803001FFE001FFC001FF8001FE0
0010000010000010000010000010000010000011F000160C001806001007000003800003800003
C00003C00003C07003C0F003C0F003C0E00380400780400700200E00181C0007E000121D7E9C17
>I<007C000182000701000E03801C0780180780380300780000700000700000F00000F1F000F2
1C00F40600F80700F80380F00380F003C0F003C0F003C07003C07003C07003C038038038038018
07000C0600061C0003F000121D7E9C17>I<4000007FFFC07FFF807FFF80400100800200800400
80040000080000100000100000200000600000400000C00000C00001C000018000018000038000
038000038000038000078000078000078000078000078000078000030000121E7D9D17>I<03F0
000C0C001006002003002001806001806001807001807803003E03003F06001FCC000FF00003F8
0007FC000C7F00103F00200F806003C0C001C0C001C0C000C0C000C0C000806000806001003002
000C0C0003F000121D7E9C17>I<03F0000E18001C0E00380600700700700380F00380F00380F0
0380F003C0F003C0F003C07003C07007C03807C0180BC00E13C003E3C00003C000038000038000
0780300700780700780E00700C002018001070000FC000121D7E9C17>I<70F8F8F87000000000
00000000000070F8F8F87005147C930D>I<70F8F8F8700000000000000000000070F0F8F87808
0808101010202040051D7C930D>I<7FFFFFE0FFFFFFF000000000000000000000000000000000
00000000000000000000000000000000FFFFFFF07FFFFFE01C0C7D9023>61
D<0FC0307040384038E03CF03CF03C603C0038007000E000C00180018001000300020002000200
0200020002000000000000000000000007000F800F800F8007000E207D9F15>63
D<000100000003800000038000000380000007C0000007C0000007C0000009E0000009E0000009
E0000010F0000010F0000010F000002078000020780000607C0000403C0000403C0000803E0000
801E0000FFFE0001000F0001000F0001000F00020007800200078002000780040003C0060003C0
1F0007E0FFC03FFE1F1F7F9E22>65 D<FFFFE0000F80380007801E0007801F0007800F0007800F
8007800F8007800F8007800F8007800F8007800F0007801F0007801E0007803C0007FFF0000780
3C0007801E0007800F0007800F8007800780078007C0078007C0078007C0078007C0078007C007
80078007800F8007800F0007801F000F803C00FFFFF0001A1F7E9E20>I<001FC040007030C001
C00DC0038003C0070001C00E0001C01E0000C03C0000C03C0000407C0000407800004078000000
F8000000F8000000F8000000F8000000F8000000F8000000F800000078000000780000007C0000
403C0000403C0000401E0000800E000080070001000380020001C0040000701800001FE0001A1F
7D9E21>I<FFFFE0000F803C0007801E000780070007800380078003C0078001E0078001E00780
01F0078000F0078000F0078000F8078000F8078000F8078000F8078000F8078000F8078000F807
8000F8078000F8078000F0078000F0078000F0078001E0078001E0078003C00780038007800700
07800E000F803C00FFFFE0001D1F7E9E23>I<FFFFFF000F800F00078003000780030007800100
07800180078000800780008007800080078080800780800007808000078080000781800007FF80
000781800007808000078080000780800007808000078000200780002007800020078000400780
004007800040078000C0078000C0078001800F800F80FFFFFF801B1F7E9E1F>I<FFFFFF000F80
0F0007800300078003000780010007800180078000800780008007800080078000800780800007
80800007808000078080000781800007FF80000781800007808000078080000780800007808000
07800000078000000780000007800000078000000780000007800000078000000FC00000FFFE00
00191F7E9E1E>I<000FE0200078186001C006E0038001E0070000E00E0000E01E0000603C0000
603C0000207C0000207800002078000000F8000000F8000000F8000000F8000000F8000000F800
0000F8007FFC780003E0780001E07C0001E03C0001E03C0001E01E0001E00E0001E0070001E003
8003E001C002E000781C60000FE0201E1F7D9E24>I<FFF8FFF80F800F8007800F0007800F0007
800F0007800F0007800F0007800F0007800F0007800F0007800F0007800F0007800F0007800F00
07FFFF0007800F0007800F0007800F0007800F0007800F0007800F0007800F0007800F0007800F
0007800F0007800F0007800F0007800F0007800F000F800F80FFF8FFF81D1F7E9E22>I<FFFC0F
C00780078007800780078007800780078007800780078007800780078007800780078007800780
078007800780078007800780078007800FC0FFFC0E1F7F9E10>I<0FFFC0007C00003C00003C00
003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00
003C00003C00003C00003C00003C00003C00203C00F83C00F83C00F83C00F0780040700030E000
0F8000121F7E9E17>I<FFFC0FFC0FC003E0078001800780010007800200078004000780080007
801000078020000780400007808000078100000783000007878000078F80000793C0000791E000
07A1E00007C0F0000780F0000780780007803C0007803C0007801E0007801E0007800F00078007
8007800780078007C00FC007E0FFFC3FFC1E1F7E9E23>I<FFFE000FC000078000078000078000
078000078000078000078000078000078000078000078000078000078000078000078000078000
07800007800007800207800207800207800207800607800407800407800C07801C0F807CFFFFFC
171F7E9E1C>I<FF80001FF80F80001F800780001F0005C0002F0005C0002F0005C0002F0004E0
004F0004E0004F000470008F000470008F000470008F000438010F000438010F000438010F0004
1C020F00041C020F00041C020F00040E040F00040E040F00040E040F000407080F000407080F00
0407080F000403900F000403900F000401E00F000401E00F000401E00F000E00C00F001F00C01F
80FFE0C1FFF8251F7E9E2A>I<FF803FF807C007C007C0038005E0010005E0010004F001000478
010004780100043C0100043C0100041E0100040F0100040F010004078100040781000403C10004
01E1000401E1000400F1000400F1000400790004003D0004003D0004001F0004001F0004000F00
04000700040007000E0003001F000300FFE001001D1F7E9E22>I<003FC00000E0700003C03C00
07801E000F000F001E0007801E0007803C0003C03C0003C07C0003E0780001E0F80001F0F80001
F0F80001F0F80001F0F80001F0F80001F0F80001F0F80001F0F80001F0780001E07C0003E07C00
03E03C0003C01E0007801E0007800F000F0007801E0003C03C0000F0F000003FC0001C1F7D9E23
>I<FFFFE0000F80780007801C0007801E0007800F0007800F8007800F8007800F8007800F8007
800F8007800F8007800F0007801E0007801C000780780007FFE000078000000780000007800000
078000000780000007800000078000000780000007800000078000000780000007800000078000
000FC00000FFFC0000191F7E9E1F>I<FFFFC0000F80F00007803C0007801E0007800F0007800F
0007800F8007800F8007800F8007800F8007800F0007800F0007801E0007803C000780F00007FF
C0000780C00007807000078078000780380007803C0007803C0007803C0007803E0007803E0007
803E0007803E0207803F0207801F020FC00F8CFFFC03F01F1F7E9E22>82
D<07E0801C1980300780300380600180E00180E00080E00080E00080F00000F000007800007F00
003FF0001FFC000FFE0003FF00001F800007800003C00003C00001C08001C08001C08001C0C001
80C00180E00300F00600CC0C0083F800121F7D9E19>I<7FFFFFE0780F01E0600F0060400F0020
400F0020C00F0030800F0010800F0010800F0010800F0010000F0000000F0000000F0000000F00
00000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F
0000000F0000000F0000000F0000000F0000000F0000001F800007FFFE001C1F7E9E21>I<FFFC
3FF80FC007C0078003800780010007800100078001000780010007800100078001000780010007
800100078001000780010007800100078001000780010007800100078001000780010007800100
078001000780010007800100078001000380020003C0020001C0040000E0040000600800003830
00000FC0001D1F7E9E22>I<FFF003FE1F8000F80F0000600F800060078000400780004003C000
8003C0008003E0008001E0010001E0010000F0020000F0020000F002000078040000780400007C
0C00003C0800003C0800001E1000001E1000001E1000000F2000000F2000000FE0000007C00000
07C000000380000003800000038000000100001F1F7F9E22>I<FFF07FF81FF01F800FC007C00F
00078003800F00078001000F0007C00100078007C00200078007C0020007800FE0020003C009E0
040003C009E0040003C009F0040001E010F0080001E010F0080001E010F0080000F02078100000
F02078100000F0207810000078403C20000078403C20000078403C2000003C801E4000003C801E
4000003C801E4000003F000FC000001F000F8000001F000F8000001E00078000000E0007000000
0E00070000000C000300000004000200002C1F7F9E2F>I<7FF83FF80FE00FC007C0070003C002
0001E0040001F00C0000F0080000781000007C1000003C2000003E4000001E4000000F8000000F
8000000780000003C0000007E0000005E0000009F0000018F8000010780000207C0000603C0000
401E0000801F0001800F0001000780020007C0070003C01F8007E0FFE01FFE1F1F7F9E22>I<FF
F003FF1F8000F80F8000600780004007C0004003E0008001E0008001F0010000F0030000F80200
007C0400003C0400003E0800001E0800001F1000000FB0000007A0000007C0000003C0000003C0
000003C0000003C0000003C0000003C0000003C0000003C0000003C0000003C0000003C0000007
C000007FFE00201F7F9E22>I<7FFFF87C00F87000F06001E04001E0C003C0C003C0800780800F
80800F00001E00001E00003C00003C0000780000F80000F00001E00001E00003C00403C0040780
040F80040F000C1E000C1E00083C00183C0018780038F801F8FFFFF8161F7D9E1C>I<FEFEC0C0
C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0
FEFE072D7CA10D>I<080410082010201040204020804080408040B85CFC7EFC7E7C3E381C0F0E
7B9F17>I<FEFE0606060606060606060606060606060606060606060606060606060606060606
060606060606060606FEFE072D7FA10D>I<081020204040808080B8FCFC7C38060E7D9F0D>96
D<1FE000303000781800781C00300E00000E00000E00000E0000FE000F8E001E0E00380E00780E
00F00E10F00E10F00E10F01E10781E103867200F83C014147E9317>I<0E0000FE00000E00000E
00000E00000E00000E00000E00000E00000E00000E00000E00000E3E000EC3800F01C00F00E00E
00E00E00700E00700E00780E00780E00780E00780E00780E00780E00700E00700E00E00F00E00D
01C00CC300083E0015207F9F19>I<03F80E0C1C1E381E380C70007000F000F000F000F000F000
F00070007000380138011C020E0C03F010147E9314>I<000380003F8000038000038000038000
038000038000038000038000038000038000038003E380061B801C078038038038038070038070
0380F00380F00380F00380F00380F00380F003807003807003803803803807801C07800E1B8003
E3F815207E9F19>I<03F0000E1C001C0E00380700380700700380700380F00380FFFF80F00000
F00000F00000F000007000007000003800801800800C010007060001F80011147F9314>I<007C
00C6018F038F07060700070007000700070007000700FFF0070007000700070007000700070007
0007000700070007000700070007000700070007007FF01020809F0E>I<03E1E00E3A301C1C30
380E00780F00780F00780F00780F00780F00380E001C1C001E380033E000200000200000300000
3000003FFE001FFF800FFFC03001E0600070C00030C00030C00030C000306000603000C01C0380
03FC00141E7F9317>I<0E0000FE00000E00000E00000E00000E00000E00000E00000E00000E00
000E00000E00000E3E000E43000E81800F01C00F01C00E01C00E01C00E01C00E01C00E01C00E01
C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C0FFE7FC16207F9F19>I<1C001E00
3E001E001C000000000000000000000000000E007E000E000E000E000E000E000E000E000E000E
000E000E000E000E000E000E000E000E00FFC00A1F809E0C>I<00E001F001F001F000E0000000
000000000000000000007007F000F0007000700070007000700070007000700070007000700070
0070007000700070007000700070007000706070F060F0C061803F000C28829E0E>I<0E0000FE
00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E0FF00E07C00E
03000E02000E04000E08000E10000E30000E70000EF8000F38000E1C000E1E000E0E000E07000E
07800E03800E03C00E03E0FFCFF815207F9F18>I<0E00FE000E000E000E000E000E000E000E00
0E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E
000E000E00FFE00B20809F0C>I<0E1F01F000FE618618000E80C80C000F00F00E000F00F00E00
0E00E00E000E00E00E000E00E00E000E00E00E000E00E00E000E00E00E000E00E00E000E00E00E
000E00E00E000E00E00E000E00E00E000E00E00E000E00E00E000E00E00E00FFE7FE7FE023147F
9326>I<0E3E00FE43000E81800F01C00F01C00E01C00E01C00E01C00E01C00E01C00E01C00E01
C00E01C00E01C00E01C00E01C00E01C00E01C00E01C0FFE7FC16147F9319>I<01F800070E001C
03803801C03801C07000E07000E0F000F0F000F0F000F0F000F0F000F0F000F07000E07000E038
01C03801C01C0380070E0001F80014147F9317>I<0E3E00FEC3800F01C00F00E00E00E00E00F0
0E00700E00780E00780E00780E00780E00780E00780E00700E00F00E00E00F01E00F01C00EC300
0E3E000E00000E00000E00000E00000E00000E00000E00000E0000FFE000151D7F9319>I<03E0
800619801C05803C0780380380780380700380F00380F00380F00380F00380F00380F003807003
807803803803803807801C0B800E138003E3800003800003800003800003800003800003800003
80000380003FF8151D7E9318>I<0E78FE8C0F1E0F1E0F0C0E000E000E000E000E000E000E000E
000E000E000E000E000E000E00FFE00F147F9312>I<1F9030704030C010C010C010E00078007F
803FE00FF00070803880188018C018C018E030D0608F800D147E9312>I<020002000200060006
000E000E003E00FFF80E000E000E000E000E000E000E000E000E000E000E000E080E080E080E08
0E080610031001E00D1C7F9B12>I<0E01C0FE1FC00E01C00E01C00E01C00E01C00E01C00E01C0
0E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E03C00603C0030DC001F1FC16147F
9319>I<FF83F81E01E01C00C00E00800E00800E008007010007010003820003820003820001C4
0001C40001EC0000E80000E80000700000700000700000200015147F9318>I<FF9FE1FC3C0780
701C0300601C0380200E0380400E0380400E03C0400707C0800704C0800704E080038861000388
610003C8730001D0320001D03A0000F03C0000E01C0000E01C0000601800004008001E147F9321
>I<7FC3FC0F01E00701C007018003810001C20000E40000EC00007800003800003C00007C0000
4E000087000107000303800201C00601E01E01E0FF07FE1714809318>I<FF83F81E01E01C00C0
0E00800E00800E008007010007010003820003820003820001C40001C40001EC0000E80000E800
007000007000007000002000002000004000004000004000F08000F08000F100006200003C0000
151D7F9318>I<3FFF380E200E201C40384078407000E001E001C00380078007010E011E011C03
38027006700EFFFE10147F9314>I<FFFFFC1601808C17>I<FFFFFFFFFFF82D01808C2E>I<3030
7878F87C787830300E057C9E17>127 D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 1852 -100 a Fq(1)455 811 y Fp(INSTR)n(UCTOR'S)27 b(MANUAL)925
998 y(for)88 1185 y(CALCULUS)g(PR)n(OJECTS)g(WITH)h Fo(MA)-5
b(THEMA)g(TICA)931 1372 y Fp(b)n(y)366 1559 y(Jac)n(k)26 b(K.)h(Cohen)g(&)g
(F)-7 b(rank)27 b(G.)h(Hagin)p eop
%%Page: 2 2
2 1 bop 75 -100 a Fq(2)873 49 y Fn(Con)o(ten)o(ts)75 172 y(Con)o(ten)o(ts)
1569 b(2)75 295 y(In)o(tro)q(duction)1487 b(5)75 418 y(T)l(utorial)19
b(Exercises)1362 b(8)75 541 y(Graphical)19 b(Equation)g(Solving)1117
b(10)75 663 y(The)18 b(Asteroid)f(Problem)1233 b(12)75 786
y(Deriv)m(ativ)o(es,)17 b(Slop)q(es)h(and)g(T)l(angen)o(t)g(Lines)876
b(16)75 909 y(Limits)18 b(&)f(Con)o(tin)o(uit)o(y)1284 b(20)75
1032 y(Limits)18 b(With)h(Mathematica)g(\(optional\))909 b(25)75
1155 y(The)18 b(Binomial)h(Theorem)e(and)h(Calculus)h(\(optional\))661
b(27)75 1278 y(Deriv)m(ativ)o(es)17 b(in)h(Mathematica)1115
b(30)75 1400 y(Bisection)19 b(Metho)q(d)1342 b(32)75 1523 y(Newton's)17
b(Metho)q(d)1338 b(35)75 1646 y(Snell's)18 b(La)o(w)f(and)h(Other)g
(Applications)937 b(39)75 1769 y(Chaos)1609 b(42)75 1892 y(FindRo)q(ot)19
b(&)e(F)l(riends)g(\(optional\))1046 b(46)75 2014 y(Area)1637
b(48)75 2137 y(Numerical)18 b(In)o(tegration)g(I)1202 b(51)75
2260 y(Numerical)18 b(In)o(tegration)g(I)q(I)1181 b(53)75 2383
y(The)18 b(T)l(ank)f(Problem)1315 b(55)75 2506 y(Arclength)18
b(\(optional\))1280 b(57)75 2629 y(W)l(ork)16 b(Along)i(an)g(Arc)1296
b(60)p eop
%%Page: 3 3
3 2 bop 1852 -100 a Fq(3)75 49 y Fn(Curv)o(e)16 b(Fitting)j(for)e(Discrete)h
(Data)g(Sets)g(\(optional\))667 b(62)75 172 y(Linearization)21
b(of)c(Nonlinear)i(Data)f(\(optional\))778 b(64)75 295 y(Simple)18
b(Harmonic)g(Motion)1169 b(68)75 418 y(F)l(ourier)17 b(F)l(requency)f(Decomp)
q(osition)976 b(72)75 541 y(The)18 b(Piston)g(Problem)1282
b(74)75 663 y(In)o(tegration)18 b(in)g(Mathematica)1116 b(75)75
786 y(T)l(ec)o(hniques)17 b(of)h(In)o(tegration)g(\(optional\))924
b(78)75 909 y(The)18 b(Probabilit)o(y)g(In)o(tegral)g(\(optional\))947
b(82)75 1032 y(Appro)o(ximation)17 b(b)o(y)g(T)l(a)o(ylor)g(P)o(olynomials)
874 b(85)75 1155 y(T)l(a)o(ylor)17 b(Series|Adv)m(anced)g(Usage)1022
b(90)75 1278 y(F)l(unctions)18 b(De\014ned)f(b)o(y)g(In)o(tegrals)1045
b(92)75 1400 y(Plotting)19 b(in)f(P)o(olar)f(Co)q(o)q(dinates)1090
b(94)75 1523 y(Analytical)20 b(Geometry)1267 b(97)75 1646 y(Classifying)18
b(Conics)g(\(optional\))1066 b(100)75 1769 y(P)o(arametric)17
b(Curv)o(es)f(in)i(2D)1147 b(105)75 1892 y(Twisting)19 b(Space)f(Curv)o(es)
1196 b(110)75 2014 y(V)l(ectors)16 b(and)i(W)l(ork)1307 b(112)75
2137 y(Newton's)17 b(Metho)q(d)h(in)g(2D)1167 b(116)75 2260
y(FindRo)q(ot)19 b(&)e(F)l(riends)g(in)h(2D)1116 b(121)75 2383
y(Cen)o(ter)17 b(of)g(Mass)1373 b(124)75 2506 y(F)l(orce)17
b(Applications)i(in)f(3D)1151 b(126)75 2629 y(In)o(v)o(erse)15
b(Square)i(La)o(w)h(Problems)1040 b(130)p eop
%%Page: 4 4
4 3 bop 75 -100 a Fq(4)75 49 y Fn(Solving)18 b(Di\013eren)o(tial)h(Equations)
1037 b(133)75 172 y(Line)18 b(In)o(tegrals)g(and)g(W)l(ork)1161
b(136)p eop
%%Page: 5 5
5 4 bop 75 -100 a Fm(In)n(tro)r(duction)p 75 -93 379 2 v 1398
w Fq(5)146 49 y(F)l(or)17 b(the)h(past)g(three)g(y)o(ears)f(at)g(the)h
(Colorado)g(Sc)o(ho)q(ol)h(of)e(Mines,)i(all)g(500-plus)f(freshman)g(ha)o(v)o
(e)75 106 y(tak)o(en)c(a)h(calculus)i(course)d(using)i(ma)s(jor)d(p)q
(ortions)i(of)g(the)g(material)g(y)o(ou)f(ha)o(v)o(e)h(in)g(y)o(our)g(hands.)
20 b(Y)l(our)75 162 y(authors)12 b(eac)o(h)g(ha)o(v)o(e)g(o)o(v)o(er)g(25)g
(y)o(ears)f(of)h(teac)o(hing)h(exp)q(erience)i(at)c(all)j(univ)o(ersit)o(y)f
(lev)o(els)g(from)f(freshman)75 219 y(to)i(Ph.)g(D.)g(lev)o(el)j(graduate)d
(courses.)19 b(W)l(e)c(ha)o(v)o(e)f(participated)i(fully)g(in)f(all)h(asp)q
(ects)f(of)f(univ)o(ersit)o(y)i(life)75 275 y(and)i(are)f(w)o(ell)i
(published)h(applied)g(mathematicians.)27 b(Ho)o(w)o(ev)o(er,)17
b(our)g(recen)o(t)h(exp)q(erience)i(with)e(the)75 332 y(calculus)f(program)d
(ranks)h(among)f(the)i(most)e(exciting)i(and)g(rew)o(arding)f(of)g(our)g
(careers|it)f(added)i(a)75 388 y(distinct)j(elemen)o(t)g(of)e(fun)h(compared)
g(with)g(our)g(previous)g(calculus)i(exp)q(eriences.)29 b(Ho)o(w)o(ev)o(er,)
17 b(while)75 444 y(\\fun")d(is)g(not)f(to)h(b)q(e)g(underestimated)h(as)e(a)
h(motiv)m(ating)g(force,)f(w)o(e)h(ha)o(v)o(e)f(also)h(k)o(ept)g(\014rmly)g
(in)h(mind)f(a)75 501 y(n)o(um)o(b)q(er)g(of)f(more)g(concrete)h(p)q
(edagogical)g(ob)s(jectiv)o(es.)20 b(W)l(e)13 b(explain)i(our)f(viewp)q(oin)o
(t)g(in)h(the)e(follo)o(wing)75 557 y(paragraphs.)146 637 y(Our)g(guiding)i
(star)d(is)h(that)g(w)o(e)g(are)f(teac)o(hing)i(calculus,)h(not)e
Fl(Mathematic)n(a)s Fq(.)20 b(This)13 b(has)g(imp)q(ortan)o(t)75
693 y(implications.)31 b(F)l(or)18 b(example,)h(to)f(our)g(mind,)h(premature)
f(reliance)i(on)e(constructs)g(suc)o(h)h(as)f Fk(Limit)75 750
y Fq(and)d Fk(NSolve)g Fq(can)g(easily)h(degenerate)g(the)f
Fl(Mathematic)n(a)k Fq(exp)q(erience)f(to)c(b)q(eing)j(a)e(high)h(tec)o(h)f
(analog)75 806 y(of)j(lo)q(oking)h(up)g(the)f(answ)o(er)f(in)j(the)e(bac)o(k)
g(of)g(the)g(b)q(o)q(ok.)29 b(These)19 b(\\blac)o(k)f(b)q(o)o(xes")g(don't)g
(help)h(teac)o(h)75 862 y(calculus,)24 b(so)c(w)o(e)g(relegate)h(them)g(to)f
(a)g(secondary)h(role.)37 b(On)21 b(the)g(other)f(hand,)i(w)o(e)f(b)q(eliev)o
(e)i(that)75 919 y(studen)o(ts)16 b(should)h(b)q(e)f(a)o(w)o(are)f(of)g
(these)h(to)q(ols)g(for)f(use)h Fl(after)21 b Fq(they)16 b(master)f(the)h
(concepts)g(of)g(calculus,)75 975 y(so)h(w)o(e)g(do)g(include)j(some)d(pro)s
(jects)g(dev)o(oted)g(to)g(suc)o(h)h(commands.)26 b(The)17
b(instructor)h(notes)f(to)g(suc)o(h)75 1032 y(pro)s(jects)c(will)j(clearly)g
(state)d(these)h(pro)s(jects)g(are)g(not)f(of)h(primary)g(imp)q(ortance)h(to)
f(learning)h(calculus)75 1088 y(and)i(ma)o(y)e(b)q(e)j(skipp)q(ed.)25
b(In)17 b(particular,)g(succeeding)h(pro)s(jects)e(will)i Fl(not)j
Fq(dep)q(end)d(on)e(co)o(v)o(ering)h(these)75 1145 y(\\blac)o(k)e(b)q(o)o(x")
g(pro)s(jects.)k(Consider)d(at)e(least)h(making)g(some)g(reading)h(assignmen)
o(ts)f(in)g(some)g(of)g(these)75 1201 y(pro)s(jects,)f(but)h(don't)g(let)h
(them)f(de\015ect)h(y)o(ou)f(from)f(y)o(our)h(main)g(task)g(of)g(teac)o(hing)
g(calculus.)146 1280 y(T)l(o)j(minimize)k(the)d(n)o(umerous)g(syn)o(tax)g
(errors)f(that)h(o)q(ccur)g(when)h(the)f(neoph)o(yte)h(tries)f(to)g(t)o(yp)q
(e)75 1337 y(in)i(unfamiliar)g(statemen)o(ts,)e(w)o(e)h(pro)o(vide)g(on-line)
i(template)e(commands)g(that)f(allo)o(w)h(the)g(studen)o(t)75
1393 y(to)h(cop)o(y)l(,)i(paste)f(and)g(then)g(do)g(only)g(minor)g(editing)i
(to)d(obtain)h(the)g(needed)h(adaptation)e(of)h(the)75 1450
y(command.)g(While)17 b(w)o(e)f(do)g(not)g(emphasize)h Fl(Mathematic)n(a)j
Fq(syn)o(tax,)15 b(o)o(v)o(er)g(time)h(w)o(e)g(gradually)g(mak)o(e)75
1506 y(the)d(studen)o(ts)f(sensitiv)o(e)i(to)e(it)h(b)o(y)f(gradually)i
(decreasing)f(the)g(amoun)o(t)f(of)g(template)h(help)g(for)f(the)h(core)75
1563 y Fl(Mathematic)n(a)19 b Fq(commands)c(that)g(ha)o(v)o(e)f(already)i(o)q
(ccurred)g(sev)o(eral)f(times)g(earlier.)21 b(Occasionally)l(,)c(w)o(e)75
1619 y(use)h Fl(Mathematic)n(a)23 b Fq(commands)18 b(outside)g(the)h(minimal)
g(core)f(to)g(\\op)q(en)g(do)q(ors")g(for)f(studen)o(ts|but)75
1676 y(these)e(more)g(adv)m(anced)h(commands)f(are)g(alw)o(a)o(ys)g(supp)q
(orted)h(fully)g(b)o(y)f(a)g(template.)146 1755 y(W)l(e)d(ha)o(v)o(e)h
(\014rm)g(ob)s(jectiv)o(es)f(in)i(teac)o(hing)f(calculus)i(and)e(these)g(pro)
s(jects)e(are)i(designed)h(to)e(reinforce)75 1811 y(them:)75
1949 y Fn(Solv)o(e)17 b(general)h(problems.)k Fq(Instead)d(of)f(solving)h
(problems)g(with)g(n)o(um)o(b)q(ers)g(that)e(mak)o(e)h(the)h(an-)189
2005 y(sw)o(ers)14 b(\\come)h(out)g(nice,")h(solv)o(e)f(families)i(of)d
(problems)i(\(i.e.)k(problems)c(with)g(parameters\).)75 2107
y Fn(Emphasize)i(fundamen)o(tals.)23 b Fq(Don't)e(rush)i(through)f(h)o
(undreds)h(of)f(topics,)j(instead)e(tak)o(e)f(time)189 2163
y(with)16 b(the)g(topics)g(that)f(deserv)o(e)h(it,)g(and)g(train)f(studen)o
(ts)h(to)f Fl(use)k Fq(their)e(text,)e(when)h(necessary)l(,)189
2220 y(to)e(lo)q(ok)i(up)f(topics)h(that)e(are)h(less)h(imp)q(ortan)o(t.)75
2322 y Fn(Emp)q(o)o(w)o(er)g(studen)o(ts.)22 b Fq(The)e(picture)h(of)f(t)o(w)
o(o)f(or)g(three)h(studen)o(ts)g(h)o(uddled)i(around)e(a)g(computer)189
2378 y(\(co)q(op)q(erativ)o(e)14 b(education\))h(is)g(often)f(a)g(b)q(etter)g
(picture)h(than)f(35)g(studen)o(ts)g(busily)i(taking)e(notes)189
2435 y(in)g(a)g(lecture)g(hall.)21 b(W)l(e)14 b(allo)o(w)g(our)f(studen)o(ts)
h(to)f(hand)h(in)h(join)o(t)e(w)o(ork)g(for)g(all)i(the)f Fl(Mathematic)n(a)
189 2491 y Fq(pro)s(jects|and)g(w)o(e)h(encourage)g(y)o(ou)g(to)f(think)i(ab)
q(out)f(doing)h(this)g(to)q(o.)75 2629 y(Most)e(pro)s(jects)h(consist)g(of)g
(three)g(parts:)p eop
%%Page: 6 6
6 5 bop 75 -100 a Fq(6)1398 b Fm(In)n(tro)r(duction)p 1496
-93 379 2 v 75 49 a Fn(Before)17 b(the)h(Lab.)23 b Fq(Relev)m(an)o(t)12
b(reading)h(and)f(w)o(arm-up)g(problems.)19 b(These)13 b(problems)g(are)e
(imp)q(ortan)o(t)189 106 y(to)j(the)h(course)h(as)f(w)o(ell)h(as)f(to)f(the)h
(pro)s(ject.)75 203 y Fn(In)i(the)h(Lab.)23 b Fq(Problems)18
b(requiring)i Fl(Mathematic)n(a)s Fq(.)29 b(The)18 b(goal)g(is)g(that)g(this)
g(section)h(should)g(tak)o(e)189 260 y(ab)q(out)c(an)g(hour)g(of)g(lab)h(w)o
(ork.)75 357 y Fn(After)h(the)g(Lab.)24 b Fq(Problems)18 b(that)g(ask)g(the)h
(studen)o(t)g(to)e(re\015ect)i(on)g(what)f(his/her)h(computations)189
414 y(rev)o(eal.)75 532 y(The)c(studen)o(t's)g(Pro)s(ject)f(Bo)q(oklet)i
(includes:)131 650 y(1.)22 b(An)16 b(in)o(tro)q(ductory)f(tutorial)h(on)g
(the)g(basics)g(of)f(using)i Fl(Mathematic)n(a)j Fq(in)c(a)g(Noteb)q(o)q(ok)f
(en)o(viron-)189 707 y(men)o(t.)j(Our)10 b(v)o(ersion)h(is)g(explicitly)i
(written)d(for)g(the)g(NeXT)h(en)o(vironmen)o(t|other)f Fl(Mathematic)n(a)189
763 y Fq(Noteb)q(o)q(ok)15 b(en)o(vironmen)o(ts)g(are)g(similar.)131
861 y(2.)22 b(W)l(eekly)14 b(pro)s(jects)e(co)o(v)o(ering)i(a)f(three)g
(semester)g(calculus)j(course|there)d(are)g(\\extra")f(pro)s(jects)189
917 y(to)i(allo)o(w)i(for)e(di\013ering)i(taste)f(and)g(for)g(v)m(ariet)o(y)g
(of)g(c)o(hoice)h(b)q(et)o(w)o(een)f(semesters)g(or)g(sections.)131
1015 y(3.)22 b(Summaries)15 b(of)g Fl(Mathematic)n(a)k Fq(statemen)o(ts.)131
1112 y(4.)j(A)15 b(disk)o(ette)h(con)o(taining)h(a)e Fl(Mathematic)n(a)k
Fq(\\noteb)q(o)q(ok")d(for)f(eac)o(h)g(pro)s(ject)g(con)o(taining)i
Fl(Mathe-)189 1169 y(matic)n(a)i Fq(statemen)o(ts)14 b(or)g(co)q(de)i
(serving)g(as)f(cop)o(y)g(and)g(paste)g(templates.)75 1287
y(F)l(or)g(eac)o(h)g(pro)s(ject,)f(the)h(instructor's)g(Answ)o(er)g(Bo)q
(oklet)g(con)o(tains:)131 1406 y(1.)22 b(Answ)o(ers)15 b(\(naturally!\).)131
1503 y(2.)22 b(An)15 b(in)o(tro)q(ductory)g(statemen)o(t)f(of)h(the)g(goals)g
(of)g(the)g(pro)s(ject.)131 1601 y(3.)22 b(Suggestions)15 b(for)f(w)o(a)o(ys)
g(to)h(shorten)f(the)h(pro)s(ject)g(\(y)o(ou'll)g(probably)g(w)o(an)o(t)f(to)
h(v)m(ary)g(the)g(assign-)189 1657 y(men)o(ts)f(from)h(semester)g(to)f
(semester)h(or)g(section)h(to)e(section\).)131 1755 y(4.)22
b(Occasional)16 b(Instructor)f(Notes)g(ab)q(out)g(lik)o(ely)i(studen)o(t)e
(questions,)g(etc.)75 1873 y(The)20 b(Answ)o(er)f(Bo)q(oklet)g(is)h
(accompanied)g(b)o(y)g(an)f(instructor)g(disk)o(ette)h(con)o(taining)g(the)f
(commands)75 1929 y(needed)e(to)e(repro)q(duce)i(the)e(results)h(cited)h(in)f
(the)g(answ)o(ers)f(and)h(a)f(set)h(of)f Fl(Mathematic)n(a)20
b Fq(utilities)e(for)75 1986 y(constructing)d(classro)q(om)g(demonstrations.)
146 2064 y(W)l(e)j(ha)o(v)o(e)g(b)q(een)h(generous)g(in)g(b)q(oth)f(the)h(n)o
(um)o(b)q(er)g(of)e(pro)s(jects)h(and)h(their)f(con)o(ten)o(ts.)29
b(F)l(or)18 b(most)75 2120 y(pro)s(jects,)i(w)o(e)g(list)g(exercises)h(that)f
(can)g(b)q(e)g(omitted)g(to)g(yield)h(a)f(shorter)f(pro)s(ject.)33
b(W)l(e)20 b(ha)o(v)o(e)g(also)75 2177 y(lab)q(eled)d(certain)e(pro)s(jects)f
(as)h(\\optional.")20 b(This)15 b(designation)h(is)f(giv)o(en)h(to)e(pro)s
(jects)g(that)g(either)i(use)75 2233 y(\\blac)o(k)g(b)q(o)o(x")f
Fl(Mathematic)n(a)20 b Fq(commands)15 b(that)g(w)o(on't)g(b)q(e)h(needed)h
(in)f(the)g(sequel)h(or)e(that)g(in)o(tro)q(duce)75 2290 y(mo)q(dest)j
(\\disco)o(v)o(ery")h(explorations.)30 b(These)19 b(pro)s(jects)f(can)g(b)q
(e)i(among)d(the)i(most)f(exciting,)i(so)e(w)o(e)75 2346 y(hop)q(e)h(y)o(ou)e
(w)o(on't)g(omit)h Fl(al)r(l)k Fq(the)c(optional)g(pro)s(jects.)27
b(Similarly)l(,)21 b(w)o(e)d(do)f(not)h(exp)q(ect)h(that)e(y)o(ou)g(will)75
2403 y(assign)d Fl(al)r(l)k Fq(the)c(regular)g(pro)s(jects.)19
b(Also,)14 b(notice)g(that)f(the)h(generosit)o(y)g(in)h(pro)s(jects)e(is)h
(greater)f(earlier)75 2459 y(in)i(the)f(Man)o(ual|this)g(is)g(to)f(accommo)q
(date)h(courses)g(with)g(di\013ering)h(priorities.)21 b(Consequen)o(tly)l(,)
14 b(y)o(ou)75 2516 y(ma)o(y)i(wish)h(to)e(consider)j(assigning)f(an)f
(\\optional")h(pro)s(ject)e(that)h(app)q(ears)g(early)h(in)g(the)g(Man)o(ual)
f(in)75 2572 y(\(sa)o(y\))i(the)i(third)h(semester,)f(with)g(a)f(view)i(to)o
(w)o(ards)d(increasing)j(comp)q(etence)f(in)h Fl(Mathematic)n(a)j
Fq(at)75 2629 y(that)14 b(later)i(time.)p eop
%%Page: 7 7
7 6 bop 75 -100 a Fm(In)n(tro)r(duction)p 75 -93 379 2 v 1398
w Fq(7)146 49 y(Ov)o(er)12 b(these)h(past)f(three)g(y)o(ears,)g(w)o(e)h(ha)o
(v)o(e)f(written)g(n)o(umerous)h(w)o(orksheets)e(and)i(pro)s(jects)f(con)o
(tain-)75 106 y(ing)f(problems)g(to)e(b)q(e)i(solv)o(ed)g(using)g
Fl(Mathematic)n(a)s Fq(.)19 b(Most)9 b(of)h(them)g(ha)o(v)o(e)f(signi\014can)
o(t)j(original)f(con)o(ten)o(t,)75 162 y(but)i(man)o(y)g(ha)o(v)o(e)g(b)q
(een)h(motiv)m(ated)f(b)o(y)g(or)g(use)g(material)h(from)e(articles)i
(written)f(in)h(teac)o(hing-orien)o(ted)75 219 y(journals.)34
b(In)21 b(particular,)g(man)o(y)f(of)g(our)f(pro)s(ject)g(questions)i
(originated)g(from)e(routine)h(textb)q(o)q(ok)75 275 y(exercises.)28
b(Similar)19 b(exercises)g(could)g(b)q(e)f(found)g(in)h(man)o(y)e(calculus)i
(texts,)f(but)f(since)i(w)o(e)f(used)g(the)75 332 y(p)q(opular)e(Edw)o(ards)e
(and)h(P)o(enney)h(Third)g(Edition)g(during)f(the)h(past)e(three)h(y)o(ears,)
f(often)h(the)g(original)75 388 y(routine)e(k)o(ernel)h(exercise)g(w)o(as)e
(dra)o(wn)g(from)g(this)h(excellen)o(t)i(text)d(and)h(w)o(e)g(wish)g(to)f(ac)
o(kno)o(wledge)h(that.)146 465 y(W)l(e)h(also)g(wish)h(to)e(ac)o(kno)o
(wledge)i(our)f(grader,)f(Shelb)o(y)j(W)l(orley)l(,)e(for)g(his)h(astute)e
(commen)o(ts)h(ab)q(out)75 522 y(studen)o(t)i(di\016culties)i(with)f(the)f
(earlier)h(v)o(ersions)f(of)g(these)g(pro)s(jects.)22 b(Our)17
b(questions)f(are)g(distinctly)75 578 y(more)f(\\studen)o(t)g(friendly")h(b)q
(ecause)g(of)f(his)h(e\013orts.)p eop
%%Page: 8 8
8 7 bop 75 -100 a Fq(8)1236 b Fm(T)-6 b(utorial)22 b(Exercises)p
1334 -93 541 2 v 606 49 a Fn(PURPOSE)c(OF)g(THE)g(PR)o(OJECT)146
154 y Fq(This)j(brief)g(pro)s(ject)g(reviews)g(the)g(tutorial)g(information.)
36 b(The)21 b(lab)h(w)o(ork)e(is)h(in)o(tended)h(to)e(b)q(e)75
211 y(quic)o(k)d(and)g(easy)l(.)25 b(Be)17 b(sure)g(the)g(studen)o(ts)f(mak)o
(e)g(full)i(use)f(of)g(the)f(templates)h(in)h(the)f(online)h(studen)o(t)75
267 y(noteb)q(o)q(ok.)577 400 y Fn(ANSWERS)f(F)o(OR)h(INSTR)o(UCTORS)75
498 y(Exercise)f(1.)j Fq(Either)c(of)e(the)i(follo)o(wing)g(do)q(es)f(it:)75
610 y Fj(Sin[Pi/3])20 b(//N)162 660 y(0.866025)75 760 y(N[)h(Sin[Pi/3])f(])
162 810 y(0.866025)75 922 y Fq(The)d(answ)o(er)g(could)h(b)q(e)g(v)o
(eri\014ed)g(with)f(a)g(hand)g(calculator)h(\(either)f(on)g(the)g(trig)g
(function)h(or)f(on)g(its)75 972 y(square)e(ro)q(ot)f(equiv)m(alen)o(t\).)22
b(Here's)15 b(another)f(p)q(ossibilit)o(y:)75 1084 y Fj(Sqrt[3]/2)20
b(//N)162 1134 y(0.866025)75 1269 y Fn(Exercise)d(2.)75 1381
y Fj(N[Sqrt[2],)j(16])75 1431 y(1.414213562373095)571 2044
y @beginspecial 0 @llx 0 @lly 282 @urx 174 @ury 1937 @rwi @setspecial
%%BeginDocument: sameGraph.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.095238 0.231547 0.005809 [
[(-4)] 0.11905 0.23155 0 2 Msboxa
[(-2)] 0.30952 0.23155 0 2 Msboxa
[(2)] 0.69048 0.23155 0 2 Msboxa
[(4)] 0.88095 0.23155 0 2 Msboxa
[(-20)] 0.4875 0.11537 1 0 Msboxa
[(20)] 0.4875 0.34773 1 0 Msboxa
[(40)] 0.4875 0.4639 1 0 Msboxa
[(60)] 0.4875 0.58008 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.11905 0.23155 moveto
0.11905 0.2378 lineto
stroke
grestore
[(-4)] 0.11905 0.23155 0 2 Mshowa
gsave
0.002 setlinewidth
0.30952 0.23155 moveto
0.30952 0.2378 lineto
stroke
grestore
[(-2)] 0.30952 0.23155 0 2 Mshowa
gsave
0.002 setlinewidth
0.69048 0.23155 moveto
0.69048 0.2378 lineto
stroke
grestore
[(2)] 0.69048 0.23155 0 2 Mshowa
gsave
0.002 setlinewidth
0.88095 0.23155 moveto
0.88095 0.2378 lineto
stroke
grestore
[(4)] 0.88095 0.23155 0 2 Mshowa
gsave
0.001 setlinewidth
0.15714 0.23155 moveto
0.15714 0.2353 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.19524 0.23155 moveto
0.19524 0.2353 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.23333 0.23155 moveto
0.23333 0.2353 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.27143 0.23155 moveto
0.27143 0.2353 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.34762 0.23155 moveto
0.34762 0.2353 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38571 0.23155 moveto
0.38571 0.2353 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.42381 0.23155 moveto
0.42381 0.2353 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.4619 0.23155 moveto
0.4619 0.2353 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5381 0.23155 moveto
0.5381 0.2353 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.57619 0.23155 moveto
0.57619 0.2353 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.61429 0.23155 moveto
0.61429 0.2353 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.65238 0.23155 moveto
0.65238 0.2353 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72857 0.23155 moveto
0.72857 0.2353 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.76667 0.23155 moveto
0.76667 0.2353 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.80476 0.23155 moveto
0.80476 0.2353 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84286 0.23155 moveto
0.84286 0.2353 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.08095 0.23155 moveto
0.08095 0.2353 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.04286 0.23155 moveto
0.04286 0.2353 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.00476 0.23155 moveto
0.00476 0.2353 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.91905 0.23155 moveto
0.91905 0.2353 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.95714 0.23155 moveto
0.95714 0.2353 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.99524 0.23155 moveto
0.99524 0.2353 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.23155 moveto
1 0.23155 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.11537 moveto
0.50625 0.11537 lineto
stroke
grestore
[(-20)] 0.4875 0.11537 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.34773 moveto
0.50625 0.34773 lineto
stroke
grestore
[(20)] 0.4875 0.34773 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.4639 moveto
0.50625 0.4639 lineto
stroke
grestore
[(40)] 0.4875 0.4639 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.58008 moveto
0.50625 0.58008 lineto
stroke
grestore
[(60)] 0.4875 0.58008 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.02243 moveto
0.50375 0.02243 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.04566 moveto
0.50375 0.04566 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.0689 moveto
0.50375 0.0689 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.09213 moveto
0.50375 0.09213 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1386 moveto
0.50375 0.1386 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.16184 moveto
0.50375 0.16184 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18508 moveto
0.50375 0.18508 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.20831 moveto
0.50375 0.20831 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.25478 moveto
0.50375 0.25478 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.27802 moveto
0.50375 0.27802 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.30125 moveto
0.50375 0.30125 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.32449 moveto
0.50375 0.32449 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.37096 moveto
0.50375 0.37096 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.3942 moveto
0.50375 0.3942 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.41743 moveto
0.50375 0.41743 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.44067 moveto
0.50375 0.44067 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.48714 moveto
0.50375 0.48714 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.51038 moveto
0.50375 0.51038 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.53361 moveto
0.50375 0.53361 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55685 moveto
0.50375 0.55685 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.60332 moveto
0.50375 0.60332 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.38258 moveto
0.06349 0.35938 lineto
0.10317 0.33821 lineto
0.14286 0.31904 lineto
0.18254 0.3019 lineto
0.22222 0.28677 lineto
0.2619 0.27366 lineto
0.30159 0.26257 lineto
0.34127 0.25349 lineto
0.38095 0.24643 lineto
0.40079 0.24366 lineto
0.42063 0.24139 lineto
0.44048 0.23963 lineto
0.4504 0.23893 lineto
0.46032 0.23836 lineto
0.47024 0.23792 lineto
0.4752 0.23775 lineto
0.48016 0.23761 lineto
0.48512 0.2375 lineto
0.4876 0.23745 lineto
0.49008 0.23742 lineto
0.49256 0.23739 lineto
0.4938 0.23738 lineto
0.49504 0.23737 lineto
0.49628 0.23737 lineto
0.49752 0.23736 lineto
0.49876 0.23736 lineto
0.5 0.23736 lineto
0.50124 0.23736 lineto
0.50248 0.23736 lineto
0.50372 0.23737 lineto
0.50496 0.23737 lineto
0.50744 0.23739 lineto
0.50992 0.23742 lineto
0.5124 0.23745 lineto
0.51488 0.2375 lineto
0.51984 0.23761 lineto
0.5248 0.23775 lineto
0.52976 0.23792 lineto
0.53968 0.23836 lineto
0.5496 0.23893 lineto
0.55952 0.23963 lineto
0.57937 0.24139 lineto
0.59921 0.24366 lineto
0.61905 0.24643 lineto
0.65873 0.25349 lineto
0.69841 0.26257 lineto
0.7381 0.27366 lineto
0.77778 0.28677 lineto
0.81746 0.3019 lineto
Mistroke
0.85714 0.31904 lineto
0.89683 0.33821 lineto
0.93651 0.35938 lineto
0.97619 0.38258 lineto
Mfstroke
grestore
grestore
gsave
gsave
0.004 setlinewidth
stroke
stroke
stroke
0.11009 0 moveto
0.14286 0.09186 lineto
stroke
0.14286 0.09186 moveto
0.18254 0.17841 lineto
0.20238 0.2132 lineto
0.22222 0.24277 lineto
0.2619 0.28746 lineto
0.28175 0.30322 lineto
0.29167 0.30959 lineto
0.30159 0.31501 lineto
0.31151 0.31951 lineto
0.32143 0.32314 lineto
0.33135 0.32593 lineto
0.34127 0.32793 lineto
0.34623 0.32865 lineto
0.34871 0.32893 lineto
0.35119 0.32917 lineto
0.35367 0.32937 lineto
0.35615 0.32952 lineto
0.35739 0.32958 lineto
0.35863 0.32963 lineto
0.35987 0.32967 lineto
0.36111 0.3297 lineto
0.36235 0.32972 lineto
0.36359 0.32972 lineto
0.36483 0.32972 lineto
0.36607 0.32971 lineto
0.36731 0.32968 lineto
0.36855 0.32965 lineto
0.37103 0.32955 lineto
0.37351 0.32941 lineto
0.37599 0.32923 lineto
0.38095 0.32876 lineto
0.38591 0.32813 lineto
0.39087 0.32737 lineto
0.40079 0.32542 lineto
0.42063 0.32 lineto
0.44048 0.31282 lineto
0.46032 0.30418 lineto
0.5 0.28383 lineto
0.53968 0.26146 lineto
0.57937 0.23959 lineto
0.61905 0.22075 lineto
0.63889 0.21325 lineto
0.64881 0.21012 lineto
0.65873 0.20745 lineto
0.66865 0.20529 lineto
0.67361 0.20441 lineto
0.67857 0.20367 lineto
0.68353 0.20308 lineto
0.68601 0.20284 lineto
0.68849 0.20264 lineto
Mistroke
0.69097 0.20247 lineto
0.69345 0.20235 lineto
0.69469 0.2023 lineto
0.69593 0.20227 lineto
0.69717 0.20224 lineto
0.69841 0.20222 lineto
0.69965 0.20222 lineto
0.70089 0.20222 lineto
0.70213 0.20224 lineto
0.70337 0.20226 lineto
0.70461 0.2023 lineto
0.70585 0.20235 lineto
0.70833 0.20247 lineto
0.71081 0.20264 lineto
0.71329 0.20286 lineto
0.71825 0.20342 lineto
0.72321 0.20417 lineto
0.72817 0.20511 lineto
0.7381 0.20759 lineto
0.74802 0.21088 lineto
0.75794 0.21503 lineto
0.77778 0.22606 lineto
0.79762 0.241 lineto
0.81746 0.26016 lineto
0.85714 0.31242 lineto
0.89683 0.38535 lineto
0.93651 0.48148 lineto
0.97619 0.60332 lineto
Mfstroke
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 704 2130 a Fi(Fig)p Fq(.)15 b(1.)20 b(Plot)15
b(for)f(Exercise)i(3.)75 2232 y Fn(Exercise)h(3.)j Fq(The)15
b(follo)o(wing)h(commands)f(pro)q(duce)h(Figure)g(1.)75 2345
y Fj(f[x_])21 b(:=)g(x^2)g(+)h(1)75 2395 y(g[x_])f(:=)g(x^3)g(-)h(x^2)f(-)h
(9)f(x)h(+)f(9)75 2494 y(Plot[{f[x],)f(g[x]},)g({x,)h(-5,)g(5}])75
2629 y Fn(Exercise)c(4.)j Fq(The)15 b(follo)o(wing)h(commands)f(pro)q(duce)h
(Figure)g(2.)p eop
%%Page: 9 9
9 8 bop 75 -100 a Fm(T)-6 b(utorial)22 b(Exercises)p 75 -93
541 2 v 1235 w Fq(9)571 502 y @beginspecial 0 @llx 0 @lly 282
@urx 174 @ury 1937 @rwi @setspecial
%%BeginDocument: rationalGraph.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.02381 0.323732 0.015091 [
[(-20)] 0.02381 0.32373 0 2 Msboxa
[(-10)] 0.2619 0.32373 0 2 Msboxa
[(10)] 0.7381 0.32373 0 2 Msboxa
[(20)] 0.97619 0.32373 0 2 Msboxa
[(-20)] 0.4875 0.0219 1 0 Msboxa
[(-10)] 0.4875 0.17282 1 0 Msboxa
[(10)] 0.4875 0.47465 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.32373 moveto
0.02381 0.32998 lineto
stroke
grestore
[(-20)] 0.02381 0.32373 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.32373 moveto
0.2619 0.32998 lineto
stroke
grestore
[(-10)] 0.2619 0.32373 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.32373 moveto
0.7381 0.32998 lineto
stroke
grestore
[(10)] 0.7381 0.32373 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.32373 moveto
0.97619 0.32998 lineto
stroke
grestore
[(20)] 0.97619 0.32373 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.32373 moveto
0.07143 0.32748 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.32373 moveto
0.11905 0.32748 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.32373 moveto
0.16667 0.32748 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.32373 moveto
0.21429 0.32748 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.32373 moveto
0.30952 0.32748 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.32373 moveto
0.35714 0.32748 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.32373 moveto
0.40476 0.32748 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.32373 moveto
0.45238 0.32748 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.32373 moveto
0.54762 0.32748 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.32373 moveto
0.59524 0.32748 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.32373 moveto
0.64286 0.32748 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.32373 moveto
0.69048 0.32748 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.32373 moveto
0.78571 0.32748 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.32373 moveto
0.83333 0.32748 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.32373 moveto
0.88095 0.32748 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.32373 moveto
0.92857 0.32748 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.32373 moveto
1 0.32373 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.0219 moveto
0.50625 0.0219 lineto
stroke
grestore
[(-20)] 0.4875 0.0219 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.17282 moveto
0.50625 0.17282 lineto
stroke
grestore
[(-10)] 0.4875 0.17282 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.47465 moveto
0.50625 0.47465 lineto
stroke
grestore
[(10)] 0.4875 0.47465 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.05209 moveto
0.50375 0.05209 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.08227 moveto
0.50375 0.08227 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.11245 moveto
0.50375 0.11245 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.14263 moveto
0.50375 0.14263 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.203 moveto
0.50375 0.203 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.23318 moveto
0.50375 0.23318 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.26337 moveto
0.50375 0.26337 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.29355 moveto
0.50375 0.29355 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.35391 moveto
0.50375 0.35391 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.3841 moveto
0.50375 0.3841 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.41428 moveto
0.50375 0.41428 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.44446 moveto
0.50375 0.44446 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.50483 moveto
0.50375 0.50483 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.53501 moveto
0.50375 0.53501 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.5652 moveto
0.50375 0.5652 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59538 moveto
0.50375 0.59538 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.06349 0.04062 lineto
0.10317 0.06668 lineto
0.14286 0.09295 lineto
0.18254 0.11952 lineto
0.22222 0.14652 lineto
0.2619 0.17416 lineto
0.30159 0.20287 lineto
0.34127 0.23349 lineto
0.38095 0.26801 lineto
0.42063 0.31233 lineto
0.43056 0.3268 lineto
0.44048 0.34377 lineto
0.46032 0.39002 lineto
0.47024 0.42229 lineto
0.48016 0.45935 lineto
0.48264 0.46801 lineto
0.48512 0.47556 lineto
0.48636 0.47871 lineto
0.4876 0.48132 lineto
0.48884 0.48329 lineto
0.49008 0.48452 lineto
0.49132 0.48491 lineto
0.49256 0.48438 lineto
0.4938 0.48285 lineto
0.49504 0.48027 lineto
0.49628 0.47662 lineto
0.49752 0.47191 lineto
0.5 0.45956 lineto
0.50992 0.38994 lineto
0.51488 0.35877 lineto
0.51736 0.34633 lineto
0.51984 0.33606 lineto
0.52232 0.32781 lineto
0.5248 0.32135 lineto
0.52728 0.31642 lineto
0.52976 0.31278 lineto
0.531 0.31138 lineto
0.53224 0.31022 lineto
0.53348 0.30927 lineto
0.53472 0.30853 lineto
0.53596 0.30796 lineto
0.5372 0.30755 lineto
0.53844 0.30729 lineto
0.53968 0.30716 lineto
0.57937 0.32987 lineto
0.61905 0.36088 lineto
0.65873 0.39043 lineto
0.69841 0.41869 lineto
0.7381 0.44611 lineto
Mistroke
0.77778 0.47297 lineto
0.81746 0.49945 lineto
0.85714 0.52566 lineto
0.89683 0.55168 lineto
0.93651 0.57756 lineto
0.97619 0.60332 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 704 588 a Fi(Fig)p Fq(.)15 b(2.)20 b(Plot)15 b(for)f(Exercise)i
(4.)75 717 y Fj(r)22 b(=)f(g[x]/f[x];)75 767 y(Plot[r,)f({x,)i(-20,)e(20}])75
902 y Fn(Exercise)d(5.)126 1017 y Fq(a\))22 b(Figure)15 b(3)g(sho)o(ws)g(the)
g(zo)q(om)g(near)g(the)g(largest)g(zero)g(of)g Fh(G)p Fq(.)123
1104 y(b\))23 b Fj(Factor[G[x]])624 1154 y(2)276 1204 y(\(2)e(+)h(x\))f
(\(-15)g(+)h(x)f(\))189 1253 y(Alternately,)e(we)i(can)g(use)h(the)f
(``afterthought'')d(notation:)189 1303 y(G[x])j(//Factor)624
1353 y(2)276 1403 y(\(2)g(+)h(x\))f(\(-15)g(+)h(x)f(\))128
1497 y Fq(c\))i(No,)14 b(the)i(graph)e(lo)q(oks)i(lik)o(e)g(the)f(h)o(yp)q
(erb)q(ola)i(1)p Fh(=x)d Fq(for)h Fh(x)g Fq(large.)571 2093
y @beginspecial 0 @llx 0 @lly 282 @urx 174 @ury 1937 @rwi @setspecial
%%BeginDocument: linearZoom.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
-18.071429 4.761905 0.221439 0.063647 [
[(3.8)] 0.02381 0.22144 0 2 Msboxa
[(3.85)] 0.2619 0.22144 0 2 Msboxa
[(3.9)] 0.5 0.22144 0 2 Msboxa
[(3.95)] 0.7381 0.22144 0 2 Msboxa
[(-2)] 0.96369 0.09415 1 0 Msboxa
[(2)] 0.96369 0.34873 1 0 Msboxa
[(4)] 0.96369 0.47603 1 0 Msboxa
[(6)] 0.96369 0.60332 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.22144 moveto
0.02381 0.22769 lineto
stroke
grestore
[(3.8)] 0.02381 0.22144 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.22144 moveto
0.2619 0.22769 lineto
stroke
grestore
[(3.85)] 0.2619 0.22144 0 2 Mshowa
gsave
0.002 setlinewidth
0.5 0.22144 moveto
0.5 0.22769 lineto
stroke
grestore
[(3.9)] 0.5 0.22144 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.22144 moveto
0.7381 0.22769 lineto
stroke
grestore
[(3.95)] 0.7381 0.22144 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.22144 moveto
0.07143 0.22519 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.22144 moveto
0.11905 0.22519 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.22144 moveto
0.16667 0.22519 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.22144 moveto
0.21429 0.22519 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.22144 moveto
0.30952 0.22519 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.22144 moveto
0.35714 0.22519 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.22144 moveto
0.40476 0.22519 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.22144 moveto
0.45238 0.22519 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.22144 moveto
0.54762 0.22519 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.22144 moveto
0.59524 0.22519 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.22144 moveto
0.64286 0.22519 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.22144 moveto
0.69048 0.22519 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.22144 moveto
0.78571 0.22519 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.22144 moveto
0.83333 0.22519 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.22144 moveto
0.88095 0.22519 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.22144 moveto
0.92857 0.22519 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.22144 moveto
1 0.22144 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.97619 0.09415 moveto
0.98244 0.09415 lineto
stroke
grestore
[(-2)] 0.96369 0.09415 1 0 Mshowa
gsave
0.002 setlinewidth
0.97619 0.34873 moveto
0.98244 0.34873 lineto
stroke
grestore
[(2)] 0.96369 0.34873 1 0 Mshowa
gsave
0.002 setlinewidth
0.97619 0.47603 moveto
0.98244 0.47603 lineto
stroke
grestore
[(4)] 0.96369 0.47603 1 0 Mshowa
gsave
0.002 setlinewidth
0.97619 0.60332 moveto
0.98244 0.60332 lineto
stroke
grestore
[(6)] 0.96369 0.60332 1 0 Mshowa
gsave
0.001 setlinewidth
0.97619 0.1196 moveto
0.97994 0.1196 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.14506 moveto
0.97994 0.14506 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.17052 moveto
0.97994 0.17052 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.19598 moveto
0.97994 0.19598 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.2469 moveto
0.97994 0.2469 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.27236 moveto
0.97994 0.27236 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.29782 moveto
0.97994 0.29782 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.32327 moveto
0.97994 0.32327 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.37419 moveto
0.97994 0.37419 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.39965 moveto
0.97994 0.39965 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.42511 moveto
0.97994 0.42511 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.45057 moveto
0.97994 0.45057 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.50148 moveto
0.97994 0.50148 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.52694 moveto
0.97994 0.52694 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.5524 moveto
0.97994 0.5524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.57786 moveto
0.97994 0.57786 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.06869 moveto
0.97994 0.06869 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.04323 moveto
0.97994 0.04323 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.01777 moveto
0.97994 0.01777 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.97619 0 moveto
0.97619 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.06349 0.03786 lineto
0.10317 0.06112 lineto
0.14286 0.0845 lineto
0.18254 0.108 lineto
0.22222 0.13161 lineto
0.2619 0.15535 lineto
0.30159 0.17921 lineto
0.34127 0.20318 lineto
0.38095 0.22728 lineto
0.42063 0.2515 lineto
0.46032 0.27584 lineto
0.5 0.3003 lineto
0.53968 0.32488 lineto
0.57937 0.34958 lineto
0.61905 0.3744 lineto
0.65873 0.39935 lineto
0.69841 0.42442 lineto
0.7381 0.4496 lineto
0.77778 0.47492 lineto
0.81746 0.50035 lineto
0.85714 0.52591 lineto
0.89683 0.55159 lineto
0.93651 0.57739 lineto
0.97619 0.60332 lineto
stroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 704 2180 a Fi(Fig)p Fq(.)g(3.)20 b(Plot)15 b(for)f(Exercise)i
(5.)75 2275 y Fn(Exercise)h(6.)j Fq(Near)15 b Fh(x)e Fq(=)g(0,)h
Fh(f)5 b Fq(\()p Fh(x)p Fq(\))12 b Fg(\031)h Fq(1,)75 2352
y Fn(Exercise)20 b(7.)29 b Fq(Divide)19 b(the)f(p)q(olynomials)i(and)e
(justi\014ably)h(discard)g(the)f(remainder)h(for)f(large)g
Fh(x)g Fq(to)75 2409 y(see)d(that)g Fh(r)q Fq(\()p Fh(x)p Fq(\))d
Fg(\031)h Fh(x)d Fg(\000)g Fq(1)15 b(for)g(large)g Fh(x)p Fq(.)p
eop
%%Page: 10 10
10 9 bop 75 -103 a Fq(10)923 b Fm(Graphical)22 b(Equation)h(Solving)p
1044 -85 832 2 v 606 49 a Fn(PURPOSE)18 b(OF)g(THE)g(PR)o(OJECT)146
149 y Fq(In)d(this)h(pro)s(ject)e(and)h(the)g(next,)g(w)o(e)f(w)o(an)o(t)g
(to)h(arouse)f(in)o(terest)h(b)o(y)g(demonstrating)g(the)g(p)q(o)o(w)o(er)f
(of)75 205 y(mo)q(dern)19 b(graphical)g(means)f(for)g(solving)h(higher)h
(degree)e(and)h(transcenden)o(tal)g(equations.)30 b(On)19 b(the)75
261 y(other)13 b(hand,)h(an)g(equally)h(imp)q(ortan)o(t)e(p)q(oin)o(t)h
(brough)o(t)f(out)g(is)h(that)f(suc)o(h)h(direct)g(graphical)h(means)e(are)75
318 y(not)h(su\016cien)o(t)h(for)e(all)i(equation)g(solving.)20
b(In)15 b(particular,)g(the)f(direct)h(graphical)g(\\zo)q(om")e(tec)o
(hnique,)75 374 y(while)21 b(fun)g(at)e(\014rst,)h(is)h(so)q(on)f(seen)g(as)g
(lab)q(orious)g(and)g(error)g(prone.)34 b(Ho)o(w)o(ev)o(er,)20
b(w)o(e)f(should)i(a)o(v)o(oid)75 431 y(making)16 b(this)h(negativ)o(e)f(p)q
(oin)o(t)h(to)q(o)e(hea)o(vily)l(.)24 b(After)16 b(all,)h(the)f(zo)q(om)g
(tec)o(hnique)h(do)q(es)g(emp)q(o)o(w)o(er)e(us)i(to)75 487
y(easily)f(treat)e(equations)i(whose)f(solutions)h(w)o(ould)g(b)q(e)f
(sizable)i(pro)s(jects)e(b)o(y)g(hand)g(metho)q(ds.)146 561
y(A)e(secondary)g(purp)q(ose)h(is)g(learning)h(not)e(to)g(generalize)h(to)q
(o)f(far)g(on)g(the)h(basis)g(of)e(a)i(small)g(n)o(um)o(b)q(er)75
618 y(of)j(examples)h(\(Exercise)g(10\).)25 b(As)17 b(in)h(man)o(y)f(of)g
(the)g(pro)s(jects,)f(the)i(pro)s(ject)e(w)o(ork)g(assigned)i(outside)75
674 y(the)13 b(lab)h(is)f(as)g(imp)q(ortan)o(t)f(as)h(that)f(assigned)i
(inside)g(the)f(lab.)20 b(Y)l(ou)13 b(ma)o(y)g(w)o(an)o(t)f(to)g(c)o
(hallenge)i(the)f(more)75 730 y(industrious)j(studen)o(ts)g(to)e(in)o(v)o
(estigate)h(v)o(ertical)h(lines)h(other)e(than)g Fh(x)d Fq(=)h(0.)146
804 y(Finally)l(,)23 b(the)e(studen)o(ts)f(are)g(encouraged)h(to)f(use)h(go)q
(o)q(d)g(problem)g(solving)h(tec)o(hniques)g(and)f(to)75 861
y(mak)o(e)14 b(e\013ectiv)o(e)g(use)h(of)f(the)g(index)i(of)d(their)i(text)f
(\(p)q(oin)o(t-slop)q(e)i(is)e(m)o(uc)o(h)h(easier)f(to)g(apply)h(in)g(the)f
(\014rst)75 917 y(exercise)i(than)f(the)h(p)q(opular)g(slop)q(e-in)o(tercept)
h(form\).)146 991 y(Later)h(w)o(ork)g(on)g(suc)o(h)h(topics)g(as)g(the)g
(linear)g(appro)o(ximation,)h(Newton's)e(metho)q(d)g(and)h(T)l(a)o(ylor)75
1048 y(series)i(can)g(b)q(e)g(con)o(trasted)f(with)h(the)g(zo)q(om)g(metho)q
(d)f(in)o(tro)q(duced)i(in)g(the)f(early)g(pro)s(jects.)35
b(Also,)75 1104 y(the)17 b(studen)o(t)g(is)h(gradually)g(acquiring)g(imp)q
(ortan)o(t)f(in)o(tuitions)i(suc)o(h)e(as)g(the)g(direct)h(exp)q(erience)i
(that)75 1160 y(\\smo)q(oth")14 b(functions)i(b)q(ecome)g(linear)g(in)g(the)g
(small.)75 1234 y Fn(Instructor)24 b(Note)p Fq(:)52 b(In)22
b(addition)g(to)f(the)g Fl(Mathematic)n(a)k Fq(co)q(de)c(to)g(generate)f(the)
h(answ)o(ers,)h(the)75 1291 y(Instructor)14 b(Noteb)q(o)q(ok)g(con)o(tains)h
(the)f(co)q(de)h(used)g(to)e(get)h(the)h(\014gures)f(and)g(a)g(Mo)q
(dule+Examples)j(for)75 1347 y(pro)q(ducing)g(classro)q(om)d(demonstrations)h
(of)g(secan)o(t)g(lines)i(approac)o(hing)e(tangen)o(ts)f(to)h(curv)o(es.)577
1467 y Fn(ANSWERS)i(F)o(OR)h(INSTR)o(UCTORS)75 1566 y(Exercise)f(1.)j
Fh(y)12 b Fg(\000)f Fq(5)h(=)h Fg(\000)p Fq(2\()p Fh(x)d Fg(\000)g
Fq(1\),)k Fh(y)e Fg(\000)f Fq(4)h(=)h(2\()p Fh(x)d Fq(+)g(2\).)75
1640 y Fn(Exercise)17 b(2.)648 1722 y Fh(y)12 b Fg(\000)f Fh(q)43
b Fq(=)f Fg(\000)908 1704 y Ff(a)p 908 1711 19 2 v 910 1738
a(b)932 1722 y Fq(\()p Fh(x)10 b Fg(\000)g Fh(p)p Fq(\))91
b(\()p Fh(b)12 b Fg(6)p Fq(=)h(0\))724 1791 y Fh(x)41 b Fq(=)h
Fh(p)273 b Fq(\()p Fh(b)11 b Fq(=)i(0\))75 1873 y(Chec)o(k:)20
b Fh(p)13 b Fq(=)g(1,)h Fh(q)h Fq(=)e(5,)h Fh(a)f Fq(=)g(2,)h(and)i
Fh(b)c Fq(=)h(1)i(giv)o(es)g Fh(y)d Fg(\000)e Fq(5)j(=)g Fg(\000)p
Fq(2\()p Fh(x)d Fg(\000)g Fq(1\))15 b(again.)75 1947 y Fn(Exercise)j(3.)j
Fq(W)l(rite)15 b(the)h(equation)g(of)f(the)h(straigh)o(t)f(line)i
Fh(L)e Fq(that)g(passes)h(through)f(the)h(p)q(oin)o(t)g(\()p
Fh(p;)8 b(q)r Fq(\))75 2003 y(and)15 b(is)h(p)q(erp)q(endicul)q(ar)h(to)e
(the)g(line)i(with)e(equation)h Fh(ax)10 b Fq(+)h Fh(by)j Fq(=)f
Fh(c)p Fq(.)646 2085 y Fh(y)f Fg(\000)e Fh(q)44 b Fq(=)873
2067 y Ff(b)p 871 2074 V 871 2101 a(a)894 2085 y Fq(\()p Fh(x)10
b Fg(\000)h Fh(p)p Fq(\))120 b(\()p Fh(a)13 b Fg(6)p Fq(=)g(0\))721
2154 y Fh(x)42 b Fq(=)g Fh(p)272 b Fq(\()p Fh(a)13 b Fq(=)g(0\))75
2236 y(Chec)o(k:)20 b Fh(p)13 b Fq(=)g Fg(\000)p Fq(2,)h Fh(q)h
Fq(=)e(4,)h Fh(a)f Fq(=)g(1,)i(and)g Fh(b)d Fq(=)h(2)i(giv)o(es)g
Fh(y)d Fg(\000)f Fq(4)h(=)h(2\()p Fh(x)d Fq(+)g(2\))15 b(again.)75
2310 y Fn(Exercise)i(4.)j Fq(Result)15 b(giv)o(en.)75 2384
y Fn(Exercise)i(5.)j Fq(Here,)15 b Fh(a)e Fg(\031)g Fq(1)p
Fh(:)p Fq(128.)75 2457 y Fn(Exercise)k(6.)j Fq(By)15 b(\\zo)q(oming,")g(the)g
(ro)q(ots)g(are)f(appro)o(ximately)i(2.0,)e(-0.134,)f(and)j(-1.87.)75
2529 y Fn(Exercise)k(7.)28 b Fq(The)18 b(exact)f(ro)q(ots)g(are)h
Fh(a)f Fq(=)g(2,)h Fh(a)f Fq(=)g Fg(\000)p Fq(1)12 b Fg(\006)1126
2491 y(p)p 1164 2491 23 2 v 38 x Fq(3)p Fh(=)p Fq(2.)27 b(Some)18
b Fl(Mathematic)n(a)k Fq(ideas)c(\(but)75 2579 y(it)g(is)g(not)g(exp)q(ected)
h(that)e(studen)o(ts)g(will)j(do)d(an)o(ything)h(more)g(than)f
Fk(Factor)g Fq(and)h(\014nish)h(up)f(with)g(a)75 2629 y(calculator\):)p
eop
%%Page: 11 11
11 10 bop 75 -103 a Fm(Graphical)22 b(Equation)i(Solving)p
75 -85 832 2 v 923 w Fq(11)75 49 y Fj(Factor[2a^3)c(-)h(15/2)g(a)h(-)f(1])663
99 y(2)162 149 y(\(-2)g(+)h(a\))f(\(1)h(+)f(8)h(a)f(+)h(4)g(a)f(\))162
199 y(------------------)o(-----)o(--)424 249 y(2)75 298 y(A)h(=)f(4;)h(B)f
(=)h(8;)f(C)h(=)f(1;)75 348 y(answer1)f(=)i(\(-B)f(+)h(Sqrt[B^2)e(-)h(4)h(A)g
(C]\)/\(2A\))75 398 y(answer2)e(=)i(\(-B)f(-)h(Sqrt[B^2)e(-)h(4)h(A)g
(C]\)/\(2A\))162 448 y(-8)g(+)f(4)h(Sqrt[3])162 498 y(--------------)293
547 y(8)162 647 y(-8)g(-)f(4)h(Sqrt[3])162 697 y(--------------)293
747 y(8)75 846 y({answer1,)e(answer2})g(//Simplify)293 896
y(Sqrt[3])151 b(Sqrt[3])162 946 y({-1)21 b(+)h(-------,)e(-1)h(-)h(-------})
358 996 y(2)283 b(2)75 1095 y({answer1,)20 b(answer2})g(//N)162
1145 y({-0.133975,)g(-1.86603})75 1260 y Fn(Instructor)14 b(Note)p
Fq(:)19 b(The)14 b(next)f(t)o(w)o(o)e(problems)j(w)o(ere)e(in)o(tended)j(to)d
(mak)o(e)h(studen)o(ts)f(think)i(ab)q(out)f(the)75 1316 y Fl(limitations)k
Fq(of)d(the)g(zo)q(om)g(metho)q(d.)20 b(Ob)o(viously)l(,)c(there)e(aren't)g
(\\righ)o(t")f(answ)o(ers.)19 b(Those)14 b(who)g(think)75 1373
y(zo)q(oming)i(is)g(w)o(onderful)h(ha)o(v)o(e)e(some)g(justice)i(on)e(their)i
(side.)22 b(Their)17 b(adoration)e(ma)o(y)g(w)o(eak)o(en)g(during)75
1429 y(the)g(next)h(pro)s(ject.)75 1506 y Fn(Exercise)h(8.)j
Fq(A)15 b(lot)g(of)g(zo)q(oming)h(uses)f(the)h(most)e(exp)q(ensiv)o(e)j
(commo)q(dit)o(y:)i(the)d(h)o(uman.)75 1583 y Fn(Exercise)h(9.)j
Fq(Ditto.)75 1661 y Fn(Exercise)f(10.)k Fq(The)17 b(conjecture)g(is)g
Fl(false)s Fq(!)23 b(When)17 b Fh(p)e Fq(=)g(0,)h(the)g(cubic)i(has)f(the)f
(ob)o(vious)h(ro)q(ot)e Fh(a)g Fq(=)g(0)75 1717 y(and)i(the)g(residual)h
(quadratic)f(is)h Fh(a)693 1701 y Fe(2)728 1717 y Fq(=)e Fh(q)d
Fg(\000)e Fq(1)p Fh(=)p Fq(2.)24 b(Hence,)18 b(for)e Fh(q)i(>)d
Fq(1)p Fh(=)p Fq(2,)h(there)h(are)g(three)g(real)g(ro)q(ots)75
1774 y Fh(a)j Fq(and)g(three)g(normals.)35 b(Ho)o(w)o(ev)o(er,)20
b(for)f(0)i Fh(<)g(q)i(<)e Fq(1)p Fh(=)p Fq(2,)f(the)g(p)q(oin)o(t)g(\()p
Fh(p;)8 b(q)r Fq(\))19 b(is)h(still)i(in)o(terior)e(to)g(the)75
1830 y(parab)q(ola)c(and)g(y)o(et)g(the)g Fl(only)k Fq(real)c(ro)q(ot)f(is)i
Fh(a)d Fq(=)g(0.)23 b(The)16 b(curv)o(e)g(dividing)j(the)d(one-ro)q(ot)f
(region)i(from)75 1887 y(the)e(three-ro)q(ot)g(region)g(can)h(b)q(e)g(found)f
(analytically)i(as)777 2030 y Fh(q)d Fq(=)864 2012 y Fe(1)p
864 2019 18 2 v 864 2046 a(2)887 1971 y Fd(\022)917 2030 y
Fq(1)c(+)h(3)1031 2004 y Fc(3)1022 1949 y Fd(s)p 1062 1949
53 2 v 1067 2000 a Fh(p)1090 1986 y Fe(2)p 1067 2020 43 2 v
1077 2061 a Fq(2)1130 1971 y Fd(\023)1161 2030 y Fh(:)75 2153
y Fq(Note)23 b(in)h(particular,)h(that)d(it)i(is)f(p)q(ossible)i(to)e(ha)o(v)
o(e)f(three)h(normals)g(from)g(a)f(p)q(oin)o(t)i Fl(outside)j
Fq(the)75 2209 y(parab)q(ola.)20 b(Th)o(us)15 b(the)g(conjecture)h(is)g(en)o
(tirely)g(wrong.)p eop
%%Page: 12 12
12 11 bop 75 -100 a Fq(12)1078 b Fm(The)22 b(Asteroid)g(Problem)p
1199 -93 677 2 v 606 49 a Fn(PURPOSE)c(OF)g(THE)g(PR)o(OJECT)146
151 y Fq(The)c(pro)s(ject)g(in)o(v)o(olv)o(es)h(graphical)h(equation)f
(solving,)g(this)g(time)g(for)f(transcenden)o(tal)h(equations.)75
208 y(It)i(rew)o(ards)g(ph)o(ysical)i(and/or)e(geometric)g(reasoning)h(and)f
(p)q(enalizes)j(blind)f(groping.)27 b(It)17 b(reinforces)75
264 y(the)h(problem)g(solving)h(maxims)f(giv)o(en)g(in)g(the)g(In)o(tro)q
(duction.)29 b(As)17 b(a)h(w)o(arm-up)f(it)h(w)o(ould)g(b)q(e)h(useful)75
321 y(to)14 b(assign)h(problems)h(that)e(in)o(v)o(olv)o(e)h(making)g(sk)o
(etc)o(hes)g(and/or)f(algebraic)i(manipulation)g(of)f(sym)o(b)q(ols)75
377 y(suc)o(h)21 b(as)f(\\A)h(rectangle)g(of)f(\014xed)h(p)q(erimeter)g
Fh(P)28 b Fq(is)21 b(rotated)e(around)i(one)g(of)f(its)h(edges)f(to)g(form)g
(a)75 434 y(cylinder,)d(write)e(its)g(v)o(olume)h Fh(V)25 b
Fq(as)15 b(a)f(function)i(of)f(the)h(length)f(of)g(that)g(edge.")146
510 y(Y)l(ou)c(m)o(ust)f(ha)o(v)o(e)g(some)g(mec)o(hanism)i(to)e(mak)o(e)g
(sure)h(that)f(the)h(studen)o(ts)f(ha)o(v)o(e)g(the)h(correct)g(equation)75
567 y(b)q(efore)18 b(the)g(lab)h(w)o(ork)e(b)q(egins.)29 b(P)o(erhaps)18
b(y)o(ou)g(will)h(w)o(an)o(t)e(to)g(allo)o(w)i(this)f(part)f(to)h(b)q(e)g
(done)h(in)g(class)75 623 y(b)q(eforehand)12 b(or)e(as)h(preliminary)i(homew)
o(ork)d(and)h(then)g(giv)o(e)h(the)f(correct)f(answ)o(er)h(b)q(efore)g(the)g
(studen)o(ts)75 680 y(try)k(the)g(\\In)g(The)h(Lab")f(part.)146
756 y(There)k(is)g(p)q(oten)o(tial)h(for)e(frustration)g(with)h(the)g(lab)h
(w)o(ork)e(in)h(this)h(pro)s(ject)e(\(see)h(the)g(scenarios)75
813 y(describ)q(ed)e(b)q(elo)o(w\))f(and)f(y)o(ou)g(will)i(ha)o(v)o(e)e(to)f
(decide)j(whether)e(and)h(ho)o(w)e(m)o(uc)o(h)i(to)e(in)o(terv)o(ene.)75
889 y Fn(Instructor)20 b(Note)p Fq(:)45 b(The)18 b(basic)h(asteroid)f
(problem)h(is)g(\\lifted")g(from)e(the)h(T)l(eac)o(her's)g(Edition)h(of)75
946 y(Edw)o(ards)12 b(and)i(P)o(enney's)f(Third)h(Edition.)20
b(The)13 b(appro)o(ximate)g(answ)o(er)f(is)i Fh(r)f Fq(=)g
Fh(s)1487 929 y Fe(2)1507 946 y Fh(=)p Fq(2)p Fh(h)g Fq(\(see)g(Figure)g
(4\),)75 1002 y(so,)g(if)h(y)o(ou)f(lik)o(e,)h(y)o(ou)f(can)h(v)m(ary)f(the)g
(n)o(um)o(b)q(ers)h(a)f(bit)h(and)f(still)i(ha)o(v)o(e)e(a)g(quic)o(k)h(men)o
(tal)f(c)o(hec)o(k)h(in)g(reserv)o(e)75 1059 y(to)j(assess)h(studen)o(t)g(w)o
(ork)f(\(this)h(result)h(is)f(explained)j(b)q(elo)o(w\).)28
b(Some)18 b(studen)o(ts)g(who)g(kno)o(w)g(a)g(little)75 1115
y(ab)q(out)12 b Fl(Mathematic)n(a)17 b Fq(ma)o(y)11 b(complain)j(that)e(the)g
(problem)h(w)o(ould)g(b)q(e)g(easy)f(if)h(only)g(they)f(w)o(ere)h(allo)o(w)o
(ed)75 1171 y(to)f(use)h(the)f Fk(Solve)g Fq(command.)19 b(In)13
b(fact,)f(neither)h Fk(Solve)f Fq(nor)g Fk(NSolve)g Fq(will)i(help)g(with)e
(transcenden)o(tal)75 1228 y(equations|y)o(ou)i(need)i Fk(FindRoot)p
Fq(.)i(In)d(turn,)g Fk(FindRoot)e Fq(requires)i(a)g(go)q(o)q(d)f(starting)g
(guess)h(and)g(that)75 1284 y(is)h(just)f(what's)f Fl(har)n(d)20
b Fq(in)c(this)g(pro)s(ject!)577 1409 y Fn(ANSWERS)h(F)o(OR)h(INSTR)o(UCTORS)
675 2023 y @beginspecial 0 @llx 0 @lly 301 @urx 271 @ury 1438
@rwi @setspecial
%%BeginDocument: asteroid.eps


/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /estroke {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /efill {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath unpagectm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /apstroke {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc pie chord or {
        closepath
    } if crlinalph setalpha pie not chord not and {
        crfrtarw {
            2 copy crlinw exch gsave newpath angle1 1 add cos radius mul radius add angle1 1 add sin radius mul radius add moveto angle1 cos radius mul radius add angle1 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if crendarw {
            2 copy crlinw exch gsave newpath angle2 1 sub cos radius mul radius add angle2 1 sub sin radius mul radius add moveto angle2 cos radius mul radius add angle2 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if
    } if crlincp setlinecap crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /apfill {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup 5 -2 roll arc pie chord or {
        closepath
    } if 1 xscale div 1 yscale div scale crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /mkepath {
    dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def /closed exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc closed pie or chord or {
        closepath
    } if unpagectm
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 301 271 rectclip
-180 -270 translate
180 270 300.830994 271 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 0 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crlinw 1 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 135 1 -1 180 540 1.066667 0 0 1 -11.999985 0 sc5mt astore estroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 126 324 414 1 0 0 1 0 -1 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 144 0 324 540 1 0 0 1 0 0 sc6mt astore ssl
/esave save def -4.371139e-08 1 -1 -4.371139e-08 767.338623 104.031555 sc4mt astore 4.371139e-08 -1 -1 -4.371139e-08 767.338623 767.338623 sc6mt astore 81.22097 180 325 457.152954 1 -1.038014 13.152954 false false 4.371139e-08 -1 -0.963995 -4.213755e-08 752.370361 767.338623 sc5mt astore apstroke esave restore
/txtdraw true def
/txlndraw true def
(q) [0 0] 333 449 /Symbol [ 12 1 mul 0 0 12 0 0 ] [1.976617 0 0 1.327683 -325.717407 -149.842926] dotx
/txtdraw true def
/txlndraw true def
( ) [0 0] 339.252014 449 /Symbol [ 14 1 mul 0 0 14 0 0 ] [1.976617 0 0 1.327683 -325.717407 -149.842926] dotx
/txtdraw true def
/txlndraw true def
(r ) [6.216003 0 0 0] 306 478 /Times-Bold [ 14 1 mul 0 0 14 0 0 ] [1.410939 0 0 1.604046 -121.32016 -292.734131] dotx
(r ) [6.216003 0 0 0] 306 478 /Times-Bold [ 14 1 mul 0 0 14 0 0 ] [1.410939 0 0 1.604046 -41.950081 -315.411285] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore -145 -125 470 539 1 0 0 1 0 0 sc6mt astore ssl
(h ) [7.783997 0 0 0] 456 514 /Times-Bold [ 14 1 mul 0 0 14 0 0 ] [1.485932 0 0 1.422655 -221.693909 -221.244614] dotx
/txtdraw true def
/txlndraw true def
(h = 1 ) [8.895996 0 4 0 9.119995 0 4 0 8 0 0 0] 292 355 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 0 0] dotx
/txtdraw true def
/txlndraw true def
( ) [0 0] 293 334 /Times-Bold [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 0 0] dotx
/txtdraw true def
/txlndraw true def
(s = 400 ) [6.223999 0 4 0 9.119995 0 4 0 8 0 8 0 8 0 0 0] 287 332 /Times-Bold [ 16 1 mul 0 0 16 0 0 ] [1 0 0 1 5 1] dotx
/txtdraw true def
/txlndraw true def
(s ) [5.446014 0 0 0] 374 519 /Times-Bold [ 14 1 mul 0 0 14 0 0 ] [2.264046 0 0 1.557938 -473.195587 -294.264343] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 615 2110 a Fi(Fig)p Fq(.)d(4.)20 b(Sk)o(etc)o(h)15
b(for)f(asteroid)i(problem.)75 2224 y Fn(Exercise)j(1.)25 b
Fq(Figure)17 b(4)g(giv)o(es)g(a)g(suitable)h(answ)o(er,)e(consonan)o(t)h
(with)g(an)g(emphasis)h(on)f(generalit)o(y)l(.)75 2280 y(A)e(common)g(mistak)
o(e)g(is)h(dra)o(wing)f(the)g(ro)q(d)g(v)o(ertical)h(instead)g(of)f(normal)g
(to)f(the)i(asteroid.)75 2357 y Fn(Exercise)j(2.)24 b Fq(There)17
b(are)f(sev)o(eral)h(p)q(ossible)i(answ)o(ers,)d(the)g(simplest)i(is)f
(probably)g(to)f(use)h(the)g(righ)o(t)75 2413 y(triangle)h(to)e(deriv)o(e)j
(cos)7 b Fh(\022)18 b Fq(=)e Fh(r)q(=)p Fq(\()p Fh(r)11 b Fq(+)h
Fh(h)p Fq(\))17 b(and)h(then)f(to)g(use)h Fh(s)e Fq(=)g Fh(r)q(\022)j
Fq(to)e(deriv)o(e)h(the)f(\014nal)h(form)f(to)f(b)q(e)75 2469
y(used)g(in)g(this)f(Pro)s(ject:)832 2533 y(cos)905 2502 y
Fh(s)p 905 2522 22 2 v 905 2564 a(r)944 2533 y Fq(=)1038 2502
y Fh(r)p 997 2522 104 2 v 997 2564 a(r)c Fq(+)g Fh(h)1106 2533
y(:)75 2629 y Fq(Here)k Fh(h)e Fq(=)g(1,)i(and)g Fh(s)e Fq(=)g(400.)p
eop
%%Page: 13 13
13 12 bop 75 -100 a Fm(The)22 b(Asteroid)h(Problem)p 75 -93
677 2 v 1077 w Fq(13)75 49 y Fn(Exercise)14 b(3.)19 b Fq(The)13
b(con)o(ten)o(t)g(of)f(the)h(In)o(termediate)g(V)l(alue)h(Theorem)f(really)h
Fl(is)i Fq(in)o(tuitiv)o(ely)e(ob)o(vious|)75 99 y(the)h(big)h(surprise)g(is)
g(that)e(the)i Fl(pr)n(o)n(of)25 b Fq(of)14 b(it)i(requires)g(\\deep")g
(analysis.)k(An)o(yw)o(a)o(y)l(,)14 b(v)m(arying)i(the)g(table)75
149 y(parameters)e(sho)o(ws)h(that)f(the)i(required)g(result)g(is)f(0.75:)75
260 y Fj(Table[{x,)20 b(Cos[x])g(-)i(x},)f({x,)g(.6,)h(.8,)f(.05}])g
(//TableForm)162 360 y(0.6)87 b(0.225336)162 410 y(0.65)65
b(0.146084)162 459 y(0.7)87 b(0.0648422)162 509 y(0.75)65 b(-0.0183111)162
559 y(0.8)87 b(-0.103293)75 692 y Fn(Exercise)20 b(4.)27 b
Fq(There)18 b(is)g(real)g(p)q(oten)o(tial)g(for)f(learning)i(here!)27
b(Man)o(y)17 b(studen)o(ts)g(will)j(b)q(egin)e(plotting)75
742 y(near)d(the)g(origin,)h(getting)f(an)g(apparen)o(tly)g(w)o(eird)g
(result)h(lik)o(e)g(that)f(sho)o(wn)f(in)i(Figure)g(5.)j(This)d(\014gure)75
791 y(resulted)g(from)f(the)g(commands:)75 903 y Fj(s)22 b(=)f(400.0;)g(h)g
(=)h(1.0;)75 952 y(Plot[Cos[s/r])d(-)j(r/\(r)f(+)g(h\),)g({r,)h(0,)f(10}])571
1569 y @beginspecial 0 @llx 0 @lly 282 @urx 174 @ury 1937 @rwi
@setspecial
%%BeginDocument: search1.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.000000 def
/Mwidth		282.000000 def
/Mheight	174.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.02381 0.095238 0.43149 0.218518 [
[(2)] 0.21429 0.43149 0 2 Msboxa
[(4)] 0.40476 0.43149 0 2 Msboxa
[(6)] 0.59524 0.43149 0 2 Msboxa
[(8)] 0.78571 0.43149 0 2 Msboxa
[(10)] 0.97619 0.43149 0 2 Msboxa
[(-1.5)] 0.01131 0.10371 1 0 Msboxa
[(-1)] 0.01131 0.21297 1 0 Msboxa
[(-0.5)] 0.01131 0.32223 1 0 Msboxa
[(0.5)] 0.01131 0.54075 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.21429 0.43149 moveto
0.21429 0.43774 lineto
stroke
grestore
[(2)] 0.21429 0.43149 0 2 Mshowa
gsave
0.002 setlinewidth
0.40476 0.43149 moveto
0.40476 0.43774 lineto
stroke
grestore
[(4)] 0.40476 0.43149 0 2 Mshowa
gsave
0.002 setlinewidth
0.59524 0.43149 moveto
0.59524 0.43774 lineto
stroke
grestore
[(6)] 0.59524 0.43149 0 2 Mshowa
gsave
0.002 setlinewidth
0.78571 0.43149 moveto
0.78571 0.43774 lineto
stroke
grestore
[(8)] 0.78571 0.43149 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.43149 moveto
0.97619 0.43774 lineto
stroke
grestore
[(10)] 0.97619 0.43149 0 2 Mshowa
gsave
0.001 setlinewidth
0.0619 0.43149 moveto
0.0619 0.43524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1 0.43149 moveto
0.1 0.43524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1381 0.43149 moveto
0.1381 0.43524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.17619 0.43149 moveto
0.17619 0.43524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.25238 0.43149 moveto
0.25238 0.43524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29048 0.43149 moveto
0.29048 0.43524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.32857 0.43149 moveto
0.32857 0.43524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36667 0.43149 moveto
0.36667 0.43524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44286 0.43149 moveto
0.44286 0.43524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.48095 0.43149 moveto
0.48095 0.43524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.51905 0.43149 moveto
0.51905 0.43524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.55714 0.43149 moveto
0.55714 0.43524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63333 0.43149 moveto
0.63333 0.43524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.67143 0.43149 moveto
0.67143 0.43524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.70952 0.43149 moveto
0.70952 0.43524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.74762 0.43149 moveto
0.74762 0.43524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.82381 0.43149 moveto
0.82381 0.43524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.8619 0.43149 moveto
0.8619 0.43524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9 0.43149 moveto
0.9 0.43524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9381 0.43149 moveto
0.9381 0.43524 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.43149 moveto
1 0.43149 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0.10371 moveto
0.03006 0.10371 lineto
stroke
grestore
[(-1.5)] 0.01131 0.10371 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.21297 moveto
0.03006 0.21297 lineto
stroke
grestore
[(-1)] 0.01131 0.21297 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.32223 moveto
0.03006 0.32223 lineto
stroke
grestore
[(-0.5)] 0.01131 0.32223 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.54075 moveto
0.03006 0.54075 lineto
stroke
grestore
[(0.5)] 0.01131 0.54075 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.12557 moveto
0.02756 0.12557 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.14742 moveto
0.02756 0.14742 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.16927 moveto
0.02756 0.16927 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.19112 moveto
0.02756 0.19112 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.23482 moveto
0.02756 0.23482 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.25668 moveto
0.02756 0.25668 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.27853 moveto
0.02756 0.27853 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.30038 moveto
0.02756 0.30038 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.34408 moveto
0.02756 0.34408 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.36594 moveto
0.02756 0.36594 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.38779 moveto
0.02756 0.38779 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.40964 moveto
0.02756 0.40964 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.45334 moveto
0.02756 0.45334 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.47519 moveto
0.02756 0.47519 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.49705 moveto
0.02756 0.49705 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.5189 moveto
0.02756 0.5189 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.08186 moveto
0.02756 0.08186 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.06001 moveto
0.02756 0.06001 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.03816 moveto
0.02756 0.03816 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.01631 moveto
0.02756 0.01631 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.5626 moveto
0.02756 0.5626 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.58445 moveto
0.02756 0.58445 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.6063 moveto
0.02756 0.6063 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02505 0.44261 moveto
0.02629 0.26658 lineto
0.02877 0.34028 lineto
0.03001 0.54431 lineto
0.03125 0.56852 lineto
0.03249 0.20065 lineto
0.03373 0.53372 lineto
0.03497 0.41012 lineto
0.03621 0.60038 lineto
0.03745 0.188 lineto
0.03869 0.20052 lineto
0.03993 0.5803 lineto
0.04117 0.42325 lineto
0.04241 0.60332 lineto
0.04365 0.20069 lineto
0.04489 0.21701 lineto
0.04613 0.23494 lineto
0.04737 0.28479 lineto
0.04861 0.17403 lineto
0.04985 0.47878 lineto
0.05109 0.39905 lineto
0.05233 0.18683 lineto
0.05357 0.33626 lineto
0.05481 0.17987 lineto
0.05605 0.58501 lineto
0.05729 0.56415 lineto
0.05853 0.20984 lineto
0.05977 0.19046 lineto
0.06101 0.58586 lineto
0.06225 0.32422 lineto
0.06349 0.41989 lineto
0.06597 0.43349 lineto
0.06721 0.28593 lineto
0.06845 0.44502 lineto
0.06969 0.49801 lineto
0.07093 0.24699 lineto
0.07217 0.21326 lineto
0.07341 0.38269 lineto
0.07465 0.35578 lineto
0.07589 0.16939 lineto
0.07713 0.28979 lineto
0.07837 0.51205 lineto
0.07961 0.22207 lineto
0.08085 0.29819 lineto
0.08209 0.56405 lineto
0.08333 0.48585 lineto
0.08457 0.38787 lineto
0.08581 0.39272 lineto
0.08705 0.4913 lineto
0.08829 0.55934 lineto
Mistroke
0.08953 0.34253 lineto
0.09077 0.13014 lineto
0.09201 0.51319 lineto
0.09325 0.26165 lineto
0.09449 0.37413 lineto
0.09573 0.27356 lineto
0.09697 0.4846 lineto
0.09821 0.11782 lineto
0.09945 0.46156 lineto
0.10069 0.4718 lineto
0.10193 0.16203 lineto
0.10317 0.16003 lineto
0.10441 0.37352 lineto
0.10565 0.52238 lineto
0.10689 0.54523 lineto
0.10813 0.50613 lineto
0.10938 0.46582 lineto
0.11062 0.45157 lineto
0.1131 0.50734 lineto
0.11434 0.54102 lineto
0.11558 0.52151 lineto
0.11682 0.40414 lineto
0.11806 0.21501 lineto
0.1193 0.10362 lineto
0.12054 0.23154 lineto
0.12178 0.48828 lineto
0.12302 0.48346 lineto
0.14286 0.50757 lineto
0.1441 0.12916 lineto
0.14534 0.47753 lineto
0.14658 0.14338 lineto
0.14782 0.47835 lineto
0.14906 0.12411 lineto
0.1503 0.50668 lineto
0.15154 0.0921 lineto
0.15278 0.5237 lineto
0.15402 0.1043 lineto
0.15526 0.45939 lineto
0.15774 0.27539 lineto
0.15898 0.43767 lineto
0.16022 0.09602 lineto
0.16146 0.51131 lineto
0.1627 0.17782 lineto
0.16394 0.27726 lineto
0.16518 0.4676 lineto
0.16642 0.08294 lineto
0.16766 0.42999 lineto
0.17262 0.28955 lineto
0.17386 0.1156 lineto
0.1751 0.49163 lineto
Mistroke
0.17634 0.29685 lineto
0.17758 0.09921 lineto
0.17882 0.46103 lineto
0.18006 0.36779 lineto
0.1813 0.07682 lineto
0.18254 0.36611 lineto
0.18378 0.47217 lineto
0.18502 0.12535 lineto
0.18626 0.19767 lineto
0.1875 0.5051 lineto
0.18874 0.30833 lineto
0.18998 0.07481 lineto
0.19122 0.33774 lineto
0.19246 0.49978 lineto
0.1937 0.20833 lineto
0.19494 0.09381 lineto
0.19618 0.39069 lineto
0.19742 0.48391 lineto
0.19866 0.19138 lineto
0.1999 0.09122 lineto
0.20114 0.36914 lineto
0.20238 0.49806 lineto
0.20362 0.2462 lineto
0.20486 0.07041 lineto
0.2061 0.27405 lineto
0.20734 0.50076 lineto
0.20858 0.37243 lineto
0.20982 0.10618 lineto
0.21106 0.12823 lineto
0.2123 0.39631 lineto
0.21478 0.28337 lineto
0.21602 0.07496 lineto
0.21726 0.16649 lineto
0.2185 0.42228 lineto
0.21974 0.48984 lineto
0.22098 0.28406 lineto
0.22222 0.07955 lineto
0.2247 0.37568 lineto
0.22594 0.50138 lineto
0.22718 0.36621 lineto
0.22842 0.13456 lineto
0.22966 0.07293 lineto
0.2309 0.24507 lineto
0.23214 0.45618 lineto
0.23338 0.47921 lineto
0.23462 0.29501 lineto
0.23586 0.09772 lineto
0.2371 0.08522 lineto
0.23834 0.26438 lineto
0.23958 0.45741 lineto
Mistroke
0.24082 0.48203 lineto
0.24206 0.32 lineto
0.24702 0.39256 lineto
0.24826 0.49593 lineto
0.2495 0.42125 lineto
0.25074 0.2328 lineto
0.25198 0.08076 lineto
0.25322 0.08035 lineto
0.25446 0.22751 lineto
0.2557 0.4098 lineto
0.25694 0.49468 lineto
0.25942 0.25236 lineto
0.26066 0.09735 lineto
0.2619 0.06221 lineto
0.26314 0.16649 lineto
0.26438 0.3395 lineto
0.26563 0.47063 lineto
0.26687 0.48014 lineto
0.26935 0.19761 lineto
0.27059 0.07555 lineto
0.27183 0.06745 lineto
0.27307 0.1747 lineto
0.27431 0.33524 lineto
0.27555 0.46109 lineto
0.27679 0.48654 lineto
0.27803 0.40091 lineto
0.27927 0.25062 lineto
0.28051 0.11236 lineto
0.28175 0.05353 lineto
0.28423 0.22772 lineto
0.28547 0.37444 lineto
0.28671 0.47299 lineto
0.28795 0.48041 lineto
0.28919 0.39567 lineto
0.29043 0.25766 lineto
0.29167 0.12616 lineto
0.29291 0.05572 lineto
0.29415 0.07354 lineto
0.29663 0.3053 lineto
0.29787 0.42552 lineto
0.29911 0.48526 lineto
0.30035 0.46355 lineto
0.30159 0.37036 lineto
0.30283 0.24113 lineto
0.30407 0.12266 lineto
0.30531 0.05606 lineto
0.30655 0.06289 lineto
0.30779 0.13898 lineto
0.30903 0.25729 lineto
0.31027 0.37809 lineto
Mistroke
0.31151 0.46245 lineto
0.31275 0.48454 lineto
0.31399 0.43895 lineto
0.31523 0.34117 lineto
0.31647 0.2218 lineto
0.31771 0.11657 lineto
0.31895 0.0557 lineto
0.32019 0.0555 lineto
0.32143 0.11454 lineto
0.32267 0.21503 lineto
0.32391 0.32859 lineto
0.32515 0.42443 lineto
0.32639 0.47765 lineto
0.32763 0.47537 lineto
0.32887 0.41944 lineto
0.33011 0.3251 lineto
0.33135 0.21654 lineto
0.33259 0.12049 lineto
0.33383 0.05965 lineto
0.33507 0.04754 lineto
0.33631 0.08583 lineto
0.33755 0.16458 lineto
0.33879 0.26511 lineto
0.34003 0.3646 lineto
0.34127 0.44131 lineto
0.34251 0.47923 lineto
0.34375 0.47115 lineto
0.34499 0.41975 lineto
0.34623 0.33652 lineto
0.34747 0.23897 lineto
0.34871 0.14684 lineto
0.34995 0.07806 lineto
0.35119 0.0454 lineto
0.35243 0.05427 lineto
0.35367 0.10207 lineto
0.35615 0.27066 lineto
0.35739 0.35996 lineto
0.35863 0.43122 lineto
0.35987 0.47236 lineto
0.36111 0.47695 lineto
0.36607 0.21239 lineto
0.36731 0.13273 lineto
0.36855 0.07374 lineto
0.36979 0.04413 lineto
0.37103 0.04783 lineto
0.37227 0.08355 lineto
0.37351 0.1453 lineto
0.37475 0.22345 lineto
0.37599 0.30631 lineto
0.37723 0.38192 lineto
Mistroke
0.37847 0.43977 lineto
0.37971 0.47215 lineto
0.38095 0.47512 lineto
0.38219 0.44886 lineto
0.38343 0.39743 lineto
0.38591 0.2502 lineto
0.38715 0.17388 lineto
0.38839 0.10871 lineto
0.38963 0.0626 lineto
0.39087 0.04082 lineto
0.39211 0.04552 lineto
0.39335 0.07561 lineto
0.39583 0.1933 lineto
0.39831 0.33831 lineto
0.39955 0.40053 lineto
0.40079 0.4465 lineto
0.40203 0.4715 lineto
0.40327 0.47323 lineto
0.40451 0.45193 lineto
0.40575 0.41028 lineto
0.41071 0.15164 lineto
0.41195 0.09727 lineto
0.41319 0.05868 lineto
0.41443 0.03926 lineto
0.41567 0.04049 lineto
0.41691 0.06185 lineto
0.41815 0.101 lineto
0.41939 0.15401 lineto
0.42063 0.21584 lineto
0.42312 0.34313 lineto
0.42436 0.39742 lineto
0.4256 0.43916 lineto
0.42684 0.46503 lineto
0.42808 0.47313 lineto
0.42932 0.46311 lineto
0.43056 0.4361 lineto
0.43304 0.34212 lineto
0.43552 0.22205 lineto
0.43676 0.16388 lineto
0.438 0.1129 lineto
0.43924 0.0728 lineto
0.44048 0.04637 lineto
0.44172 0.0353 lineto
0.44296 0.04011 lineto
0.4442 0.06019 lineto
0.44544 0.09383 lineto
0.44792 0.19073 lineto
0.4504 0.30332 lineto
0.45164 0.35597 lineto
0.45288 0.4015 lineto
Mistroke
0.45412 0.43705 lineto
0.45536 0.4605 lineto
0.4566 0.47053 lineto
0.45784 0.46675 lineto
0.45908 0.4496 lineto
0.46032 0.42038 lineto
0.4628 0.33417 lineto
0.46528 0.22957 lineto
0.46776 0.13113 lineto
0.469 0.0913 lineto
0.47024 0.06072 lineto
0.47148 0.04094 lineto
0.47272 0.03287 lineto
0.47396 0.03675 lineto
0.4752 0.05218 lineto
0.47768 0.11309 lineto
0.47892 0.15505 lineto
0.48016 0.20172 lineto
0.48264 0.29932 lineto
0.48512 0.38633 lineto
0.48636 0.42049 lineto
0.4876 0.44623 lineto
0.48884 0.46245 lineto
0.49008 0.46851 lineto
0.49132 0.46429 lineto
0.49256 0.45014 lineto
0.4938 0.42687 lineto
0.49504 0.39568 lineto
0.5 0.22527 lineto
0.50248 0.13969 lineto
0.50372 0.10331 lineto
0.50496 0.07321 lineto
0.5062 0.05055 lineto
0.50744 0.03613 lineto
0.50868 0.03041 lineto
0.50992 0.03349 lineto
0.51984 0.28493 lineto
0.52232 0.36245 lineto
0.52356 0.39541 lineto
0.5248 0.42297 lineto
0.52604 0.44422 lineto
0.52728 0.45852 lineto
0.52852 0.46546 lineto
0.52976 0.46492 lineto
0.531 0.45702 lineto
0.53224 0.44213 lineto
0.53472 0.39395 lineto
0.5372 0.3273 lineto
0.53968 0.25112 lineto
0.54216 0.17513 lineto
Mistroke
0.54464 0.10858 lineto
0.54588 0.08132 lineto
0.54712 0.05915 lineto
0.54836 0.04262 lineto
0.5496 0.03216 lineto
0.55084 0.02797 lineto
0.55208 0.03009 lineto
0.55332 0.03837 lineto
0.55456 0.05249 lineto
0.55952 0.1558 lineto
0.56448 0.2949 lineto
0.56696 0.35957 lineto
0.5682 0.38772 lineto
0.56944 0.41213 lineto
0.57068 0.43226 lineto
0.57192 0.44766 lineto
0.57316 0.45801 lineto
0.5744 0.46311 lineto
0.57564 0.46293 lineto
0.57688 0.45753 lineto
0.57813 0.4471 lineto
0.57937 0.43197 lineto
0.58185 0.38931 lineto
0.58433 0.33388 lineto
0.58929 0.20625 lineto
0.59177 0.14539 lineto
0.59425 0.09344 lineto
0.59549 0.07213 lineto
0.59673 0.05449 lineto
0.59797 0.04085 lineto
0.59921 0.03141 lineto
0.61905 0.32874 lineto
0.62153 0.37839 lineto
0.62277 0.39973 lineto
0.62401 0.41827 lineto
0.62525 0.43373 lineto
0.62649 0.44588 lineto
0.62773 0.45456 lineto
0.62897 0.45966 lineto
0.63021 0.46114 lineto
0.63145 0.45902 lineto
0.63269 0.45338 lineto
0.63393 0.44435 lineto
0.63517 0.43212 lineto
0.63641 0.41691 lineto
0.63889 0.37872 lineto
0.64881 0.17548 lineto
0.65129 0.12763 lineto
0.65377 0.08666 lineto
0.65625 0.05472 lineto
Mistroke
0.65749 0.04264 lineto
0.65873 0.03336 lineto
0.67857 0.2271 lineto
0.68353 0.3206 lineto
0.68601 0.36227 lineto
0.68849 0.39803 lineto
0.68973 0.4132 lineto
0.69097 0.42637 lineto
0.69221 0.43739 lineto
0.69345 0.44617 lineto
0.69469 0.45265 lineto
0.69593 0.45676 lineto
0.69717 0.45849 lineto
0.69841 0.45786 lineto
0.69965 0.45488 lineto
0.70089 0.44963 lineto
0.70213 0.44217 lineto
0.70337 0.43261 lineto
0.70833 0.37609 lineto
0.71329 0.29861 lineto
0.71825 0.21301 lineto
0.72321 0.13253 lineto
0.72569 0.09793 lineto
0.72817 0.06873 lineto
0.73065 0.04587 lineto
0.73189 0.03704 lineto
0.73313 0.03003 lineto
0.73438 0.02488 lineto
0.73562 0.02161 lineto
0.73686 0.02024 lineto
0.7381 0.02076 lineto
0.73934 0.02313 lineto
0.74058 0.02733 lineto
0.74182 0.0333 lineto
0.74306 0.04096 lineto
0.74554 0.06105 lineto
0.74802 0.08681 lineto
0.75794 0.22592 lineto
0.76786 0.36761 lineto
0.77034 0.39542 lineto
0.77282 0.41853 lineto
0.7753 0.4364 lineto
0.77654 0.44323 lineto
0.77778 0.44861 lineto
0.77902 0.45251 lineto
0.78026 0.45494 lineto
0.7815 0.45587 lineto
0.78274 0.45533 lineto
0.78398 0.45332 lineto
0.78522 0.44988 lineto
Mistroke
0.78646 0.44505 lineto
0.7877 0.43886 lineto
0.79018 0.42264 lineto
0.79266 0.40176 lineto
0.79762 0.34853 lineto
0.80754 0.21764 lineto
0.8125 0.15287 lineto
0.81746 0.0965 lineto
0.81994 0.07299 lineto
0.82242 0.05323 lineto
0.8249 0.03759 lineto
0.82614 0.0314 lineto
0.82738 0.02633 lineto
0.82862 0.0224 lineto
0.82986 0.01961 lineto
0.8311 0.01798 lineto
0.83234 0.01749 lineto
0.83358 0.01814 lineto
0.83482 0.01992 lineto
0.83606 0.0228 lineto
0.8373 0.02677 lineto
0.85714 0.20031 lineto
0.86706 0.31551 lineto
0.87202 0.36567 lineto
0.87698 0.40635 lineto
0.87946 0.42235 lineto
0.88194 0.43514 lineto
0.88318 0.44029 lineto
0.88442 0.44458 lineto
0.88566 0.44801 lineto
0.8869 0.45057 lineto
0.88814 0.45225 lineto
0.88938 0.45306 lineto
0.89063 0.453 lineto
0.89187 0.45208 lineto
0.89311 0.4503 lineto
0.89435 0.4477 lineto
0.89559 0.44427 lineto
0.89683 0.44004 lineto
0.91667 0.28919 lineto
0.92659 0.18748 lineto
0.93155 0.1398 lineto
0.93651 0.09752 lineto
0.94147 0.06262 lineto
0.94643 0.03662 lineto
0.94891 0.02728 lineto
0.95015 0.02357 lineto
0.95139 0.0205 lineto
0.95263 0.01808 lineto
0.95387 0.01631 lineto
Mistroke
0.95511 0.01519 lineto
0.95635 0.01472 lineto
0.95759 0.01489 lineto
0.95883 0.0157 lineto
0.96007 0.01715 lineto
0.96131 0.01922 lineto
0.96255 0.0219 lineto
0.96379 0.02517 lineto
0.96627 0.03347 lineto
0.97123 0.05653 lineto
0.97619 0.0871 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 107 1656 a Fi(Fig)p Fq(.)15 b(5.)k(A)d(bad)f(start)f(in)i(lo)q
(cating)g(the)f(ph)o(ysically)i(sensible)h(solution)e(of)e(the)i(asteroid)f
(problem.)75 1767 y(In)e(addition,)h(if)g(the)f(studen)o(t)f(really)i(plots)f
(from)f Fh(r)i Fq(=)f(0,)f(there)h(will)i(b)q(e)e(some)g(error)f(messages.)19
b(Either)75 1823 y(b)o(y)e(self-disco)o(v)o(ery)h(or)e(hin)o(t,)i(the)f
(condition)h Fh(r)e(>)g(s)g Fq(=)f(400)h(is)i(ev)o(en)o(tually)g(realized.)26
b(There)17 b(can)h(still)75 1880 y(b)q(e)e(a)f(long)g(searc)o(h)g(fraugh)o(t)
f(with)i(di\016culties.)22 b(F)l(or)15 b(example:)75 2004 y
Fj(Plot[Cos[s/r])k(-)j(r/\(r)f(+)g(h\),)g({r,)h(400,)f(1000}])75
2135 y Fq(pro)q(duces)16 b(Figure)f(6.)75 2207 y(Some)h(studen)o(ts)h(ma)o(y)
e(b)q(egin)j(zo)q(oming)e(on)h(the)f(region)h(\(400)p Fh(;)8
b Fq(600\))13 b(b)q(ecause)k(they)g(mistak)o(e)f(the)g(hor-)75
2257 y(izon)o(tal)21 b(axis)g(dra)o(wn)f(at)g(heigh)o(t)h(-0.3)e(in)j(Figure)
e(6)h(for)e(the)i Fh(r)q Fq(-axis.)36 b(Other)21 b(studen)o(ts)f(will)i
(searc)o(h)75 2307 y(carefully)e(and)f(metho)q(dically)h(up)f(the)g
Fh(r)q Fq(-axis|but)f(a)g(linear)i(searc)o(h)e(from)g Fh(r)h
Fq(=)f(400)g(to)g Fh(r)h Fq(=)g Fg(1)f Fq(is)75 2356 y(di\016cult!)j(One)16
b(can)g(imagine)g(a)f(length)o(y)g(sequence)i(of)d(trials)i(un)o(til)g
(\014nally)h(something)e(lik)o(e:)75 2468 y Fj(Plot[Cos[s/r])k(-)j(r/\(r)f(+)
g(h\),)g({r,)h(25000,)e(125000}])75 2579 y Fq(pro)q(duces)f(Figure)g(7)g(and)
f(the)h(ro)q(ot)f(is)h(\014nally)h(brac)o(k)o(eted.)30 b(A)19
b(few)f(\\zo)q(oms")g(with)h(either)g Fk(Plot)f Fq(or)75 2629
y Fk(Table)c Fq(and)i(the)f(solution)h Fh(r)e Fg(\031)e Fq(80000)p
Fh(:)p Fq(8)i(is)h(obtained:)p eop
%%Page: 14 14
14 13 bop 75 -100 a Fq(14)1078 b Fm(The)22 b(Asteroid)g(Problem)p
1199 -93 677 2 v 571 502 a @beginspecial 0 @llx 0 @lly 282
@urx 174 @ury 1937 @rwi @setspecial
%%BeginDocument: search2.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.000000 def
/Mwidth		282.000000 def
/Mheight	174.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
-0.928571 0.001905 0.808711 2.635257 [
[(600)] 0.21429 0.01813 0 2 Msboxa
[(700)] 0.40476 0.01813 0 2 Msboxa
[(800)] 0.59524 0.01813 0 2 Msboxa
[(900)] 0.78571 0.01813 0 2 Msboxa
[(1000)] 0.97619 0.01813 0 2 Msboxa
[(-0.25)] 0.01131 0.1499 1 0 Msboxa
[(-0.2)] 0.01131 0.28166 1 0 Msboxa
[(-0.15)] 0.01131 0.41342 1 0 Msboxa
[(-0.1)] 0.01131 0.54519 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.21429 0.01813 moveto
0.21429 0.02438 lineto
stroke
grestore
[(600)] 0.21429 0.01813 0 2 Mshowa
gsave
0.002 setlinewidth
0.40476 0.01813 moveto
0.40476 0.02438 lineto
stroke
grestore
[(700)] 0.40476 0.01813 0 2 Mshowa
gsave
0.002 setlinewidth
0.59524 0.01813 moveto
0.59524 0.02438 lineto
stroke
grestore
[(800)] 0.59524 0.01813 0 2 Mshowa
gsave
0.002 setlinewidth
0.78571 0.01813 moveto
0.78571 0.02438 lineto
stroke
grestore
[(900)] 0.78571 0.01813 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.01813 moveto
0.97619 0.02438 lineto
stroke
grestore
[(1000)] 0.97619 0.01813 0 2 Mshowa
gsave
0.001 setlinewidth
0.0619 0.01813 moveto
0.0619 0.02188 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1 0.01813 moveto
0.1 0.02188 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1381 0.01813 moveto
0.1381 0.02188 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.17619 0.01813 moveto
0.17619 0.02188 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.25238 0.01813 moveto
0.25238 0.02188 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29048 0.01813 moveto
0.29048 0.02188 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.32857 0.01813 moveto
0.32857 0.02188 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36667 0.01813 moveto
0.36667 0.02188 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44286 0.01813 moveto
0.44286 0.02188 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.48095 0.01813 moveto
0.48095 0.02188 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.51905 0.01813 moveto
0.51905 0.02188 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.55714 0.01813 moveto
0.55714 0.02188 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63333 0.01813 moveto
0.63333 0.02188 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.67143 0.01813 moveto
0.67143 0.02188 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.70952 0.01813 moveto
0.70952 0.02188 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.74762 0.01813 moveto
0.74762 0.02188 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.82381 0.01813 moveto
0.82381 0.02188 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.8619 0.01813 moveto
0.8619 0.02188 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9 0.01813 moveto
0.9 0.02188 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9381 0.01813 moveto
0.9381 0.02188 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.01813 moveto
1 0.01813 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0.1499 moveto
0.03006 0.1499 lineto
stroke
grestore
[(-0.25)] 0.01131 0.1499 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.28166 moveto
0.03006 0.28166 lineto
stroke
grestore
[(-0.2)] 0.01131 0.28166 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.41342 moveto
0.03006 0.41342 lineto
stroke
grestore
[(-0.15)] 0.01131 0.41342 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.54519 moveto
0.03006 0.54519 lineto
stroke
grestore
[(-0.1)] 0.01131 0.54519 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.04449 moveto
0.02756 0.04449 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.07084 moveto
0.02756 0.07084 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.09719 moveto
0.02756 0.09719 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.12354 moveto
0.02756 0.12354 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.17625 moveto
0.02756 0.17625 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.2026 moveto
0.02756 0.2026 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.22895 moveto
0.02756 0.22895 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.25531 moveto
0.02756 0.25531 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.30801 moveto
0.02756 0.30801 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.33436 moveto
0.02756 0.33436 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.36072 moveto
0.02756 0.36072 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.38707 moveto
0.02756 0.38707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.43977 moveto
0.02756 0.43977 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.46613 moveto
0.02756 0.46613 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.49248 moveto
0.02756 0.49248 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.51883 moveto
0.02756 0.51883 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.57154 moveto
0.02756 0.57154 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.59789 moveto
0.02756 0.59789 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.06349 0.07405 lineto
0.10317 0.1271 lineto
0.14286 0.1747 lineto
0.18254 0.21757 lineto
0.22222 0.25629 lineto
0.2619 0.29139 lineto
0.30159 0.32329 lineto
0.34127 0.35237 lineto
0.38095 0.37895 lineto
0.42063 0.40329 lineto
0.46032 0.42565 lineto
0.5 0.44623 lineto
0.53968 0.46521 lineto
0.57937 0.48275 lineto
0.61905 0.499 lineto
0.65873 0.51407 lineto
0.69841 0.52808 lineto
0.7381 0.54112 lineto
0.77778 0.55329 lineto
0.81746 0.56464 lineto
0.85714 0.57527 lineto
0.89683 0.58522 lineto
0.93651 0.59455 lineto
0.97619 0.60332 lineto
stroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 134 588 a Fi(Fig)p Fq(.)15 b(6.)20 b(Start)14
b(of)h(a)g(p)q(oten)o(tially)h(long)g(searc)o(h)f(in)h(lo)q(cating)g(the)f
(ph)o(ysically)i(sensible)g(solution.)75 726 y Fj(s)22 b(=)f(400.0;)g(h)g(=)h
(1.0;)75 776 y(Table[{r,)e(Cos[s/r])g(-)i(r/\(r)f(+)g(h\)},)75
826 y({r,)g(80000,)g(80001,)f(0.1}]//)h(TableForm)620 926 y(-10)162
976 y(80000)108 b(-1.30206)20 b(10)620 1025 y(-10)162 1075
y(80000.1)64 b(-1.14581)20 b(10)598 1125 y(-11)162 1175 y(80000.2)64
b(-9.8956)20 b(10)598 1225 y(-11)162 1274 y(80000.3)64 b(-8.3331)20
b(10)598 1324 y(-11)162 1374 y(80000.4)64 b(-6.7706)20 b(10)620
1424 y(-11)162 1474 y(80000.5)64 b(-5.20811)20 b(10)620 1523
y(-11)162 1573 y(80000.6)64 b(-3.64563)20 b(10)620 1623 y(-11)162
1673 y(80000.7)64 b(-2.08316)20 b(10)620 1723 y(-12)162 1773
y(80000.8)64 b(-5.20683)20 b(10)598 1822 y(-11)162 1872 y(80000.9)64
b(1.04179)20 b(10)598 1922 y(-11)162 1972 y(80001.)86 b(2.60423)20
b(10)75 2109 y Fn(Exercise)c(5.)j Fq(Some)14 b(studen)o(ts)g(will)i(hit)e(on)
g(the)g(appropriate)g(region)h(more)e(quic)o(kly)j(and)e(others)f(will)75
2165 y(nev)o(er)18 b(emerge)g(from)g(one)g(of)f(the)i(blind)h(alleys.)29
b(A)18 b Fl(physic)n(al)23 b Fq(mo)q(de)18 b(of)g(reasoning)g(that)f
(eliminates)75 2221 y(m)o(uc)o(h)e(or)g(all)h(of)f(the)g(un)o(b)q(ounded)i
(linear)f(searc)o(h)f(is)h(as)f(follo)o(ws:)189 2337 y(Let's)e(see,)i(400)6
b(m)14 b(is)h(just)f(o)o(v)o(er)f(the)h(horizon.)20 b(Ho)o(w)13
b(far)h(a)o(w)o(a)o(y)e(is)j(the)f(horizon)h(on)f(Earth?)189
2394 y(I)e(don't)f(kno)o(w)g(exactly)l(,)h(but)g(let)g(me)f(guess)h(15)f
(miles.)19 b(Since)13 b(the)f(Earth's)e(radius)i(is)g(ab)q(out)189
2450 y(4000)j(miles,)i(the)f(asteroid)g(radius)h(is)g(ab)q(out)f(400)7
b(m)16 b Fg(\002)g Fq(4000/15=106667)t(m.)23 b(Allo)o(wing)189
2507 y(a)14 b(fudge)h(factor)f(of)g(4)g(eac)o(h)h(w)o(a)o(y)l(,)f(I'll)i
(table)f(from)f(25,000)f(to)h(400,000)f(in)i(steps)g(of)f(25000:)75
2629 y Fj(s)22 b(=)f(400.0;)g(h)g(=)h(1.0;)p eop
%%Page: 15 15
15 14 bop 75 -100 a Fm(The)22 b(Asteroid)h(Problem)p 75 -93
677 2 v 1077 w Fq(15)571 502 y @beginspecial 0 @llx 0 @lly
282 @urx 174 @ury 1937 @rwi @setspecial
%%BeginDocument: search3.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.000000 def
/Mwidth		282.000000 def
/Mheight	174.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
-0.214286 9.52381e-06 0.584666 6476.799168 [
[(60000)] 0.35714 0.58467 0 2 Msboxa
[(80000)] 0.54762 0.58467 0 2 Msboxa
[(100000)] 0.7381 0.58467 0 2 Msboxa
[(120000)] 0.92857 0.58467 0 2 Msboxa
[(-0.00008)] 0.15417 0.06652 1 0 Msboxa
[(-0.00006)] 0.15417 0.19606 1 0 Msboxa
[(-0.00004)] 0.15417 0.32559 1 0 Msboxa
[(-0.00002)] 0.15417 0.45513 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.35714 0.58467 moveto
0.35714 0.59092 lineto
stroke
grestore
[(60000)] 0.35714 0.58467 0 2 Mshowa
gsave
0.002 setlinewidth
0.54762 0.58467 moveto
0.54762 0.59092 lineto
stroke
grestore
[(80000)] 0.54762 0.58467 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.58467 moveto
0.7381 0.59092 lineto
stroke
grestore
[(100000)] 0.7381 0.58467 0 2 Mshowa
gsave
0.002 setlinewidth
0.92857 0.58467 moveto
0.92857 0.59092 lineto
stroke
grestore
[(120000)] 0.92857 0.58467 0 2 Mshowa
gsave
0.001 setlinewidth
0.20476 0.58467 moveto
0.20476 0.58842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.24286 0.58467 moveto
0.24286 0.58842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.28095 0.58467 moveto
0.28095 0.58842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31905 0.58467 moveto
0.31905 0.58842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.39524 0.58467 moveto
0.39524 0.58842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.43333 0.58467 moveto
0.43333 0.58842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.47143 0.58467 moveto
0.47143 0.58842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.50952 0.58467 moveto
0.50952 0.58842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.58571 0.58467 moveto
0.58571 0.58842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.62381 0.58467 moveto
0.62381 0.58842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.6619 0.58467 moveto
0.6619 0.58842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.7 0.58467 moveto
0.7 0.58842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77619 0.58467 moveto
0.77619 0.58842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81429 0.58467 moveto
0.81429 0.58842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85238 0.58467 moveto
0.85238 0.58842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.89048 0.58467 moveto
0.89048 0.58842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.12857 0.58467 moveto
0.12857 0.58842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.09048 0.58467 moveto
0.09048 0.58842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.05238 0.58467 moveto
0.05238 0.58842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.01429 0.58467 moveto
0.01429 0.58842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.96667 0.58467 moveto
0.96667 0.58842 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.58467 moveto
1 0.58467 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.16667 0.06652 moveto
0.17292 0.06652 lineto
stroke
grestore
[(-0.00008)] 0.15417 0.06652 1 0 Mshowa
gsave
0.002 setlinewidth
0.16667 0.19606 moveto
0.17292 0.19606 lineto
stroke
grestore
[(-0.00006)] 0.15417 0.19606 1 0 Mshowa
gsave
0.002 setlinewidth
0.16667 0.32559 moveto
0.17292 0.32559 lineto
stroke
grestore
[(-0.00004)] 0.15417 0.32559 1 0 Mshowa
gsave
0.002 setlinewidth
0.16667 0.45513 moveto
0.17292 0.45513 lineto
stroke
grestore
[(-0.00002)] 0.15417 0.45513 1 0 Mshowa
gsave
0.001 setlinewidth
0.16667 0.09243 moveto
0.17042 0.09243 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.11834 moveto
0.17042 0.11834 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.14424 moveto
0.17042 0.14424 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.17015 moveto
0.17042 0.17015 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.22197 moveto
0.17042 0.22197 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.24787 moveto
0.17042 0.24787 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.27378 moveto
0.17042 0.27378 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.29969 moveto
0.17042 0.29969 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.3515 moveto
0.17042 0.3515 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.37741 moveto
0.17042 0.37741 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.40332 moveto
0.17042 0.40332 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.42922 moveto
0.17042 0.42922 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.48104 moveto
0.17042 0.48104 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.50694 moveto
0.17042 0.50694 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.53285 moveto
0.17042 0.53285 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.55876 moveto
0.17042 0.55876 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.04061 moveto
0.17042 0.04061 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.01471 moveto
0.17042 0.01471 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.61057 moveto
0.17042 0.61057 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.16667 0 moveto
0.16667 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.04365 0.11742 lineto
0.06349 0.19765 lineto
0.08333 0.26134 lineto
0.10317 0.31264 lineto
0.14286 0.38892 lineto
0.1627 0.4176 lineto
0.18254 0.44166 lineto
0.22222 0.47932 lineto
0.2619 0.50694 lineto
0.30159 0.52764 lineto
0.34127 0.54342 lineto
0.38095 0.55565 lineto
0.42063 0.56523 lineto
0.46032 0.57283 lineto
0.5 0.57891 lineto
0.53968 0.5838 lineto
0.57937 0.58777 lineto
0.61905 0.59101 lineto
0.65873 0.59366 lineto
0.69841 0.59583 lineto
0.7381 0.59762 lineto
0.77778 0.59909 lineto
0.81746 0.6003 lineto
0.85714 0.6013 lineto
0.89683 0.60211 lineto
0.93651 0.60278 lineto
0.97619 0.60332 lineto
stroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 607 588 a Fi(Fig)p Fq(.)15 b(7.)20 b(A)o(t)15
b(last)g(the)g(ro)q(ot)f(is)i(brac)o(k)o(eted.)75 717 y Fj(Table[{r,)k
(Cos[s/r])g(-)i(r/\(r)f(+)g(h\)},)75 767 y({r,)g(25000,)g(400000,)f
(50000}]//)g(TableForm)162 867 y(25000)86 b(-0.0000879989)598
916 y(-7)162 966 y(75000)g(-8.89033)20 b(10)576 1016 y(-6)162
1066 y(125000)64 b(2.87994)21 b(10)576 1116 y(-6)162 1165 y(175000)64
b(3.10201)21 b(10)576 1215 y(-6)162 1265 y(225000)64 b(2.86418)21
b(10)554 1315 y(-6)162 1365 y(275000)64 b(2.5785)21 b(10)576
1414 y(-6)162 1464 y(325000)64 b(2.31952)21 b(10)576 1514 y(-6)162
1564 y(375000)64 b(2.09777)21 b(10)75 1691 y Fq(A)k(p)q(oten)o(t)f
Fl(ge)n(ometric)n(al)29 b Fq(mo)q(de)24 b(of)g(reasoning)h(replaces)h(the)e
(arc)h(b)o(y)f(the)h(tangen)o(t.)47 b(Then,)27 b(the)75 1747
y(Pythagorean)20 b(theorem)g(giv)o(es)h Fh(s)668 1731 y Fe(2)702
1747 y Fq(+)14 b Fh(r)773 1731 y Fe(2)815 1747 y Fg(\031)22
b Fq(\()p Fh(r)15 b Fq(+)f Fh(h)p Fq(\))1019 1731 y Fe(2)1060
1747 y Fq(=)-8 b Fg(\))24 b Fh(s)1177 1731 y Fe(2)1219 1747
y Fg(\031)e Fq(2)p Fh(hr)15 b Fq(+)f Fh(h)1436 1731 y Fe(2)1478
1747 y Fg(\031)22 b Fq(2)p Fh(hr)q Fq(,)g(whic)o(h)f(leads)75
1804 y(to)15 b(the)g(appro)o(ximation)g Fh(r)e Fg(\031)g Fh(s)615
1787 y Fe(2)635 1804 y Fh(=)p Fq(2)p Fh(h)g Fq(=)g(80)p Fh(;)8
b Fq(000)13 b(men)o(tioned)j(earlier.)75 1881 y Fn(Exercise)k(6.)26
b Fq(Man)o(y)17 b(p)q(ossible)i(answ)o(ers)e(including:)27
b(On)18 b(the)g(one)f(hand,)h(w)o(e)f(can)h(solv)o(e)g(equations)75
1938 y(that)c(w)o(e)h(couldn't)h(do)f(otherwise.)20 b(On)c(the)f(other)g
(hand,)g(it)h(can)f(b)q(e)h(v)o(ery)f(lab)q(or)h(in)o(tensiv)o(e!)p
eop
%%Page: 16 16
16 15 bop 75 -103 a Fq(16)607 b Fm(Deriv)l(ativ)n(es,)21 b(Slop)r(es)i(and)g
(T)-6 b(angen)n(t)24 b(Lines)p 728 -85 1148 2 v 606 49 a Fn(PURPOSE)18
b(OF)g(THE)g(PR)o(OJECT)146 154 y Fq(Illustrate)j(that)f(most)g(functions)i
(at)e(most)g(p)q(oin)o(ts)h(lo)q(ok)h(linear)g(in)f(the)g(small|that)g(is,)h
(they)75 210 y(ha)o(v)o(e)15 b(a)g(w)o(ell)i(de\014ned)f(tangen)o(t)f(line)i
(whose)e(slop)q(e)i(w)o(e)e(can)g(ascertain)h(b)o(y)f(\\zo)q(oming")h(in.)21
b(Exercise)16 b(6)75 267 y(pro)o(vides)k(a)g(cautionary)f(example)i(that)e
(this)h(situation)g(is)g(not,)g(ho)o(w)o(ev)o(er,)g(univ)o(ersal)h(\(see)f
(answ)o(er)75 323 y(b)q(elo)o(w\).)146 402 y(W)l(e)14 b(in)o(tro)q(duce)h(a)e
(\014rst)h(simple)i(form)d(of)h(the)g Fl(Mathematic)n(a)k Fk(Do)13
b Fq(iteration)i(construct.)k(Emphasize)75 458 y(to)g(y)o(our)h(studen)o(ts)g
(that)f(they)i(should)g(\\cop)o(y)e(and)i(paste")e(from)h(the)g(online)i
(Noteb)q(o)q(ok)e(to)f(a)o(v)o(oid)75 514 y(frustrating)d(syn)o(tax)g(errors)
g(\(the)h(existence)h(of)e(these)i(templates)e(mak)o(e)h(it)g(feasible)h(to)e
(use)i(this)f(ad-)75 571 y(v)m(anced)e(construct)f(so)f(early)i(in)f(the)h
(course!\).)j(W)l(e)c(also)g(in)o(tro)q(duce)h(the)f Fk(PlotStyle)f
Fq(option)h(to)g(allo)o(w)75 627 y(distinguishing)k(the)d(v)m(arious)h(curv)o
(es)f(on)g(a)g(single)i(plot)e(b)o(y)g(gra)o(ylev)o(els.)75
706 y Fn(Shorter)26 b(Pro)s(ject)p Fq(:)34 b(If)23 b(a)g(shorter)f(pro)s
(ject)f(is)j(desired,)h(y)o(ou)d(could)i(omit)f(an)o(y)f(com)o(bination)h(of)
75 762 y(Exercises)16 b(5,)e(2)h(and)h(3.)75 840 y Fn(Instructor)h(Note)p
Fq(:)34 b(It)15 b(is)g(left)h(to)e(y)o(ou)g(to)g(explain)j(ho)o(w)d(to)g
(prin)o(t)h(\014les.)21 b(Y)l(ou)15 b(ma)o(y)f(wish)h(to)g(caution)75
897 y(studen)o(ts)h(to)g(prune)h(do)o(wn)f(noteb)q(o)q(oks)g(b)q(efore)g
(prin)o(ting)i(or)d(to)h(prin)o(t)g(only)h(selections.)25 b(Some)16
b(F)l(ron)o(t)75 953 y(Ends)i(allo)o(w)h(omission)f(of)g(the)g(In/Out)h(sym)o
(b)q(ols)f(and/or)f(prin)o(ting)i(2)f(or)g(4)f(pages)h(to)g(a)f(sheet.)29
b(W)l(e)75 1010 y(discourage)22 b(using)h Fl(Mathematic)n(a)i
Fq(as)d(a)f(text)h(pro)q(cessor)f(and)h(adv)o(o)q(cate)g(in)o(terlea)o(ving)h
(or)e(pasting)75 1066 y(limited)c(amoun)o(ts)d(of)h(output)g(with)h(or)e(on)h
(hand,)h(t)o(yp)q(ewritten)f(or)g(computer)g(pro)q(cessed)h(text.)75
1144 y Fn(Instructor)h(Note)p Fq(:)j(Pure)c(unadulterated)g
Fl(Mathematic)n(a)j Fq(treats)14 b(\()p Fg(\000)p Fq(1\))1367
1128 y Fe(1)p Ff(=)p Fe(3)1437 1144 y Fq(as)g(a)h(complex)h(quan)o(tit)o(y)75
1201 y(\(i.e.,)f(not)f(-1\).)20 b(This)c(is)f Fl(not)20 b Fq(a)15
b(bug)g(if)h(y)o(ou're)e(in)o(terested)i(in)g(consisten)o(t)f(de\014nitions)i
(of)e(the)g(common)75 1257 y(complex)h(v)m(alued)g(functions,)g(but)f(it)g
(is)h(sure)f(painful)h(when)g(y)o(ou)f(w)o(an)o(t)f(to)g(con\014ne)i(atten)o
(tion)e(to)h(real)75 1314 y(v)m(alued)21 b(functions)e(as)g(in)h(elemen)o
(tary)f(calculus.)33 b(W)l(e)19 b(use)h(init.m)f(to)g(load)g(in)h(the)f
(\014le)h(Calculus.m)75 1370 y(whic)o(h)g(con)o(tains)e(a)h(\014x)g(for)f
(this)h(problem|otherwise,)h(w)o(e)e(w)o(ould)h(not)g(b)q(e)g(able)h(to)e
Fk(Plot)g Fh(x)1747 1354 y Fe(1)p Ff(=)p Fe(3)1821 1370 y Fq(for)75
1427 y(negativ)o(e)d(argumen)o(ts,)f(etc.,)h(as)g(in)h(Exercise)g(6.)75
1505 y Fn(Instructor)e(Note)p Fq(:)32 b(The)13 b(Instructor)g(Noteb)q(o)q(ok)
f(con)o(tains)h(examples)h(sho)o(wing)f(that)f(a)g(graphically)75
1561 y(pro)q(duced)g(slop)q(e)g(function)g(\(deriv)m(ativ)o(e)g(appro)o
(ximan)o(t\))e(can)i(b)q(e)f(used)h(to)f(motiv)m(ate)g(deriv)m(ativ)o(e)h
(results.)75 1618 y(This)k(didn't)g(\014t)f(in)o(to)g(this)h(pro)s(ject,)e
(but)h(it)g(mak)o(es)g(a)g(nice)h(classro)q(om)f(demonstration.)577
1750 y Fn(ANSWERS)i(F)o(OR)h(INSTR)o(UCTORS)75 1855 y(Exercise)f(1.)j
Fq(Something)c(close)g(to)e(4,)h(probably)859 1946 y(4)p Fh(:)p
Fq(2)9 b Fg(\000)h Fq(4)p 847 1966 160 2 v 847 2008 a(2)p Fh(:)p
Fq(05)f Fg(\000)i Fq(2)1024 1977 y(=)i(4)p Fh(;)75 2096 y Fq(whic)o(h)j(is)g
(righ)o(t)f(on)g(the)g(nose.)75 2168 y Fn(Exercise)i(2.)75
2280 y Fj(f[x_])k(:=)g(x^3)75 2330 y(Expand[\(f[x)f(+)h(h])g(-)h(f[x]\)/h])
184 2380 y(2)305 b(2)162 2429 y(h)44 b(+)21 b(3)h(h)f(x)h(+)f(3)h(x)75
2529 y(\045)g(/.)f(h)h(->)f(0)228 2579 y(2)162 2629 y(3)h(x)p
eop
%%Page: 17 17
17 16 bop 75 -103 a Fm(Deriv)l(ativ)n(es,)21 b(Slop)r(es)i(and)g(T)-6
b(angen)n(t)24 b(Lines)p 75 -85 1148 2 v 607 w Fq(17)75 49
y Fn(Exercise)19 b(3.)25 b Fq(Figure)17 b(8)g(is)g(the)g(graph)g(for)f
Fh(b)f Fq(=)h(2)p Fh(:)p Fq(1,)g Fh(f)5 b Fq(\()p Fh(b)p Fq(\))14
b(=)i(2)p Fh(:)p Fq(68577)f(with)i(secan)o(t)g(slop)q(e)g(8.85769.)75
106 y(The)e(true)h(slop)q(e)g(at)e(2.0)g(is)i(8.16.)639 582
y @beginspecial 0 @llx 0 @lly 282 @urx 174 @ury 1614 @rwi @setspecial
%%BeginDocument: nontrivial.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.047619 0.601246 0.158573 [
[(-10)] 0.02381 0.60125 0 2 Msboxa
[(-5)] 0.2619 0.60125 0 2 Msboxa
[(5)] 0.7381 0.60125 0 2 Msboxa
[(10)] 0.97619 0.60125 0 2 Msboxa
[(-3.5)] 0.4875 0.04624 1 0 Msboxa
[(-3)] 0.4875 0.12553 1 0 Msboxa
[(-2.5)] 0.4875 0.20481 1 0 Msboxa
[(-2)] 0.4875 0.2841 1 0 Msboxa
[(-1.5)] 0.4875 0.36339 1 0 Msboxa
[(-1)] 0.4875 0.44267 1 0 Msboxa
[(-0.5)] 0.4875 0.52196 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.60125 moveto
0.02381 0.6075 lineto
stroke
grestore
[(-10)] 0.02381 0.60125 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.60125 moveto
0.2619 0.6075 lineto
stroke
grestore
[(-5)] 0.2619 0.60125 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.60125 moveto
0.7381 0.6075 lineto
stroke
grestore
[(5)] 0.7381 0.60125 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.60125 moveto
0.97619 0.6075 lineto
stroke
grestore
[(10)] 0.97619 0.60125 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.60125 moveto
0.07143 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.60125 moveto
0.11905 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.60125 moveto
0.16667 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.60125 moveto
0.21429 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.60125 moveto
0.30952 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.60125 moveto
0.35714 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.60125 moveto
0.40476 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.60125 moveto
0.45238 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.60125 moveto
0.54762 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.60125 moveto
0.59524 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.60125 moveto
0.64286 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.60125 moveto
0.69048 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.60125 moveto
0.78571 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.60125 moveto
0.83333 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.60125 moveto
0.88095 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.60125 moveto
0.92857 0.605 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.60125 moveto
1 0.60125 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.04624 moveto
0.50625 0.04624 lineto
stroke
grestore
[(-3.5)] 0.4875 0.04624 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.12553 moveto
0.50625 0.12553 lineto
stroke
grestore
[(-3)] 0.4875 0.12553 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.20481 moveto
0.50625 0.20481 lineto
stroke
grestore
[(-2.5)] 0.4875 0.20481 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.2841 moveto
0.50625 0.2841 lineto
stroke
grestore
[(-2)] 0.4875 0.2841 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.36339 moveto
0.50625 0.36339 lineto
stroke
grestore
[(-1.5)] 0.4875 0.36339 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.44267 moveto
0.50625 0.44267 lineto
stroke
grestore
[(-1)] 0.4875 0.44267 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.52196 moveto
0.50625 0.52196 lineto
stroke
grestore
[(-0.5)] 0.4875 0.52196 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.0621 moveto
0.50375 0.0621 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.07796 moveto
0.50375 0.07796 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.09381 moveto
0.50375 0.09381 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.10967 moveto
0.50375 0.10967 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.14138 moveto
0.50375 0.14138 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.15724 moveto
0.50375 0.15724 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1731 moveto
0.50375 0.1731 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18896 moveto
0.50375 0.18896 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22067 moveto
0.50375 0.22067 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.23653 moveto
0.50375 0.23653 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.25239 moveto
0.50375 0.25239 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.26824 moveto
0.50375 0.26824 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.29996 moveto
0.50375 0.29996 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31581 moveto
0.50375 0.31581 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.33167 moveto
0.50375 0.33167 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.34753 moveto
0.50375 0.34753 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.37924 moveto
0.50375 0.37924 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.3951 moveto
0.50375 0.3951 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.41096 moveto
0.50375 0.41096 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.42682 moveto
0.50375 0.42682 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45853 moveto
0.50375 0.45853 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.47439 moveto
0.50375 0.47439 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.49024 moveto
0.50375 0.49024 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.5061 moveto
0.50375 0.5061 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.53782 moveto
0.50375 0.53782 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55367 moveto
0.50375 0.55367 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.56953 moveto
0.50375 0.56953 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.58539 moveto
0.50375 0.58539 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.03038 moveto
0.50375 0.03038 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.01453 moveto
0.50375 0.01453 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.6171 moveto
0.50375 0.6171 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.60105 moveto
0.04365 0.60102 lineto
0.06349 0.60099 lineto
0.10317 0.6009 lineto
0.12302 0.60084 lineto
0.14286 0.60076 lineto
0.1627 0.60066 lineto
0.18254 0.60053 lineto
0.20238 0.60036 lineto
0.22222 0.60013 lineto
0.24206 0.59981 lineto
0.2619 0.59937 lineto
0.27183 0.59908 lineto
0.28175 0.59873 lineto
0.29167 0.5983 lineto
0.30159 0.59776 lineto
0.31151 0.59709 lineto
0.32143 0.59623 lineto
0.33135 0.59512 lineto
0.34127 0.59366 lineto
0.35119 0.5917 lineto
0.36111 0.58901 lineto
0.37103 0.58522 lineto
0.37599 0.58274 lineto
0.38095 0.57974 lineto
0.38591 0.57606 lineto
0.39087 0.5715 lineto
0.39583 0.56582 lineto
0.40079 0.55863 lineto
0.40575 0.54945 lineto
0.41071 0.53757 lineto
0.41567 0.522 lineto
0.42063 0.50137 lineto
0.4256 0.47375 lineto
0.43056 0.4366 lineto
0.43552 0.38687 lineto
0.44048 0.32181 lineto
0.4504 0.15213 lineto
0.45288 0.10935 lineto
0.45536 0.07166 lineto
0.45784 0.04201 lineto
0.45908 0.03097 lineto
0.46032 0.02269 lineto
0.46156 0.01728 lineto
0.4628 0.01472 lineto
0.46404 0.0149 lineto
0.46528 0.01766 lineto
0.46652 0.02275 lineto
0.46776 0.0299 lineto
0.47024 0.04911 lineto
Mistroke
0.48016 0.1511 lineto
0.48512 0.19756 lineto
0.49008 0.23521 lineto
0.49504 0.26379 lineto
0.49752 0.27492 lineto
0.5 0.2841 lineto
0.50248 0.29148 lineto
0.50496 0.29718 lineto
0.50744 0.30136 lineto
0.50868 0.30291 lineto
0.50992 0.30414 lineto
0.51116 0.30506 lineto
0.5124 0.3057 lineto
0.51364 0.30609 lineto
0.51488 0.30625 lineto
0.51612 0.30622 lineto
0.51736 0.30603 lineto
0.51984 0.30538 lineto
0.52108 0.30503 lineto
0.52232 0.30474 lineto
0.52356 0.3046 lineto
0.5248 0.30468 lineto
0.52604 0.30509 lineto
0.52728 0.30591 lineto
0.52852 0.30726 lineto
0.52976 0.30925 lineto
0.531 0.31198 lineto
0.53224 0.31555 lineto
0.53472 0.32558 lineto
0.5372 0.3398 lineto
0.53968 0.35817 lineto
0.5496 0.45457 lineto
0.55456 0.49886 lineto
0.55952 0.5328 lineto
0.562 0.54588 lineto
0.56448 0.55669 lineto
0.56696 0.56556 lineto
0.56944 0.57278 lineto
0.5744 0.5834 lineto
0.57688 0.58726 lineto
0.57937 0.59038 lineto
0.58185 0.59291 lineto
0.58433 0.59496 lineto
0.58929 0.59798 lineto
0.59177 0.59907 lineto
0.59425 0.59996 lineto
0.59673 0.60068 lineto
0.59921 0.60127 lineto
0.60169 0.60174 lineto
0.60417 0.60212 lineto
Mistroke
0.60665 0.60242 lineto
0.60913 0.60266 lineto
0.61161 0.60285 lineto
0.61409 0.60299 lineto
0.61657 0.6031 lineto
0.61905 0.60319 lineto
0.62029 0.60322 lineto
0.62153 0.60325 lineto
0.62277 0.60327 lineto
0.62401 0.60328 lineto
0.62525 0.6033 lineto
0.62649 0.60331 lineto
0.62773 0.60331 lineto
0.62897 0.60332 lineto
0.63021 0.60332 lineto
0.63145 0.60332 lineto
0.63269 0.60331 lineto
0.63393 0.60331 lineto
0.63889 0.60327 lineto
0.64137 0.60324 lineto
0.64385 0.60321 lineto
0.64881 0.60314 lineto
0.65873 0.60298 lineto
0.69841 0.6024 lineto
0.71825 0.60218 lineto
0.7381 0.60201 lineto
0.75794 0.60188 lineto
0.77778 0.60177 lineto
0.79762 0.60169 lineto
0.81746 0.60162 lineto
0.8373 0.60157 lineto
0.85714 0.60152 lineto
0.89683 0.60145 lineto
0.91667 0.60143 lineto
0.93651 0.60141 lineto
0.97619 0.60137 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 510 669 a Fi(Fig)p Fq(.)f(8.)20 b(\\T)l(angen)o(t")14
b(and)h(the)g(non)o(trivial)i(function.)639 1175 y @beginspecial
0 @llx 0 @lly 282 @urx 174 @ury 1614 @rwi @setspecial
%%BeginDocument: cubic.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
-7.119048 3.809524 -1.276922 0.195946 [
[(1.9)] 0.11905 0.0947 0 2 Msboxa
[(1.95)] 0.30952 0.0947 0 2 Msboxa
[(2.05)] 0.69048 0.0947 0 2 Msboxa
[(2.1)] 0.88095 0.0947 0 2 Msboxa
[(7.5)] 0.4875 0.19267 1 0 Msboxa
[(8)] 0.4875 0.29065 1 0 Msboxa
[(8.5)] 0.4875 0.38862 1 0 Msboxa
[(9)] 0.4875 0.48659 1 0 Msboxa
[(9.5)] 0.4875 0.58457 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.11905 0.0947 moveto
0.11905 0.10095 lineto
stroke
grestore
[(1.9)] 0.11905 0.0947 0 2 Mshowa
gsave
0.002 setlinewidth
0.30952 0.0947 moveto
0.30952 0.10095 lineto
stroke
grestore
[(1.95)] 0.30952 0.0947 0 2 Mshowa
gsave
0.002 setlinewidth
0.69048 0.0947 moveto
0.69048 0.10095 lineto
stroke
grestore
[(2.05)] 0.69048 0.0947 0 2 Mshowa
gsave
0.002 setlinewidth
0.88095 0.0947 moveto
0.88095 0.10095 lineto
stroke
grestore
[(2.1)] 0.88095 0.0947 0 2 Mshowa
gsave
0.001 setlinewidth
0.15714 0.0947 moveto
0.15714 0.09845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.19524 0.0947 moveto
0.19524 0.09845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.23333 0.0947 moveto
0.23333 0.09845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.27143 0.0947 moveto
0.27143 0.09845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.34762 0.0947 moveto
0.34762 0.09845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38571 0.0947 moveto
0.38571 0.09845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.42381 0.0947 moveto
0.42381 0.09845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.4619 0.0947 moveto
0.4619 0.09845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5381 0.0947 moveto
0.5381 0.09845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.57619 0.0947 moveto
0.57619 0.09845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.61429 0.0947 moveto
0.61429 0.09845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.65238 0.0947 moveto
0.65238 0.09845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72857 0.0947 moveto
0.72857 0.09845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.76667 0.0947 moveto
0.76667 0.09845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.80476 0.0947 moveto
0.80476 0.09845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84286 0.0947 moveto
0.84286 0.09845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.08095 0.0947 moveto
0.08095 0.09845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.04286 0.0947 moveto
0.04286 0.09845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.00476 0.0947 moveto
0.00476 0.09845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.91905 0.0947 moveto
0.91905 0.09845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.95714 0.0947 moveto
0.95714 0.09845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.99524 0.0947 moveto
0.99524 0.09845 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.0947 moveto
1 0.0947 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.19267 moveto
0.50625 0.19267 lineto
stroke
grestore
[(7.5)] 0.4875 0.19267 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.29065 moveto
0.50625 0.29065 lineto
stroke
grestore
[(8)] 0.4875 0.29065 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.38862 moveto
0.50625 0.38862 lineto
stroke
grestore
[(8.5)] 0.4875 0.38862 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.48659 moveto
0.50625 0.48659 lineto
stroke
grestore
[(9)] 0.4875 0.48659 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.58457 moveto
0.50625 0.58457 lineto
stroke
grestore
[(9.5)] 0.4875 0.58457 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.01632 moveto
0.50375 0.01632 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.03592 moveto
0.50375 0.03592 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.05551 moveto
0.50375 0.05551 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.07511 moveto
0.50375 0.07511 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1143 moveto
0.50375 0.1143 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13389 moveto
0.50375 0.13389 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.15348 moveto
0.50375 0.15348 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.17308 moveto
0.50375 0.17308 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.21227 moveto
0.50375 0.21227 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.23186 moveto
0.50375 0.23186 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.25146 moveto
0.50375 0.25146 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.27105 moveto
0.50375 0.27105 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31024 moveto
0.50375 0.31024 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.32984 moveto
0.50375 0.32984 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.34943 moveto
0.50375 0.34943 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36903 moveto
0.50375 0.36903 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40821 moveto
0.50375 0.40821 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.42781 moveto
0.50375 0.42781 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.4474 moveto
0.50375 0.4474 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.467 moveto
0.50375 0.467 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.50619 moveto
0.50375 0.50619 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.52578 moveto
0.50375 0.52578 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54538 moveto
0.50375 0.54538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.56497 moveto
0.50375 0.56497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.60416 moveto
0.50375 0.60416 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.06349 0.03636 lineto
0.10317 0.05825 lineto
0.14286 0.08038 lineto
0.18254 0.10275 lineto
0.22222 0.12537 lineto
0.2619 0.14823 lineto
0.30159 0.17134 lineto
0.34127 0.1947 lineto
0.38095 0.21831 lineto
0.42063 0.24217 lineto
0.46032 0.26628 lineto
0.5 0.29065 lineto
0.53968 0.31527 lineto
0.57937 0.34015 lineto
0.61905 0.36528 lineto
0.65873 0.39068 lineto
0.69841 0.41633 lineto
0.7381 0.44225 lineto
0.77778 0.46843 lineto
0.81746 0.49487 lineto
0.85714 0.52158 lineto
0.89683 0.54856 lineto
0.93651 0.5758 lineto
0.97619 0.60332 lineto
stroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 611 1262 a Fi(Fig)p Fq(.)e(9.)k(Fifth)d(zo)q(om)f(of)f
Fh(x)1081 1246 y Fe(3)1116 1262 y Fq(near)h Fh(x)e Fq(=)g(2.)75
1355 y Fn(Exercise)g(4.)18 b Fq(Figure)12 b(9)f(is)h(the)f(graph)g(for)g
Fh(x)844 1339 y Fe(3)863 1355 y Fq(.)19 b(Pic)o(king)12 b(t)o(w)o(o)e(p)q
(oin)o(ts)i(near)f Fh(x)i Fq(=)g(2)e(o\013)f(the)i Fl(Mathematic)n(a)75
1405 y Fq(graph)17 b(ga)o(v)o(e)g(an)h(appro)o(ximate)f(slop)q(e)i(of)e(12.4)
g(vs.)27 b(the)18 b(true)g(slop)q(e)h(of)e(12.)27 b(W)l(e)18
b(cannot)f(exp)q(ect)i(the)75 1455 y(studen)o(ts)c(to)g(do)g(an)o(y)g(b)q
(etter)g(and)h(if)g(they)f(use)h(p)q(oin)o(ts)f(further)h(a)o(w)o(a)o(y)d
(from)i Fh(x)e Fq(=)g(2,)h(they)i(migh)o(t)f(do)g(a)75 1505
y(bit)h(w)o(orse.)j(Here's)c(our)g(w)o(ork)g(\(w)o(e)f(c)o(heated)i(a)f(bit)g
(b)o(y)h(using)g(the)f(F)l(ron)o(t)f(End)i(to)f(pic)o(k)h(the)f(p)q(oin)o(ts)
h(o\013)75 1555 y(the)f(graph\):)75 1668 y Fj({{x1,y1},{x2,y2}})j(=)k
({{1.983211,)d(7.817194},)h({2.016789,)g(8.234265}};)75 1718
y(approxSlope)g(=)h(\(y2-y1\)/\(x2-x1\))162 1767 y(12.421)146
1909 y Fq(Similarly)l(,)c(for)d Fh(x)443 1893 y Fe(4)463 1909
y Fq(,)h(w)o(e)g(got)f(an)h(appro)o(ximate)g(slop)q(e)h(of)f(31.8)f(vs.)19
b(the)d(true)f(slop)q(e)h(of)f(32.)639 2385 y @beginspecial
0 @llx 0 @lly 282 @urx 174 @ury 1614 @rwi @setspecial
%%BeginDocument: nontrivialzoom.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
-7.119048 3.809524 -0.240836 0.288179 [
[(1.9)] 0.11905 0.04734 0 2 Msboxa
[(1.95)] 0.30952 0.04734 0 2 Msboxa
[(2.05)] 0.69048 0.04734 0 2 Msboxa
[(2.1)] 0.88095 0.04734 0 2 Msboxa
[(1.5)] 0.4875 0.19143 1 0 Msboxa
[(2)] 0.4875 0.33552 1 0 Msboxa
[(2.5)] 0.4875 0.47961 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.11905 0.04734 moveto
0.11905 0.05359 lineto
stroke
grestore
[(1.9)] 0.11905 0.04734 0 2 Mshowa
gsave
0.002 setlinewidth
0.30952 0.04734 moveto
0.30952 0.05359 lineto
stroke
grestore
[(1.95)] 0.30952 0.04734 0 2 Mshowa
gsave
0.002 setlinewidth
0.69048 0.04734 moveto
0.69048 0.05359 lineto
stroke
grestore
[(2.05)] 0.69048 0.04734 0 2 Mshowa
gsave
0.002 setlinewidth
0.88095 0.04734 moveto
0.88095 0.05359 lineto
stroke
grestore
[(2.1)] 0.88095 0.04734 0 2 Mshowa
gsave
0.001 setlinewidth
0.15714 0.04734 moveto
0.15714 0.05109 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.19524 0.04734 moveto
0.19524 0.05109 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.23333 0.04734 moveto
0.23333 0.05109 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.27143 0.04734 moveto
0.27143 0.05109 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.34762 0.04734 moveto
0.34762 0.05109 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38571 0.04734 moveto
0.38571 0.05109 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.42381 0.04734 moveto
0.42381 0.05109 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.4619 0.04734 moveto
0.4619 0.05109 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5381 0.04734 moveto
0.5381 0.05109 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.57619 0.04734 moveto
0.57619 0.05109 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.61429 0.04734 moveto
0.61429 0.05109 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.65238 0.04734 moveto
0.65238 0.05109 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72857 0.04734 moveto
0.72857 0.05109 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.76667 0.04734 moveto
0.76667 0.05109 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.80476 0.04734 moveto
0.80476 0.05109 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84286 0.04734 moveto
0.84286 0.05109 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.08095 0.04734 moveto
0.08095 0.05109 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.04286 0.04734 moveto
0.04286 0.05109 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.00476 0.04734 moveto
0.00476 0.05109 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.91905 0.04734 moveto
0.91905 0.05109 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.95714 0.04734 moveto
0.95714 0.05109 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.99524 0.04734 moveto
0.99524 0.05109 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.04734 moveto
1 0.04734 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.19143 moveto
0.50625 0.19143 lineto
stroke
grestore
[(1.5)] 0.4875 0.19143 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.33552 moveto
0.50625 0.33552 lineto
stroke
grestore
[(2)] 0.4875 0.33552 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.47961 moveto
0.50625 0.47961 lineto
stroke
grestore
[(2.5)] 0.4875 0.47961 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.07616 moveto
0.50375 0.07616 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.10498 moveto
0.50375 0.10498 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1338 moveto
0.50375 0.1338 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.16261 moveto
0.50375 0.16261 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22025 moveto
0.50375 0.22025 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.24907 moveto
0.50375 0.24907 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.27789 moveto
0.50375 0.27789 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.3067 moveto
0.50375 0.3067 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36434 moveto
0.50375 0.36434 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.39316 moveto
0.50375 0.39316 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.42198 moveto
0.50375 0.42198 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45079 moveto
0.50375 0.45079 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.50843 moveto
0.50375 0.50843 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.53725 moveto
0.50375 0.53725 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.56607 moveto
0.50375 0.56607 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59488 moveto
0.50375 0.59488 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.01852 moveto
0.50375 0.01852 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.06349 0.03432 lineto
0.10317 0.05434 lineto
0.14286 0.07479 lineto
0.18254 0.09565 lineto
0.22222 0.11694 lineto
0.2619 0.13865 lineto
0.30159 0.16079 lineto
0.34127 0.18335 lineto
0.38095 0.20634 lineto
0.42063 0.22976 lineto
0.46032 0.25361 lineto
0.5 0.27789 lineto
0.53968 0.3026 lineto
0.57937 0.32774 lineto
0.61905 0.35332 lineto
0.65873 0.37934 lineto
0.69841 0.40579 lineto
0.7381 0.43268 lineto
0.77778 0.46002 lineto
0.81746 0.48779 lineto
0.85714 0.516 lineto
0.89683 0.54466 lineto
0.93651 0.57377 lineto
0.97619 0.60332 lineto
stroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 375 2472 a Fi(Fig)p Fq(.)g(10.)20 b(Fifth)15 b(zo)q(om)g(of)g
(the)g(\\non)o(trivial")h(function)g(near)f Fh(x)d Fq(=)h(2.)75
2572 y Fn(Exercise)22 b(5.)33 b Fq(Figure)19 b(10)g(is)h(the)g(graph)f(for)g
(the)g(\\non)o(trivial")h(function.)34 b(As)19 b(ab)q(o)o(v)o(e,)h(w)o(e)f
(pic)o(k)o(ed)75 2629 y(p)q(oin)o(ts)d(and)f(got)f(an)h(appro)o(ximate)g
(slop)q(e)h(of)f(7.8)f(vs.)20 b(the)15 b(true)g(slop)q(e)i(of)d(8.16.)p
eop
%%Page: 18 18
18 17 bop 75 -103 a Fq(18)607 b Fm(Deriv)l(ativ)n(es,)21 b(Slop)r(es)i(and)g
(T)-6 b(angen)n(t)24 b(Lines)p 728 -85 1148 2 v 334 834 a @beginspecial
0 @llx 0 @lly 571 @urx 370 @ury 3074 @rwi @setspecial
%%BeginDocument: cusp.eps


/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /TDeps_dict 20 dict def TDeps_dict begin /showpage {
    
} def /copypage {
    
} def /grestoreall {
    
} def /erasepage {
    
} def /nulldevice {
    
} def /exitserver {
    
} def /initgraphics {
    
} def /renderbands {
    
} def /initmatrix {
    
} def /banddevice {
    
} def /setpageparams {
    
} def /framedevice {
    
} def /note {
    
} def end end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
gsave
0 0 571 370 rectclip
-35 -349 translate
35 349 570.471802 370 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
gsave clpmt currentmatrix pop newpath
1 0 0 1.034483 -130 219.344818 sc5mt astore pop false {
    sc5mt dodrawctm 165 309 282 174 0 rfpath unpagectm
} {
    282 174 165 309 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -130 230] dodrawctm
165 309 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
-3.309524 1.904762 -0.527684 0.048796 [
[(1.8)] 0.11905 0.05787 0 2 Msboxa
[(1.9)] 0.30952 0.05787 0 2 Msboxa
[(2.1)] 0.69048 0.05787 0 2 Msboxa
[(2.2)] 0.88095 0.05787 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(4)] 0.5 0.61803 0 -2 Msboxa
grestore
[(14)] 0.4875 0.15546 1 0 Msboxa
[(16)] 0.4875 0.25306 1 0 Msboxa
[(18)] 0.4875 0.35065 1 0 Msboxa
[(20)] 0.4875 0.44824 1 0 Msboxa
[(22)] 0.4875 0.54583 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.11905 0.05787 moveto
0.11905 0.06412 lineto
stroke
grestore
[(1.8)] 0.11905 0.05787 0 2 Mshowa
gsave
0.002 setlinewidth
0.30952 0.05787 moveto
0.30952 0.06412 lineto
stroke
grestore
[(1.9)] 0.30952 0.05787 0 2 Mshowa
gsave
0.002 setlinewidth
0.69048 0.05787 moveto
0.69048 0.06412 lineto
stroke
grestore
[(2.1)] 0.69048 0.05787 0 2 Mshowa
gsave
0.002 setlinewidth
0.88095 0.05787 moveto
0.88095 0.06412 lineto
stroke
grestore
[(2.2)] 0.88095 0.05787 0 2 Mshowa
gsave
0.001 setlinewidth
0.15714 0.05787 moveto
0.15714 0.06162 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.19524 0.05787 moveto
0.19524 0.06162 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.23333 0.05787 moveto
0.23333 0.06162 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.27143 0.05787 moveto
0.27143 0.06162 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.34762 0.05787 moveto
0.34762 0.06162 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38571 0.05787 moveto
0.38571 0.06162 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.42381 0.05787 moveto
0.42381 0.06162 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.4619 0.05787 moveto
0.4619 0.06162 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5381 0.05787 moveto
0.5381 0.06162 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.57619 0.05787 moveto
0.57619 0.06162 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.61429 0.05787 moveto
0.61429 0.06162 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.65238 0.05787 moveto
0.65238 0.06162 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72857 0.05787 moveto
0.72857 0.06162 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.76667 0.05787 moveto
0.76667 0.06162 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.80476 0.05787 moveto
0.80476 0.06162 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84286 0.05787 moveto
0.84286 0.06162 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.08095 0.05787 moveto
0.08095 0.06162 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.04286 0.05787 moveto
0.04286 0.06162 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.00476 0.05787 moveto
0.00476 0.06162 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.91905 0.05787 moveto
0.91905 0.06162 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.95714 0.05787 moveto
0.95714 0.06162 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.99524 0.05787 moveto
0.99524 0.06162 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.05787 moveto
1 0.05787 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(4)] 0.5 0.61803 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.15546 moveto
0.50625 0.15546 lineto
stroke
grestore
[(14)] 0.4875 0.15546 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.25306 moveto
0.50625 0.25306 lineto
stroke
grestore
[(16)] 0.4875 0.25306 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.35065 moveto
0.50625 0.35065 lineto
stroke
grestore
[(18)] 0.4875 0.35065 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.44824 moveto
0.50625 0.44824 lineto
stroke
grestore
[(20)] 0.4875 0.44824 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.54583 moveto
0.50625 0.54583 lineto
stroke
grestore
[(22)] 0.4875 0.54583 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.07739 moveto
0.50375 0.07739 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.09691 moveto
0.50375 0.09691 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.11643 moveto
0.50375 0.11643 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13594 moveto
0.50375 0.13594 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.17498 moveto
0.50375 0.17498 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1945 moveto
0.50375 0.1945 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.21402 moveto
0.50375 0.21402 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.23354 moveto
0.50375 0.23354 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.27257 moveto
0.50375 0.27257 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.29209 moveto
0.50375 0.29209 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31161 moveto
0.50375 0.31161 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.33113 moveto
0.50375 0.33113 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.37017 moveto
0.50375 0.37017 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.38968 moveto
0.50375 0.38968 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.4092 moveto
0.50375 0.4092 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.42872 moveto
0.50375 0.42872 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.46776 moveto
0.50375 0.46776 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.48728 moveto
0.50375 0.48728 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.5068 moveto
0.50375 0.5068 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.52631 moveto
0.50375 0.52631 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.03835 moveto
0.50375 0.03835 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.01883 moveto
0.50375 0.01883 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.56535 moveto
0.50375 0.56535 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.58487 moveto
0.50375 0.58487 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.60439 moveto
0.50375 0.60439 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.06349 0.03253 lineto
0.10317 0.05075 lineto
0.14286 0.0694 lineto
0.18254 0.08846 lineto
0.22222 0.10794 lineto
0.2619 0.12782 lineto
0.30159 0.14811 lineto
0.34127 0.16878 lineto
0.38095 0.18981 lineto
0.42063 0.21113 lineto
0.46032 0.2326 lineto
0.5 0.25306 lineto
0.53968 0.2814 lineto
0.57937 0.30874 lineto
0.61905 0.33625 lineto
0.65873 0.36408 lineto
0.69841 0.39231 lineto
0.7381 0.42098 lineto
0.77778 0.45012 lineto
0.81746 0.47974 lineto
0.85714 0.50985 lineto
0.89683 0.54048 lineto
0.93651 0.57163 lineto
0.97619 0.60332 lineto
stroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 309 282 174 1 0 0 1.034483 -130 219.344818 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.034483 157 219.344849 sc5mt astore pop false {
    sc5mt dodrawctm 165 309 282 174 0 rfpath unpagectm
} {
    282 174 165 309 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 157 230] dodrawctm
165 309 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
-60.452381 30.47619 -12.298957 0.784789 [
[(1.985)] 0.04286 0.25767 0 2 Msboxa
[(1.99)] 0.19524 0.25767 0 2 Msboxa
[(1.995)] 0.34762 0.25767 0 2 Msboxa
[(2.005)] 0.65238 0.25767 0 2 Msboxa
[(2.01)] 0.80476 0.25767 0 2 Msboxa
[(2.015)] 0.95714 0.25767 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(8)] 0.5 0.61803 0 -2 Msboxa
grestore
[(15.7)] 0.4875 0.02223 1 0 Msboxa
[(15.8)] 0.4875 0.10071 1 0 Msboxa
[(15.9)] 0.4875 0.17919 1 0 Msboxa
[(16.1)] 0.4875 0.33615 1 0 Msboxa
[(16.2)] 0.4875 0.41463 1 0 Msboxa
[(16.3)] 0.4875 0.49311 1 0 Msboxa
[(16.4)] 0.4875 0.57158 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.04286 0.25767 moveto
0.04286 0.26392 lineto
stroke
grestore
[(1.985)] 0.04286 0.25767 0 2 Mshowa
gsave
0.002 setlinewidth
0.19524 0.25767 moveto
0.19524 0.26392 lineto
stroke
grestore
[(1.99)] 0.19524 0.25767 0 2 Mshowa
gsave
0.002 setlinewidth
0.34762 0.25767 moveto
0.34762 0.26392 lineto
stroke
grestore
[(1.995)] 0.34762 0.25767 0 2 Mshowa
gsave
0.002 setlinewidth
0.65238 0.25767 moveto
0.65238 0.26392 lineto
stroke
grestore
[(2.005)] 0.65238 0.25767 0 2 Mshowa
gsave
0.002 setlinewidth
0.80476 0.25767 moveto
0.80476 0.26392 lineto
stroke
grestore
[(2.01)] 0.80476 0.25767 0 2 Mshowa
gsave
0.002 setlinewidth
0.95714 0.25767 moveto
0.95714 0.26392 lineto
stroke
grestore
[(2.015)] 0.95714 0.25767 0 2 Mshowa
gsave
0.001 setlinewidth
0.07333 0.25767 moveto
0.07333 0.26142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.10381 0.25767 moveto
0.10381 0.26142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.13429 0.25767 moveto
0.13429 0.26142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16476 0.25767 moveto
0.16476 0.26142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22571 0.25767 moveto
0.22571 0.26142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.25619 0.25767 moveto
0.25619 0.26142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.28667 0.25767 moveto
0.28667 0.26142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31714 0.25767 moveto
0.31714 0.26142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.3781 0.25767 moveto
0.3781 0.26142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40857 0.25767 moveto
0.40857 0.26142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.43905 0.25767 moveto
0.43905 0.26142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46952 0.25767 moveto
0.46952 0.26142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53048 0.25767 moveto
0.53048 0.26142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56095 0.25767 moveto
0.56095 0.26142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59143 0.25767 moveto
0.59143 0.26142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.6219 0.25767 moveto
0.6219 0.26142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.68286 0.25767 moveto
0.68286 0.26142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.71333 0.25767 moveto
0.71333 0.26142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.74381 0.25767 moveto
0.74381 0.26142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77429 0.25767 moveto
0.77429 0.26142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83524 0.25767 moveto
0.83524 0.26142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.86571 0.25767 moveto
0.86571 0.26142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.89619 0.25767 moveto
0.89619 0.26142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92667 0.25767 moveto
0.92667 0.26142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.01238 0.25767 moveto
0.01238 0.26142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.98762 0.25767 moveto
0.98762 0.26142 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.25767 moveto
1 0.25767 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(8)] 0.5 0.61803 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.02223 moveto
0.50625 0.02223 lineto
stroke
grestore
[(15.7)] 0.4875 0.02223 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.10071 moveto
0.50625 0.10071 lineto
stroke
grestore
[(15.8)] 0.4875 0.10071 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.17919 moveto
0.50625 0.17919 lineto
stroke
grestore
[(15.9)] 0.4875 0.17919 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.33615 moveto
0.50625 0.33615 lineto
stroke
grestore
[(16.1)] 0.4875 0.33615 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.41463 moveto
0.50625 0.41463 lineto
stroke
grestore
[(16.2)] 0.4875 0.41463 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.49311 moveto
0.50625 0.49311 lineto
stroke
grestore
[(16.3)] 0.4875 0.49311 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.57158 moveto
0.50625 0.57158 lineto
stroke
grestore
[(16.4)] 0.4875 0.57158 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.03793 moveto
0.50375 0.03793 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.05362 moveto
0.50375 0.05362 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.06932 moveto
0.50375 0.06932 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.08501 moveto
0.50375 0.08501 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.11641 moveto
0.50375 0.11641 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1321 moveto
0.50375 0.1321 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1478 moveto
0.50375 0.1478 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.16349 moveto
0.50375 0.16349 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.19489 moveto
0.50375 0.19489 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.21058 moveto
0.50375 0.21058 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22628 moveto
0.50375 0.22628 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.24197 moveto
0.50375 0.24197 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.27336 moveto
0.50375 0.27336 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.28906 moveto
0.50375 0.28906 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.30476 moveto
0.50375 0.30476 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.32045 moveto
0.50375 0.32045 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.35184 moveto
0.50375 0.35184 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36754 moveto
0.50375 0.36754 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.38323 moveto
0.50375 0.38323 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.39893 moveto
0.50375 0.39893 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.43032 moveto
0.50375 0.43032 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.44602 moveto
0.50375 0.44602 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.46171 moveto
0.50375 0.46171 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.47741 moveto
0.50375 0.47741 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.5088 moveto
0.50375 0.5088 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.5245 moveto
0.50375 0.5245 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54019 moveto
0.50375 0.54019 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55589 moveto
0.50375 0.55589 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.00654 moveto
0.50375 0.00654 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.58728 moveto
0.50375 0.58728 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.60298 moveto
0.50375 0.60298 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.06349 0.03611 lineto
0.10317 0.05745 lineto
0.14286 0.07873 lineto
0.18254 0.09992 lineto
0.22222 0.12102 lineto
0.2619 0.14199 lineto
0.30159 0.16281 lineto
0.34127 0.18341 lineto
0.38095 0.2037 lineto
0.42063 0.22354 lineto
0.46032 0.24252 lineto
0.48016 0.25131 lineto
0.48512 0.25334 lineto
0.49008 0.25525 lineto
0.49256 0.25614 lineto
0.49504 0.25694 lineto
0.49628 0.2573 lineto
0.49752 0.25761 lineto
0.49876 0.25783 lineto
0.5 0.25767 lineto
0.50124 0.25936 lineto
0.50248 0.26068 lineto
0.50496 0.26307 lineto
0.50992 0.26751 lineto
0.51984 0.27583 lineto
0.53968 0.29157 lineto
0.57937 0.32164 lineto
0.61905 0.35085 lineto
0.65873 0.3796 lineto
0.69841 0.40805 lineto
0.7381 0.43629 lineto
0.77778 0.46437 lineto
0.81746 0.49232 lineto
0.85714 0.52018 lineto
0.89683 0.54795 lineto
0.93651 0.57566 lineto
0.97619 0.60332 lineto
stroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 309 282 174 1 0 0 1.034483 157 219.344849 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.04023 -129 28.56897 sc5mt astore pop false {
    sc5mt dodrawctm 165 309 282 174 0 rfpath unpagectm
} {
    282 174 165 309 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -129 41] dodrawctm
165 309 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
-974.738095 487.619048 -200.724806 12.55688 [
[(1.999)] 0.01238 0.18527 0 2 Msboxa
[(1.9995)] 0.25619 0.18527 0 2 Msboxa
[(2.0005)] 0.74381 0.18527 0 2 Msboxa
[(2.001)] 0.98762 0.18527 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(12)] 0.5 0.61803 0 -2 Msboxa
grestore
[(15.99)] 0.4875 0.05971 1 0 Msboxa
[(16.01)] 0.4875 0.31084 1 0 Msboxa
[(16.02)] 0.4875 0.43641 1 0 Msboxa
[(16.03)] 0.4875 0.56198 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.01238 0.18527 moveto
0.01238 0.19152 lineto
stroke
grestore
[(1.999)] 0.01238 0.18527 0 2 Mshowa
gsave
0.002 setlinewidth
0.25619 0.18527 moveto
0.25619 0.19152 lineto
stroke
grestore
[(1.9995)] 0.25619 0.18527 0 2 Mshowa
gsave
0.002 setlinewidth
0.74381 0.18527 moveto
0.74381 0.19152 lineto
stroke
grestore
[(2.0005)] 0.74381 0.18527 0 2 Mshowa
gsave
0.002 setlinewidth
0.98762 0.18527 moveto
0.98762 0.19152 lineto
stroke
grestore
[(2.001)] 0.98762 0.18527 0 2 Mshowa
gsave
0.001 setlinewidth
0.06114 0.18527 moveto
0.06114 0.18902 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1099 0.18527 moveto
0.1099 0.18902 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.15867 0.18527 moveto
0.15867 0.18902 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.20743 0.18527 moveto
0.20743 0.18902 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30495 0.18527 moveto
0.30495 0.18902 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35371 0.18527 moveto
0.35371 0.18902 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40248 0.18527 moveto
0.40248 0.18902 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45124 0.18527 moveto
0.45124 0.18902 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54876 0.18527 moveto
0.54876 0.18902 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59752 0.18527 moveto
0.59752 0.18902 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64629 0.18527 moveto
0.64629 0.18902 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69505 0.18527 moveto
0.69505 0.18902 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.79257 0.18527 moveto
0.79257 0.18902 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84133 0.18527 moveto
0.84133 0.18902 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.8901 0.18527 moveto
0.8901 0.18902 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.93886 0.18527 moveto
0.93886 0.18902 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.18527 moveto
1 0.18527 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(12)] 0.5 0.61803 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.05971 moveto
0.50625 0.05971 lineto
stroke
grestore
[(15.99)] 0.4875 0.05971 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.31084 moveto
0.50625 0.31084 lineto
stroke
grestore
[(16.01)] 0.4875 0.31084 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.43641 moveto
0.50625 0.43641 lineto
stroke
grestore
[(16.02)] 0.4875 0.43641 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.56198 moveto
0.50625 0.56198 lineto
stroke
grestore
[(16.03)] 0.4875 0.56198 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.08482 moveto
0.50375 0.08482 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.10993 moveto
0.50375 0.10993 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13505 moveto
0.50375 0.13505 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.16016 moveto
0.50375 0.16016 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.21039 moveto
0.50375 0.21039 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.2355 moveto
0.50375 0.2355 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.26062 moveto
0.50375 0.26062 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.28573 moveto
0.50375 0.28573 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.33596 moveto
0.50375 0.33596 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36107 moveto
0.50375 0.36107 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.38618 moveto
0.50375 0.38618 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.4113 moveto
0.50375 0.4113 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.46153 moveto
0.50375 0.46153 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.48664 moveto
0.50375 0.48664 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.51175 moveto
0.50375 0.51175 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.53687 moveto
0.50375 0.53687 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.03459 moveto
0.50375 0.03459 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.00948 moveto
0.50375 0.00948 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.58709 moveto
0.50375 0.58709 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.61221 moveto
0.50375 0.61221 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.06349 0.03225 lineto
0.10317 0.04958 lineto
0.14286 0.06666 lineto
0.18254 0.08346 lineto
0.22222 0.09994 lineto
0.2619 0.11602 lineto
0.30159 0.13162 lineto
0.34127 0.14661 lineto
0.38095 0.16076 lineto
0.42063 0.17366 lineto
0.44048 0.17939 lineto
0.46032 0.18433 lineto
0.47024 0.18635 lineto
0.4752 0.18718 lineto
0.47768 0.18755 lineto
0.48016 0.18787 lineto
0.48264 0.18813 lineto
0.48512 0.18834 lineto
0.48636 0.18842 lineto
0.4876 0.18847 lineto
0.48884 0.1885 lineto
0.49008 0.1885 lineto
0.49132 0.18847 lineto
0.49256 0.1884 lineto
0.4938 0.18828 lineto
0.49504 0.1881 lineto
0.49628 0.18784 lineto
0.49752 0.18746 lineto
0.49876 0.18685 lineto
0.5 0.18527 lineto
0.50124 0.18838 lineto
0.50248 0.19052 lineto
0.50496 0.19424 lineto
0.50992 0.20076 lineto
0.51984 0.21239 lineto
0.53968 0.23338 lineto
0.57937 0.27176 lineto
0.61905 0.30791 lineto
0.65873 0.34281 lineto
0.69841 0.37688 lineto
0.7381 0.41032 lineto
0.77778 0.44329 lineto
0.81746 0.47586 lineto
0.85714 0.50811 lineto
0.89683 0.54008 lineto
0.93651 0.57181 lineto
0.97619 0.60332 lineto
stroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 309 282 174 1 0 0 1.04023 -129 28.56897 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.034483 158 31.344866 sc5mt astore pop false {
    sc5mt dodrawctm 165 309 282 174 0 rfpath unpagectm
} {
    282 174 165 309 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 158 42] dodrawctm
165 309 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
-15603.309524 7801.904762 -20346.0393 1271.628376 [
[(1.99994)] 0.03189 0.01472 0 2 Msboxa
[(1.99996)] 0.18792 0.01472 0 2 Msboxa
[(1.99998)] 0.34396 0.01472 0 2 Msboxa
[(2.00002)] 0.65604 0.01472 0 2 Msboxa
[(2.00004)] 0.81208 0.01472 0 2 Msboxa
[(2.00006)] 0.96811 0.01472 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(16)] 0.5 0.61803 0 -2 Msboxa
grestore
[(16.0001)] 0.4875 0.14188 1 0 Msboxa
[(16.0002)] 0.4875 0.26904 1 0 Msboxa
[(16.0003)] 0.4875 0.3962 1 0 Msboxa
[(16.0004)] 0.4875 0.52337 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.03189 0.01472 moveto
0.03189 0.02097 lineto
stroke
grestore
[(1.99994)] 0.03189 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.18792 0.01472 moveto
0.18792 0.02097 lineto
stroke
grestore
[(1.99996)] 0.18792 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.34396 0.01472 moveto
0.34396 0.02097 lineto
stroke
grestore
[(1.99998)] 0.34396 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.65604 0.01472 moveto
0.65604 0.02097 lineto
stroke
grestore
[(2.00002)] 0.65604 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.81208 0.01472 moveto
0.81208 0.02097 lineto
stroke
grestore
[(2.00004)] 0.81208 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.96811 0.01472 moveto
0.96811 0.02097 lineto
stroke
grestore
[(2.00006)] 0.96811 0.01472 0 2 Mshowa
gsave
0.001 setlinewidth
0.06309 0.01472 moveto
0.06309 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.0943 0.01472 moveto
0.0943 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.12551 0.01472 moveto
0.12551 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.15672 0.01472 moveto
0.15672 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21913 0.01472 moveto
0.21913 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.25034 0.01472 moveto
0.25034 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.28155 0.01472 moveto
0.28155 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31275 0.01472 moveto
0.31275 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.37517 0.01472 moveto
0.37517 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40638 0.01472 moveto
0.40638 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.43758 0.01472 moveto
0.43758 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46879 0.01472 moveto
0.46879 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53121 0.01472 moveto
0.53121 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56242 0.01472 moveto
0.56242 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59362 0.01472 moveto
0.59362 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.62483 0.01472 moveto
0.62483 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.68725 0.01472 moveto
0.68725 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.71845 0.01472 moveto
0.71845 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.74966 0.01472 moveto
0.74966 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78087 0.01472 moveto
0.78087 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84328 0.01472 moveto
0.84328 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.87449 0.01472 moveto
0.87449 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9057 0.01472 moveto
0.9057 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.93691 0.01472 moveto
0.93691 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.00068 0.01472 moveto
0.00068 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.99932 0.01472 moveto
0.99932 0.01847 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.01472 moveto
1 0.01472 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(16)] 0.5 0.61803 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.14188 moveto
0.50625 0.14188 lineto
stroke
grestore
[(16.0001)] 0.4875 0.14188 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.26904 moveto
0.50625 0.26904 lineto
stroke
grestore
[(16.0002)] 0.4875 0.26904 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.3962 moveto
0.50625 0.3962 lineto
stroke
grestore
[(16.0003)] 0.4875 0.3962 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.52337 moveto
0.50625 0.52337 lineto
stroke
grestore
[(16.0004)] 0.4875 0.52337 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.04015 moveto
0.50375 0.04015 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.06558 moveto
0.50375 0.06558 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.09101 moveto
0.50375 0.09101 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.11645 moveto
0.50375 0.11645 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.16731 moveto
0.50375 0.16731 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.19274 moveto
0.50375 0.19274 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.21818 moveto
0.50375 0.21818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.24361 moveto
0.50375 0.24361 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.29447 moveto
0.50375 0.29447 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31991 moveto
0.50375 0.31991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.34534 moveto
0.50375 0.34534 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.37077 moveto
0.50375 0.37077 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.42164 moveto
0.50375 0.42164 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.44707 moveto
0.50375 0.44707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.4725 moveto
0.50375 0.4725 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.49793 moveto
0.50375 0.49793 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.5488 moveto
0.50375 0.5488 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.57423 moveto
0.50375 0.57423 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59966 moveto
0.50375 0.59966 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.12331 moveto
0.06349 0.16743 lineto
0.10317 0.20813 lineto
0.14286 0.24494 lineto
0.18254 0.27728 lineto
0.22222 0.30437 lineto
0.24206 0.31564 lineto
0.2619 0.32519 lineto
0.28175 0.33281 lineto
0.29167 0.33583 lineto
0.30159 0.33828 lineto
0.31151 0.34012 lineto
0.31647 0.34079 lineto
0.31895 0.34107 lineto
0.32143 0.3413 lineto
0.32391 0.34149 lineto
0.32515 0.34157 lineto
0.32639 0.34163 lineto
0.32763 0.34169 lineto
0.32887 0.34173 lineto
0.33011 0.34176 lineto
0.33135 0.34178 lineto
0.33259 0.34179 lineto
0.33383 0.34178 lineto
0.33507 0.34177 lineto
0.33631 0.34174 lineto
0.33755 0.3417 lineto
0.33879 0.34164 lineto
0.34127 0.3415 lineto
0.34375 0.3413 lineto
0.34623 0.34105 lineto
0.35119 0.34039 lineto
0.35615 0.33951 lineto
0.36111 0.33839 lineto
0.37103 0.33541 lineto
0.38095 0.33133 lineto
0.39087 0.32605 lineto
0.40079 0.31941 lineto
0.41071 0.31123 lineto
0.42063 0.30127 lineto
0.43056 0.28922 lineto
0.44048 0.27469 lineto
0.4504 0.2571 lineto
0.46032 0.23558 lineto
0.47024 0.20875 lineto
0.48016 0.17402 lineto
0.48512 0.15208 lineto
0.49008 0.12516 lineto
0.49256 0.10881 lineto
0.49504 0.08933 lineto
Mistroke
0.49628 0.07778 lineto
0.49752 0.06424 lineto
0.49876 0.04718 lineto
0.5 0.01472 lineto
0.50124 0.05688 lineto
0.50248 0.08365 lineto
0.50496 0.12814 lineto
0.50992 0.20277 lineto
0.51984 0.32925 lineto
0.53968 0.54603 lineto
Mfstroke
0.54728 0.61803 moveto
0.53968 0.54603 lineto
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 309 282 174 1 0 0 1.034483 158 31.344866 sc6mt astore rstroke
end
grestore
grestore
%%EndDocument
 @endspecial 433 920 a Fi(Fig)p Fq(.)15 b(11.)k(Zo)q(oms)c(of)f
Fh(f)5 b Fq(\()p Fh(x)p Fq(\))12 b(=)h(\()p Fh(x)d Fg(\000)h
Fq(2\))1101 904 y Fe(2)p Ff(=)p Fe(3)1165 920 y Fq(+)g(2)p
Fh(x)1260 904 y Fe(3)1294 920 y Fq(near)k Fh(x)e Fq(=)g(2.)75
1056 y Fn(Exercise)19 b(6.)24 b Fq(Figure)16 b(11)g(sho)o(ws)g(the)h(4)790
1040 y Fe(th)825 1056 y Fq(,)g(8)878 1040 y Fe(th)913 1056
y Fq(,)f(12)988 1040 y Fe(th)1039 1056 y Fq(and)h(16)1175 1040
y Fe(th)1227 1056 y Fq(zo)q(om)f(\(using)h(the)f(giv)o(en)i(lo)q(op)f(with)75
1113 y(the)e(5)g(c)o(hanged)h(to)e(16\).)75 1221 y Fn(fourth)j(zo)q(om)24
b Fq(W)l(e)17 b(got)g(a)g(slop)q(e)i(of)e(23.8)f(on)h(the)h(left)g(side)g
(and)g(24.0)e(on)i(the)f(righ)o(t)h(side.)28 b(A)o(t)17 b(this)189
1277 y(stage)h(just)g(stating)g(a)h(slop)q(e)g(of)f(around)h(24)f(is)h(quite)
h(acceptable|the)f(\\kink")g(at)f Fh(x)g Fq(=)h(2)f(is)189
1334 y(hardly)d(noticeable)i(if)f(y)o(ou)f(are)f(not)h(lo)q(oking)h(for)f
(it.)75 1425 y Fn(eigh)o(th)j(zo)q(om)23 b Fq(15.2)13 b(on)g(the)h(left)g
(side)h(and)e(30.5)g(on)g(the)h(righ)o(t)g(side.)20 b(Again,)14
b(w)o(e)f(w)o(ouldn't)h(mark)f(o\013)189 1482 y(for)h(some)h(a)o(v)o(erage)f
(v)m(alue.)75 1573 y Fn(t)o(w)o(elfth)j(zo)q(om)24 b Fq(It)13
b(lo)q(oks)g(close)g(to)g(zero)g(on)g(the)g(left)g(and)g(ab)q(out)g(39)f(on)h
(the)g(righ)o(t.)19 b(Some)13 b(statemen)o(t)189 1630 y(ab)q(out)i(a)g
(\\kink")g(should)h(b)q(e)g(made)f(for)g(full)h(credit.)75
1738 y(It)g(tak)o(es)f(ab)q(out)g(16)g(zo)q(oms)h(in)g(the)g(standard)f(lo)q
(op)i(to)e(clearly)h(see)g(the)g(v)o(ertical)g(cusp.)22 b(Some)16
b(recog-)75 1794 y(nition)g(should)h(b)q(e)f(made)f(that)g(the)g(slop)q(e)i
(is)f(steep)f(negativ)o(e)h(to)e(the)i(left)g(and)f(steep)h(p)q(ositiv)o(e)g
(to)f(the)75 1851 y(righ)o(t,)i(so)h(is)g(not)f(uniquely)i(de\014ned.)29
b(One)18 b(could)g(either)h(sa)o(y)d(that)h(no)h(tangen)o(t)e(exists)i(or)f
(that)g(the)75 1907 y(unique)g(tangen)o(t)d(is)i(v)o(ertical.)639
2379 y @beginspecial 0 @llx 0 @lly 282 @urx 174 @ury 1614 @rwi
@setspecial
%%BeginDocument: purecusp.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
-0.452381 0.47619 0.014715 0.588604 [
[(1.5)] 0.2619 0.01472 0 2 Msboxa
[(2)] 0.5 0.01472 0 2 Msboxa
[(2.5)] 0.7381 0.01472 0 2 Msboxa
[(3)] 0.97619 0.01472 0 2 Msboxa
[(0.2)] 0.01131 0.13244 1 0 Msboxa
[(0.4)] 0.01131 0.25016 1 0 Msboxa
[(0.6)] 0.01131 0.36788 1 0 Msboxa
[(0.8)] 0.01131 0.4856 1 0 Msboxa
[(1)] 0.01131 0.60332 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.2619 0.01472 moveto
0.2619 0.02097 lineto
stroke
grestore
[(1.5)] 0.2619 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.5 0.01472 moveto
0.5 0.02097 lineto
stroke
grestore
[(2)] 0.5 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.01472 moveto
0.7381 0.02097 lineto
stroke
grestore
[(2.5)] 0.7381 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.01472 moveto
0.97619 0.02097 lineto
stroke
grestore
[(3)] 0.97619 0.01472 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.01472 moveto
0.07143 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.01472 moveto
0.11905 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.01472 moveto
0.16667 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.01472 moveto
0.21429 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.01472 moveto
0.30952 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.01472 moveto
0.35714 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.01472 moveto
0.40476 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.01472 moveto
0.45238 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.01472 moveto
0.54762 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.01472 moveto
0.59524 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.01472 moveto
0.64286 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.01472 moveto
0.69048 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.01472 moveto
0.78571 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.01472 moveto
0.83333 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.01472 moveto
0.88095 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.01472 moveto
0.92857 0.01847 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.01472 moveto
1 0.01472 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0.13244 moveto
0.03006 0.13244 lineto
stroke
grestore
[(0.2)] 0.01131 0.13244 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.25016 moveto
0.03006 0.25016 lineto
stroke
grestore
[(0.4)] 0.01131 0.25016 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.36788 moveto
0.03006 0.36788 lineto
stroke
grestore
[(0.6)] 0.01131 0.36788 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.4856 moveto
0.03006 0.4856 lineto
stroke
grestore
[(0.8)] 0.01131 0.4856 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.60332 moveto
0.03006 0.60332 lineto
stroke
grestore
[(1)] 0.01131 0.60332 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.03826 moveto
0.02756 0.03826 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.0618 moveto
0.02756 0.0618 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.08535 moveto
0.02756 0.08535 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.10889 moveto
0.02756 0.10889 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.15598 moveto
0.02756 0.15598 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.17952 moveto
0.02756 0.17952 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.20307 moveto
0.02756 0.20307 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.22661 moveto
0.02756 0.22661 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.2737 moveto
0.02756 0.2737 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.29724 moveto
0.02756 0.29724 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.32079 moveto
0.02756 0.32079 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.34433 moveto
0.02756 0.34433 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.39142 moveto
0.02756 0.39142 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.41497 moveto
0.02756 0.41497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.43851 moveto
0.02756 0.43851 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.46205 moveto
0.02756 0.46205 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.50914 moveto
0.02756 0.50914 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.53269 moveto
0.02756 0.53269 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.55623 moveto
0.02756 0.55623 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.57977 moveto
0.02756 0.57977 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.60332 moveto
0.06349 0.57015 lineto
0.10317 0.53595 lineto
0.14286 0.5006 lineto
0.18254 0.4639 lineto
0.22222 0.42564 lineto
0.2619 0.38551 lineto
0.30159 0.34307 lineto
0.34127 0.29769 lineto
0.38095 0.2483 lineto
0.42063 0.19298 lineto
0.46032 0.12701 lineto
0.47024 0.10741 lineto
0.48016 0.08546 lineto
0.49008 0.05928 lineto
0.49256 0.0515 lineto
0.49504 0.04279 lineto
0.49752 0.0324 lineto
0.49876 0.02586 lineto
0.5 0.01472 lineto
0.50124 0.02586 lineto
0.50248 0.0324 lineto
0.50496 0.04279 lineto
0.50992 0.05928 lineto
0.51984 0.08546 lineto
0.53968 0.12701 lineto
0.57937 0.19298 lineto
0.61905 0.2483 lineto
0.65873 0.29769 lineto
0.69841 0.34307 lineto
0.7381 0.38551 lineto
0.77778 0.42564 lineto
0.81746 0.4639 lineto
0.85714 0.5006 lineto
0.89683 0.53595 lineto
0.93651 0.57015 lineto
0.97619 0.60332 lineto
stroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 78 2466 a Fi(Fig)p Fq(.)f(12.)k(Plot)d(of)e Fh(f)5
b Fq(\()p Fh(x)p Fq(\))12 b(=)h(\()p Fh(x)d Fg(\000)h Fq(2\))700
2449 y Fe(2)p Ff(=)p Fe(3)769 2466 y Fq(near)k Fh(x)e Fq(=)g(2.)19
b(Cusp)d(b)q(eha)o(vior)g(is)f(ob)o(vious)h(without)f(zo)q(oming.)75
2572 y(The)20 b(question)h(ab)q(out)e Fl(why)25 b Fq(it)20
b(tak)o(es)f(so)g(man)o(y)h(zo)q(oms)f(is)i(probably)f(going)g(to)f(b)q(e)i
(hard)f(for)f(most)75 2629 y(studen)o(ts.)33 b(A)20 b(go)q(o)q(d)f(studen)o
(t)h(answ)o(er)f(w)o(ould)h(b)q(e)g(recognition)h(that)e(the)g(2)p
Fh(x)1456 2612 y Fe(3)1495 2629 y Fq(masks)g(the)h(singular)p
eop
%%Page: 19 19
19 18 bop 75 -103 a Fm(Deriv)l(ativ)n(es,)21 b(Slop)r(es)i(and)g(T)-6
b(angen)n(t)24 b(Lines)p 75 -85 1148 2 v 607 w Fq(19)75 49
y(b)q(eha)o(vior)c(of)f(the)g(\(2)12 b Fg(\000)h Fh(x)p Fq(\))548
33 y Fe(2)p Ff(=)p Fe(3)622 49 y Fq(except)20 b(in)g(a)f(v)o(ery)g(tin)o(y)g
(neigh)o(b)q(orho)q(o)q(d)i(of)e Fh(x)g Fq(=)h(2)f(\(see)g(Figure)g(12\).)75
106 y(Indeed,)24 b(w)o(e)d(tabled)h(the)f(deriv)m(ativ)o(es)i(of)d(eac)o(h)i
(term)f(of)f(the)i(function)g(and)f(noted)h(that)e(after)h(12)75
162 y(zo)q(oms)16 b(\(i.e.)23 b(at)16 b Fh(x)e Fq(=)h(2)c Fg(\006)g
Fq(2)563 146 y Fb(\000)p Fe(11)628 162 y Fq(\),)k(the)i(deriv)m(ativ)o(e)g
(of)f(the)h(cubic)g(term)f(w)o(as)g(still)i(4)d(times)i(as)f(large)g(as)75
219 y(the)f(deriv)m(ativ)o(e)i(of)e(the)g(cusp)h(term|w)o(ell)f(mask)o(ed,)f
(indeed!)75 296 y Fn(Exercise)25 b(7.)39 b Fq(A)o(t)21 b Fh(\031)r(=)p
Fq(3,)h(it)g(tak)o(es)f(ab)q(out)h(7)f(zo)q(oms)h(to)f(get)g(something)h
(that)f(lo)q(oks)h(linear.)41 b(W)l(e)75 352 y(measured)16
b(a)g(slop)q(e)h(of)f(0.56)f(vs.)22 b(true)16 b(v)m(alue)h(of)f(0.5.)21
b(A)o(t)16 b Fh(\031)r(=)p Fq(6,)f(w)o(e)h(used)g(6)g(zo)q(oms)g(to)f(get)h
(something)75 409 y(that)e(lo)q(ok)o(ed)i(linear)h(and)e(measured)g(a)g(slop)
q(e)h(of)f(0.88)f(vs.)20 b(true)15 b(v)m(alue)h(of)f(0.87.)75
486 y Fn(Exercise)g(8.)k Fq(The)14 b(exact)f(answ)o(ers)g(are)g(resp)q(ectiv)
o(ely)i(12)e(and)g(32.)19 b(If)14 b(something)f(w)o(en)o(t)g(wrong)g(in)h
(the)75 542 y(Lab)h(and)g(a)f(recognition)i(of)e(this)h(is)g(made,)g(giv)o(e)
f(credit)i(for)e(this)h(problem.)20 b(Be)15 b(harsh)g(if)g(the)g(ob)o(vious)
75 599 y(is)h(b)q(eing)g(ignored.)75 676 y Fn(Exercise)h(9.)i
Fq(The)c(b)q(o)q(ok)g(tells)h(us)f(that)f(the)g(deriv)m(ativ)o(e)i(of)f(sine)
g(is)g(cosine,)h(so)e(the)h(v)m(alues)h(cos)7 b Fh(\031)r(=)p
Fq(3)12 b(=)75 733 y(0)p Fh(:)p Fq(5)i(and)i(cos)7 b Fh(\031)r(=)p
Fq(6)12 b(=)439 695 y Fg(p)p 477 695 23 2 v 38 x Fq(3)o Fh(=)p
Fq(2)g Fg(\031)h Fq(0)p Fh(:)p Fq(866025)g(should)j(b)q(e)g(cited.)p
eop
%%Page: 20 20
20 19 bop 75 -103 a Fq(20)1143 b Fm(Limits)21 b(&)i(Con)n(tin)n(uit)n(y)p
1264 -85 611 2 v 606 49 a Fn(PURPOSE)18 b(OF)g(THE)g(PR)o(OJECT)146
152 y Fq(Use)g(plots)f(and)h(tables)g(to)g(illuminate)i(the)e(concepts)g(of)f
(limits)i(and)f(con)o(tin)o(uit)o(y)l(.)28 b(This)19 b(pro)s(ject)75
208 y(asks)c(the)g(studen)o(ts)g(to)g(t)o(yp)q(e)g(in)h(a)f(few)g(simple)h
(commands)f(without)g(using)h(a)f(template.)20 b(The)c Fk(Clear)75
265 y Fq(command)c(is)h(in)o(tro)q(duced.)20 b(The)12 b(pro)s(ject)f(closes)i
(with)f(some)g(notes)g(on)g(adv)m(anced)h Fl(Mathematic)n(a)j
Fq(\(and)75 321 y(adv)m(anced)i Fl(mathematics)t Fq(!\))26
b(that)17 b(migh)o(t)g(excite)h(the)f(brigh)o(ter)h(studen)o(ts)f(to)f(do)i
(some)f(exploring)h(on)75 378 y(their)e(o)o(wn.)75 455 y Fn(Shorter)26
b(Pro)s(ject)p Fq(:)34 b(If)23 b(a)g(shorter)f(pro)s(ject)f(is)j(desired,)h
(y)o(ou)d(could)i(omit)f(an)o(y)f(com)o(bination)h(of)75 511
y(Exercises)16 b(3,)e(5,)h(8,)f(10.)75 582 y Fn(Instructor)24
b(Note)p Fq(:)53 b(Exercise)22 b(6)e(in)o(tro)q(duces)i(the)f(conditional,)j
(it)e(do)q(esn't)e(come)i(up)f(m)o(uc)o(h)g(in)75 632 y(calculus-lev)o(el)k
Fl(Mathematic)n(a)s Fq(.)39 b(Y)l(ou)22 b(ma)o(y)e(prefer)i(to)f(giv)o(e)g(y)
o(our)g(studen)o(ts)g(the)h(more)f(structured)75 682 y Fk(Which)14
b Fq(command:)75 789 y Fj(Clear[f])75 839 y(f[x_])21 b(:=)162
889 y(Which[)293 939 y(\(*)g(If)h(*\))108 b(x)22 b(<=)f(-1,)g(\(*)h(then)f
(*\))g(x^3)g(+)h(2,)293 989 y(\(*)f(Elseif)g(*\))g(x)h(>=)f(1,)43
b(\(*)22 b(then)f(*\))g(x^4)g(+)h(1,)293 1039 y(\(*)f(Else)g(*\))65
b(True,)86 b(\(*)22 b(then)f(*\))g(x^2)g(+)h(x)f(+)h(1)162
1088 y(])75 1203 y Fq(This)16 b(co)q(de)g(is)f(in)h(the)g(Instructor's)e
(Noteb)q(o)q(ok.)75 1280 y Fn(Instructor)k(Note)p Fq(:)38 b(Here)16
b(are)g(some)f(though)o(ts)h(on)g Fl(Mathematic)n(a)k Fq(that)15
b(y)o(ou)h(migh)o(t)f(w)o(an)o(t)g(to)h(toss)75 1337 y(at)f(the)g(more)g
(eager)f(studen)o(ts:)126 1444 y(a\))22 b(F)l(or)13 b(the)g
(programming-orien)o(ted)h(studen)o(ts,)g(y)o(ou)f(migh)o(t)h(p)q(oin)o(t)g
(out)f(the)h(\\rule")g(in)g(the)g(sp)q(ecial)189 1494 y Fk(Table)g
Fq(command)h(in)h(Exercise)g(4)f(is)h(used)g(delib)q(erately)h(to)e(a)o(v)o
(oid)g(duplicate)i(co)q(de)e(suc)o(h)h(as:)189 1600 y Fj(Table[{a)k(+)h
(1/2^k,)g(f[a)g(+)h(1/2^k]},)e({k,)h(1,)g(ntimes}])f(//N)i(//TableForm)189
1713 y Fq(whic)o(h,)f(for)d(example,)j(w)o(ould)f(force)f(y)o(ou)g(to)g(mo)q
(dify)h(in)h(t)o(w)o(o)d(places)i(instead)g(of)f(one)h(to)e(get)189
1769 y(co)q(de)e(for)f(the)h(left)g(limit|it)h(is)g(a)e(common)h(mistak)o(e)f
(to)h(up)q(date)g(one)g(instance)h(and)f(to)f(forget)189 1825
y(to)f(up)q(date)i(the)f(other)g(in)h(suc)o(h)g(cases.)123
1913 y(b\))23 b(The)e Fk(Limit)f Fq(command)h(is)h(in)o(tro)q(duced,)h(but)f
(not)e(used)i(in)g(the)f(Pro)s(ject.)37 b(Let)21 b(us)g(use)h(this)189
1962 y(command)10 b(as)g(an)h(example)g(of)f(ho)o(w)g(to)g(ask)g(for)g
(information)g(ab)q(out)h(a)f Fl(Mathematic)n(a)k Fq(command:)189
2068 y Fj(?Limit)189 2118 y(Limit[expr,)19 b(x->x0])i(finds)f(the)i(limiting)
e(value)h(of)g(expr)g(when)g(x)254 2168 y(approaches)f(x0.)189
2274 y Fq(Alas,)15 b(in)h(this)f(case,)g(the)h(help)g(is)g(not)f(complete.)20
b(Here)c(is)f(ho)o(w)g(to)g(prob)q(e)g(further:)189 2380 y
Fj(Options[Limit])189 2429 y({Analytic)20 b(->)h(False,)f(Direction)g(->)i
(Automatic})189 2529 y(?Direction)189 2579 y(Direction)e(is)h(an)g(option)g
(for)g(Limit)g(which)g(specifies)e(the)254 2629 y(direction)h(towards)g
(which)h(to)g(approach)g(the)g(limit.)p eop
%%Page: 21 21
21 20 bop 75 -103 a Fm(Limits)21 b(&)i(Con)n(tin)n(uit)n(y)p
75 -85 611 2 v 1143 w Fq(21)189 49 y(Finally)c(w)o(e)f(men)o(tion)g(that)g(y)
o(our)f Fl(Mathematic)n(a)22 b Fq(probably)d(has)f(a)g(function)h(bro)o(wser)
e(\(F)l(ron)o(t)189 106 y(End)e(dep)q(enden)o(t\))i(and)e(this)h(is)f(a)g
(more)g(p)q(oten)o(t)g(help)h(mec)o(hanism.)128 205 y(c\))23
b(W)l(e)c(discuss)h(the)f(primitiv)o(e)h Fk(Chop)e Fq(b)q(elo)o(w)i(in)g(the)
f(answ)o(er)f(to)g(Exercise)i(4)f(\(not)f(discussed)i(or)189
262 y(used)15 b(in)h(the)g(pro)s(ject\).)123 355 y(d\))23 b(Our)16
b(pac)o(k)m(age)h(Calculus.m)g(includes)h(the)f Fk(LimitTable)e
Fq(command)h(\(not)f(used)i(or)f(men)o(tioned)189 405 y(in)g(the)f(pro)s
(ject\),)f(a)h(robust)f(to)q(ol)i(similar)g(to)e(the)i(sp)q(ecial)h(co)q(de)f
(in)o(tro)q(duced)g(in)g(Exercise)g(4:)189 518 y Fj(?LimitTable)189
567 y(LimitTable[f[x],)i({x,)j(a,)h(\(n\),)f(\(h\)}])210 667
y(Tabulate)g(f[x])g(at)g(n)g(values)g(near)g(a)210 767 y(a)87
b(the)22 b(point)e(at)i(which)e(the)i(limit)e(is)i(being)f(investigated)210
817 y(n)87 b(the)22 b(number)e(of)h(points)g(to)g(tabulate,)f(default)h(is)g
(10)210 866 y(h)87 b(the)22 b(first)e(point)h(is)g(computed)g(as)g(a+h.)43
b(Use)21 b(negative)319 916 y(values)g(for)g(left)g(approach)f(to)i(limit,)e
(default)g(is)i(1)189 1016 y(Typically)e(issue)g(the)h(command)g(like)g
(this:)276 1066 y(LimitTable[x^2,)d({x,)k(2}])f(//TableForm)189
1179 y Fq(Here)15 b(are)g(some)g(examples:)189 1292 y Fj(f[x_])20
b(:=)i(\(Sqrt[25)e(+)h(x])h(-)f(Sqrt[25)g(-)g(x]\)/x)189 1391
y(LimitTable[f[x],)d({x,)j(0}]//TableForm)276 1441 y(1.)196
b(0.200040028)276 1491 y(0.1)174 b(0.2000004)276 1541 y(0.01)152
b(0.200000004)276 1591 y(0.001)130 b(0.2)276 1640 y(0.0001)108
b(0.2)276 1690 y(0.00001)86 b(0.1999999999)385 1740 y(-6)276
1790 y(1.)21 b(10)131 b(0.1999999997)385 1840 y(-7)276 1890
y(1.)21 b(10)131 b(0.1999999899)385 1939 y(-8)276 1989 y(1.)21
b(10)131 b(0.2000001942)385 2039 y(-9)276 2089 y(1.)21 b(10)131
b(0.2000000165)385 2139 y(-10)276 2188 y(1.)21 b(10)131 b(0.2000088983)189
2288 y(LimitTable[f[x],)18 b({x,)j(0,)h(5}]//TableForm)276
2338 y(1.)174 b(0.200040028)276 2388 y(0.1)152 b(0.2000004)276
2437 y(0.01)130 b(0.200000004)276 2487 y(0.001)108 b(0.2)276
2537 y(0.0001)86 b(0.2)276 2587 y(0.00001)64 b(0.1999999999)p
eop
%%Page: 22 22
22 21 bop 75 -103 a Fq(22)1143 b Fm(Limits)21 b(&)i(Con)n(tin)n(uit)n(y)p
1264 -85 611 2 v 577 49 a Fn(ANSWERS)17 b(F)o(OR)h(INSTR)o(UCTORS)75
152 y(Exercise)f(1.)j Fq(Argue)c(that)e(p)q(olynomials)j(are)e(con)o(tin)o
(uous)h(on)f(their)h(domains)f(so)g(the)g(only)h(p)q(ossible)75
208 y(discon)o(tin)o(uities)h(are)e(at)g Fh(x)e Fq(=)g Fg(\006)p
Fq(1.)126 322 y(a\))22 b(F)l(rom)16 b(the)h(left:)24 b Fh(f)5
b Fq(\()p Fg(\000)p Fq(1)594 306 y Fb(\000)623 322 y Fq(\))16
b(=)f(1,)i(from)g(the)g(righ)o(t:)23 b Fh(f)5 b Fq(\()p Fg(\000)p
Fq(1)1184 306 y Fe(+)1213 322 y Fq(\))16 b(=)g(1,)g(so)h(con)o(tin)o(uous)g
(at)g(-1.)25 b(F)l(rom)189 379 y(the)15 b(left:)20 b Fh(f)5
b Fq(\(1)432 362 y Fb(\000)461 379 y Fq(\))13 b(=)f(3,)j(from)f(the)i(righ)o
(t:)j Fh(f)5 b Fq(\(1)971 362 y Fe(+)1000 379 y Fq(\))13 b(=)g(2,)h(so)h
Fl(dis)t Fq(con)o(tin)o(uous)g(at)g(+1.)123 472 y(b\))23 b(Condition)12
b(for)f(con)o(tin)o(uit)o(y)h(at)f Fh(x)i Fq(=)g Fg(\000)p
Fq(1)f(is)g(1)g(=)h(1)s Fg(\000)s Fh(b)s Fq(+)s Fh(c)e Fq(\(so)g
Fh(b)h Fq(=)h Fh(c)p Fq(\).)18 b(Condition)13 b(for)e(con)o(tin)o(utit)o(y)
189 529 y(at)j Fh(x)f Fq(=)g(1)i(is)g(2)e(=)g(1)d(+)g Fh(b)g
Fq(+)g Fh(c)i Fq(=)h(1)d(+)h(2)p Fh(b)p Fq(.)19 b(Th)o(us)c
Fh(b)d Fq(=)h Fh(c)f Fq(=)h(1)p Fh(=)p Fq(2.)75 636 y Fn(Exercise)23
b(2.)36 b Fq(Note)20 b(that)g(in)h(this)g(case,)g(the)g(studen)o(ts)f(had)h
(to)f(t)o(yp)q(e)g(in)i(the)e(co)q(de)h(since)h(it)f(w)o(as)75
686 y(delib)q(erately)e(not)d(included)j(in)e(the)f(Pro)s(ject)f(noteb)q(o)q
(ok)i(\(at)e(this)i(p)q(oin)o(t)g(in)g(the)f(course,)g(w)o(e)g(w)o(an)o(t)g
(to)75 736 y(insist)g(on)f(sensitivit)o(y)i(to)d(standard)h
Fl(Mathematic)n(a)k Fq(syn)o(tax\).)75 843 y Fj(f[x_])i(:=)43
b(x^3)21 b(+)h(3x^2)75 893 y(f[2])75 943 y(f[x])f(/.)g(x)h(->)f(2)75
993 y(f[t])75 1042 y(f[cat])75 1092 y(Table[f[n],)f({n,)h(1,)g(5}])162
1192 y(20)162 1242 y(20)228 1291 y(2)87 b(3)162 1341 y(3)22
b(t)43 b(+)22 b(t)271 1391 y(2)131 b(3)162 1441 y(3)22 b(cat)43
b(+)21 b(cat)162 1491 y({2,)g(12,)h(36,)f(80,)g(150})75 1619
y Fn(Exercise)f(3.)26 b Fk(Factor)17 b Fq(can)h(either)g(b)q(e)g(used)g(on)f
(the)h(n)o(umerator)e(or)h(on)h(the)f(whole)h(fraction.)27
b(The)75 1669 y(\014rst)14 b(and)h(third)g Fl(do)j Fq(factor;)c(the)h(second)
g(do)q(esn't.)k(The)c(limits)h(are)f(resp)q(ectiv)o(ely)h(228,)d(do)q(esn't)i
(exist,)75 1718 y(and)g(0)g(\(13)g(is)g(a)g(double)i(factor!\).)75
1826 y Fj(Factor[\(x^3)j(-)h(9x^2)g(-)h(45x)f(-)g(91\)/\(x)g(-)h(13\)])75
1876 y(Factor[\(x^3)e(-)h(9x^2)g(-)h(39x)f(-)g(86\)/\(x)g(-)h(13\)])75
1925 y(Factor[\(x^4)e(-)h(26x^3)g(+)g(178x^2)g(-)h(234x)f(+)g(1521\)/\(x)f(-)
i(13\)])315 2025 y(2)162 2075 y(7)g(+)f(4)h(x)g(+)f(x)511 2125
y(2)87 b(3)162 2174 y(-86)21 b(-)h(39)f(x)h(-)f(9)h(x)43 b(+)22
b(x)162 2224 y(------------------)o(----)315 2274 y(-13)f(+)g(x)511
2324 y(2)162 2374 y(\(-13)g(+)h(x\))f(\(9)g(+)h(x)g(\))75 2508
y Fn(Exercise)17 b(4.)j Fq(The)15 b(plot)g(is)g(sho)o(wn)g(in)g(Figure)h(13.)
j(The)c(limiting)i(v)m(alue)f(of)e(0.5)g(can)h(b)q(e)h(clearly)g(seen.)75
2579 y(A)d Fk(Table)f Fq(is)h(sho)o(wn)g(b)q(elo)o(w|note)g(the)g
(round-o\013)f(error)g(in)i(computing)f Fh(x)g Fq(=)g(0.)19
b(The)13 b Fk(Chop)f Fq(command)75 2629 y(can)j(b)q(e)h(used)g(to)f(tell)h
Fl(Mathematic)n(a)j Fq(to)c(drop)g(suc)o(h)g(small)h(detritus.)p
eop
%%Page: 23 23
23 22 bop 75 -103 a Fm(Limits)21 b(&)i(Con)n(tin)n(uit)n(y)p
75 -85 611 2 v 1143 w Fq(23)639 419 y @beginspecial 0 @llx
0 @lly 282 @urx 174 @ury 1614 @rwi @setspecial
%%BeginDocument: sqrootfn.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.47619 -19.415767 39.584011 [
[(-1)] 0.02381 0.37624 0 2 Msboxa
[(-0.5)] 0.2619 0.37624 0 2 Msboxa
[(0.5)] 0.7381 0.37624 0 2 Msboxa
[(1)] 0.97619 0.37624 0 2 Msboxa
[(0.492)] 0.4875 0.05957 1 0 Msboxa
[(0.494)] 0.4875 0.13873 1 0 Msboxa
[(0.496)] 0.4875 0.2179 1 0 Msboxa
[(0.498)] 0.4875 0.29707 1 0 Msboxa
[(0.502)] 0.4875 0.45541 1 0 Msboxa
[(0.504)] 0.4875 0.53457 1 0 Msboxa
[(0.506)] 0.4875 0.61374 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.37624 moveto
0.02381 0.38249 lineto
stroke
grestore
[(-1)] 0.02381 0.37624 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.37624 moveto
0.2619 0.38249 lineto
stroke
grestore
[(-0.5)] 0.2619 0.37624 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.37624 moveto
0.7381 0.38249 lineto
stroke
grestore
[(0.5)] 0.7381 0.37624 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.37624 moveto
0.97619 0.38249 lineto
stroke
grestore
[(1)] 0.97619 0.37624 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.37624 moveto
0.07143 0.37999 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.37624 moveto
0.11905 0.37999 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.37624 moveto
0.16667 0.37999 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.37624 moveto
0.21429 0.37999 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.37624 moveto
0.30952 0.37999 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.37624 moveto
0.35714 0.37999 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.37624 moveto
0.40476 0.37999 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.37624 moveto
0.45238 0.37999 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.37624 moveto
0.54762 0.37999 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.37624 moveto
0.59524 0.37999 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.37624 moveto
0.64286 0.37999 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.37624 moveto
0.69048 0.37999 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.37624 moveto
0.78571 0.37999 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.37624 moveto
0.83333 0.37999 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.37624 moveto
0.88095 0.37999 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.37624 moveto
0.92857 0.37999 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.37624 moveto
1 0.37624 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.05957 moveto
0.50625 0.05957 lineto
stroke
grestore
[(0.492)] 0.4875 0.05957 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.13873 moveto
0.50625 0.13873 lineto
stroke
grestore
[(0.494)] 0.4875 0.13873 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.2179 moveto
0.50625 0.2179 lineto
stroke
grestore
[(0.496)] 0.4875 0.2179 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.29707 moveto
0.50625 0.29707 lineto
stroke
grestore
[(0.498)] 0.4875 0.29707 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.45541 moveto
0.50625 0.45541 lineto
stroke
grestore
[(0.502)] 0.4875 0.45541 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.53457 moveto
0.50625 0.53457 lineto
stroke
grestore
[(0.504)] 0.4875 0.53457 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.61374 moveto
0.50625 0.61374 lineto
stroke
grestore
[(0.506)] 0.4875 0.61374 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.0754 moveto
0.50375 0.0754 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.09123 moveto
0.50375 0.09123 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.10707 moveto
0.50375 0.10707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1229 moveto
0.50375 0.1229 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.15457 moveto
0.50375 0.15457 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1704 moveto
0.50375 0.1704 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18624 moveto
0.50375 0.18624 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.20207 moveto
0.50375 0.20207 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.23374 moveto
0.50375 0.23374 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.24957 moveto
0.50375 0.24957 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.2654 moveto
0.50375 0.2654 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.28124 moveto
0.50375 0.28124 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.3129 moveto
0.50375 0.3129 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.32874 moveto
0.50375 0.32874 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.34457 moveto
0.50375 0.34457 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36041 moveto
0.50375 0.36041 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.39207 moveto
0.50375 0.39207 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40791 moveto
0.50375 0.40791 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.42374 moveto
0.50375 0.42374 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.43957 moveto
0.50375 0.43957 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.47124 moveto
0.50375 0.47124 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.48707 moveto
0.50375 0.48707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.50291 moveto
0.50375 0.50291 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.51874 moveto
0.50375 0.51874 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55041 moveto
0.50375 0.55041 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.56624 moveto
0.50375 0.56624 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.58208 moveto
0.50375 0.58208 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59791 moveto
0.50375 0.59791 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.04373 moveto
0.50375 0.04373 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.0279 moveto
0.50375 0.0279 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.01207 moveto
0.50375 0.01207 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.60332 moveto
0.06349 0.58206 lineto
0.10317 0.56124 lineto
0.14286 0.54086 lineto
0.18254 0.52091 lineto
0.22222 0.50139 lineto
0.2619 0.4823 lineto
0.30159 0.46361 lineto
0.34127 0.44534 lineto
0.38095 0.42747 lineto
0.42063 0.41 lineto
0.44048 0.40141 lineto
0.46032 0.39293 lineto
0.47024 0.38872 lineto
0.48016 0.38453 lineto
0.48512 0.38245 lineto
0.49008 0.38037 lineto
0.49256 0.37934 lineto
0.49504 0.3783 lineto
0.49628 0.37779 lineto
0.49752 0.37727 lineto
0.49876 0.37675 lineto
stroke
0.49878 0 moveto
0.49876 0.37675 lineto
stroke
0.50122 0 moveto
0.50124 0.37572 lineto
stroke
0.50124 0.37572 moveto
0.50248 0.37521 lineto
0.50496 0.37418 lineto
0.50992 0.37213 lineto
0.51984 0.36804 lineto
0.53968 0.35994 lineto
0.57937 0.34402 lineto
0.61905 0.32847 lineto
0.65873 0.3133 lineto
0.69841 0.29849 lineto
0.7381 0.28405 lineto
0.77778 0.26998 lineto
0.81746 0.25625 lineto
0.85714 0.24289 lineto
0.89683 0.22987 lineto
0.93651 0.21721 lineto
0.97619 0.20488 lineto
stroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 123 505 a Fi(Fig)p Fq(.)15 b(13.)k(Plot)c(of)g(function)h(in)g
(Exercise)g(4)f(near)g Fh(x)e Fq(=)g(0)i(sho)o(wing)g(limiting)i(v)m(alue)f
(of)f(0.5)f(there.)75 644 y Fj(Table[{x,)20 b(f[x]},)g({x,)i(-1.0,)e(1.0,)h
(0.2}]//TableForm)162 694 y(-1.)305 b(0.505737)162 744 y(-0.8)283
b(0.504466)162 793 y(-0.6)g(0.50326)162 843 y(-0.4)g(0.502114)162
893 y(-0.2)g(0.501028)402 943 y(-17)162 993 y(-5.55112)20 b(10)131
b(0.)162 1042 y(0.2)305 b(0.499028)162 1092 y(0.4)g(0.49811)162
1142 y(0.6)g(0.497245)162 1192 y(0.8)g(0.496433)162 1242 y(1.)327
b(0.495671)75 1341 y(Table[{x,)20 b(f[x]},)g({x,)i(-1.0,)e(1.0,)h
(0.2}]//Chop//TableF)o(orm)162 1391 y(-1.)87 b(0.505737)162
1441 y(-0.8)65 b(0.504466)162 1491 y(-0.6)g(0.50326)162 1541
y(-0.4)g(0.502114)162 1590 y(-0.2)g(0.501028)162 1640 y(0)131
b(0)162 1690 y(0.2)87 b(0.499028)162 1740 y(0.4)g(0.49811)162
1790 y(0.6)g(0.497245)162 1840 y(0.8)g(0.496433)162 1889 y(1.)109
b(0.495671)75 1999 y Fq(Here)15 b(is)h(the)f(result)h(of)f(running)h(the)f
(sp)q(ecial)i(co)q(de:)162 2110 y Fj(0.5)152 b(0.497671)162
2159 y(0.25)130 b(0.498793)162 2209 y(0.125)108 b(0.499386)162
2259 y(0.0625)86 b(0.49969)162 2309 y(0.03125)64 b(0.499844)75
2419 y Fq(And)16 b(here)f(is)h(the)f(mo)q(di\014cation)i(of)d(the)i(sp)q
(ecial)h(co)q(de)f(for)e(left)i(limits:)75 2529 y Fj(Table[{x,)k(f[x]})h(/.)g
(x)h(->)f(a)h(-)f(1/2^k,)g({k,)g(1,)g(ntimes}])f(//)75 2579
y(N)i(//)f(TableForm)162 2629 y(-0.5)152 b(0.502679)p eop
%%Page: 24 24
24 23 bop 75 -103 a Fq(24)1143 b Fm(Limits)21 b(&)i(Con)n(tin)n(uit)n(y)p
1264 -85 611 2 v 162 49 a Fj(-0.25)130 b(0.501294)162 99 y(-0.125)108
b(0.500636)162 149 y(-0.0625)86 b(0.500315)162 199 y(-0.03125)64
b(0.500157)75 334 y Fn(Exercise)14 b(5.)19 b Fq(These)12 b(are)g(all)h
(\\famous")e(except)i(for)f(the)g(\014rst)g(whic)o(h)h(can)f(just)g(b)q(e)h
(directly)h(ev)m(aluated)75 390 y(as)g(-4.)20 b(So:)f(-4,)14
b(1,)g(0,)h(5,)f(2.7)f(\(e\).)19 b(Plots)c(or)f(T)l(ables)h(or)f(the)h(sp)q
(ecial)h(co)q(de)g(will)g(all)f(do)g(the)g(tric)o(k)f(on)h(the)75
447 y(last)h(4,)g(though)g(y)o(ou)g(ma)o(y)g(ha)o(v)o(e)g(to)g(grit)g(y)o
(our)g(teeth)g(and)h(accept)f(things)h(lik)o(e)h(.001)d(for)g(the)i(0)f
(limit,)75 503 y(etc.)639 968 y @beginspecial 0 @llx 0 @lly
282 @urx 174 @ury 1614 @rwi @setspecial
%%BeginDocument: continuity1.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.238095 0.180426 0.07333 [
[(-2)] 0.02381 0.18043 0 2 Msboxa
[(-1)] 0.2619 0.18043 0 2 Msboxa
[(1)] 0.7381 0.18043 0 2 Msboxa
[(2)] 0.97619 0.18043 0 2 Msboxa
[(-2)] 0.4875 0.03377 1 0 Msboxa
[(2)] 0.4875 0.32709 1 0 Msboxa
[(4)] 0.4875 0.47375 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.18043 moveto
0.02381 0.18668 lineto
stroke
grestore
[(-2)] 0.02381 0.18043 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.18043 moveto
0.2619 0.18668 lineto
stroke
grestore
[(-1)] 0.2619 0.18043 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.18043 moveto
0.7381 0.18668 lineto
stroke
grestore
[(1)] 0.7381 0.18043 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.18043 moveto
0.97619 0.18668 lineto
stroke
grestore
[(2)] 0.97619 0.18043 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.18043 moveto
0.07143 0.18418 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.18043 moveto
0.11905 0.18418 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.18043 moveto
0.16667 0.18418 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.18043 moveto
0.21429 0.18418 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.18043 moveto
0.30952 0.18418 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.18043 moveto
0.35714 0.18418 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.18043 moveto
0.40476 0.18418 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.18043 moveto
0.45238 0.18418 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.18043 moveto
0.54762 0.18418 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.18043 moveto
0.59524 0.18418 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.18043 moveto
0.64286 0.18418 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.18043 moveto
0.69048 0.18418 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.18043 moveto
0.78571 0.18418 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.18043 moveto
0.83333 0.18418 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.18043 moveto
0.88095 0.18418 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.18043 moveto
0.92857 0.18418 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.18043 moveto
1 0.18043 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.03377 moveto
0.50625 0.03377 lineto
stroke
grestore
[(-2)] 0.4875 0.03377 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.32709 moveto
0.50625 0.32709 lineto
stroke
grestore
[(2)] 0.4875 0.32709 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.47375 moveto
0.50625 0.47375 lineto
stroke
grestore
[(4)] 0.4875 0.47375 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.0631 moveto
0.50375 0.0631 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.09243 moveto
0.50375 0.09243 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.12176 moveto
0.50375 0.12176 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.15109 moveto
0.50375 0.15109 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.20976 moveto
0.50375 0.20976 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.23909 moveto
0.50375 0.23909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.26842 moveto
0.50375 0.26842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.29775 moveto
0.50375 0.29775 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.35642 moveto
0.50375 0.35642 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.38575 moveto
0.50375 0.38575 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.41508 moveto
0.50375 0.41508 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.44441 moveto
0.50375 0.44441 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.50308 moveto
0.50375 0.50308 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.53241 moveto
0.50375 0.53241 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.56174 moveto
0.50375 0.56174 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59107 moveto
0.50375 0.59107 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.00443 moveto
0.50375 0.00443 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
stroke
stroke
stroke
0.10852 0 moveto
0.14286 0.0796 lineto
stroke
0.14286 0.0796 moveto
0.18254 0.15327 lineto
0.22222 0.21064 lineto
0.24206 0.23385 lineto
0.25198 0.2442 lineto
0.25694 0.24908 lineto
0.25942 0.25144 lineto
0.26066 0.2526 lineto
0.2619 0.25376 lineto
0.26438 0.253 lineto
0.26687 0.25226 lineto
0.27183 0.25083 lineto
0.28175 0.24815 lineto
0.30159 0.24357 lineto
0.32143 0.24001 lineto
0.33135 0.23861 lineto
0.34127 0.23746 lineto
0.35119 0.23657 lineto
0.35615 0.23622 lineto
0.36111 0.23593 lineto
0.36607 0.23571 lineto
0.36855 0.23562 lineto
0.37103 0.23555 lineto
0.37351 0.2355 lineto
0.37475 0.23547 lineto
0.37599 0.23546 lineto
0.37723 0.23544 lineto
0.37847 0.23543 lineto
0.37971 0.23543 lineto
0.38095 0.23542 lineto
0.38219 0.23543 lineto
0.38343 0.23543 lineto
0.38467 0.23544 lineto
0.38591 0.23546 lineto
0.38839 0.2355 lineto
0.39087 0.23555 lineto
0.39335 0.23562 lineto
0.39583 0.23571 lineto
0.40079 0.23593 lineto
0.40575 0.23622 lineto
0.41071 0.23657 lineto
0.42063 0.23746 lineto
0.43056 0.23861 lineto
0.44048 0.24001 lineto
0.46032 0.24357 lineto
0.48016 0.24815 lineto
0.5 0.25376 lineto
0.53968 0.26801 lineto
0.57937 0.28635 lineto
0.61905 0.30875 lineto
Mistroke
0.65873 0.33523 lineto
0.69841 0.36579 lineto
0.71825 0.38259 lineto
0.72817 0.39138 lineto
0.73313 0.39586 lineto
0.73562 0.39813 lineto
0.73686 0.39927 lineto
0.7381 0.40042 lineto
0.73934 0.32863 lineto
0.74058 0.33019 lineto
0.74306 0.33339 lineto
0.74802 0.34009 lineto
0.75794 0.35476 lineto
0.77778 0.38961 lineto
0.81746 0.48551 lineto
0.8373 0.54912 lineto
Mfstroke
0.85532 0.61803 moveto
0.8373 0.54912 lineto
stroke
stroke
stroke
stroke
stroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 232 1055 a Fi(Fig)p Fq(.)f(14.)20 b(Plot)15 b(of)g(piecewise)i
(de\014ned)f(function)g(sho)o(wing)g(discon)o(tin)o(uit)o(y)g(at)f
Fh(x)d Fq(=)h(1.)75 1170 y Fn(Exercise)24 b(6.)38 b Fq(Using)22
b(the)f(giv)o(en)h(function)g(de\014ned)h(with)e(conditionals,)j(the)e
Fk(Plot)e Fq(is)i(sho)o(wn)f(in)75 1227 y(Figure)15 b(14.)20
b(In)c(the)f(altered)g(function)h(with)g Fh(b)c Fq(=)h Fh(c)f
Fq(=)h(1)p Fh(=)p Fq(2,)h(the)i Fk(Plot)e Fq(is)i(sho)o(wn)f(in)h(Figure)f
(15.)639 1703 y @beginspecial 0 @llx 0 @lly 282 @urx 174 @ury
1614 @rwi @setspecial
%%BeginDocument: continuity2.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.238095 0.19421 0.094191 [
[(-2)] 0.02381 0.19421 0 2 Msboxa
[(-1)] 0.2619 0.19421 0 2 Msboxa
[(1)] 0.7381 0.19421 0 2 Msboxa
[(2)] 0.97619 0.19421 0 2 Msboxa
[(-2)] 0.4875 0.00583 1 0 Msboxa
[(-1)] 0.4875 0.10002 1 0 Msboxa
[(1)] 0.4875 0.2884 1 0 Msboxa
[(2)] 0.4875 0.38259 1 0 Msboxa
[(3)] 0.4875 0.47678 1 0 Msboxa
[(4)] 0.4875 0.57098 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.19421 moveto
0.02381 0.20046 lineto
stroke
grestore
[(-2)] 0.02381 0.19421 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.19421 moveto
0.2619 0.20046 lineto
stroke
grestore
[(-1)] 0.2619 0.19421 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.19421 moveto
0.7381 0.20046 lineto
stroke
grestore
[(1)] 0.7381 0.19421 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.19421 moveto
0.97619 0.20046 lineto
stroke
grestore
[(2)] 0.97619 0.19421 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.19421 moveto
0.07143 0.19796 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.19421 moveto
0.11905 0.19796 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.19421 moveto
0.16667 0.19796 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.19421 moveto
0.21429 0.19796 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.19421 moveto
0.30952 0.19796 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.19421 moveto
0.35714 0.19796 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.19421 moveto
0.40476 0.19796 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.19421 moveto
0.45238 0.19796 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.19421 moveto
0.54762 0.19796 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.19421 moveto
0.59524 0.19796 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.19421 moveto
0.64286 0.19796 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.19421 moveto
0.69048 0.19796 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.19421 moveto
0.78571 0.19796 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.19421 moveto
0.83333 0.19796 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.19421 moveto
0.88095 0.19796 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.19421 moveto
0.92857 0.19796 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.19421 moveto
1 0.19421 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.00583 moveto
0.50625 0.00583 lineto
stroke
grestore
[(-2)] 0.4875 0.00583 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.10002 moveto
0.50625 0.10002 lineto
stroke
grestore
[(-1)] 0.4875 0.10002 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.2884 moveto
0.50625 0.2884 lineto
stroke
grestore
[(1)] 0.4875 0.2884 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.38259 moveto
0.50625 0.38259 lineto
stroke
grestore
[(2)] 0.4875 0.38259 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.47678 moveto
0.50625 0.47678 lineto
stroke
grestore
[(3)] 0.4875 0.47678 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.57098 moveto
0.50625 0.57098 lineto
stroke
grestore
[(4)] 0.4875 0.57098 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.02467 moveto
0.50375 0.02467 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.0435 moveto
0.50375 0.0435 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.06234 moveto
0.50375 0.06234 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.08118 moveto
0.50375 0.08118 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.11886 moveto
0.50375 0.11886 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1377 moveto
0.50375 0.1377 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.15653 moveto
0.50375 0.15653 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.17537 moveto
0.50375 0.17537 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.21305 moveto
0.50375 0.21305 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.23189 moveto
0.50375 0.23189 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.25072 moveto
0.50375 0.25072 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.26956 moveto
0.50375 0.26956 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.30724 moveto
0.50375 0.30724 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.32608 moveto
0.50375 0.32608 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.34492 moveto
0.50375 0.34492 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36375 moveto
0.50375 0.36375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40143 moveto
0.50375 0.40143 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.42027 moveto
0.50375 0.42027 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.43911 moveto
0.50375 0.43911 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45795 moveto
0.50375 0.45795 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.49562 moveto
0.50375 0.49562 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.51446 moveto
0.50375 0.51446 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.5333 moveto
0.50375 0.5333 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55214 moveto
0.50375 0.55214 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.58981 moveto
0.50375 0.58981 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.60865 moveto
0.50375 0.60865 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
stroke
stroke
stroke
0.12113 0 moveto
0.14286 0.0647 lineto
stroke
0.14286 0.0647 moveto
0.18254 0.15932 lineto
0.22222 0.23302 lineto
0.24206 0.26284 lineto
0.25198 0.27613 lineto
0.25694 0.28239 lineto
0.25942 0.28543 lineto
0.26066 0.28692 lineto
0.2619 0.2884 lineto
0.26438 0.28694 lineto
0.26687 0.2855 lineto
0.27183 0.28268 lineto
0.28175 0.27728 lineto
0.30159 0.26747 lineto
0.32143 0.25897 lineto
0.34127 0.25177 lineto
0.36111 0.24588 lineto
0.38095 0.24131 lineto
0.39087 0.23951 lineto
0.40079 0.23803 lineto
0.41071 0.23689 lineto
0.41567 0.23644 lineto
0.42063 0.23607 lineto
0.4256 0.23579 lineto
0.42808 0.23567 lineto
0.43056 0.23558 lineto
0.43304 0.23551 lineto
0.43428 0.23548 lineto
0.43552 0.23546 lineto
0.43676 0.23544 lineto
0.438 0.23543 lineto
0.43924 0.23542 lineto
0.44048 0.23542 lineto
0.44172 0.23542 lineto
0.44296 0.23543 lineto
0.4442 0.23544 lineto
0.44544 0.23546 lineto
0.44792 0.23551 lineto
0.4504 0.23558 lineto
0.45288 0.23567 lineto
0.45536 0.23579 lineto
0.46032 0.23607 lineto
0.46528 0.23644 lineto
0.47024 0.23689 lineto
0.48016 0.23803 lineto
0.49008 0.23951 lineto
0.5 0.24131 lineto
0.51984 0.24588 lineto
0.53968 0.25177 lineto
0.57937 0.26747 lineto
Mistroke
0.61905 0.2884 lineto
0.65873 0.31457 lineto
0.69841 0.34596 lineto
0.71825 0.36362 lineto
0.72817 0.37294 lineto
0.73313 0.37773 lineto
0.73562 0.38015 lineto
0.73686 0.38137 lineto
0.7381 0.38259 lineto
0.73934 0.38457 lineto
0.74058 0.38658 lineto
0.74306 0.39069 lineto
0.74802 0.3993 lineto
0.75794 0.41814 lineto
0.77778 0.4629 lineto
0.81746 0.58609 lineto
Mfstroke
0.82522 0.61803 moveto
0.81746 0.58609 lineto
stroke
stroke
stroke
stroke
stroke
stroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 150 1790 a Fi(Fig)p Fq(.)g(15.)k(Plot)c(of)g(altered)g
(piecewise)j(de\014ned)e(function)g(v)o(erifying)g(con)o(tin)o(uit)o(y)g(at)e
(b)q(oth)i Fg(\006)p Fq(1.)75 1893 y Fn(Exercise)h(7.)j Fq(As)15
b(indicated,)i(the)e(studen)o(t)g(should)h(m)o(ultiply)h(b)o(y)753
1956 y Fg(p)p 791 1956 150 2 v 35 x Fq(25)10 b(+)g(3)p Fh(x)g
Fq(+)996 1956 y Fg(p)p 1034 1956 V 35 x Fq(25)g Fg(\000)g Fq(2)p
Fh(x)p 753 2011 431 2 v 753 2020 a Fg(p)p 791 2020 150 2 v
36 x Fq(25)g(+)g(3)p Fh(x)g Fq(+)996 2020 y Fg(p)p 1034 2020
V 36 x Fq(25)g Fg(\000)g Fq(2)p Fh(x)1189 2022 y(:)75 2176
y Fn(Exercise)16 b(8.)j Fq(After)14 b(canceling)h(the)f Fh(x)757
2159 y Fe(1)p Ff(=)p Fe(3)820 2176 y Fg(\000)7 b Fq(2,)14 b(the)g(limit)h
(can)f(b)q(e)h(ev)m(aluated)g(as)e(1/3.)19 b(This)14 b(is)g(a)g(go)q(o)q(d)75
2232 y(opp)q(ortunit)o(y)h(to)g(remind)h(studen)o(ts)f(ab)q(out)g(\\long)g
(division")i(of)e(algebraic)h(quan)o(tities.)75 2309 y Fn(Exercise)c(9.)18
b Fq(The)10 b(magic)h(condition)h(that)d(allo)o(ws)i(limit)h(computation)e(b)
o(y)g(mere)h(function)g(ev)m(aluation)75 2366 y(is)16 b Fh(:)8
b(:)g(:)d Fq(con)o(tin)o(uit)o(y!)21 b(That's)14 b(exactly)i(what)e(the)i
(de\014nition)h(of)d(con)o(tin)o(uit)o(y)i(sa)o(ys)f(w)o(e)g(can)g(do.)20
b(The)15 b(\014rst)75 2422 y(and)g(third)h(can)f(b)q(e)h(pro)o(v)o(ed)f(con)o
(tin)o(uous)h(b)o(y)f(the)g(elemen)o(tary)h(limit)g(theorems.)75
2499 y Fn(Exercise)h(10.)j Fq(One)c(p)q(ossibilit)o(y)h(are)e(curv)o(es)g(in)
h(c)o(hemistry)f(that)f(giv)o(e)h(\(sa)o(y\))f(sp)q(eci\014c)j(heat)e(of)f
(giv)o(en)75 2556 y(substance)j(in)g(v)m(arious)g(temp)q(erature)f(ranges)g
(or)g(matter)f(phases.)24 b(Note)16 b(that)g(suc)o(h)g(real)h(life)h(curv)o
(es)75 2612 y(ma)o(y)c(b)q(e)i(discon)o(tin)o(uous)h(for)d(all)i(practical)g
(purp)q(oses)g(\(e.g.,)e(at)g(freezing)i(or)f(b)q(oiling)i(p)q(oin)o(ts\).)p
eop
%%Page: 25 25
25 24 bop 75 -105 a Fm(Limits)21 b(With)h(Mathematica)f(\(optional\))p
75 -84 1108 2 v 647 w Fq(25)606 49 y Fn(PURPOSE)d(OF)g(THE)g(PR)o(OJECT)146
152 y Fq(This)d(pro)s(ject)f(exercises)i(the)g Fk(Limit)e Fq(command.)20
b(The)15 b(studen)o(ts)g(are)f(led)i(in)o(to)f(disco)o(v)o(ering)h(some)75
208 y(general)f(limit)h(results.)k(Kno)o(wledge)c(of)e(the)h
Fk(Limit)e Fq(command)i(will)h Fl(not)j Fq(b)q(e)c(assumed)g(in)g(the)g
(sequel.)75 286 y Fn(Shorter)i(Pro)s(ject)p Fq(:)j(Drop)14
b(an)o(y)h(com)o(bination)h(of)f(Exercises)h(2,)e(3,)h(6.)577
412 y Fn(ANSWERS)i(F)o(OR)h(INSTR)o(UCTORS)75 514 y(Exercise)g(1.)j
Fq(F)l(or)15 b(the)h(\014rst)f(part,)g(mak)o(e)g(the)h(substitution,)g
Fh(u)d Fq(=)h(1)p Fh(=x)p Fq(.)20 b(F)l(or)15 b(the)h(second)g(part,)f(note)
75 571 y(that)g(a)h(function)h(has)f(a)g(limit)h(as)f(a)g(v)m(ariable)h(tak)o
(es)f(on)g(all)h(v)m(alues)g(approac)o(hing)f(some)g(v)m(alue)h(\(here,)75
627 y(+)p Fg(1)p Fq(\),)d(then)g(\(in)o(tuitiv)o(ely\))g(the)g(function)g(m)o
(ust)f(ha)o(v)o(e)g(the)h(same)f(limit)i(as)e(the)g(v)m(ariable)i(tak)o(es)e
(on)g(only)75 684 y(certain)j(v)m(alues)g(approac)o(hing)f(that)g(v)m(alue.)
75 754 y Fn(Exercise)i(2.)75 862 y Fj(f[x_])k(:=)g(\(Sin[Tan[x]])e(-)j
(Tan[Sin[x]]\))d(/x^7)75 912 y(a)j(=)f(0;)h(ntimes)e(=)i(5;)75
962 y(Table[{x,)e(f[x]})h(/.)g(x)h(->)f(a)h(+)f(1/2^k,)g({k,)g(1,)g(ntimes}])
f(//)75 1012 y(N)i(//TableForm)75 1061 y(Clear[a,)e(ntimes];)162
1111 y(0.5)152 b(-0.0447304)162 1161 y(0.25)130 b(-0.0358329)162
1211 y(0.125)108 b(-0.0339389)162 1261 y(0.0625)86 b(-0.0334836)162
1311 y(0.03125)64 b(-0.033371)75 1410 y(Limit[f[x],)20 b(x)h(->)g(0])206
1460 y(1)162 1510 y(-\(--\))206 1560 y(30)75 1659 y(f[x_])g(:=)g(1/Sin[x]^2)f
(-)h(1/x^2)75 1709 y(a)h(=)f(0;)h(ntimes)e(=)i(5;)75 1759 y(Table[{x,)e
(f[x]})h(/.)g(x)h(->)f(a)h(+)f(1/2^k,)g({k,)g(1,)g(ntimes}])f(//)75
1809 y(N)i(//TableForm)75 1858 y(Clear[a,)e(ntimes];)162 1908
y(0.5)152 b(0.350685)162 1958 y(0.25)130 b(0.337542)162 2008
y(0.125)108 b(0.334378)162 2058 y(0.0625)86 b(0.333594)162
2108 y(0.03125)64 b(0.333398)75 2207 y(Limit[f[x],)20 b(x)h(->)g(0])162
2257 y(1)162 2307 y(-)162 2357 y(3)75 2492 y Fn(Exercise)c(3.)j
Fq(-4,)15 b(1,)f(0,)h(5,)f(E)h(\()p Fl(Mathematic)n(a)s Fq('s)h(notation)e
(for)h Fh(e)p Fq(\).)p eop
%%Page: 26 26
26 25 bop 75 -105 a Fq(26)647 b Fm(Limits)21 b(With)h(Mathematica)f
(\(optional\))p 768 -84 1108 2 v 75 49 a Fn(Exercise)c(4.)j
Fq(The)15 b(general)h(result)g(is)804 151 y(lim)799 180 y Ff(x)p
Fb(!)p Fe(0)872 151 y Fq(\(1)9 b(+)i Fh(ax)p Fq(\))h(=)h Fh(e)1117
133 y Ff(a)1138 151 y Fh(:)75 265 y Fq(It)i(could)h(b)q(e)g(v)o(eri\014ed)h
(b)o(y)e(using)h(the)f(index)h(of)f(the)g(textb)q(o)q(ok)g(or)g(b)o(y)75
373 y Fj(Limit[\(1)20 b(+)i(a)f(x\)^\(1/x\),)f(x)i(->)f(0])184
423 y(a)162 473 y(E)75 587 y Fq(Note)13 b(that)g(the)g(space)h(b)q(et)o(w)o
(een)f(the)h(\\a")e(and)i(the)f(\\x")g(is)h(essen)o(tial,)g(as)f(are)g(the)h
(paren)o(theses)f(around)75 644 y(the)i(fractional)h(exp)q(onen)o(t.)75
721 y Fn(Exercise)k(5.)26 b Fq(One)18 b(p)q(ossible)h(conclusion)g(is)f(lim)
956 728 y Ff(x)p Fb(!)p Fe(0)1031 721 y Fq(\(1)10 b(+)i Fh(ax)1179
705 y Ff(p)1199 721 y Fq(\))k(=)g(1)h(for)g Fh(p)f(>)g Fq(1)h(and)h(is)f
(in\014nite)j(for)75 777 y Fh(p)12 b(<)h Fq(1)i(\(and)g Fh(a)e
Fg(6)p Fq(=)g(0\).)75 855 y Fn(Exercise)k(6.)j Fq(The)15 b(general)h
(conclusion)h(is)f(that)829 974 y(lim)825 1003 y Ff(x)p Fb(!)p
Fe(0)910 944 y Fq(sin)8 b Fh(ax)p 910 964 114 2 v 954 1006
a(x)1041 974 y Fq(=)13 b Fh(a:)75 1115 y Fn(Exercise)k(7.)j
Fq(lim)406 1122 y Ff(n)p Fb(!1)500 1115 y Fq(\(1)10 b(+)g(2)p
Fh(=n)p Fq(\))687 1099 y Ff(n)723 1115 y Fq(=)j Fh(e)792 1099
y Fe(2)812 1115 y Fq(,)h(etc.)75 1193 y Fn(Exercise)23 b(8.)33
b Fq(This)21 b(is)f(just)g(a)f(\(common\))g(switc)o(hing)i(of)e(the)h
(letters|it)g(requires)g(no)g(computer)75 1249 y(w)o(ork.)f(Both)c(limits)h
(are)f Fh(e)540 1233 y Ff(x)562 1249 y Fq(.)p eop
%%Page: 27 27
27 26 bop 75 -105 a Fm(The)22 b(Binomial)f(Theorem)h(and)h(Calculus)f
(\(optional\))p 75 -84 1433 2 v 321 w Fq(27)606 49 y Fn(PURPOSE)c(OF)g(THE)g
(PR)o(OJECT)146 150 y Fq(This)k(pro)s(ject)f(leads)h(the)g(studen)o(t)g(in)o
(to)g(disco)o(v)o(ering)g(some)g(facts)f(ab)q(out)g(in\014nite)j(series.)40
b(As)75 206 y(the)21 b(title)h(indicates,)i(it)e(brings)g(out)f(some)g(imp)q
(ortan)o(t)f(facts)h(ab)q(out)g(the)h(binomial)h(theorem.)37
b(In)75 263 y(particular,)18 b(the)g(\014nite)h(appro)o(ximations)e(dev)o
(elop)q(ed)i(here)f(are)g(extraordinarily)g(useful)h(to)q(ols.)27
b(The)75 319 y(pro)s(ject)20 b(is)h Fn(optional)i Fq(since)f(the)f(binomial)i
(theorem)d(and)h(in\014nite)i(series)e(will)i(o)q(ccur)e(in)h(con)o(text)75
376 y(during)16 b(the)g(course|indeed,)h(the)e(fact)h(that)e(the)i(material)g
(is)g(here)g(is)g(presen)o(ted)g(\\out)f(of)g(order")g(is)75
432 y(crucial)i(to)d(its)i(role)f(as)g(a)g(disco)o(v)o(ery)g(pro)s(ject.)75
507 y Fn(Shorter)i(Pro)s(ject)p Fq(:)j(A)15 b(core)g(pro)s(ject)f(consists)i
(of)f(the)g(o)q(dd-n)o(um)o(b)q(ered)h(exercises.)75 582 y
Fn(Instructor)h(Note)p Fq(:)131 685 y(1.)22 b(W)l(e)12 b(delib)q(erately)j
(held)f(o\013)e(on)g(the)h Fk(Sum)f Fq(command)g(un)o(til)i(a)e(later)h(pro)s
(ject|w)o(e)e(think)i(it)g(w)o(orth-)189 741 y(while)j(for)f(no)o(vices)h(to)
e(see)i(the)f(classical)i(iteration)e(lo)q(op.)131 831 y(2.)22
b(W)l(e)d(did)h(not)f(giv)o(e)g(the)g(studen)o(ts)g(the)g(full)h(details)g
(on)f(the)h Fk(Do)e Fq(lo)q(op)i(iterator.)30 b(The)20 b(iterator)189
887 y(construct)15 b(is)g(used)h(for)f(sev)o(eral)g(commands:)20
b Fk(Do)p Fq(,)14 b Fk(Sum)p Fq(,)g Fk(Product)p Fq(,)g Fh(:)8
b(:)g(:)e Fq(.)20 b(Here's)15 b(the)g(story:)208 977 y(\(a\))22
b Fk({5})14 b Fq(means)i(rep)q(eat)f(the)g(lo)q(op)h(5)f(times)205
1046 y(\(b\))23 b Fk({k,5})11 b Fq(means)g(rep)q(eat)h(the)g(lo)q(op)h(with)f
Fk(k)f Fq(taking)h(the)g(successiv)o(e)h(v)m(alues,)g(1,)f(2,)g(3,)g(4,)g
(and)g(5.)289 1103 y(That)g(is,)h(the)f Fl(default)17 b Fq(step)c(size)g(is)g
(1)f(and)h(the)f Fl(default)17 b Fq(initial)e(v)m(alue)f(is)f(1.)18
b(W)l(e)13 b(often)f(write)289 1159 y(in)k(the)f(initial)i(v)m(alue)g(1)e(ev)
o(en)g(though)g(it)h(is)f(not)g(necessary)l(.)210 1228 y(\(c\))23
b Fk({k,)g(0,)h(5})14 b Fq(means)h(rep)q(eat)f(the)h(lo)q(op)g(with)g
Fk(k)g Fq(taking)f(the)h(successiv)o(e)h(v)m(alues,)f(0,)g(1,)f(2,)g(3,)289
1285 y(4,)g(and)i(5.)j(No)o(w)c(only)g(the)h(step)f(size)h(is)g(defaulted.)
205 1354 y(\(d\))23 b Fk({k,)g(1,)h(5,)f(2})17 b Fq(means)g(rep)q(eat)g(the)g
(lo)q(op)g(with)h Fk(k)f Fq(taking)g(the)g(successiv)o(e)h(v)m(alues,)g(1,)f
(3,)289 1410 y(and)e(5.)131 1500 y(3.)22 b(There)15 b(are)g(t)o(w)o(o)f
(subtleties)i(in)g(the)g(co)q(de)f(giv)o(en)h(for)f(Exercise)h(9:)208
1590 y(\(a\))22 b(The)14 b(1.0)f(instead)i(of)f(1)g(in)h(the)f(S)h(=)f(S)h(+)
f(1.0/k;)f(is)i(a)f(signal)h(to)f Fl(Mathematic)n(a)k Fq(that)13
b(exact)289 1646 y(arithmetic)i(is)h Fl(not)k Fq(required{this)c(sp)q(eeds)g
(things)g(up.)205 1715 y(\(b\))23 b(The)11 b(3)f(in)i(the)f(N[S,)f(3])h
(tells)g Fl(Mathematic)n(a)k Fq(that)10 b(w)o(e)h(are)g(willing)i(to)d
(settle)h(for)f(3)h(signi\014can)o(t)289 1771 y(\014gures.)577
1894 y Fn(ANSWERS)17 b(F)o(OR)h(INSTR)o(UCTORS)75 1994 y(Exercise)f(4.)408
2097 y Fq(\()p Fh(a)10 b Fq(+)g Fh(b)p Fq(\))543 2078 y Ff(n)607
2097 y Fq(=)42 b Fh(a)708 2078 y Ff(n)742 2097 y Fq(+)792 2066
y Fh(n)p 792 2086 28 2 v 794 2128 a Fq(1)825 2097 y Fh(a)849
2078 y Ff(n)p Fb(\000)p Fe(1)917 2097 y Fh(b)10 b Fq(+)997
2066 y Fh(n)h Fg(\001)e Fq(\()p Fh(n)h Fg(\000)h Fq(1\))p 997
2086 202 2 v 1059 2128 a(1)e Fg(\001)h Fq(2)1203 2097 y Fh(a)1227
2078 y Ff(n)p Fb(\000)p Fe(2)1296 2097 y Fh(b)1316 2078 y Fe(2)1345
2097 y Fq(+)h Fh(:)d(:)g(:)g Fq(+)i Fh(b)1519 2078 y Ff(n)607
2209 y Fq(=)42 b Fh(a)708 2190 y Ff(n)732 2209 y Fq(\(1)9 b(+)833
2179 y Fh(n)p 833 2199 28 2 v 835 2240 a Fq(1)865 2209 y Fh(x)h
Fq(+)951 2179 y Fh(n)h Fg(\001)f Fq(\()p Fh(n)g Fg(\000)g Fq(1\))p
951 2199 202 2 v 1013 2240 a(1)g Fg(\001)f Fq(2)1157 2209 y
Fh(x)1183 2190 y Fe(2)1213 2209 y Fq(+)i Fh(:)d(:)g(:)g Fq(+)i
Fh(x)1393 2190 y Ff(n)1417 2209 y Fq(\))75 2312 y(where)15
b Fh(x)e Fq(=)g Fh(b=a)p Fq(.)75 2387 y Fn(Exercise)k(5.)j
Fq(Y)l(ou)15 b(ha)o(v)o(e)g(to)f(realize)j(that)d Fh(x)862
2371 y Fe(2)897 2387 y Fq(m)o(ust)h(b)q(e)g(treated)g(as)g(a)g(negligible)j
(quan)o(tit)o(y:)h(1)10 b(+)g Fh(x)j Fq(=)75 2444 y(1)g(+)h(2)p
Fh(ax)f Fq(+)h Fh(a)319 2427 y Fe(2)338 2444 y Fh(x)364 2427
y Fe(2)405 2444 y Fg(\031)21 b Fq(1)13 b(+)h(2)p Fh(ax)p Fq(.)34
b(Th)o(us)20 b Fh(a)h Fq(=)g(1)p Fh(=)p Fq(2)e(and)i(\(1)12
b(+)i Fh(x)p Fq(\))1215 2427 y Fe(1)p Ff(=)p Fe(2)1291 2444
y Fg(\031)21 b Fq(1)13 b(+)1437 2426 y Fe(1)p 1437 2433 18
2 v 1437 2459 a(2)1459 2444 y Fh(x)20 b Fq(in)h(agreemen)o(t)f(with)75
2500 y(\(1)10 b(+)g Fh(x)p Fq(\))215 2484 y Ff(n)251 2500 y
Fg(\031)j Fq(1)d(+)g Fh(nx)15 b Fq(for)g(in)o(tegral)h Fh(n)p
Fq(.)k(The)15 b(next)g(term)g(w)o(ould)h(formally)f(b)q(e)562
2583 y Fh(n)c Fg(\001)f Fq(\()p Fh(n)g Fg(\000)g Fq(1\))p 562
2603 202 2 v 624 2645 a(1)g Fg(\001)f Fq(2)768 2614 y Fh(x)794
2595 y Fe(2)827 2614 y Fq(=)880 2583 y(\(1)p Fh(=)p Fq(2\))f
Fg(\001)i Fq(\()p Fg(\000)p Fq(1)p Fh(=)p Fq(2\))p 880 2603
276 2 v 978 2645 a(1)g Fg(\001)g Fq(2)1160 2614 y Fh(x)1186
2595 y Fe(2)1218 2614 y Fq(=)j Fg(\000)1306 2583 y Fq(1)p 1306
2603 23 2 v 1306 2645 a(8)1334 2614 y Fh(x)1360 2595 y Fe(2)1380
2614 y Fh(:)p eop
%%Page: 28 28
28 27 bop 75 -105 a Fq(28)321 b Fm(The)23 b(Binomial)d(Theorem)i(and)i
(Calculus)d(\(optional\))p 442 -84 1433 2 v 75 49 a Fn(Exercise)c(6.)j
Fq(The)c(p)q(oin)o(t)f(is)h(that)f(once)g(w)o(e)g(go)g(to)g(fractional)g(exp)
q(onen)o(ts,)g(w)o(e)g(m)o(ust)g(allo)o(w)g(\\in\014nite)75
106 y(series".)33 b(The)20 b(series)g(for)f Fl(inte)n(ger)24
b Fh(n)c Fq(truncates)f(b)q(ecause)h(ev)o(en)o(tually)h(the)f(co)q(e\016cien)
o(t)g(n)o(umerators)75 162 y(con)o(tain)15 b(an)g Fh(n)c Fg(\000)f
Fh(n)16 b Fq(factor.)j(In)c(the)h(fractional)f(case,)g(w)o(e)g(nev)o(er)g
(get)g(suc)o(h)h(a)e(factor.)75 233 y Fn(Exercise)25 b(7.)41
b Fq(W)l(e)22 b(delib)q(erately)j(did)e(not)f(giv)o(e)g(the)g(b)q(est)h(hin)o
(t)f(on)g(the)h(co)q(ding)g(in)g(the)f(Pro)s(ject)75 283 y(noteb)q(o)q(ok.)38
b(Sligh)o(t)23 b(mo)q(di\014cation)f(of)f(the)h(previously)g(used)g(\\zo)q
(om)f(lo)q(op")h(is)g(b)q(etter)f(and)h(allo)o(ws)75 332 y(sim)o(ultaneous)16
b(examination)g(of)f(p)q(ositiv)o(e)h(and)f(negativ)o(e)g Fh(x)p
Fq(:)75 440 y Fj(f[x_])21 b(:=)g(\(1)h(+)f(x\)^5)75 490 y(g[x_])g(:=)g(1)h(+)
f(5x)75 540 y(a)43 b(=)22 b(0.0;)f(h)h(=)f(100.0;)75 590 y(Do[)249
640 y(h)h(=)g(h/10;)249 689 y(Plot[{f[x],)e(g[x]},)g({x,)i(a-h,)f(a+h},)424
739 y(PlotStyle)f(->)h({GrayLevel[0.0],)d(GrayLevel[0.5]})249
789 y(],)75 839 y({5}])75 953 y Fq(Since)e(w)o(e)f(are)f(displa)o(ying)i
(\\four)e(at)g(once",)h(w)o(e'v)o(e)f(added)h(the)g(v)m(alue)h(of)e
Fk(h)g Fq(as)h(a)f(title)h(to)f(eac)o(h)h(plot)g(in)75 1010
y(Figure)g(16.)272 1982 y @beginspecial 0 @llx 0 @lly 571 @urx
371 @ury 3373 @rwi @setspecial
%%BeginDocument: fifth.eps


/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /TDeps_dict 20 dict def TDeps_dict begin /showpage {
    
} def /copypage {
    
} def /grestoreall {
    
} def /erasepage {
    
} def /nulldevice {
    
} def /exitserver {
    
} def /initgraphics {
    
} def /renderbands {
    
} def /initmatrix {
    
} def /banddevice {
    
} def /setpageparams {
    
} def /framedevice {
    
} def /note {
    
} def end end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
gsave
0 0 571 371 rectclip
-37 -349 translate
37 349 571 371 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
gsave clpmt currentmatrix pop newpath
1 0 0 1.045977 -128 213.79303 sc5mt astore pop false {
    sc5mt dodrawctm 165 309 282 174 0 rfpath unpagectm
} {
    282 174 165 309 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -128 231] dodrawctm
165 309 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.047619 0.29702 0.001827 [
[(-10)] 0.02381 0.29702 0 2 Msboxa
[(-5)] 0.2619 0.29702 0 2 Msboxa
[(5)] 0.7381 0.29702 0 2 Msboxa
[(10)] 0.97619 0.29702 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(10.)] 0.5 0.61803 0 -2 Msboxa
grestore
[(-150)] 0.4875 0.02295 1 0 Msboxa
[(-100)] 0.4875 0.1143 1 0 Msboxa
[(-50)] 0.4875 0.20566 1 0 Msboxa
[(50)] 0.4875 0.38838 1 0 Msboxa
[(100)] 0.4875 0.47974 1 0 Msboxa
[(150)] 0.4875 0.5711 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.29702 moveto
0.02381 0.30327 lineto
stroke
grestore
[(-10)] 0.02381 0.29702 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.29702 moveto
0.2619 0.30327 lineto
stroke
grestore
[(-5)] 0.2619 0.29702 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.29702 moveto
0.7381 0.30327 lineto
stroke
grestore
[(5)] 0.7381 0.29702 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.29702 moveto
0.97619 0.30327 lineto
stroke
grestore
[(10)] 0.97619 0.29702 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.29702 moveto
0.07143 0.30077 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.29702 moveto
0.11905 0.30077 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.29702 moveto
0.16667 0.30077 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.29702 moveto
0.21429 0.30077 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.29702 moveto
0.30952 0.30077 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.29702 moveto
0.35714 0.30077 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.29702 moveto
0.40476 0.30077 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.29702 moveto
0.45238 0.30077 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.29702 moveto
0.54762 0.30077 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.29702 moveto
0.59524 0.30077 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.29702 moveto
0.64286 0.30077 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.29702 moveto
0.69048 0.30077 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.29702 moveto
0.78571 0.30077 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.29702 moveto
0.83333 0.30077 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.29702 moveto
0.88095 0.30077 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.29702 moveto
0.92857 0.30077 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.29702 moveto
1 0.29702 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(10.)] 0.5 0.61803 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.02295 moveto
0.50625 0.02295 lineto
stroke
grestore
[(-150)] 0.4875 0.02295 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.1143 moveto
0.50625 0.1143 lineto
stroke
grestore
[(-100)] 0.4875 0.1143 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.20566 moveto
0.50625 0.20566 lineto
stroke
grestore
[(-50)] 0.4875 0.20566 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.38838 moveto
0.50625 0.38838 lineto
stroke
grestore
[(50)] 0.4875 0.38838 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.47974 moveto
0.50625 0.47974 lineto
stroke
grestore
[(100)] 0.4875 0.47974 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.5711 moveto
0.50625 0.5711 lineto
stroke
grestore
[(150)] 0.4875 0.5711 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.04122 moveto
0.50375 0.04122 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.05949 moveto
0.50375 0.05949 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.07776 moveto
0.50375 0.07776 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.09603 moveto
0.50375 0.09603 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13258 moveto
0.50375 0.13258 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.15085 moveto
0.50375 0.15085 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.16912 moveto
0.50375 0.16912 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18739 moveto
0.50375 0.18739 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22393 moveto
0.50375 0.22393 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.24221 moveto
0.50375 0.24221 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.26048 moveto
0.50375 0.26048 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.27875 moveto
0.50375 0.27875 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31529 moveto
0.50375 0.31529 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.33356 moveto
0.50375 0.33356 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.35184 moveto
0.50375 0.35184 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.37011 moveto
0.50375 0.37011 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40665 moveto
0.50375 0.40665 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.42492 moveto
0.50375 0.42492 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.44319 moveto
0.50375 0.44319 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.46147 moveto
0.50375 0.46147 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.49801 moveto
0.50375 0.49801 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.51628 moveto
0.50375 0.51628 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.53455 moveto
0.50375 0.53455 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55282 moveto
0.50375 0.55282 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.00467 moveto
0.50375 0.00467 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.58937 moveto
0.50375 0.58937 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.60764 moveto
0.50375 0.60764 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.004 setlinewidth
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
0.32067 0 moveto
0.32143 0.00965 lineto
stroke
0.32143 0.00965 moveto
0.33135 0.10321 lineto
0.34127 0.17065 lineto
0.34623 0.19645 lineto
0.35119 0.21785 lineto
0.35615 0.23544 lineto
0.36111 0.24976 lineto
0.36607 0.26128 lineto
0.37103 0.27043 lineto
0.37599 0.27761 lineto
0.38095 0.28315 lineto
0.38591 0.28734 lineto
0.39087 0.29045 lineto
0.39583 0.29271 lineto
0.40079 0.29429 lineto
0.40327 0.29489 lineto
0.40575 0.29538 lineto
0.40823 0.29577 lineto
0.41071 0.29608 lineto
0.41319 0.29633 lineto
0.41567 0.29652 lineto
0.41815 0.29667 lineto
0.42063 0.29678 lineto
0.42312 0.29686 lineto
0.42436 0.29689 lineto
0.4256 0.29692 lineto
0.42684 0.29694 lineto
0.42808 0.29696 lineto
0.43056 0.29698 lineto
0.4318 0.29699 lineto
0.43304 0.297 lineto
0.43428 0.29701 lineto
0.43552 0.29701 lineto
0.43676 0.29701 lineto
0.438 0.29702 lineto
0.43924 0.29702 lineto
0.44048 0.29702 lineto
0.44172 0.29702 lineto
0.44296 0.29702 lineto
0.4442 0.29702 lineto
0.44544 0.29702 lineto
0.44668 0.29702 lineto
0.44792 0.29702 lineto
0.44916 0.29702 lineto
0.4504 0.29702 lineto
0.45164 0.29702 lineto
0.45288 0.29702 lineto
0.45412 0.29702 lineto
0.45536 0.29702 lineto
0.4566 0.29702 lineto
Mistroke
0.45784 0.29702 lineto
0.45908 0.29702 lineto
0.46032 0.29702 lineto
0.46156 0.29702 lineto
0.4628 0.29702 lineto
0.46404 0.29702 lineto
0.46528 0.29702 lineto
0.46652 0.29702 lineto
0.46776 0.29703 lineto
0.469 0.29703 lineto
0.47024 0.29703 lineto
0.47148 0.29704 lineto
0.47272 0.29705 lineto
0.47396 0.29706 lineto
0.4752 0.29707 lineto
0.47644 0.29708 lineto
0.47768 0.2971 lineto
0.47892 0.29712 lineto
0.48016 0.29714 lineto
0.48264 0.29721 lineto
0.48512 0.2973 lineto
0.4876 0.29742 lineto
0.49008 0.29759 lineto
0.49256 0.2978 lineto
0.49504 0.29807 lineto
0.49752 0.29842 lineto
0.5 0.29885 lineto
0.50248 0.29938 lineto
0.50496 0.30002 lineto
0.50992 0.30173 lineto
0.51488 0.30414 lineto
0.51984 0.30745 lineto
0.5248 0.31189 lineto
0.52976 0.31772 lineto
0.53472 0.32527 lineto
0.53968 0.33486 lineto
0.54464 0.34691 lineto
0.5496 0.36184 lineto
0.55952 0.40238 lineto
0.56448 0.42914 lineto
0.56944 0.46107 lineto
0.57937 0.54341 lineto
Mfstroke
0.58595 0.61803 moveto
0.57937 0.54341 lineto
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
grestore
grestore
gsave
0.5 setgray
gsave
0.004 setlinewidth
0.02381 0.20749 moveto
0.06349 0.2151 lineto
0.10317 0.22272 lineto
0.14286 0.23033 lineto
0.18254 0.23794 lineto
0.22222 0.24556 lineto
0.2619 0.25317 lineto
0.30159 0.26078 lineto
0.34127 0.26839 lineto
0.38095 0.27601 lineto
0.42063 0.28362 lineto
0.46032 0.29123 lineto
0.5 0.29885 lineto
0.53968 0.30646 lineto
0.57937 0.31407 lineto
0.61905 0.32169 lineto
0.65873 0.3293 lineto
0.69841 0.33691 lineto
0.7381 0.34453 lineto
0.77778 0.35214 lineto
0.81746 0.35975 lineto
0.85714 0.36737 lineto
0.89683 0.37498 lineto
0.93651 0.38259 lineto
0.97619 0.39021 lineto
stroke
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 309 282 174 1 0 0 1.045977 -128 213.79303 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.057471 160 209.241394 sc5mt astore pop false {
    sc5mt dodrawctm 165 309 282 174 0 rfpath unpagectm
} {
    282 174 165 309 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 160 232] dodrawctm
165 309 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.47619 0.235442 0.055182 [
[(-1)] 0.02381 0.23544 0 2 Msboxa
[(-0.5)] 0.2619 0.23544 0 2 Msboxa
[(0.5)] 0.7381 0.23544 0 2 Msboxa
[(1)] 0.97619 0.23544 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(1.)] 0.5 0.61803 0 -2 Msboxa
grestore
[(-4)] 0.4875 0.01472 1 0 Msboxa
[(-2)] 0.4875 0.12508 1 0 Msboxa
[(2)] 0.4875 0.3458 1 0 Msboxa
[(4)] 0.4875 0.45617 1 0 Msboxa
[(6)] 0.4875 0.56653 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.23544 moveto
0.02381 0.24169 lineto
stroke
grestore
[(-1)] 0.02381 0.23544 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.23544 moveto
0.2619 0.24169 lineto
stroke
grestore
[(-0.5)] 0.2619 0.23544 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.23544 moveto
0.7381 0.24169 lineto
stroke
grestore
[(0.5)] 0.7381 0.23544 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.23544 moveto
0.97619 0.24169 lineto
stroke
grestore
[(1)] 0.97619 0.23544 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.23544 moveto
0.07143 0.23919 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.23544 moveto
0.11905 0.23919 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.23544 moveto
0.16667 0.23919 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.23544 moveto
0.21429 0.23919 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.23544 moveto
0.30952 0.23919 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.23544 moveto
0.35714 0.23919 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.23544 moveto
0.40476 0.23919 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.23544 moveto
0.45238 0.23919 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.23544 moveto
0.54762 0.23919 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.23544 moveto
0.59524 0.23919 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.23544 moveto
0.64286 0.23919 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.23544 moveto
0.69048 0.23919 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.23544 moveto
0.78571 0.23919 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.23544 moveto
0.83333 0.23919 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.23544 moveto
0.88095 0.23919 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.23544 moveto
0.92857 0.23919 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.23544 moveto
1 0.23544 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(1.)] 0.5 0.61803 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.01472 moveto
0.50625 0.01472 lineto
stroke
grestore
[(-4)] 0.4875 0.01472 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.12508 moveto
0.50625 0.12508 lineto
stroke
grestore
[(-2)] 0.4875 0.12508 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.3458 moveto
0.50625 0.3458 lineto
stroke
grestore
[(2)] 0.4875 0.3458 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.45617 moveto
0.50625 0.45617 lineto
stroke
grestore
[(4)] 0.4875 0.45617 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.56653 moveto
0.50625 0.56653 lineto
stroke
grestore
[(6)] 0.4875 0.56653 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.03679 moveto
0.50375 0.03679 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.05886 moveto
0.50375 0.05886 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.08093 moveto
0.50375 0.08093 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.10301 moveto
0.50375 0.10301 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.14715 moveto
0.50375 0.14715 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.16922 moveto
0.50375 0.16922 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1913 moveto
0.50375 0.1913 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.21337 moveto
0.50375 0.21337 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.25751 moveto
0.50375 0.25751 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.27959 moveto
0.50375 0.27959 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.30166 moveto
0.50375 0.30166 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.32373 moveto
0.50375 0.32373 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36788 moveto
0.50375 0.36788 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.38995 moveto
0.50375 0.38995 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.41202 moveto
0.50375 0.41202 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.4341 moveto
0.50375 0.4341 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.47824 moveto
0.50375 0.47824 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.50031 moveto
0.50375 0.50031 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.52239 moveto
0.50375 0.52239 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54446 moveto
0.50375 0.54446 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.5886 moveto
0.50375 0.5886 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.61068 moveto
0.50375 0.61068 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.23544 moveto
0.02505 0.23544 lineto
0.02629 0.23544 lineto
0.02753 0.23544 lineto
0.02877 0.23544 lineto
0.03001 0.23544 lineto
0.03125 0.23544 lineto
0.03249 0.23544 lineto
0.03373 0.23544 lineto
0.03497 0.23544 lineto
0.03621 0.23544 lineto
0.03745 0.23544 lineto
0.03869 0.23544 lineto
0.03993 0.23544 lineto
0.04117 0.23544 lineto
0.04241 0.23544 lineto
0.04365 0.23544 lineto
0.04613 0.23544 lineto
0.04737 0.23544 lineto
0.04861 0.23544 lineto
0.04985 0.23544 lineto
0.05109 0.23544 lineto
0.05357 0.23544 lineto
0.05605 0.23544 lineto
0.05853 0.23544 lineto
0.06101 0.23544 lineto
0.06349 0.23544 lineto
0.06597 0.23544 lineto
0.06845 0.23544 lineto
0.07093 0.23544 lineto
0.07341 0.23544 lineto
0.07589 0.23544 lineto
0.07837 0.23544 lineto
0.08333 0.23544 lineto
0.08829 0.23544 lineto
0.09325 0.23545 lineto
0.09821 0.23545 lineto
0.10317 0.23545 lineto
0.10813 0.23545 lineto
0.1131 0.23545 lineto
0.12302 0.23546 lineto
0.12798 0.23547 lineto
0.13294 0.23548 lineto
0.14286 0.2355 lineto
0.15278 0.23552 lineto
0.1627 0.23556 lineto
0.17262 0.23561 lineto
0.18254 0.23567 lineto
0.19246 0.23575 lineto
0.20238 0.23585 lineto
Mistroke
0.2123 0.23598 lineto
0.22222 0.23613 lineto
0.24206 0.23656 lineto
0.25198 0.23684 lineto
0.2619 0.23717 lineto
0.28175 0.23801 lineto
0.30159 0.23917 lineto
0.32143 0.2407 lineto
0.34127 0.24271 lineto
0.36111 0.24528 lineto
0.38095 0.24854 lineto
0.40079 0.2526 lineto
0.42063 0.25762 lineto
0.44048 0.26374 lineto
0.46032 0.27116 lineto
0.5 0.29062 lineto
0.53968 0.31778 lineto
0.57937 0.35471 lineto
0.61905 0.40384 lineto
0.65873 0.46798 lineto
0.69841 0.55031 lineto
Mfstroke
0.72421 0.61803 moveto
0.69841 0.55031 lineto
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
grestore
grestore
gsave
0.5 setgray
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.06349 0.03771 lineto
0.10317 0.0607 lineto
0.14286 0.08369 lineto
0.18254 0.10668 lineto
0.22222 0.12968 lineto
0.2619 0.15267 lineto
0.30159 0.17566 lineto
0.34127 0.19865 lineto
0.38095 0.22165 lineto
0.42063 0.24464 lineto
0.46032 0.26763 lineto
0.5 0.29062 lineto
0.53968 0.31362 lineto
0.57937 0.33661 lineto
0.61905 0.3596 lineto
0.65873 0.38259 lineto
0.69841 0.40558 lineto
0.7381 0.42858 lineto
0.77778 0.45157 lineto
0.81746 0.47456 lineto
0.85714 0.49755 lineto
0.89683 0.52055 lineto
0.93651 0.54354 lineto
0.97619 0.56653 lineto
stroke
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 309 282 174 1 0 0 1.057471 160 209.241394 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.045977 -128 26.793108 sc5mt astore pop false {
    sc5mt dodrawctm 165 309 282 174 0 rfpath unpagectm
} {
    282 174 165 309 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -128 43] dodrawctm
165 309 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 4.761905 -0.2503 0.53003 [
[(-0.1)] 0.02381 0.27973 0 2 Msboxa
[(-0.05)] 0.2619 0.27973 0 2 Msboxa
[(0.05)] 0.7381 0.27973 0 2 Msboxa
[(0.1)] 0.97619 0.27973 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(0.1)] 0.5 0.61803 0 -2 Msboxa
grestore
[(0.6)] 0.4875 0.06772 1 0 Msboxa
[(0.8)] 0.4875 0.17372 1 0 Msboxa
[(1.2)] 0.4875 0.38574 1 0 Msboxa
[(1.4)] 0.4875 0.49174 1 0 Msboxa
[(1.6)] 0.4875 0.59775 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.27973 moveto
0.02381 0.28598 lineto
stroke
grestore
[(-0.1)] 0.02381 0.27973 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.27973 moveto
0.2619 0.28598 lineto
stroke
grestore
[(-0.05)] 0.2619 0.27973 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.27973 moveto
0.7381 0.28598 lineto
stroke
grestore
[(0.05)] 0.7381 0.27973 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.27973 moveto
0.97619 0.28598 lineto
stroke
grestore
[(0.1)] 0.97619 0.27973 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.27973 moveto
0.07143 0.28348 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.27973 moveto
0.11905 0.28348 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.27973 moveto
0.16667 0.28348 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.27973 moveto
0.21429 0.28348 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.27973 moveto
0.30952 0.28348 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.27973 moveto
0.35714 0.28348 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.27973 moveto
0.40476 0.28348 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.27973 moveto
0.45238 0.28348 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.27973 moveto
0.54762 0.28348 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.27973 moveto
0.59524 0.28348 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.27973 moveto
0.64286 0.28348 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.27973 moveto
0.69048 0.28348 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.27973 moveto
0.78571 0.28348 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.27973 moveto
0.83333 0.28348 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.27973 moveto
0.88095 0.28348 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.27973 moveto
0.92857 0.28348 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.27973 moveto
1 0.27973 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(0.1)] 0.5 0.61803 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.06772 moveto
0.50625 0.06772 lineto
stroke
grestore
[(0.6)] 0.4875 0.06772 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.17372 moveto
0.50625 0.17372 lineto
stroke
grestore
[(0.8)] 0.4875 0.17372 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.38574 moveto
0.50625 0.38574 lineto
stroke
grestore
[(1.2)] 0.4875 0.38574 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.49174 moveto
0.50625 0.49174 lineto
stroke
grestore
[(1.4)] 0.4875 0.49174 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.59775 moveto
0.50625 0.59775 lineto
stroke
grestore
[(1.6)] 0.4875 0.59775 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.08892 moveto
0.50375 0.08892 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.11012 moveto
0.50375 0.11012 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13132 moveto
0.50375 0.13132 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.15252 moveto
0.50375 0.15252 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.19493 moveto
0.50375 0.19493 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.21613 moveto
0.50375 0.21613 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.23733 moveto
0.50375 0.23733 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.25853 moveto
0.50375 0.25853 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.30093 moveto
0.50375 0.30093 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.32213 moveto
0.50375 0.32213 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.34333 moveto
0.50375 0.34333 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36454 moveto
0.50375 0.36454 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40694 moveto
0.50375 0.40694 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.42814 moveto
0.50375 0.42814 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.44934 moveto
0.50375 0.44934 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.47054 moveto
0.50375 0.47054 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.51294 moveto
0.50375 0.51294 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.53414 moveto
0.50375 0.53414 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55535 moveto
0.50375 0.55535 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.57655 moveto
0.50375 0.57655 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.04652 moveto
0.50375 0.04652 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.02532 moveto
0.50375 0.02532 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.00411 moveto
0.50375 0.00411 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.06268 moveto
0.06349 0.07744 lineto
0.10317 0.09275 lineto
0.14286 0.10863 lineto
0.18254 0.12509 lineto
0.22222 0.14215 lineto
0.2619 0.15983 lineto
0.30159 0.17813 lineto
0.34127 0.19709 lineto
0.38095 0.21671 lineto
0.42063 0.23701 lineto
0.46032 0.25801 lineto
0.5 0.27973 lineto
0.53968 0.30219 lineto
0.57937 0.3254 lineto
0.61905 0.34938 lineto
0.65873 0.37416 lineto
0.69841 0.39975 lineto
0.7381 0.42617 lineto
0.77778 0.45344 lineto
0.81746 0.48159 lineto
0.85714 0.51063 lineto
0.89683 0.54058 lineto
0.93651 0.57147 lineto
0.97619 0.60332 lineto
stroke
grestore
grestore
gsave
0.5 setgray
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.06349 0.0368 lineto
0.10317 0.05888 lineto
0.14286 0.08097 lineto
0.18254 0.10305 lineto
0.22222 0.12514 lineto
0.2619 0.14722 lineto
0.30159 0.16931 lineto
0.34127 0.19139 lineto
0.38095 0.21348 lineto
0.42063 0.23556 lineto
0.46032 0.25765 lineto
0.5 0.27973 lineto
0.53968 0.30181 lineto
0.57937 0.3239 lineto
0.61905 0.34598 lineto
0.65873 0.36807 lineto
0.69841 0.39015 lineto
0.7381 0.41224 lineto
0.77778 0.43432 lineto
0.81746 0.45641 lineto
0.85714 0.47849 lineto
0.89683 0.50058 lineto
0.93651 0.52266 lineto
0.97619 0.54475 lineto
stroke
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 309 282 174 1 0 0 1.045977 -128 26.793108 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.045977 160 26.79311 sc5mt astore pop false {
    sc5mt dodrawctm 165 309 282 174 0 rfpath unpagectm
} {
    282 174 165 309 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 160 44] dodrawctm
165 309 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 47.619048 -5.521106 5.827181 [
[(-0.01)] 0.02381 0.30607 0 2 Msboxa
[(-0.005)] 0.2619 0.30607 0 2 Msboxa
[(0.005)] 0.7381 0.30607 0 2 Msboxa
[(0.01)] 0.97619 0.30607 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(0.01)] 0.5 0.61803 0 -2 Msboxa
grestore
[(0.96)] 0.4875 0.07299 1 0 Msboxa
[(0.98)] 0.4875 0.18953 1 0 Msboxa
[(1.02)] 0.4875 0.42262 1 0 Msboxa
[(1.04)] 0.4875 0.53916 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.30607 moveto
0.02381 0.31232 lineto
stroke
grestore
[(-0.01)] 0.02381 0.30607 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.30607 moveto
0.2619 0.31232 lineto
stroke
grestore
[(-0.005)] 0.2619 0.30607 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.30607 moveto
0.7381 0.31232 lineto
stroke
grestore
[(0.005)] 0.7381 0.30607 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.30607 moveto
0.97619 0.31232 lineto
stroke
grestore
[(0.01)] 0.97619 0.30607 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.30607 moveto
0.07143 0.30982 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.30607 moveto
0.11905 0.30982 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.30607 moveto
0.16667 0.30982 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.30607 moveto
0.21429 0.30982 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.30607 moveto
0.30952 0.30982 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.30607 moveto
0.35714 0.30982 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.30607 moveto
0.40476 0.30982 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.30607 moveto
0.45238 0.30982 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.30607 moveto
0.54762 0.30982 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.30607 moveto
0.59524 0.30982 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.30607 moveto
0.64286 0.30982 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.30607 moveto
0.69048 0.30982 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.30607 moveto
0.78571 0.30982 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.30607 moveto
0.83333 0.30982 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.30607 moveto
0.88095 0.30982 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.30607 moveto
0.92857 0.30982 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.30607 moveto
1 0.30607 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(0.01)] 0.5 0.61803 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.07299 moveto
0.50625 0.07299 lineto
stroke
grestore
[(0.96)] 0.4875 0.07299 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.18953 moveto
0.50625 0.18953 lineto
stroke
grestore
[(0.98)] 0.4875 0.18953 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.42262 moveto
0.50625 0.42262 lineto
stroke
grestore
[(1.02)] 0.4875 0.42262 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.53916 moveto
0.50625 0.53916 lineto
stroke
grestore
[(1.04)] 0.4875 0.53916 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.0963 moveto
0.50375 0.0963 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1196 moveto
0.50375 0.1196 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.14291 moveto
0.50375 0.14291 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.16622 moveto
0.50375 0.16622 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.21284 moveto
0.50375 0.21284 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.23615 moveto
0.50375 0.23615 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.25946 moveto
0.50375 0.25946 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.28277 moveto
0.50375 0.28277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.32938 moveto
0.50375 0.32938 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.35269 moveto
0.50375 0.35269 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.376 moveto
0.50375 0.376 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.39931 moveto
0.50375 0.39931 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.44593 moveto
0.50375 0.44593 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.46924 moveto
0.50375 0.46924 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.49254 moveto
0.50375 0.49254 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.51585 moveto
0.50375 0.51585 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.04968 moveto
0.50375 0.04968 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.02637 moveto
0.50375 0.02637 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.00306 moveto
0.50375 0.00306 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.56247 moveto
0.50375 0.56247 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.58578 moveto
0.50375 0.58578 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.60909 moveto
0.50375 0.60909 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.02048 moveto
0.06349 0.04385 lineto
0.10317 0.06729 lineto
0.14286 0.09081 lineto
0.18254 0.11441 lineto
0.22222 0.13809 lineto
0.2619 0.16184 lineto
0.30159 0.18568 lineto
0.34127 0.2096 lineto
0.38095 0.2336 lineto
0.42063 0.25768 lineto
0.46032 0.28183 lineto
0.5 0.30607 lineto
0.53968 0.33039 lineto
0.57937 0.3548 lineto
0.61905 0.37928 lineto
0.65873 0.40384 lineto
0.69841 0.42849 lineto
0.7381 0.45322 lineto
0.77778 0.47803 lineto
0.81746 0.50292 lineto
0.85714 0.5279 lineto
0.89683 0.55295 lineto
0.93651 0.57809 lineto
0.97619 0.60332 lineto
stroke
grestore
grestore
gsave
0.5 setgray
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.06349 0.039 lineto
0.10317 0.06327 lineto
0.14286 0.08755 lineto
0.18254 0.11183 lineto
0.22222 0.13611 lineto
0.2619 0.16039 lineto
0.30159 0.18467 lineto
0.34127 0.20895 lineto
0.38095 0.23323 lineto
0.42063 0.25751 lineto
0.46032 0.28179 lineto
0.5 0.30607 lineto
0.53968 0.33035 lineto
0.57937 0.35463 lineto
0.61905 0.37891 lineto
0.65873 0.40319 lineto
0.69841 0.42747 lineto
0.7381 0.45175 lineto
0.77778 0.47603 lineto
0.81746 0.50031 lineto
0.85714 0.52459 lineto
0.89683 0.54887 lineto
0.93651 0.57315 lineto
0.97619 0.59743 lineto
stroke
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 309 282 174 1 0 0 1.045977 160 26.79311 sc6mt astore rstroke
end
grestore
grestore
%%EndDocument
 @endspecial 600 2068 a Fi(Fig)p Fq(.)g(16.)20 b(Zo)q(om)14
b(of)h(\(1)9 b(+)i Fh(x)p Fq(\))1101 2052 y Fe(5)1135 2068
y Fq(vs.)20 b(1)10 b(+)g(5)p Fh(x)p Fq(.)75 2177 y(P)o(ossible)22
b(conclusions:)33 b(the)21 b(appro)o(ximation)g(is)g(not)g(go)q(o)q(d)g(for)f
Fh(x)i(>)h(:)p Fq(3,)e(but)g(is)h(prett)o(y)e(go)q(o)q(d)h(for)75
2234 y Fg(j)p Fh(x)p Fg(j)12 b Fh(<)h Fq(0)p Fh(:)p Fq(05.)75
2311 y Fn(Exercise)18 b(8.)j Fq(A)15 b(zo)q(om)g(sequence)i(of)e
Fk(Plot)p Fq(s)g(rev)o(eals)h(that)f(the)g(appro)o(ximation)h(is)g(prett)o(y)
f(go)q(o)q(d)g(out)75 2367 y(to)g(ab)q(out)g Fg(j)p Fh(x)p
Fg(j)c Fh(<)i Fq(0)p Fh(:)p Fq(8.)p eop
%%Page: 29 29
29 28 bop 75 -105 a Fm(The)22 b(Binomial)f(Theorem)h(and)h(Calculus)f
(\(optional\))p 75 -84 1433 2 v 321 w Fq(29)75 49 y Fn(Exercise)17
b(9.)j Fq(The)15 b(go)q(o)q(d)h(old)f(geometric)h(series.)k(It)15
b(con)o(v)o(erges)g(quic)o(kly:)75 157 y Fj(S)22 b(=)f(1;)75
207 y(Print["k",)f(")174 b(",)21 b("S"])75 257 y(Do[)249 307
y(S)h(=)g(S)f(+)h(1.0/2^k;)249 356 y(Print[k,)e(")175 b(",)21
b(N[S,)g(3]],)75 406 y({k,)g(1,)h(100}])162 456 y(k)174 b(S)162
506 y(1)g(1.5)162 556 y(2)g(1.75)162 606 y(3)g(1.87)162 655
y(4)g(1.94)162 705 y(5)g(1.97)162 755 y(6)g(1.98)162 805 y(7)g(1.99)162
855 y(8)g(2.)162 904 y(9)g(2.)162 954 y(10)152 b(2.)162 1004
y(11)g(2.)162 1054 y(...)75 1189 y Fn(Exercise)16 b(10.)k Fq(Either)15
b(initialize)j Fk(S)c Fq(to)g(0)h(or)f(start)f Fk(k)i Fq(at)f(2)g(to)g(a)o(v)
o(oid)g(getting)h(the)f(initial)j(term)d(t)o(wice.)75 1246
y(Slo)o(w)o(er)h(con)o(v)o(ergence,)g(but)g(y)o(ou)g(get)g(1.63)f(b)o(y)h
Fh(n)e Fq(=)g(50.)75 1323 y Fn(Exercise)20 b(11.)27 b Fq(W)l(ell,)20
b(it)e(div)o(erges)g(of)f(course,)h(but)g(lik)o(ely)h(man)o(y)e(will)j
(decide)f(that)e(the)h(sum)g(m)o(ust)75 1379 y(b)q(e)e(ab)q(out)g(ab)q(out)g
(10,)f(or)g(11,)g(or)g(...)21 b(.)h(No)16 b(p)q(oin)o(ts)g(o\013)f(for)g
(answ)o(ers)g(lik)o(e)i(this|unless)g(y)o(ou)f(kno)o(w)f(the)75
1436 y(story)l(,)h(there)h(is)g(nothing)g(easy)f(to)g(do)h(here.)25
b(Just)17 b(remark)f(afterw)o(ards)f(that)h(the)g(existence)i(of)f(suc)o(h)75
1492 y(series)d(where)g(y)o(ou)f(can't)g(easily)h(tell,)h(ga)o(v)o(e)d(rise)i
(to)f(m)o(uc)o(h)h(researc)o(h)f(and)h(when)g(in\014nite)h(series)f(is)g
(later)75 1549 y(studied,)i(they'll)g(hear)f(the)h(results)f(of)g(that)f
(researc)o(h.)75 1626 y Fn(Exercise)25 b(12.)39 b Fq(P)o(erhaps:)32
b(\\It's)21 b(risky)h(to)f(mess)h(around)f(with)h(in\014nite)i(series.")39
b(The)22 b(brigh)o(ter)75 1682 y(studen)o(ts)15 b(migh)o(t)g(b)q(e)i(giv)o
(en)e(a)g(p)q(ost-pro)s(ject)g(hin)o(t)h(to)f(lo)q(ok)g(up)h(the)g(topic)f
(\\conditionally)j(con)o(v)o(ergen)o(t)75 1739 y(series")e(in)g(their)f
(text.)75 1816 y Fn(Exercise)i(13.)j Fq(Geometric)15 b(series!)75
1893 y Fn(Exercise)i(14.)564 1912 y Fg(p)p 602 1912 150 2 v
38 x Fq(25)10 b(+)g(3)p Fh(x)i Fq(=)h(5)835 1898 y Fd(q)p 877
1898 196 2 v 52 x Fq(1)d(+)g(3)p Fh(x=)p Fq(25)i Fg(\031)g
Fq(5\(1)e(+)g(3)p Fh(x=)p Fq(50\))75 2033 y(and)558 2052 y
Fg(p)p 596 2052 150 2 v 38 x Fq(25)f Fg(\000)i Fq(2)p Fh(x)h
Fq(=)h(5)829 2038 y Fd(q)p 870 2038 196 2 v 870 2090 a Fq(1)d
Fg(\000)h Fq(2)p Fh(x=)p Fq(25)g Fg(\031)i Fq(5\(1)c Fg(\000)i
Fq(2)p Fh(x=)p Fq(50\))p Fh(;)75 2173 y Fq(so)613 2181 y Fg(p)p
651 2181 150 2 v 35 x Fq(25)e(+)i(3)p Fh(x)f Fg(\000)856 2181
y(p)p 894 2181 V 35 x Fq(25)g Fg(\000)g Fq(2)p Fh(x)p 613 2237
431 2 v 815 2278 a(x)1061 2247 y Fg(\031)1114 2216 y Fq(5)p
Fh(x=)p Fq(10)p 1114 2237 117 2 v 1160 2278 a Fh(x)1249 2247
y Fq(=)1302 2216 y(1)p 1302 2237 23 2 v 1302 2278 a(2)1329
2247 y Fh(:)p eop
%%Page: 30 30
30 29 bop 75 -100 a Fq(30)919 b Fm(Deriv)l(ativ)n(es)21 b(in)h(Mathematica)p
1040 -93 836 2 v 606 49 a Fn(PURPOSE)c(OF)g(THE)g(PR)o(OJECT)146
152 y Fq(In)o(tro)q(duce)k(the)g(t)o(w)o(o)f(deriv)m(ativ)o(e)i(notations)f
(in)g Fl(Mathematic)n(a)k Fq(and)c(exercise)h(the)g(commands,)75
208 y Fk(Simplify)p Fq(,)14 b Fk(Factor)p Fq(,)h Fk(Expand)p
Fq(,)g(and)h Fk(Together)p Fq(.)k(This)d(core)e(pro)s(ject)g(is)i(simple.)23
b(Y)l(ou)16 b(can)g(omit)g(this)75 264 y(pro)s(ject)j(if)g(y)o(ou)h(co)o(v)o
(er)e(the)i(deriv)m(ativ)o(e)g(notations)f(some)g(other)g(w)o(a)o(y)g(\(e.g.)
31 b(assign)20 b(as)f(reading)h(the)75 321 y(material)e(preceeding)h
(Exercise)f(1\).)26 b(The)18 b(pro)s(ject)f(assumes)g(that)g(the)g(basic)h
(di\013eren)o(tiation)h(rules,)75 377 y(including)f(the)d(c)o(hain)h(rule,)g
(ha)o(v)o(e)f(b)q(een)h(co)o(v)o(ered)f(in)h(class.)75 448
y Fn(Instructor)g(Note)p Fq(:)33 b(If)15 b(studen)o(ts)f(w)o(an)o(t)f(to)g
(kno)o(w)h(more)g(ab)q(out)g(the)g(commands)g(men)o(tioned)h(in)g(this)75
497 y(pro)s(ject,)f(encourage)h(them)g(to)g(use)h(the)f(on-line)i(help:)75
603 y Fj(?Together)75 653 y(Together[expr])i(puts)i(terms)g(in)g(a)h(sum)f
(over)g(a)g(common)140 703 y(denominator,)f(and)h(cancels)f(factors)h(in)g
(the)g(result.)75 815 y Fq(If)e(a)f(cop)o(y)h(of)f(W)l(olfram's)g
Fl(Mathematic)n(a)k Fq(\(2)867 799 y Fe(nd)926 815 y Fq(Edition\))e(is)f(a)o
(v)m(ailable,)i(a)d(go)q(o)q(d)g(w)o(a)o(y)g(to)g(pro)q(ceed)h(is)75
872 y(to)h(lo)q(ok)i(up)f(the)h(command)f(in)h(App)q(endix)h(8{)p
Fl(Listing)c(of)j(Built-In)f(Mathematic)n(a)i(Obje)n(cts)t
Fq(.)36 b(The)75 928 y(explanation)19 b(giv)o(en)g(there)f(is)h(usually)g(to)
q(o)f(terse)g(for)f(non-exp)q(erts,)i(but)g(it)f(includes)j(page)d(n)o(um)o
(b)q(er)75 985 y(references)c(to)f(the)g(text.)19 b(A)13 b(glance)h(at)e(the)
i(examples)g(on)f(those)g(pages)g(usually)i(pro)o(vides)e(a)g(su\016cien)o(t)
75 1041 y(guide)j(to)f(elemen)o(tary)g(use)h(of)f(the)g(command.)577
1166 y Fn(ANSWERS)i(F)o(OR)h(INSTR)o(UCTORS)75 1262 y(Exercise)f(3.)75
1368 y Fj(f[x_])k(:=)g(x^4)g(-)h(4x^3)f(+)g(3x^2)g(-)h(2x)f(+)h(1)75
1418 y(f[2])f(+)h(f'[2])e(\(x)i(-)f(2\))162 1467 y(-7)h(-)f(6)h(\(-2)f(+)g
(x\))75 1594 y Fn(Exercise)c(4.)75 1699 y Fj(D[\(2x^2)j(-)i(1\)\(x^3)e(+)i
(2\),)f(x])228 1749 y(2)217 b(2)305 b(3)162 1799 y(3)22 b(x)43
b(\(-1)21 b(+)h(2)f(x)h(\))g(+)f(4)h(x)f(\(2)h(+)f(x)h(\))75
1948 y(D[\(2x^2)e(-)i(1\)\(x^3)e(+)i(2\),)f(x])h(//Expand)358
1998 y(2)153 b(4)162 2048 y(8)22 b(x)f(-)h(3)g(x)43 b(+)21
b(10)h(x)75 2148 y(D[\(2x^2)e(-)i(1\)\(x^3)e(+)i(2\),)f(x]//Factor)533
2197 y(3)162 2247 y(x)h(\(8)f(-)h(3)f(x)h(+)f(10)h(x)f(\))75
2373 y Fn(Exercise)c(5.)75 2479 y Fj(D[x/\(x)k(-)g(2\),)g(x])206
2529 y(1)217 b(x)162 2579 y(------)21 b(-)g(---------)162 2629
y(-2)h(+)f(x)240 b(2)p eop
%%Page: 31 31
31 30 bop 75 -100 a Fm(Deriv)l(ativ)n(es)21 b(in)h(Mathematica)p
75 -93 836 2 v 919 w Fq(31)358 49 y Fj(\(-2)f(+)h(x\))75 149
y(D[x/\(x)f(-)g(2\),)g(x])h(//Together)228 199 y(-2)162 249
y(---------)337 298 y(2)162 348 y(\(-2)f(+)h(x\))75 483 y Fn(Exercise)e(6.)27
b Fq(Use)18 b Fk(Expand)f Fq(to)f(get)i(the)f(\014rst)h(form)e(and)i(either)g
Fk(Factor)f Fq(or)g Fk(Simplify)g Fq(to)g(get)g(the)75 540
y(second.)75 610 y Fn(Exercise)g(7.)75 718 y Fj(D[1/\(1)k(-)g(2/x\),)g(x])249
768 y(-2)162 818 y(-----------)271 868 y(2)h(2)43 b(2)162 918
y(\(1)22 b(-)f(-\))43 b(x)271 967 y(x)75 1067 y(D[1/\(1)21
b(-)g(2/x\),)g(x])g(//Simplify)228 1117 y(-2)162 1167 y(---------)249
1217 y(2)162 1266 y(\(-2)g(+)h(x\))75 1402 y Fn(Exercise)17
b(9.)j Fq(Simpli\014cation)e(rev)o(eals)d(that)g(the)g(input)h(functions)g
(are)f(the)g(same.)p eop
%%Page: 32 32
32 31 bop 75 -100 a Fq(32)1219 b Fm(Bisection)21 b(Metho)r(d)p
1340 -93 535 2 v 606 49 a Fn(PURPOSE)d(OF)g(THE)g(PR)o(OJECT)146
145 y Fq(This)i(is)g(a)g(short)f(pro)s(ject)g(on)h(the)g(bisection)h(metho)q
(d.)34 b(The)21 b(studen)o(ts)e(are)h(ask)o(ed)g(to)f(run)h(the)75
195 y Fk(Bisect)15 b Fq(co)q(de.)24 b(This)17 b(co)q(de)g(is)g(in)g(the)f
(\014le)i(Calculus.m,)f(so)f(if)g(the)h(studen)o(ts)f(are)g(loading)h(in)g
(this)g(\014le)75 245 y(via)e(their)h(init.m,)f(it)g(will)i(b)q(e)e(a)o(v)m
(ailable.)22 b(Otherwise,)15 b(y)o(ou)g(can)g(mak)o(e)f(it)h(a)o(v)m(ailable)
i(for)d(cop)o(ying)i(from)75 295 y(some)f(other)g(\014le.)21
b(F)l(or)14 b(con)o(v)o(enience,)j(the)e(co)q(de)h(is)f(rep)q(eated)h(here:)
75 403 y Fj(\(*)21 b(Convert)g(user)g(form)g(to)g(internal)f(form)h(*\))75
452 y(Bisect[f_,)f({x_,)h(a_,)g(b_},)g(eps_])g(:=)75 502 y(Bisect[Function[x)
o(,)e(f],)i(a,)h(b,)f(eps])75 602 y(\(*)g(Do)h(the)f(work)g(with)g(the)g
(internal)f(form)h(*\))75 652 y(Bisect[f_,)f(aa_,)h(bb_,)g(eps_])f(:=)75
702 y(Module[)249 751 y({a)i(=)f(N[aa,)g(16],)g(b)h(=)f(N[bb,)g(16],)g(acc)g
(=)h(N[eps],)e(m},)249 851 y(m)i(=)g(\(a)f(+)g(b\)/2;)249 901
y(If)h([b)f(-)h(a)f(<)h(acc,)f(\(*)g(then)g(*\))h(Return[N[m,)d(12]]];)249
951 y(Print[N[m,)h(12]];)h(\(*)g(to)h(monitor)e(progress)g(*\))249
1050 y(If)i([f[m])e(f[a])h(>)h(0,)249 1100 y(\(*)g(then)f(*\))424
1150 y(Bisect[f,)f(m,)h(b,)g(acc],)249 1200 y(\(*)h(else)f(*\))424
1249 y(Bisect[f,)f(a,)h(m,)g(acc])249 1299 y(])75 1349 y(])h(/;)f(\(*)g(use)h
(only)e(if)i(the)f(following)f(conditions)g(are)h(met)g(*\))75
1399 y(N[aa])g(<=)g(N[bb])g(&&)g(N[f[N[aa]]])f(N[f[N[bb]]])f(<=)j(0)f(&&)75
1449 y(Positive[N[eps]])75 1584 y Fn(Instructor)15 b(Note)p
Fq(:)33 b(Y)l(ou)13 b(ma)o(y)g(w)o(an)o(t)f(to)h(mak)o(e)g(the)h(ab)q(o)o(v)o
(e)f Fk(Bisect)f Fq(source)i(co)q(de)g(a)o(v)m(ailable)h(to)d(y)o(our)75
1640 y(studen)o(ts|it)k(is)h(an)f(example)i(of)e(recursiv)o(e)h(co)q(ding)g
(that)f(migh)o(t)h(b)q(e)g(of)f(in)o(terest)g(to)g(y)o(our)g(computer)75
1697 y(science)h(ma)s(jors.)577 1823 y Fn(ANSWERS)g(F)o(OR)h(INSTR)o(UCTORS)
75 1926 y(Exercise)h(1.)24 b Fq(The)17 b(bisection)h(metho)q(d)f(presumes)g
(that)f(for)g Fh(a)g(<)f(b)p Fq(,)h Fh(f)5 b Fq(\()p Fh(a)p
Fq(\))16 b(and)h Fh(f)5 b Fq(\()p Fh(b)p Fq(\))16 b(ha)o(v)o(e)g(opp)q(osite)
75 1982 y(signs.)22 b(The)16 b(IVT)g(sa)o(ys)f(that)g(if)i
Fh(f)5 b Fq(\()p Fh(x)p Fq(\))15 b(is)h(con)o(tin)o(uous)g(in)h([)p
Fh(a;)8 b(b)p Fq(],)13 b(then)j Fh(f)21 b Fq(tak)o(es)15 b(on)h(all)h(v)m
(alues)g(b)q(et)o(w)o(een)75 2039 y Fh(f)5 b Fq(\()p Fh(a)p
Fq(\))17 b(and)h Fh(f)5 b Fq(\()p Fh(b)p Fq(\).)26 b(Zero)17
b(is)h(one)g(suc)o(h)g(v)m(alue!)29 b(So)17 b(there)h(is)g(a)f(ro)q(ot)g(in)i
([)p Fh(a;)8 b(b)p Fq(].)25 b(The)18 b(bisection)h(metho)q(d)75
2095 y(assures)13 b(that)g(at)f(eac)o(h,)i Fh(f)k Fq(con)o(tin)o(ues)c(to)f
(ha)o(v)o(e)f(opp)q(osites)i(at)f(the)g(end)h(of)f(the)h(new)f(in)o(terv)m
(al)h(and)g(hence)75 2152 y(at)h(eac)o(h)g(step)g(the)g(ro)q(ot)g(is)g
(con\014ned)i(to)d(an)h(in)o(terv)m(al)i(of)d(half)i(the)f(length)h(of)f(the)
g(previous)h(step.)75 2229 y Fn(Exercise)k(2.)28 b Fq(2)377
2212 y Fe(10)431 2229 y Fg(\031)18 b Fq(10)530 2212 y Fe(3)549
2229 y Fq(.)28 b(This)18 b(is)g(an)g(extremely)h(useful)g(appro)o(ximation)e
(for)h(computer)f(science)75 2285 y(applications.)75 2362 y
Fn(Exercise)f(3.)k Fq(W)l(e)14 b(hop)q(e)h(y)o(ou)f(do)g(get)f(some)h(decen)o
(t)h(writeups!)20 b(See)15 b(correct)f(result)g(in)h(next)g(Answ)o(er.)p
eop
%%Page: 33 33
33 32 bop 75 -100 a Fm(Bisection)20 b(Metho)r(d)p 75 -93 535
2 v 1221 w Fq(33)75 49 y Fn(Exercise)g(4.)28 b Fq(Assuming)19
b(that)e(2.5)g(is)i(the)f(starting)f(p)q(oin)o(t,)i(it)f(tak)o(es)f(4)h
(bisections.)29 b(W)l(e)18 b(w)o(ouldn't)75 99 y(argue)d(with)g(an)h(answ)o
(er)e(of)h(5.)75 208 y Fj(Bisect[x^2)20 b(-)h(5,)h({x,)f(2,)g(3},)g(.05])75
258 y(2.5)75 308 y(2.25)75 357 y(2.125)75 407 y(2.1875)75 457
y(2.21875)75 557 y(2.234375)75 687 y Fn(Exercise)e(5.)26 b
Fq(Assuming)17 b(that)g(80000.5)e(is)i(the)g(starting)g(p)q(oin)o(t,)g(it)h
(tak)o(es)e(9)h(bisections)h(to)e(ac)o(hiev)o(e)75 736 y(80000.833,)c(again)j
(no)h(argumen)o(t)e(with)i(rep)q(orting)f(10.)75 845 y Fj(h)22
b(=)f(1;)h(s)f(=)h(400;)75 895 y(Bisect[Cos[s/r])d(-)i(r/\(r)g(+)h(h\),)f
({r,)g(80000,)g(80001},)f(.0005])75 945 y(80000.5)75 995 y(80000.75)75
1045 y(80000.875)75 1095 y(80000.8125)75 1144 y(80000.84375)75
1194 y(80000.828125)75 1244 y(80000.8359375)75 1294 y(80000.8320312)75
1344 y(80000.8339844)75 1393 y(80000.8330078)75 1443 y(80000.8334961)75
1543 y(80000.833252)75 1673 y Fn(Exercise)e(6.)j Fq(Assuming)16
b(that)f(80000.5)f(is)i(the)g(starting)f(p)q(oin)o(t,)g(it)h(tak)o(es)f(20)g
(bisections)i(to)e(ac)o(hiev)o(e)75 1723 y(80000.833324.)75
1832 y Fj(h)22 b(=)f(1;)h(s)f(=)h(400;)75 1881 y(Bisect[Cos[s/r])d(-)i(r/\(r)
g(+)h(h\),)f({r,)g(80000,)g(80001},)f(.0000005])75 1931 y(80000.5)75
1981 y(80000.75)75 2031 y(80000.875)75 2081 y(80000.8125)75
2130 y(80000.84375)75 2180 y(80000.828125)75 2230 y(80000.8359375)75
2280 y(80000.8320312)75 2330 y(80000.8339844)75 2380 y(80000.8330078)75
2429 y(80000.8334961)75 2479 y(80000.833252)75 2529 y(80000.833374)75
2579 y(80000.833313)75 2629 y(80000.8333435)p eop
%%Page: 34 34
34 33 bop 75 -100 a Fq(34)1219 b Fm(Bisection)21 b(Metho)r(d)p
1340 -93 535 2 v 75 49 a Fj(80000.8333282)75 99 y(80000.8333206)75
149 y(80000.8333244)75 199 y(80000.8333225)75 249 y(80000.8333235)75
298 y(80000.833324)75 398 y(80000.8333242)75 527 y Fn(Exercise)d(7.)j
Fq(Assuming)16 b(that)f(125000.5)e(is)k(the)e(starting)g(p)q(oin)o(t,)h(it)g
(tak)o(es)f(9)g(bisections)i(to)e(ac)o(hiev)o(e)75 576 y(125000.833.)i(T)l(o)
e(pro)o(v)o(e)g(that)f(the)h(ro)q(ot)g(exists,)g(it)g(su\016ces)h(to)e(ev)m
(aluate)i(at)f(the)g(endp)q(oin)o(ts:)75 684 y Fj(h)22 b(=)f(1;)h(s)f(=)h
(500;)75 734 y(f[r_])f(:=)g(Cos[s/r])f(-)i(r/\(r)f(+)g(h\))75
784 y(f[125000])f(//N)315 834 y(-11)75 884 y(-5.33328)g(10)75
983 y(f[125001])g(//N)293 1033 y(-11)75 1083 y(1.06668)g(10)75
1183 y(Bisect[f[r],)f({r,)i(125000,)g(125001},)f(.0005])75
1232 y(125000.5)75 1282 y(125000.75)75 1332 y(125000.875)75
1382 y(125000.8125)75 1432 y(125000.84375)75 1481 y(125000.828125)75
1531 y(125000.835937)75 1581 y(125000.832031)75 1631 y(125000.833984)75
1681 y(125000.833008)75 1730 y(125000.833496)75 1830 y(125000.833252)75
1965 y Fn(Exercise)f(8.)26 b Fq(Using)17 b(the)g(equation)h
Fh(x)d Fq(=)840 1928 y Fg(p)p 878 1928 23 2 v 37 x Fq(5)i(w)o(ould)g(en)o
(tail)h(ev)m(aluating)1399 1928 y Fg(p)p 1437 1928 V 37 x Fq(5)f(b)q
(eforehand,)h(but)f(the)75 2022 y(whole)f(p)q(oin)o(t)f(of)g(the)h(problem)f
(is)h(to)f(appro)o(ximate)f(this)i(quan)o(tit)o(y)l(.)75 2099
y Fn(Exercise)h(9.)j Fq(The)15 b(agreemen)o(t)g(is)h(ro)q(c)o(k)f(solid.)p
eop
%%Page: 35 35
35 34 bop 75 -100 a Fm(Newton's)22 b(Metho)r(d)p 75 -93 540
2 v 1216 w Fq(35)606 49 y Fn(PURPOSE)c(OF)g(THE)g(PR)o(OJECT)146
152 y Fq(In)o(tro)q(duction)e(to)e(Newton's)h(metho)q(d.)20
b(This)15 b(is)h(an)f(easy)l(,)g(but)h(imp)q(ortan)o(t,)e(pro)s(ject.)577
278 y Fn(ANSWERS)j(F)o(OR)h(INSTR)o(UCTORS)75 380 y(Exercise)f(1.)j
Fq(Here,)15 b Fh(f)5 b Fq(\()p Fh(x)p Fq(\))12 b(=)h Fh(x)638
364 y Fe(2)668 380 y Fg(\000)d Fh(c)p Fq(,)15 b(so)g Fh(f)844
364 y Fb(0)855 380 y Fq(\()p Fh(x)p Fq(\))d(=)h(2)p Fh(x)i
Fq(leading)i(to)771 510 y Fh(x)797 517 y Ff(n)p Fe(+1)878 510
y Fq(=)c Fh(x)952 517 y Ff(n)986 510 y Fg(\000)1036 479 y Fh(x)1062
462 y Fe(2)1062 490 y Ff(n)1096 479 y Fg(\000)d Fh(c)p 1036
499 125 2 v 1063 541 a Fq(2)p Fh(x)1112 548 y Ff(n)1166 510
y Fh(;)75 628 y Fq(whic)o(h)16 b(simpli\014es)i(to)c(the)h(cited)h(result)g
(after)f(replacing)h Fh(x)1102 635 y Ff(n)1141 628 y Fq(b)o(y)f
Fh(a)p Fq(.)75 699 y Fn(Exercise)i(2.)j Fq(Ab)q(out)15 b(5)g(signi\014can)o
(t)h(\014gures.)k(T)l(o)14 b(displa)o(y)i(the)f(results)h(here,)f(w)o(e)g
(\\c)o(heat")f(and)h(use)g(a)75 749 y(mo)q(di\014cation)h(of)f(the)g(lo)q(op)
h(construct:)75 856 y Fj(f[x_])21 b(:=)g(x^2)g(-)h(5)75 906
y(xn)f(=)h(6.0;)75 956 y(Do[)162 1005 y(xn)g(=)f(xn)h(-)f(f[xn]/f'[xn];)162
1055 y(Print[)g(xn)g(],)75 1105 y({5}])162 1155 y(3.41667)162
1205 y(2.44004)162 1255 y(2.24459)162 1304 y(2.23608)162 1354
y(2.23607)75 1468 y Fq(Notice)16 b(that)e(the)h(\014rst)g(iteration)h(is)f
(ab)q(out)g(3.4)g(whic)o(h)h(agrees)f(with)g(the)g(3.5)g(read)g(o\013)f(the)h
(plot.)75 1539 y Fn(Exercise)i(3.)j Fq(It)15 b(tak)o(es)g(only)g(6)g
(iterations|that)f(is,)i(just)f(one)g(extra)g(iteration.)75
1646 y Fj(f[x_])21 b(:=)g(x^2)g(-)h(5)75 1696 y(xn)f(=)h(15.0;)75
1746 y(Do[)162 1795 y(xn)g(=)f(xn)h(-)f(f[xn]/f'[xn];)162 1845
y(Print[)g(xn)g(],)75 1895 y({6}])162 1945 y(7.66667)162 1995
y(4.15942)162 2045 y(2.68076)162 2094 y(2.27295)162 2144 y(2.23637)162
2194 y(2.23607)75 2322 y Fn(Exercise)c(4.)j Fq(Here)15 b(are)g(the)h(results)
f(from)g(a)g(suitably)h(altered)f(lo)q(op:)75 2429 y Fj(f[x_])21
b(:=)g(x^2)g(-)h(5)75 2479 y(xn)f(=)h(200.0;)75 2529 y(Do[)162
2579 y(xn)g(=)f(xn)h(-)f(f[xn]/f'[xn];)162 2629 y(Print[)g(N[xn,)f(10])i(],)p
eop
%%Page: 36 36
36 35 bop 75 -100 a Fq(36)1214 b Fm(Newton's)23 b(Metho)r(d)p
1335 -93 540 2 v 75 49 a Fj({16}])162 99 y(100.0125)162 149
y(50.03124688)162 199 y(25.06559221)162 249 y(12.63253442)162
298 y(6.514168908)162 348 y(3.640863265)162 398 y(2.507081973)162
448 y(2.250716199)162 498 y(2.236115645)162 547 y(2.236067978)162
597 y(2.236067977)162 647 y(2.236067977)162 697 y(2.236067977)162
747 y(2.236067977)162 796 y(2.236067977)162 846 y(2.236067977)75
955 y Fq(It)e(tak)o(es)f(ab)q(out)h(only)h(11)e(iterations)i(to)e(ac)o(hiev)o
(e)i(the)f(desired)h(accuracy)l(,)h(ev)o(en)e(when)h(starting)e(a)75
1012 y(\\mile")c(a)o(w)o(a)o(y)e(from)g(the)h(ro)q(ot.)75 1082
y Fn(Exercise)i(5.)75 1184 y Fj(Do[)249 1234 y(Print["c)j(=)i(",)f(c];)249
1284 y(f[x_])g(:=)g(x^2)h(-)f(c;)249 1333 y(xn)h(=)f(1.0;)249
1383 y(Do[)424 1433 y(xn)g(=)h(xn)f(-)h(f[xn]/f'[xn];)424 1483
y(Print[")173 b(",)21 b(N[xn,)g(6])g(],)249 1533 y({5}],)75
1583 y({c,)g(.5,)g(4.0,)g(.5}])75 1632 y(c)h(=)f(0.5)249 1682
y(0.75)249 1732 y(0.708333)249 1782 y(0.707108)249 1832 y(0.707107)249
1881 y(0.707107)75 1931 y(c)h(=)f(1.)249 1981 y(1.)249 2031
y(1.)249 2081 y(1.)249 2130 y(1.)249 2180 y(1.)75 2230 y(c)h(=)f(1.5)249
2280 y(1.25)249 2330 y(1.225)249 2380 y(1.22474)249 2429 y(1.22474)249
2479 y(1.22474)75 2529 y(c)h(=)f(2.)249 2579 y(1.5)249 2629
y(1.41667)p eop
%%Page: 37 37
37 36 bop 75 -100 a Fm(Newton's)22 b(Metho)r(d)p 75 -93 540
2 v 1216 w Fq(37)249 49 y Fj(1.41422)249 99 y(1.41421)249 149
y(1.41421)75 199 y(c)g(=)f(2.5)249 249 y(1.75)249 298 y(1.58929)249
348 y(1.58116)249 398 y(1.58114)249 448 y(1.58114)75 498 y(c)h(=)f(3.)249
547 y(2.)249 597 y(1.75)249 647 y(1.73214)249 697 y(1.73205)249
747 y(1.73205)75 796 y(c)h(=)f(3.5)249 846 y(2.25)249 896 y(1.90278)249
946 y(1.8711)249 996 y(1.87083)249 1046 y(1.87083)75 1095 y(c)h(=)f(4.)249
1145 y(2.5)249 1195 y(2.05)249 1245 y(2.00061)249 1295 y(2.)249
1344 y(2.)75 1490 y Fn(Exercise)c(6.)126 1612 y Fq(a\))22 b
Fh(f)5 b Fq(\()p Fh(x)p Fq(\))18 b(is)h(\(1\))f(con)o(tin)o(uous)h(ev)o
(erywhere,)g(\(2\))f(negativ)o(e)h(\(-0.0012\))d(for)i Fh(x)g
Fq(=)h Fg(\000)p Fq(10,)g(\(3\))f(p)q(ositiv)o(e)189 1669 y(\(0.0008\))12
b(for)j Fh(x)e Fq(=)g(10.)19 b(So,)c(the)g(IVT)g(guaran)o(tees)g(a)g(zero)g
(in)h([)p Fg(\000)p Fq(10)p Fh(;)8 b Fq(10].)123 1770 y(b\))23
b(The)15 b(t)o(w)o(o)f(suggested)h(plots)g(are)g(sho)o(wn)g(in)h(Figures)g
(17)e(and)h(18.)639 2251 y @beginspecial 0 @llx 0 @lly 282
@urx 174 @ury 1614 @rwi @setspecial
%%BeginDocument: challenge.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.047619 0.601246 0.158573 [
[(-10)] 0.02381 0.60125 0 2 Msboxa
[(-5)] 0.2619 0.60125 0 2 Msboxa
[(5)] 0.7381 0.60125 0 2 Msboxa
[(10)] 0.97619 0.60125 0 2 Msboxa
[(-3.5)] 0.4875 0.04624 1 0 Msboxa
[(-3)] 0.4875 0.12553 1 0 Msboxa
[(-2.5)] 0.4875 0.20481 1 0 Msboxa
[(-2)] 0.4875 0.2841 1 0 Msboxa
[(-1.5)] 0.4875 0.36339 1 0 Msboxa
[(-1)] 0.4875 0.44267 1 0 Msboxa
[(-0.5)] 0.4875 0.52196 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.60125 moveto
0.02381 0.6075 lineto
stroke
grestore
[(-10)] 0.02381 0.60125 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.60125 moveto
0.2619 0.6075 lineto
stroke
grestore
[(-5)] 0.2619 0.60125 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.60125 moveto
0.7381 0.6075 lineto
stroke
grestore
[(5)] 0.7381 0.60125 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.60125 moveto
0.97619 0.6075 lineto
stroke
grestore
[(10)] 0.97619 0.60125 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.60125 moveto
0.07143 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.60125 moveto
0.11905 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.60125 moveto
0.16667 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.60125 moveto
0.21429 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.60125 moveto
0.30952 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.60125 moveto
0.35714 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.60125 moveto
0.40476 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.60125 moveto
0.45238 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.60125 moveto
0.54762 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.60125 moveto
0.59524 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.60125 moveto
0.64286 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.60125 moveto
0.69048 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.60125 moveto
0.78571 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.60125 moveto
0.83333 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.60125 moveto
0.88095 0.605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.60125 moveto
0.92857 0.605 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.60125 moveto
1 0.60125 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.04624 moveto
0.50625 0.04624 lineto
stroke
grestore
[(-3.5)] 0.4875 0.04624 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.12553 moveto
0.50625 0.12553 lineto
stroke
grestore
[(-3)] 0.4875 0.12553 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.20481 moveto
0.50625 0.20481 lineto
stroke
grestore
[(-2.5)] 0.4875 0.20481 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.2841 moveto
0.50625 0.2841 lineto
stroke
grestore
[(-2)] 0.4875 0.2841 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.36339 moveto
0.50625 0.36339 lineto
stroke
grestore
[(-1.5)] 0.4875 0.36339 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.44267 moveto
0.50625 0.44267 lineto
stroke
grestore
[(-1)] 0.4875 0.44267 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.52196 moveto
0.50625 0.52196 lineto
stroke
grestore
[(-0.5)] 0.4875 0.52196 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.0621 moveto
0.50375 0.0621 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.07796 moveto
0.50375 0.07796 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.09381 moveto
0.50375 0.09381 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.10967 moveto
0.50375 0.10967 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.14138 moveto
0.50375 0.14138 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.15724 moveto
0.50375 0.15724 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1731 moveto
0.50375 0.1731 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18896 moveto
0.50375 0.18896 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22067 moveto
0.50375 0.22067 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.23653 moveto
0.50375 0.23653 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.25239 moveto
0.50375 0.25239 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.26824 moveto
0.50375 0.26824 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.29996 moveto
0.50375 0.29996 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31581 moveto
0.50375 0.31581 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.33167 moveto
0.50375 0.33167 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.34753 moveto
0.50375 0.34753 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.37924 moveto
0.50375 0.37924 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.3951 moveto
0.50375 0.3951 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.41096 moveto
0.50375 0.41096 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.42682 moveto
0.50375 0.42682 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45853 moveto
0.50375 0.45853 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.47439 moveto
0.50375 0.47439 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.49024 moveto
0.50375 0.49024 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.5061 moveto
0.50375 0.5061 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.53782 moveto
0.50375 0.53782 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55367 moveto
0.50375 0.55367 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.56953 moveto
0.50375 0.56953 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.58539 moveto
0.50375 0.58539 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.03038 moveto
0.50375 0.03038 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.01453 moveto
0.50375 0.01453 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.6171 moveto
0.50375 0.6171 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.60105 moveto
0.04365 0.60102 lineto
0.06349 0.60099 lineto
0.10317 0.6009 lineto
0.12302 0.60084 lineto
0.14286 0.60076 lineto
0.1627 0.60066 lineto
0.18254 0.60053 lineto
0.20238 0.60036 lineto
0.22222 0.60013 lineto
0.24206 0.59981 lineto
0.2619 0.59937 lineto
0.27183 0.59908 lineto
0.28175 0.59873 lineto
0.29167 0.5983 lineto
0.30159 0.59776 lineto
0.31151 0.59709 lineto
0.32143 0.59623 lineto
0.33135 0.59512 lineto
0.34127 0.59366 lineto
0.35119 0.5917 lineto
0.36111 0.58901 lineto
0.37103 0.58522 lineto
0.37599 0.58274 lineto
0.38095 0.57974 lineto
0.38591 0.57606 lineto
0.39087 0.5715 lineto
0.39583 0.56582 lineto
0.40079 0.55863 lineto
0.40575 0.54945 lineto
0.41071 0.53757 lineto
0.41567 0.522 lineto
0.42063 0.50137 lineto
0.4256 0.47375 lineto
0.43056 0.4366 lineto
0.43552 0.38687 lineto
0.44048 0.32181 lineto
0.4504 0.15213 lineto
0.45288 0.10935 lineto
0.45536 0.07166 lineto
0.45784 0.04201 lineto
0.45908 0.03097 lineto
0.46032 0.02269 lineto
0.46156 0.01728 lineto
0.4628 0.01472 lineto
0.46404 0.0149 lineto
0.46528 0.01766 lineto
0.46652 0.02275 lineto
0.46776 0.0299 lineto
0.47024 0.04911 lineto
Mistroke
0.48016 0.1511 lineto
0.48512 0.19756 lineto
0.49008 0.23521 lineto
0.49504 0.26379 lineto
0.49752 0.27492 lineto
0.5 0.2841 lineto
0.50248 0.29148 lineto
0.50496 0.29718 lineto
0.50744 0.30136 lineto
0.50868 0.30291 lineto
0.50992 0.30414 lineto
0.51116 0.30506 lineto
0.5124 0.3057 lineto
0.51364 0.30609 lineto
0.51488 0.30625 lineto
0.51612 0.30622 lineto
0.51736 0.30603 lineto
0.51984 0.30538 lineto
0.52108 0.30503 lineto
0.52232 0.30474 lineto
0.52356 0.3046 lineto
0.5248 0.30468 lineto
0.52604 0.30509 lineto
0.52728 0.30591 lineto
0.52852 0.30726 lineto
0.52976 0.30925 lineto
0.531 0.31198 lineto
0.53224 0.31555 lineto
0.53472 0.32558 lineto
0.5372 0.3398 lineto
0.53968 0.35817 lineto
0.5496 0.45457 lineto
0.55456 0.49886 lineto
0.55952 0.5328 lineto
0.562 0.54588 lineto
0.56448 0.55669 lineto
0.56696 0.56556 lineto
0.56944 0.57278 lineto
0.5744 0.5834 lineto
0.57688 0.58726 lineto
0.57937 0.59038 lineto
0.58185 0.59291 lineto
0.58433 0.59496 lineto
0.58929 0.59798 lineto
0.59177 0.59907 lineto
0.59425 0.59996 lineto
0.59673 0.60068 lineto
0.59921 0.60127 lineto
0.60169 0.60174 lineto
0.60417 0.60212 lineto
Mistroke
0.60665 0.60242 lineto
0.60913 0.60266 lineto
0.61161 0.60285 lineto
0.61409 0.60299 lineto
0.61657 0.6031 lineto
0.61905 0.60319 lineto
0.62029 0.60322 lineto
0.62153 0.60325 lineto
0.62277 0.60327 lineto
0.62401 0.60328 lineto
0.62525 0.6033 lineto
0.62649 0.60331 lineto
0.62773 0.60331 lineto
0.62897 0.60332 lineto
0.63021 0.60332 lineto
0.63145 0.60332 lineto
0.63269 0.60331 lineto
0.63393 0.60331 lineto
0.63889 0.60327 lineto
0.64137 0.60324 lineto
0.64385 0.60321 lineto
0.64881 0.60314 lineto
0.65873 0.60298 lineto
0.69841 0.6024 lineto
0.71825 0.60218 lineto
0.7381 0.60201 lineto
0.75794 0.60188 lineto
0.77778 0.60177 lineto
0.79762 0.60169 lineto
0.81746 0.60162 lineto
0.8373 0.60157 lineto
0.85714 0.60152 lineto
0.89683 0.60145 lineto
0.91667 0.60143 lineto
0.93651 0.60141 lineto
0.97619 0.60137 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 496 2337 a Fi(Fig)p Fq(.)g(17.)k(Result)c(of)g
Fk(Plot[f[x],)23 b Fg(f)p Fk(x,)g(-10,)g(10)p Fg(g)p Fk(])p
Fq(.)128 2470 y(c\))g(It)15 b(tak)o(es)f(only)i(3)f(iterations)g(to)g(get)g
Fh(x)d Fg(\031)h Fq(2)p Fh(:)p Fq(08124.)123 2572 y(d\))23
b(Iterations)16 b(div)o(erge)h(to)e(+)p Fg(1)p Fq(.)24 b(The)17
b(righ)o(t)f(side)h(of)f(Figure)h(18)f(rev)o(eals)g(that)g(indeed)i
(successiv)o(e)189 2629 y(tangen)o(ts)c(in)o(tersect)h(the)h
Fh(x)p Fq(-axis)f(at)g(larger)g(and)g(larger)g Fh(x)p Fq(-v)m(alues.)p
eop
%%Page: 38 38
38 37 bop 75 -100 a Fq(38)1214 b Fm(Newton's)23 b(Metho)r(d)p
1335 -93 540 2 v 639 419 a @beginspecial 0 @llx 0 @lly 282
@urx 174 @ury 1614 @rwi @setspecial
%%BeginDocument: zoom.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.047619 0.309017 3.09017 [
[(-10)] 0.02381 0.30902 0 2 Msboxa
[(-5)] 0.2619 0.30902 0 2 Msboxa
[(5)] 0.7381 0.30902 0 2 Msboxa
[(10)] 0.97619 0.30902 0 2 Msboxa
[(-0.1)] 0.4875 0 1 0 Msboxa
[(-0.05)] 0.4875 0.15451 1 0 Msboxa
[(0.05)] 0.4875 0.46353 1 0 Msboxa
[(0.1)] 0.4875 0.61803 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.30902 moveto
0.02381 0.31527 lineto
stroke
grestore
[(-10)] 0.02381 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.30902 moveto
0.2619 0.31527 lineto
stroke
grestore
[(-5)] 0.2619 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.30902 moveto
0.7381 0.31527 lineto
stroke
grestore
[(5)] 0.7381 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.30902 moveto
0.97619 0.31527 lineto
stroke
grestore
[(10)] 0.97619 0.30902 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.30902 moveto
0.07143 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.30902 moveto
0.11905 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.30902 moveto
0.16667 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.30902 moveto
0.21429 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.30902 moveto
0.30952 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.30902 moveto
0.35714 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.30902 moveto
0.40476 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.30902 moveto
0.45238 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.30902 moveto
0.54762 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.30902 moveto
0.59524 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.30902 moveto
0.64286 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.30902 moveto
0.69048 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.30902 moveto
0.78571 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.30902 moveto
0.83333 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.30902 moveto
0.88095 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.30902 moveto
0.92857 0.31277 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.30902 moveto
1 0.30902 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.50625 0 lineto
stroke
grestore
[(-0.1)] 0.4875 0 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.15451 moveto
0.50625 0.15451 lineto
stroke
grestore
[(-0.05)] 0.4875 0.15451 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.46353 moveto
0.50625 0.46353 lineto
stroke
grestore
[(0.05)] 0.4875 0.46353 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.61803 moveto
0.50625 0.61803 lineto
stroke
grestore
[(0.1)] 0.4875 0.61803 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.0309 moveto
0.50375 0.0309 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.0618 moveto
0.50375 0.0618 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.09271 moveto
0.50375 0.09271 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.12361 moveto
0.50375 0.12361 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18541 moveto
0.50375 0.18541 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.21631 moveto
0.50375 0.21631 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.24721 moveto
0.50375 0.24721 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.27812 moveto
0.50375 0.27812 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.33992 moveto
0.50375 0.33992 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.37082 moveto
0.50375 0.37082 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40172 moveto
0.50375 0.40172 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.43262 moveto
0.50375 0.43262 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.49443 moveto
0.50375 0.49443 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.52533 moveto
0.50375 0.52533 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55623 moveto
0.50375 0.55623 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.58713 moveto
0.50375 0.58713 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.30524 moveto
0.04365 0.30469 lineto
0.06349 0.30403 lineto
0.10317 0.30224 lineto
0.12302 0.30101 lineto
0.14286 0.29948 lineto
0.1627 0.29752 lineto
0.18254 0.295 lineto
0.20238 0.29168 lineto
0.22222 0.28723 lineto
0.24206 0.28113 lineto
0.2619 0.27253 lineto
0.27183 0.26689 lineto
0.28175 0.26003 lineto
0.29167 0.2516 lineto
0.30159 0.24114 lineto
0.31151 0.22799 lineto
0.32143 0.21125 lineto
0.33135 0.1896 lineto
0.34127 0.16111 lineto
0.35119 0.12291 lineto
0.36111 0.07051 lineto
stroke
0.3706 0 moveto
0.36111 0.07051 lineto
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
0.57568 0 moveto
0.57688 0.03645 lineto
stroke
0.57688 0.03645 moveto
0.57937 0.09729 lineto
0.58185 0.1466 lineto
0.58433 0.18658 lineto
0.58929 0.24534 lineto
0.59177 0.2667 lineto
0.59425 0.28403 lineto
0.59673 0.29807 lineto
0.59921 0.30943 lineto
0.60169 0.31859 lineto
0.60417 0.32596 lineto
0.60665 0.33185 lineto
0.60913 0.33652 lineto
0.61161 0.3402 lineto
0.61409 0.34305 lineto
0.61657 0.34522 lineto
0.61905 0.34683 lineto
0.62029 0.34746 lineto
0.62153 0.34798 lineto
0.62277 0.34841 lineto
0.62401 0.34875 lineto
0.62525 0.34901 lineto
0.62649 0.3492 lineto
0.62773 0.34933 lineto
0.62897 0.3494 lineto
0.63021 0.34942 lineto
0.63145 0.34938 lineto
0.63269 0.34931 lineto
0.63393 0.3492 lineto
0.63889 0.34843 lineto
0.64137 0.34789 lineto
0.64385 0.34729 lineto
0.64881 0.34592 lineto
0.65873 0.34287 lineto
0.69841 0.33148 lineto
0.71825 0.32727 lineto
0.7381 0.32395 lineto
0.75794 0.32134 lineto
0.77778 0.31928 lineto
0.79762 0.31764 lineto
0.81746 0.31633 lineto
0.8373 0.31526 lineto
0.85714 0.31439 lineto
0.89683 0.31307 lineto
0.91667 0.31257 lineto
0.93651 0.31215 lineto
0.97619 0.31148 lineto
stroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 211 505 a Fi(Fig)p Fq(.)15 b(18.)k(Result)c(of)g
Fk(Plot[f[x],)22 b Fg(f)p Fk(x,)i(-10,)f(10)p Fg(g)p Fk(,)g(PlotRange)g(->)g
Fg(f)p Fk(-.1,)h(.1)p Fg(g)p Fk(])p Fq(.)639 982 y @beginspecial
0 @llx 0 @lly 282 @urx 174 @ury 1614 @rwi @setspecial
%%BeginDocument: near0.5.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.02381 0.952381 24.698052 13.076414 [
[(0.2)] 0.21429 0.11439 0 2 Msboxa
[(0.4)] 0.40476 0.11439 0 2 Msboxa
[(0.6)] 0.59524 0.11439 0 2 Msboxa
[(0.8)] 0.78571 0.11439 0 2 Msboxa
[(1)] 0.97619 0.11439 0 2 Msboxa
[(-1.87)] 0.01131 0.24516 1 0 Msboxa
[(-1.86)] 0.01131 0.37592 1 0 Msboxa
[(-1.85)] 0.01131 0.50669 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.21429 0.11439 moveto
0.21429 0.12064 lineto
stroke
grestore
[(0.2)] 0.21429 0.11439 0 2 Mshowa
gsave
0.002 setlinewidth
0.40476 0.11439 moveto
0.40476 0.12064 lineto
stroke
grestore
[(0.4)] 0.40476 0.11439 0 2 Mshowa
gsave
0.002 setlinewidth
0.59524 0.11439 moveto
0.59524 0.12064 lineto
stroke
grestore
[(0.6)] 0.59524 0.11439 0 2 Mshowa
gsave
0.002 setlinewidth
0.78571 0.11439 moveto
0.78571 0.12064 lineto
stroke
grestore
[(0.8)] 0.78571 0.11439 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.11439 moveto
0.97619 0.12064 lineto
stroke
grestore
[(1)] 0.97619 0.11439 0 2 Mshowa
gsave
0.001 setlinewidth
0.0619 0.11439 moveto
0.0619 0.11814 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1 0.11439 moveto
0.1 0.11814 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1381 0.11439 moveto
0.1381 0.11814 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.17619 0.11439 moveto
0.17619 0.11814 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.25238 0.11439 moveto
0.25238 0.11814 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29048 0.11439 moveto
0.29048 0.11814 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.32857 0.11439 moveto
0.32857 0.11814 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36667 0.11439 moveto
0.36667 0.11814 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44286 0.11439 moveto
0.44286 0.11814 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.48095 0.11439 moveto
0.48095 0.11814 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.51905 0.11439 moveto
0.51905 0.11814 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.55714 0.11439 moveto
0.55714 0.11814 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63333 0.11439 moveto
0.63333 0.11814 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.67143 0.11439 moveto
0.67143 0.11814 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.70952 0.11439 moveto
0.70952 0.11814 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.74762 0.11439 moveto
0.74762 0.11814 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.82381 0.11439 moveto
0.82381 0.11814 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.8619 0.11439 moveto
0.8619 0.11814 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9 0.11439 moveto
0.9 0.11814 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9381 0.11439 moveto
0.9381 0.11814 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.11439 moveto
1 0.11439 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0.24516 moveto
0.03006 0.24516 lineto
stroke
grestore
[(-1.87)] 0.01131 0.24516 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.37592 moveto
0.03006 0.37592 lineto
stroke
grestore
[(-1.86)] 0.01131 0.37592 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.50669 moveto
0.03006 0.50669 lineto
stroke
grestore
[(-1.85)] 0.01131 0.50669 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.14055 moveto
0.02756 0.14055 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.1667 moveto
0.02756 0.1667 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.19285 moveto
0.02756 0.19285 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.21901 moveto
0.02756 0.21901 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.27131 moveto
0.02756 0.27131 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.29746 moveto
0.02756 0.29746 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.32362 moveto
0.02756 0.32362 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.34977 moveto
0.02756 0.34977 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.40208 moveto
0.02756 0.40208 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.42823 moveto
0.02756 0.42823 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.45438 moveto
0.02756 0.45438 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.48053 moveto
0.02756 0.48053 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.08824 moveto
0.02756 0.08824 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.06209 moveto
0.02756 0.06209 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.03594 moveto
0.02756 0.03594 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.00978 moveto
0.02756 0.00978 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.53284 moveto
0.02756 0.53284 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.55899 moveto
0.02756 0.55899 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.58515 moveto
0.02756 0.58515 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.6113 moveto
0.02756 0.6113 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
stroke
stroke
stroke
stroke
0.17885 0 moveto
0.18254 0.0229 lineto
stroke
0.18254 0.0229 moveto
0.22222 0.19786 lineto
0.24206 0.26067 lineto
0.2619 0.30832 lineto
0.27183 0.3268 lineto
0.28175 0.3419 lineto
0.29167 0.35376 lineto
0.30159 0.36256 lineto
0.30655 0.36587 lineto
0.31151 0.36846 lineto
0.31647 0.37038 lineto
0.31895 0.37109 lineto
0.32143 0.37163 lineto
0.32267 0.37185 lineto
0.32391 0.37202 lineto
0.32515 0.37216 lineto
0.32639 0.37225 lineto
0.32763 0.37231 lineto
0.32887 0.37233 lineto
0.33011 0.37232 lineto
0.33135 0.37226 lineto
0.33259 0.37217 lineto
0.33383 0.37205 lineto
0.33631 0.37169 lineto
0.33879 0.37119 lineto
0.34127 0.37055 lineto
0.34623 0.36888 lineto
0.35119 0.3667 lineto
0.36111 0.36092 lineto
0.38095 0.34455 lineto
0.42063 0.29988 lineto
0.44048 0.27633 lineto
0.46032 0.25558 lineto
0.47024 0.24721 lineto
0.48016 0.24072 lineto
0.48512 0.23831 lineto
0.4876 0.23734 lineto
0.49008 0.23653 lineto
0.49256 0.2359 lineto
0.4938 0.23565 lineto
0.49504 0.23544 lineto
0.49628 0.23528 lineto
0.49752 0.23517 lineto
0.49876 0.23511 lineto
0.5 0.2351 lineto
0.50124 0.23514 lineto
0.50248 0.23523 lineto
0.50372 0.23537 lineto
0.50496 0.23556 lineto
0.5062 0.23581 lineto
Mistroke
0.50744 0.23612 lineto
0.50992 0.2369 lineto
0.5124 0.2379 lineto
0.51488 0.23915 lineto
0.51984 0.2424 lineto
0.5248 0.2467 lineto
0.52976 0.25212 lineto
0.53968 0.26657 lineto
0.5496 0.2863 lineto
0.55952 0.31183 lineto
0.57937 0.38259 lineto
0.58929 0.42896 lineto
0.59921 0.48343 lineto
Mfstroke
0.61891 0.61803 moveto
0.59921 0.48343 lineto
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 532 1068 a Fi(Fig)p Fq(.)15 b(19.)k(Result)c(of)g
Fk(Plot[f[x],)22 b Fg(f)p Fk(x,)i(0,)f(1)p Fg(g)p Fk(])p Fq(.)128
1208 y(e\))g(Figure)13 b(19)f(rev)o(eals)h(that)f(the)h(curv)o(e)g(is)g
(nearly)g(\015at)f(there,)h(so)g(the)g(tangen)o(t)f(in)o(tersects)h(far)f(a)o
(w)o(a)o(y)l(.)189 1265 y(Since)i(the)f(deriv)m(ativ)o(e)h(turns)f(out)g(to)f
(b)q(e)h(sligh)o(tly)i(p)q(ositiv)o(e)e(\()p Fk(f'[0.5])f Fq(pro)q(duces)i
(0.000757396\))o(,)189 1321 y(the)k(tangen)o(t)f(hits)i(far)f(a)o(w)o(a)o(y)e
(to)i(the)g(righ)o(t)g(and)h(as)e(in)j(the)e(previous)h(case,)f(w)o(e)g(marc)
o(h)g(o\013)g(to)189 1378 y(+)p Fg(1)p Fq(.)131 1472 y(f)t(\))k(Iterations)17
b(div)o(erge)h(to)f Fg(\0001)p Fq(.)27 b(Figures)18 b(20)e(and)i(17)f(rev)o
(eal)g(that)g(indeed)i(successiv)o(e)g(tangen)o(ts)189 1528
y(in)o(tersect)c(the)g Fh(x)p Fq(-axis)h(at)e(more)h(and)h(more)e(negativ)o
(e)i Fh(x)p Fq(-v)m(alues.)639 2002 y @beginspecial 0 @llx
0 @lly 282 @urx 174 @ury 1614 @rwi @setspecial
%%BeginDocument: near-1.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.97619 0.31746 0.603319 0.159066 [
[(-3)] 0.02381 0.60332 0 2 Msboxa
[(-2.5)] 0.18254 0.60332 0 2 Msboxa
[(-2)] 0.34127 0.60332 0 2 Msboxa
[(-1.5)] 0.5 0.60332 0 2 Msboxa
[(-1)] 0.65873 0.60332 0 2 Msboxa
[(-0.5)] 0.81746 0.60332 0 2 Msboxa
[(-3.5)] 0.96369 0.04659 1 0 Msboxa
[(-3)] 0.96369 0.12612 1 0 Msboxa
[(-2.5)] 0.96369 0.20565 1 0 Msboxa
[(-2)] 0.96369 0.28519 1 0 Msboxa
[(-1.5)] 0.96369 0.36472 1 0 Msboxa
[(-1)] 0.96369 0.44425 1 0 Msboxa
[(-0.5)] 0.96369 0.52379 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.60332 moveto
0.02381 0.60957 lineto
stroke
grestore
[(-3)] 0.02381 0.60332 0 2 Mshowa
gsave
0.002 setlinewidth
0.18254 0.60332 moveto
0.18254 0.60957 lineto
stroke
grestore
[(-2.5)] 0.18254 0.60332 0 2 Mshowa
gsave
0.002 setlinewidth
0.34127 0.60332 moveto
0.34127 0.60957 lineto
stroke
grestore
[(-2)] 0.34127 0.60332 0 2 Mshowa
gsave
0.002 setlinewidth
0.5 0.60332 moveto
0.5 0.60957 lineto
stroke
grestore
[(-1.5)] 0.5 0.60332 0 2 Mshowa
gsave
0.002 setlinewidth
0.65873 0.60332 moveto
0.65873 0.60957 lineto
stroke
grestore
[(-1)] 0.65873 0.60332 0 2 Mshowa
gsave
0.002 setlinewidth
0.81746 0.60332 moveto
0.81746 0.60957 lineto
stroke
grestore
[(-0.5)] 0.81746 0.60332 0 2 Mshowa
gsave
0.001 setlinewidth
0.05556 0.60332 moveto
0.05556 0.60707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.0873 0.60332 moveto
0.0873 0.60707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.60332 moveto
0.11905 0.60707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.15079 0.60332 moveto
0.15079 0.60707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.60332 moveto
0.21429 0.60707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.24603 0.60332 moveto
0.24603 0.60707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.27778 0.60332 moveto
0.27778 0.60707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.60332 moveto
0.30952 0.60707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.37302 0.60332 moveto
0.37302 0.60707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.60332 moveto
0.40476 0.60707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.43651 0.60332 moveto
0.43651 0.60707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46825 0.60332 moveto
0.46825 0.60707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53175 0.60332 moveto
0.53175 0.60707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56349 0.60332 moveto
0.56349 0.60707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.60332 moveto
0.59524 0.60707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.62698 0.60332 moveto
0.62698 0.60707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.60332 moveto
0.69048 0.60707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72222 0.60332 moveto
0.72222 0.60707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.75397 0.60332 moveto
0.75397 0.60707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.60332 moveto
0.78571 0.60707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84921 0.60332 moveto
0.84921 0.60707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.60332 moveto
0.88095 0.60707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9127 0.60332 moveto
0.9127 0.60707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.94444 0.60332 moveto
0.94444 0.60707 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.60332 moveto
1 0.60332 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.97619 0.04659 moveto
0.98244 0.04659 lineto
stroke
grestore
[(-3.5)] 0.96369 0.04659 1 0 Mshowa
gsave
0.002 setlinewidth
0.97619 0.12612 moveto
0.98244 0.12612 lineto
stroke
grestore
[(-3)] 0.96369 0.12612 1 0 Mshowa
gsave
0.002 setlinewidth
0.97619 0.20565 moveto
0.98244 0.20565 lineto
stroke
grestore
[(-2.5)] 0.96369 0.20565 1 0 Mshowa
gsave
0.002 setlinewidth
0.97619 0.28519 moveto
0.98244 0.28519 lineto
stroke
grestore
[(-2)] 0.96369 0.28519 1 0 Mshowa
gsave
0.002 setlinewidth
0.97619 0.36472 moveto
0.98244 0.36472 lineto
stroke
grestore
[(-1.5)] 0.96369 0.36472 1 0 Mshowa
gsave
0.002 setlinewidth
0.97619 0.44425 moveto
0.98244 0.44425 lineto
stroke
grestore
[(-1)] 0.96369 0.44425 1 0 Mshowa
gsave
0.002 setlinewidth
0.97619 0.52379 moveto
0.98244 0.52379 lineto
stroke
grestore
[(-0.5)] 0.96369 0.52379 1 0 Mshowa
gsave
0.001 setlinewidth
0.97619 0.06249 moveto
0.97994 0.06249 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.0784 moveto
0.97994 0.0784 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.09431 moveto
0.97994 0.09431 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.11021 moveto
0.97994 0.11021 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.14203 moveto
0.97994 0.14203 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.15793 moveto
0.97994 0.15793 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.17384 moveto
0.97994 0.17384 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.18975 moveto
0.97994 0.18975 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.22156 moveto
0.97994 0.22156 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.23747 moveto
0.97994 0.23747 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.25337 moveto
0.97994 0.25337 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.26928 moveto
0.97994 0.26928 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.30109 moveto
0.97994 0.30109 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.317 moveto
0.97994 0.317 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.33291 moveto
0.97994 0.33291 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.34881 moveto
0.97994 0.34881 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.38063 moveto
0.97994 0.38063 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.39653 moveto
0.97994 0.39653 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.41244 moveto
0.97994 0.41244 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.42835 moveto
0.97994 0.42835 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.46016 moveto
0.97994 0.46016 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.47607 moveto
0.97994 0.47607 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.49197 moveto
0.97994 0.49197 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.50788 moveto
0.97994 0.50788 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.53969 moveto
0.97994 0.53969 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.5556 moveto
0.97994 0.5556 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.57151 moveto
0.97994 0.57151 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.58741 moveto
0.97994 0.58741 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.03068 moveto
0.97994 0.03068 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.01478 moveto
0.97994 0.01478 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.97619 0 moveto
0.97619 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.59223 moveto
0.06349 0.59039 lineto
0.10317 0.58812 lineto
0.14286 0.5853 lineto
0.18254 0.58174 lineto
0.22222 0.57721 lineto
0.2619 0.57136 lineto
0.30159 0.56366 lineto
0.34127 0.5534 lineto
0.38095 0.53945 lineto
0.42063 0.52015 lineto
0.44048 0.50776 lineto
0.46032 0.49302 lineto
0.48016 0.47543 lineto
0.5 0.4544 lineto
0.53968 0.39941 lineto
0.57937 0.32302 lineto
0.61905 0.22465 lineto
0.65873 0.11817 lineto
0.67857 0.07208 lineto
0.68849 0.0531 lineto
0.69841 0.03759 lineto
0.70337 0.03127 lineto
0.70833 0.02595 lineto
0.71329 0.02165 lineto
0.71577 0.01989 lineto
0.71825 0.01839 lineto
0.72073 0.01715 lineto
0.72321 0.01617 lineto
0.72445 0.01577 lineto
0.72569 0.01544 lineto
0.72693 0.01517 lineto
0.72817 0.01496 lineto
0.72941 0.01482 lineto
0.73065 0.01474 lineto
0.73189 0.01472 lineto
0.73313 0.01475 lineto
0.73438 0.01485 lineto
0.73562 0.01501 lineto
0.73686 0.01523 lineto
0.7381 0.0155 lineto
0.74058 0.01622 lineto
0.74306 0.01717 lineto
0.74802 0.0197 lineto
0.75298 0.02303 lineto
0.75794 0.0271 lineto
0.77778 0.04946 lineto
0.81746 0.10997 lineto
0.85714 0.17138 lineto
0.89683 0.22215 lineto
Mistroke
0.91667 0.24259 lineto
0.93651 0.25978 lineto
0.97619 0.28519 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 520 2088 a Fi(Fig)p Fq(.)f(20.)k(Result)c(of)g
Fk(Plot[f[x],)23 b Fg(f)p Fk(x,)g(-3,)g(0)p Fg(g)p Fk(])p Fq(.)75
2237 y Fn(Exercise)17 b(7.)j Fq(Starting)15 b(v)m(alue)h(can)g(matter;)d(m)o
(ust)i(b)q(e)h(\\su\016cien)o(tly)g(close")g(to)e(desired)j(ro)q(ot.)75
2314 y Fn(Exercise)j(8.)26 b Fq(Exercise)18 b(5)f(sho)o(w)o(ed)g(that)g(4)g
(iterations)h(did)g(the)g(job)f(for)f(the)i(7)f(cases)g(tried.)27
b(T)l(o)17 b(b)q(e)75 2370 y(sure)g(that)e(4)i(w)o(ould)f(alw)o(a)o(ys)g(b)q
(e)h(enough,)g(one)g(could)g(rep)q(eat)g(the)f(exp)q(erimen)o(t)i(with)f(a)f
(smaller)h(step)75 2427 y(size.)p eop
%%Page: 39 39
39 38 bop 75 -103 a Fm(Snell's)21 b(La)n(w)j(and)f(Other)g(Applications)p
75 -85 1069 2 v 684 w Fq(39)606 49 y Fn(PURPOSE)18 b(OF)g(THE)g(PR)o(OJECT)
146 150 y Fq(Uses)d(Newton's)f(metho)q(d)i(to)e(solv)o(e)i(sev)o(eral)f
(applied)i(problems.)75 226 y Fn(Shorter)g(Pro)s(ject)p Fq(:)j(Drop)14
b(an)o(y)h(com)o(bination)h(of)f(1,)f(4,)h(7.)577 349 y Fn(ANSWERS)i(F)o(OR)h
(INSTR)o(UCTORS)75 450 y(Exercise)f(1.)j Fq(Since)d Fh(\013)c
Fq(=)g Fh(\014)r Fq(,)h(also)i(cot)7 b Fh(\013)13 b Fq(=)g(cot)7
b Fh(\014)r Fq(.)20 b(Th)o(us,)15 b(w)o(e)f(get)h(the)h(simple)g
Fl(line)n(ar)j Fq(equation,)864 531 y Fh(x)p 864 551 26 2 v
865 593 a(a)908 562 y Fq(=)961 531 y Fh(L)10 b Fg(\000)g Fh(x)p
961 551 113 2 v 1007 593 a(b)1078 562 y(;)75 668 y Fq(with)16
b(solution)g Fh(x)c Fq(=)h Fh(aL=)p Fq(\()p Fh(a)d Fq(+)g Fh(b)p
Fq(\).)19 b(F)l(or)c(the)g(giv)o(en)h(v)m(alues,)g(this)f(giv)o(es)h(100)e
(as)h(adv)o(ertised.)75 743 y Fn(Exercise)i(2.)577 809 y Fq(cos)698
779 y Fh(s)p 650 799 117 2 v 650 840 a(R)10 b Fq(+)h Fh(x)784
809 y Fq(=)878 779 y Fh(R)f Fq(+)g Fh(x)p 837 799 199 2 v 837
840 a(R)g Fq(+)h Fh(h)f Fq(+)g Fh(x)1040 809 y(;)98 b(R)13
b Fq(=)g(80000)p Fh(:)639 1329 y @beginspecial 0 @llx 0 @lly
282 @urx 174 @ury 1614 @rwi @setspecial
%%BeginDocument: snell.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
-0.928571 0.31746 0.091217 0.004693 [
[(3.5)] 0.18254 0.09122 0 2 Msboxa
[(4)] 0.34127 0.09122 0 2 Msboxa
[(4.5)] 0.5 0.09122 0 2 Msboxa
[(5)] 0.65873 0.09122 0 2 Msboxa
[(5.5)] 0.81746 0.09122 0 2 Msboxa
[(6)] 0.97619 0.09122 0 2 Msboxa
[(20)] 0.01131 0.18507 1 0 Msboxa
[(40)] 0.01131 0.27892 1 0 Msboxa
[(60)] 0.01131 0.37277 1 0 Msboxa
[(80)] 0.01131 0.46662 1 0 Msboxa
[(100)] 0.01131 0.56047 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.18254 0.09122 moveto
0.18254 0.09747 lineto
stroke
grestore
[(3.5)] 0.18254 0.09122 0 2 Mshowa
gsave
0.002 setlinewidth
0.34127 0.09122 moveto
0.34127 0.09747 lineto
stroke
grestore
[(4)] 0.34127 0.09122 0 2 Mshowa
gsave
0.002 setlinewidth
0.5 0.09122 moveto
0.5 0.09747 lineto
stroke
grestore
[(4.5)] 0.5 0.09122 0 2 Mshowa
gsave
0.002 setlinewidth
0.65873 0.09122 moveto
0.65873 0.09747 lineto
stroke
grestore
[(5)] 0.65873 0.09122 0 2 Mshowa
gsave
0.002 setlinewidth
0.81746 0.09122 moveto
0.81746 0.09747 lineto
stroke
grestore
[(5.5)] 0.81746 0.09122 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.09122 moveto
0.97619 0.09747 lineto
stroke
grestore
[(6)] 0.97619 0.09122 0 2 Mshowa
gsave
0.001 setlinewidth
0.05556 0.09122 moveto
0.05556 0.09497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.0873 0.09122 moveto
0.0873 0.09497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.09122 moveto
0.11905 0.09497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.15079 0.09122 moveto
0.15079 0.09497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.09122 moveto
0.21429 0.09497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.24603 0.09122 moveto
0.24603 0.09497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.27778 0.09122 moveto
0.27778 0.09497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.09122 moveto
0.30952 0.09497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.37302 0.09122 moveto
0.37302 0.09497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.09122 moveto
0.40476 0.09497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.43651 0.09122 moveto
0.43651 0.09497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46825 0.09122 moveto
0.46825 0.09497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53175 0.09122 moveto
0.53175 0.09497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56349 0.09122 moveto
0.56349 0.09497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.09122 moveto
0.59524 0.09497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.62698 0.09122 moveto
0.62698 0.09497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.09122 moveto
0.69048 0.09497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72222 0.09122 moveto
0.72222 0.09497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.75397 0.09122 moveto
0.75397 0.09497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.09122 moveto
0.78571 0.09497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84921 0.09122 moveto
0.84921 0.09497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.09122 moveto
0.88095 0.09497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9127 0.09122 moveto
0.9127 0.09497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.94444 0.09122 moveto
0.94444 0.09497 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.09122 moveto
1 0.09122 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0.18507 moveto
0.03006 0.18507 lineto
stroke
grestore
[(20)] 0.01131 0.18507 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.27892 moveto
0.03006 0.27892 lineto
stroke
grestore
[(40)] 0.01131 0.27892 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.37277 moveto
0.03006 0.37277 lineto
stroke
grestore
[(60)] 0.01131 0.37277 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.46662 moveto
0.03006 0.46662 lineto
stroke
grestore
[(80)] 0.01131 0.46662 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.56047 moveto
0.03006 0.56047 lineto
stroke
grestore
[(100)] 0.01131 0.56047 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.01614 moveto
0.02756 0.01614 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.03491 moveto
0.02756 0.03491 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.05368 moveto
0.02756 0.05368 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.07245 moveto
0.02756 0.07245 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.10999 moveto
0.02756 0.10999 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.12876 moveto
0.02756 0.12876 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.14753 moveto
0.02756 0.14753 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.1663 moveto
0.02756 0.1663 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.20384 moveto
0.02756 0.20384 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.22261 moveto
0.02756 0.22261 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.24138 moveto
0.02756 0.24138 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.26015 moveto
0.02756 0.26015 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.29769 moveto
0.02756 0.29769 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.31646 moveto
0.02756 0.31646 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.33523 moveto
0.02756 0.33523 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.354 moveto
0.02756 0.354 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.39154 moveto
0.02756 0.39154 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.41031 moveto
0.02756 0.41031 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.42908 moveto
0.02756 0.42908 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.44785 moveto
0.02756 0.44785 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.48539 moveto
0.02756 0.48539 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.50416 moveto
0.02756 0.50416 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.52293 moveto
0.02756 0.52293 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.5417 moveto
0.02756 0.5417 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.57924 moveto
0.02756 0.57924 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.59801 moveto
0.02756 0.59801 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.61678 moveto
0.02756 0.61678 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.19445 moveto
0.06349 0.16502 lineto
0.10317 0.13585 lineto
0.14286 0.10774 lineto
0.18254 0.08154 lineto
0.22222 0.05821 lineto
0.2619 0.03877 lineto
0.28175 0.03086 lineto
0.30159 0.02435 lineto
0.31151 0.02167 lineto
0.32143 0.01939 lineto
0.33135 0.01754 lineto
0.33631 0.01678 lineto
0.34127 0.01614 lineto
0.34623 0.01561 lineto
0.34871 0.01539 lineto
0.35119 0.0152 lineto
0.35367 0.01504 lineto
0.35615 0.01491 lineto
0.35739 0.01486 lineto
0.35863 0.01482 lineto
0.35987 0.01478 lineto
0.36111 0.01475 lineto
0.36235 0.01473 lineto
0.36359 0.01472 lineto
0.36483 0.01472 lineto
0.36607 0.01472 lineto
0.36731 0.01473 lineto
0.36855 0.01475 lineto
0.36979 0.01478 lineto
0.37103 0.01481 lineto
0.37351 0.01491 lineto
0.37599 0.01504 lineto
0.38095 0.01541 lineto
0.38591 0.01591 lineto
0.39087 0.01655 lineto
0.40079 0.01827 lineto
0.41071 0.02059 lineto
0.42063 0.02352 lineto
0.44048 0.03135 lineto
0.46032 0.04193 lineto
0.48016 0.05547 lineto
0.5 0.07215 lineto
0.53968 0.1158 lineto
0.57937 0.17456 lineto
0.61905 0.25022 lineto
0.65873 0.34461 lineto
0.69841 0.45969 lineto
0.7381 0.59748 lineto
stroke
0.74311 0.61803 moveto
0.7381 0.59748 lineto
stroke
stroke
stroke
stroke
stroke
stroke
stroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 586 1415 a Fi(Fig)p Fq(.)i(21.)k(Plot)d(of)e(function)i(in)g
(Exercise)g(3.)75 1498 y Fn(Exercise)h(3.)126 1603 y Fq(a\))22
b(See)15 b(Figure)h(21.)123 1694 y(b\))23 b(The)15 b(relev)m(an)o(t)h(domain)
g(is)g([0)p Fh(;)8 b(L)p Fq(])j(=)i([0)p Fh(;)8 b Fq(4],)13
b(so)i(the)h(ro)q(ot)e(near)i(4.5)e(is)i(extraneous)f(and)h(only)g(the)189
1750 y(one)f(near)g(3.4)f(is)i(of)f(in)o(terest)g(here.)128
1834 y(c\))23 b(The)15 b(ro)q(ot)f(is)i(3.45246:)189 1931 y
Fj(signif)k(=)i(6;)189 1981 y(niter)e(=)i(8;)189 2031 y(xn)f(=)h(3.4;)189
2081 y(Do[)276 2130 y(xn)f(=)h(xn)f(-)h(f[xn]/f'[xn];)276 2180
y(Print[)e(N[xn,)h(signif])f(],)189 2230 y({niter}])189 2280
y(3.45155)189 2330 y(3.45246)189 2380 y(3.45246)189 2429 y(3.45246)189
2479 y(3.45246)189 2529 y(3.45246)189 2579 y(3.45246)189 2629
y(3.45246)p eop
%%Page: 40 40
40 39 bop 75 -103 a Fq(40)685 b Fm(Snell's)22 b(La)n(w)h(and)h(Other)e
(Applications)p 806 -85 1069 2 v 639 419 a @beginspecial 0
@llx 0 @lly 282 @urx 174 @ury 1614 @rwi @setspecial
%%BeginDocument: zero.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
-2.833333 0.952381 0.328728 0.012481 [
[(3.2)] 0.21429 0.32873 0 2 Msboxa
[(3.4)] 0.40476 0.32873 0 2 Msboxa
[(3.6)] 0.59524 0.32873 0 2 Msboxa
[(3.8)] 0.78571 0.32873 0 2 Msboxa
[(4)] 0.97619 0.32873 0 2 Msboxa
[(-20)] 0.01131 0.0791 1 0 Msboxa
[(-10)] 0.01131 0.20391 1 0 Msboxa
[(10)] 0.01131 0.45354 1 0 Msboxa
[(20)] 0.01131 0.57836 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.21429 0.32873 moveto
0.21429 0.33498 lineto
stroke
grestore
[(3.2)] 0.21429 0.32873 0 2 Mshowa
gsave
0.002 setlinewidth
0.40476 0.32873 moveto
0.40476 0.33498 lineto
stroke
grestore
[(3.4)] 0.40476 0.32873 0 2 Mshowa
gsave
0.002 setlinewidth
0.59524 0.32873 moveto
0.59524 0.33498 lineto
stroke
grestore
[(3.6)] 0.59524 0.32873 0 2 Mshowa
gsave
0.002 setlinewidth
0.78571 0.32873 moveto
0.78571 0.33498 lineto
stroke
grestore
[(3.8)] 0.78571 0.32873 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.32873 moveto
0.97619 0.33498 lineto
stroke
grestore
[(4)] 0.97619 0.32873 0 2 Mshowa
gsave
0.001 setlinewidth
0.0619 0.32873 moveto
0.0619 0.33248 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1 0.32873 moveto
0.1 0.33248 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1381 0.32873 moveto
0.1381 0.33248 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.17619 0.32873 moveto
0.17619 0.33248 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.25238 0.32873 moveto
0.25238 0.33248 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29048 0.32873 moveto
0.29048 0.33248 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.32857 0.32873 moveto
0.32857 0.33248 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36667 0.32873 moveto
0.36667 0.33248 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44286 0.32873 moveto
0.44286 0.33248 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.48095 0.32873 moveto
0.48095 0.33248 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.51905 0.32873 moveto
0.51905 0.33248 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.55714 0.32873 moveto
0.55714 0.33248 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63333 0.32873 moveto
0.63333 0.33248 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.67143 0.32873 moveto
0.67143 0.33248 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.70952 0.32873 moveto
0.70952 0.33248 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.74762 0.32873 moveto
0.74762 0.33248 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.82381 0.32873 moveto
0.82381 0.33248 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.8619 0.32873 moveto
0.8619 0.33248 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9 0.32873 moveto
0.9 0.33248 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9381 0.32873 moveto
0.9381 0.33248 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.32873 moveto
1 0.32873 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0.0791 moveto
0.03006 0.0791 lineto
stroke
grestore
[(-20)] 0.01131 0.0791 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.20391 moveto
0.03006 0.20391 lineto
stroke
grestore
[(-10)] 0.01131 0.20391 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.45354 moveto
0.03006 0.45354 lineto
stroke
grestore
[(10)] 0.01131 0.45354 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.57836 moveto
0.03006 0.57836 lineto
stroke
grestore
[(20)] 0.01131 0.57836 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.10406 moveto
0.02756 0.10406 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.12902 moveto
0.02756 0.12902 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.15399 moveto
0.02756 0.15399 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.17895 moveto
0.02756 0.17895 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.22888 moveto
0.02756 0.22888 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.25384 moveto
0.02756 0.25384 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.2788 moveto
0.02756 0.2788 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.30376 moveto
0.02756 0.30376 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.35369 moveto
0.02756 0.35369 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.37865 moveto
0.02756 0.37865 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.40362 moveto
0.02756 0.40362 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.42858 moveto
0.02756 0.42858 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.4785 moveto
0.02756 0.4785 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.50347 moveto
0.02756 0.50347 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.52843 moveto
0.02756 0.52843 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.55339 moveto
0.02756 0.55339 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.05414 moveto
0.02756 0.05414 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.02917 moveto
0.02756 0.02917 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.00421 moveto
0.02756 0.00421 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.60332 moveto
0.02756 0.60332 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.60332 moveto
0.06349 0.57726 lineto
0.10317 0.55114 lineto
0.14286 0.52503 lineto
0.18254 0.49899 lineto
0.22222 0.4731 lineto
0.2619 0.44745 lineto
0.30159 0.4221 lineto
0.34127 0.39714 lineto
0.38095 0.37267 lineto
0.42063 0.34875 lineto
0.46032 0.32549 lineto
0.5 0.30298 lineto
0.53968 0.28132 lineto
0.57937 0.2606 lineto
0.61905 0.24093 lineto
0.65873 0.2224 lineto
0.69841 0.20514 lineto
0.7381 0.18924 lineto
0.77778 0.17482 lineto
0.81746 0.16199 lineto
0.85714 0.15088 lineto
0.89683 0.14159 lineto
0.93651 0.13427 lineto
0.97619 0.12902 lineto
stroke
grestore
grestore
gsave
gsave
0.004 setlinewidth
0.02381 0.58726 moveto
0.06349 0.56341 lineto
0.10317 0.53955 lineto
0.14286 0.51569 lineto
0.18254 0.49184 lineto
0.22222 0.46798 lineto
0.2619 0.44413 lineto
0.30159 0.42027 lineto
0.34127 0.39641 lineto
0.38095 0.37256 lineto
0.42063 0.3487 lineto
0.46032 0.32485 lineto
0.5 0.30099 lineto
0.53968 0.27713 lineto
0.57937 0.25328 lineto
0.61905 0.22942 lineto
0.65873 0.20556 lineto
0.69841 0.18171 lineto
0.7381 0.15785 lineto
0.77778 0.134 lineto
0.81746 0.11014 lineto
0.85714 0.08628 lineto
0.89683 0.06243 lineto
0.93651 0.03857 lineto
0.97619 0.01472 lineto
stroke
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 547 505 a Fi(Fig)p Fq(.)15 b(22.)k(Plot)c(sho)o(wing)g(\014rst)g
(Newton)g(iterate.)123 728 y(d\))23 b(The)15 b(co)q(de:)189
831 y Fj(a)21 b(=)h(3.4;)189 881 y(tangent)e(=)i(f[a])f(+)g(f'[a]\(x)f(-)i
(a\);)189 931 y(Plot[{f[x],)d(tangent},)h({x,)h(3,)h(4}])189
1041 y Fq(pro)q(duces)16 b(Figure)f(22.)75 1146 y Fn(Exercise)i(4.)j
Fq(The)15 b(tric)o(k)h(is)f(to)g(use)g Fk(Expand)p Fq(:)75
1252 y Fj(d1)21 b(=)h(Sqrt[a^2)e(+)i(x^2];)75 1301 y(d2)f(=)h(Sqrt[\(L-x\)^2)
d(+)j(b^2];)75 1351 y(eqn)f(=)h(\(c2)f(x)h(d2\)^2)e(-)i(\(c1)f(\(L)g(-)h(x\))
f(d1\)^2)g(//Expand)162 1451 y(2)65 b(2)44 b(2)152 b(2)65 b(2)174
b(2)66 b(2)43 b(2)87 b(2)65 b(2)43 b(2)162 1501 y(-\(a)g(c1)g(L)22
b(\))f(+)h(2)g(a)43 b(c1)g(L)22 b(x)f(-)h(a)43 b(c1)h(x)f(+)21
b(b)44 b(c2)f(x)g(-)249 1600 y(2)h(2)f(2)109 b(2)43 b(2)h(2)152
b(2)87 b(3)152 b(2)87 b(3)206 1650 y(c1)43 b(L)g(x)h(+)21 b(c2)43
b(L)h(x)f(+)22 b(2)f(c1)44 b(L)21 b(x)44 b(-)21 b(2)h(c2)43
b(L)21 b(x)44 b(-)249 1750 y(2)g(4)108 b(2)44 b(4)206 1800
y(c1)f(x)g(+)22 b(c2)43 b(x)75 1925 y Fn(Exercise)17 b(5.)j
Fq(W)l(e)15 b(get)g Fh(x)e Fq(=)g Fh(:)p Fq(8333)g(and)j(so)f
Fh(r)e Fq(=)g(80000)p Fh(:)p Fq(8333:)75 2031 y Fj(s)22 b(=)f(400;)g(h)h(=)f
(1;)h(R)f(=)h(80000;)75 2081 y(F[x_])f(:=)g(Cos[s/\(R)f(+)i(x\)])f(-)h(\(R)f
(+)h(x\)/\(R)e(+)i(x)g(+)f(h\))75 2130 y(signif)g(=)g(4;)75
2180 y(niter)g(=)g(8;)75 2230 y(xn)g(=)h(0.0;)75 2280 y(Do[)162
2330 y(xn)g(=)f(xn)h(-)f(F[xn]/F'[xn];)162 2380 y(Print[)g(N[xn,)f(signif])h
(],)75 2429 y({niter}])75 2479 y(0.8333)75 2529 y(0.8333)75
2579 y(0.8333)75 2629 y(0.8333)p eop
%%Page: 41 41
41 40 bop 75 -103 a Fm(Snell's)21 b(La)n(w)j(and)f(Other)g(Applications)p
75 -85 1069 2 v 684 w Fq(41)75 49 y Fj(0.8333)75 99 y(0.8333)75
149 y(0.8333)75 199 y(0.8333)75 327 y Fn(Exercise)17 b(6.)j
Fq(Return)15 b(to)f(the)i(original)g(v)m(ariables:)75 435 y
Fj(s)22 b(=)f(400;)g(h)h(=)f(1;)75 485 y(f[r_])g(:=)g(Cos[s/r])f(-)i(r/\(r)f
(+)g(h\))75 600 y Fq(Using)15 b(some)f(preliminary)i(graphing)f(and)f(the)h
(usual)g(lo)q(op,)g(w)o(e)f(\014nd)h Fh(r)e Fq(=)g(61)p Fh(:)p
Fq(9029)f(and)j Fh(r)e Fq(=)g(65)p Fh(:)p Fq(4717.)75 677 y(The)21
b(smaller)h(ro)q(ots)e(corresp)q(ond)i(to)e(the)i(case)f(in)h(whic)o(h)g(the)
f(400)7 b(m)20 b(trek)h(tak)o(es)g(us)g(all)h(the)f(w)o(a)o(y)75
733 y(around)14 b(the)g(asteroid)h(one)f(or)f(more)h(times.)20
b(These)15 b(ro)q(ots)e(o)q(ccur)h(in)h(pairs)g(corresp)q(onding)g(to)f
(\(a\))f(the)75 790 y(tra)o(v)o(eling)k(astronaut)f(b)q(eing)j(just)e
Fl(b)n(ehind)k Fq(the)c(stationary)f(one)i(\(he)f(lo)q(oks)g(the)h(\\other)e
(w)o(a)o(y")g(to)h(see)75 846 y(her\))h(and)h(\(b\))e(tromping)i(o)o(v)o(er)e
(him,)i(b)q(efore)g(disapp)q(earing)h(o)o(v)o(er)d(the)i(horizon)f(again.)29
b(Indeed,)21 b(for)75 903 y(the)d(ro)q(ot)f Fh(r)h Fq(=)f(65)p
Fh(:)p Fq(5,)g(the)h(corresp)q(onding)h(circumference)h(is)e(2)p
Fh(\031)r(r)f Fq(=)h(411)p Fh(:)p Fq(5,)e(and)i(sure)g(enough,)h(the)75
959 y(tra)o(v)o(eling)13 b(astronaut)g(is)h(only)g(11.5)6 b(m)13
b Fl(b)n(ehind)18 b Fq(the)13 b(starting)g(p)q(oin)o(t.)20
b(Similarly)l(,)c(for)c(the)i(next)f(smallest)75 1016 y(ro)q(ot,)i
Fh(r)h Fq(=)f(61)p Fh(:)p Fq(9,)g(the)h(circumference)i(is)f(388.9,)e(and)i
(no)o(w)f(in)h(w)o(alking)g(400)6 b(m,)17 b(she)f(has)h(tramp)q(ed)f(all)75
1072 y(the)f(w)o(a)o(y)f(around)i(the)f(asteroid)g Fl(plus)k
Fq(an)c(additional)h(11.1)7 b(m!)75 1149 y Fn(Exercise)17 b(7.)j
Fq(The)15 b(deriv)m(ativ)o(e)i(equated)e(to)g(zero)g(giv)o(es)g(the)h
(equation)772 1234 y Fh(x)p 694 1255 183 2 v 694 1263 a Fg(p)p
731 1263 145 2 v 731 1302 a Fh(a)755 1288 y Fe(2)785 1302 y
Fq(+)11 b Fh(x)857 1288 y Fe(2)894 1265 y Fq(=)1043 1234 y
Fh(a)f Fg(\000)g Fh(x)p 947 1255 297 2 v 947 1263 a Fd(p)p
988 1263 256 2 v 988 1300 a Fq(\()p Fh(a)g Fg(\000)h Fh(x)p
Fq(\))1130 1287 y Fe(2)1159 1300 y Fq(+)g Fh(b)1225 1287 y
Fe(2)1249 1265 y Fh(:)75 1393 y Fq(This)22 b(equation)h(is)f(equiv)m(alen)o
(t)i(to)d(cos)7 b Fh(\013)24 b Fq(=)g(cos)8 b Fh(\014)r Fq(,)23
b(whic)o(h)f(for)g(acute)f(angles)i(implies)h Fh(\013)g Fq(=)g
Fh(\014)f Fq(or)75 1449 y(equiv)m(alen)o(tly)18 b Fh(\022)349
1456 y Fe(1)381 1449 y Fq(=)13 b Fh(\022)450 1456 y Fe(2)470
1449 y Fq(.)p eop
%%Page: 42 42
42 41 bop 75 -100 a Fq(42)1571 b Fm(Chaos)p 1692 -93 183 2
v 606 49 a Fn(PURPOSE)18 b(OF)g(THE)g(PR)o(OJECT)146 152 y
Fq(Giv)o(es)h(examples)i(when)f(Newton's)e(metho)q(d)i(gets)f(in)o(to)h
(trouble.)33 b(Ma)s(jor)18 b(part)h(of)g(the)h(pro)s(ject)75
208 y(giv)o(es)15 b(an)g(in)o(tro)q(duction)i(to)d(\\c)o(haotic")h(b)q(eha)o
(vior.)75 285 y Fn(Shorter)i(Pro)s(ject)p Fq(:)j(Omit)15 b(5)g(and/or)g(6.)
577 411 y Fn(ANSWERS)i(F)o(OR)h(INSTR)o(UCTORS)75 507 y(Exercise)f(1.)j
Fq(The)15 b(m)o(ystery)g(of)f(the)h(slo)o(w)g(con)o(v)o(ergence)h(is)f
(resolv)o(ed)h(b)o(y)f(kno)o(wing)g(ho)o(w)g(the)g(p)q(olyno-)75
557 y(mial)h(w)o(as)e(deriv)o(ed:)75 664 y Fj(f[x_])21 b(:=)g(27\(x-2/3\)^3)f
(\(x^2)h(+)g(1\)\(x)g(-)h(6\))f(//Expand)75 778 y Fq(Th)o(us,)15
b(w)o(e)f(see)h(that)g(the)g(function)g(has)g(a)g(triple)h(ro)q(ot)e(at)g
Fh(x)f Fq(=)g(2)p Fh(=)p Fq(3.)18 b(Multiple)f(ro)q(ots)d(mak)o(e)h(Newton's)
75 835 y(Metho)q(d)g(lose)h(its)f(quadratic)h(con)o(v)o(ergence.)126
942 y(a\))22 b(Around)15 b(21:)189 1047 y Fj(xn)21 b(=)h(1.0;)189
1097 y(Do[)276 1147 y(xn)f(=)h(xn)f(-)h(f[xn]/f'[xn];)276 1196
y(Print[)e(N[xn,)h(5])g(],)189 1246 y({24}])276 1296 y(0.89796)276
1346 y(0.82533)276 1396 y(0.77456)276 1445 y(0.73957)276 1495
y(0.71572)276 1545 y(0.69957)276 1595 y(0.68869)276 1645 y(0.68139)276
1695 y(0.6765)276 1744 y(0.67323)276 1794 y(0.67105)276 1844
y(0.66959)276 1894 y(0.66861)276 1944 y(0.66797)276 1993 y(0.66753)276
2043 y(0.66724)276 2093 y(0.66705)276 2143 y(0.66692)276 2193
y(0.66684)276 2243 y(0.66678)276 2292 y(0.66674)276 2342 y(0.66672)276
2392 y(0.6667)276 2442 y(0.66669)123 2572 y Fq(b\))i(The)17
b Fk(Plot)g Fq(is)h(in)g(Figure)f(23)g(and)h(sho)o(ws)e(that)h(the)g(region)h
(near)f(the)h(zero)f(is)h(ill-de\014ned|for)189 2629 y(example,)d(an)o(y)g(v)
m(alue)i(in)f([0)p Fh(:)p Fq(65)p Fh(;)8 b Fq(0)p Fh(:)p Fq(7)o(0])k(giv)o
(es)j(a)g(\\small")g(v)m(alue)i(for)d Fh(f)5 b Fq(.)p eop
%%Page: 43 43
43 42 bop 75 -100 a Fm(Chaos)p 75 -93 183 2 v 1573 w Fq(43)639
419 y @beginspecial 0 @llx 0 @lly 282 @urx 174 @ury 1614 @rwi
@setspecial
%%BeginDocument: slowconverge.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.238095 0.23904 0.000555 [
[(-2)] 0.02381 0.23904 0 2 Msboxa
[(-1)] 0.2619 0.23904 0 2 Msboxa
[(1)] 0.7381 0.23904 0 2 Msboxa
[(2)] 0.97619 0.23904 0 2 Msboxa
[(-400)] 0.4875 0.01692 1 0 Msboxa
[(-200)] 0.4875 0.12798 1 0 Msboxa
[(200)] 0.4875 0.3501 1 0 Msboxa
[(400)] 0.4875 0.46116 1 0 Msboxa
[(600)] 0.4875 0.57222 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.23904 moveto
0.02381 0.24529 lineto
stroke
grestore
[(-2)] 0.02381 0.23904 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.23904 moveto
0.2619 0.24529 lineto
stroke
grestore
[(-1)] 0.2619 0.23904 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.23904 moveto
0.7381 0.24529 lineto
stroke
grestore
[(1)] 0.7381 0.23904 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.23904 moveto
0.97619 0.24529 lineto
stroke
grestore
[(2)] 0.97619 0.23904 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.23904 moveto
0.07143 0.24279 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.23904 moveto
0.11905 0.24279 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.23904 moveto
0.16667 0.24279 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.23904 moveto
0.21429 0.24279 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.23904 moveto
0.30952 0.24279 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.23904 moveto
0.35714 0.24279 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.23904 moveto
0.40476 0.24279 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.23904 moveto
0.45238 0.24279 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.23904 moveto
0.54762 0.24279 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.23904 moveto
0.59524 0.24279 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.23904 moveto
0.64286 0.24279 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.23904 moveto
0.69048 0.24279 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.23904 moveto
0.78571 0.24279 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.23904 moveto
0.83333 0.24279 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.23904 moveto
0.88095 0.24279 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.23904 moveto
0.92857 0.24279 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.23904 moveto
1 0.23904 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.01692 moveto
0.50625 0.01692 lineto
stroke
grestore
[(-400)] 0.4875 0.01692 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.12798 moveto
0.50625 0.12798 lineto
stroke
grestore
[(-200)] 0.4875 0.12798 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.3501 moveto
0.50625 0.3501 lineto
stroke
grestore
[(200)] 0.4875 0.3501 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.46116 moveto
0.50625 0.46116 lineto
stroke
grestore
[(400)] 0.4875 0.46116 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.57222 moveto
0.50625 0.57222 lineto
stroke
grestore
[(600)] 0.4875 0.57222 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.03913 moveto
0.50375 0.03913 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.06134 moveto
0.50375 0.06134 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.08356 moveto
0.50375 0.08356 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.10577 moveto
0.50375 0.10577 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.15019 moveto
0.50375 0.15019 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1724 moveto
0.50375 0.1724 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.19462 moveto
0.50375 0.19462 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.21683 moveto
0.50375 0.21683 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.26125 moveto
0.50375 0.26125 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.28346 moveto
0.50375 0.28346 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.30568 moveto
0.50375 0.30568 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.32789 moveto
0.50375 0.32789 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.37231 moveto
0.50375 0.37231 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.39452 moveto
0.50375 0.39452 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.41674 moveto
0.50375 0.41674 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.43895 moveto
0.50375 0.43895 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.48337 moveto
0.50375 0.48337 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.50558 moveto
0.50375 0.50558 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.5278 moveto
0.50375 0.5278 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55001 moveto
0.50375 0.55001 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59443 moveto
0.50375 0.59443 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.61664 moveto
0.50375 0.61664 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
stroke
0.33448 0.61803 moveto
0.34127 0.58127 lineto
stroke
0.34127 0.58127 moveto
0.36111 0.49742 lineto
0.38095 0.43248 lineto
0.40079 0.38259 lineto
0.42063 0.34455 lineto
0.44048 0.31573 lineto
0.46032 0.29403 lineto
0.48016 0.27779 lineto
0.5 0.26569 lineto
0.51984 0.25677 lineto
0.53968 0.25028 lineto
0.5496 0.24776 lineto
0.55952 0.24567 lineto
0.56944 0.24394 lineto
0.57937 0.24254 lineto
0.58929 0.24143 lineto
0.59921 0.24057 lineto
0.60417 0.24024 lineto
0.60913 0.23995 lineto
0.61409 0.23971 lineto
0.61905 0.23952 lineto
0.62401 0.23936 lineto
0.62897 0.23925 lineto
0.63145 0.2392 lineto
0.63393 0.23916 lineto
0.63641 0.23913 lineto
0.63889 0.2391 lineto
0.64137 0.23908 lineto
0.64385 0.23907 lineto
0.64509 0.23906 lineto
0.64633 0.23906 lineto
0.64757 0.23905 lineto
0.64881 0.23905 lineto
0.65005 0.23905 lineto
0.65129 0.23904 lineto
0.65253 0.23904 lineto
0.65377 0.23904 lineto
0.65873 0.23904 lineto
0.65997 0.23904 lineto
0.66121 0.23904 lineto
0.66245 0.23904 lineto
0.66369 0.23904 lineto
0.66493 0.23904 lineto
0.66617 0.23904 lineto
0.66741 0.23903 lineto
0.66865 0.23903 lineto
0.67113 0.23902 lineto
0.67237 0.23902 lineto
0.67361 0.23901 lineto
0.67609 0.23899 lineto
Mistroke
0.67857 0.23897 lineto
0.68105 0.23894 lineto
0.68353 0.2389 lineto
0.68601 0.23885 lineto
0.68849 0.23879 lineto
0.69345 0.23864 lineto
0.69841 0.23843 lineto
0.70337 0.23816 lineto
0.70833 0.23781 lineto
0.71329 0.23738 lineto
0.71825 0.23685 lineto
0.72817 0.23544 lineto
0.7381 0.23349 lineto
0.74802 0.23087 lineto
0.75794 0.22745 lineto
0.76786 0.2231 lineto
0.77778 0.21765 lineto
0.7877 0.21095 lineto
0.79762 0.20282 lineto
0.81746 0.18145 lineto
0.8373 0.15187 lineto
0.85714 0.11214 lineto
0.87698 0.06016 lineto
Mfstroke
0.89492 0 moveto
0.87698 0.06016 lineto
stroke
stroke
stroke
stroke
stroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 491 505 a Fi(Fig)p Fq(.)15 b(23.)20 b(Plot)15
b(of)f(function)i(with)g(triple)g(zero)f(at)g(2/3.)75 647 y
Fn(Exercise)j(2.)j Fq(The)16 b(tangen)o(t)f(is)h(horizon)o(tal)g(at)f
Fh(x)e Fq(=)h Fg(\006)p Fh(s)p Fq(3,)i(so,)f(in)h(practice,)g(the)g(\014rst)f
(iterate)h(will)h(b)q(e)75 704 y(v)o(ery)g(large)h(and)g(Newton)f(will)i(ha)o
(v)o(e)e(to)g(slo)o(wly)h(w)o(ork)f(its)h(w)o(a)o(y)e(bac)o(k)i(in)o(to)f
(the)h(region)g(where)g(ro)q(ots)75 760 y(exist.)24 b(With)17
b(starting)f(v)m(alue)i Fh(x)d Fq(=)g Fg(\006)p Fh(s)p Fq(5,)i(Newton)f
(oscillates)i(b)q(et)o(w)o(een)f Fg(\006)p Fh(s)p Fq(5)g(\\forev)o(er".)23
b(Figures)17 b(24)75 817 y(and)e(25)g(sho)o(w)g(the)g(requested)h
Fk(Plot)p Fq(s.)639 1292 y @beginspecial 0 @llx 0 @lly 282
@urx 174 @ury 1614 @rwi @setspecial
%%BeginDocument: tickplot.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.396825 0.309017 0.55739 [
[(s5)] 0.67747 0.30902 0 2 Msboxa
[(s3)] 0.72911 0.30902 0 2 Msboxa
[(-0.4)] 0.4875 0.08606 1 0 Msboxa
[(-0.2)] 0.4875 0.19754 1 0 Msboxa
[(0.2)] 0.4875 0.42049 1 0 Msboxa
[(0.4)] 0.4875 0.53197 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.27089 0.30902 moveto
0.27089 0.31527 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.32253 0.30902 moveto
0.32253 0.31527 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.67747 0.30902 moveto
0.67747 0.31527 lineto
stroke
grestore
[(s5)] 0.67747 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.72911 0.30902 moveto
0.72911 0.31527 lineto
stroke
grestore
[(s3)] 0.72911 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0 0.30902 moveto
1 0.30902 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.08606 moveto
0.50625 0.08606 lineto
stroke
grestore
[(-0.4)] 0.4875 0.08606 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.19754 moveto
0.50625 0.19754 lineto
stroke
grestore
[(-0.2)] 0.4875 0.19754 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.42049 moveto
0.50625 0.42049 lineto
stroke
grestore
[(0.2)] 0.4875 0.42049 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.53197 moveto
0.50625 0.53197 lineto
stroke
grestore
[(0.4)] 0.4875 0.53197 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.10836 moveto
0.50375 0.10836 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13065 moveto
0.50375 0.13065 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.15295 moveto
0.50375 0.15295 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.17524 moveto
0.50375 0.17524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.21983 moveto
0.50375 0.21983 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.24213 moveto
0.50375 0.24213 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.26443 moveto
0.50375 0.26443 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.28672 moveto
0.50375 0.28672 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.33131 moveto
0.50375 0.33131 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.35361 moveto
0.50375 0.35361 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.3759 moveto
0.50375 0.3759 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.3982 moveto
0.50375 0.3982 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.44279 moveto
0.50375 0.44279 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.46509 moveto
0.50375 0.46509 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.48738 moveto
0.50375 0.48738 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.50968 moveto
0.50375 0.50968 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.06377 moveto
0.50375 0.06377 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.04147 moveto
0.50375 0.04147 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.01917 moveto
0.50375 0.01917 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55427 moveto
0.50375 0.55427 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.57656 moveto
0.50375 0.57656 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59886 moveto
0.50375 0.59886 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.06349 0.18026 lineto
0.10317 0.30902 lineto
0.12302 0.36065 lineto
0.14286 0.40433 lineto
0.1627 0.44049 lineto
0.18254 0.46955 lineto
0.20238 0.49191 lineto
0.2123 0.50072 lineto
0.22222 0.50801 lineto
0.23214 0.51383 lineto
0.2371 0.51621 lineto
0.24206 0.51825 lineto
0.24702 0.51994 lineto
0.25198 0.5213 lineto
0.25694 0.52234 lineto
0.25942 0.52274 lineto
0.2619 0.52305 lineto
0.26438 0.52329 lineto
0.26563 0.52339 lineto
0.26687 0.52346 lineto
0.26811 0.52351 lineto
0.26935 0.52354 lineto
0.27059 0.52356 lineto
0.27183 0.52355 lineto
0.27307 0.52353 lineto
0.27431 0.52349 lineto
0.27555 0.52342 lineto
0.27679 0.52335 lineto
0.27927 0.52313 lineto
0.28175 0.52285 lineto
0.28671 0.52206 lineto
0.29167 0.52099 lineto
0.30159 0.51804 lineto
0.31151 0.51404 lineto
0.32143 0.50905 lineto
0.34127 0.4963 lineto
0.38095 0.46118 lineto
0.42063 0.41604 lineto
0.46032 0.3642 lineto
0.5 0.30902 lineto
0.53968 0.25384 lineto
0.57937 0.202 lineto
0.61905 0.15685 lineto
0.63889 0.13783 lineto
0.65873 0.12173 lineto
0.67857 0.10898 lineto
0.68849 0.10399 lineto
0.69841 0.1 lineto
0.70337 0.09839 lineto
Mistroke
0.70833 0.09704 lineto
0.71329 0.09598 lineto
0.71577 0.09555 lineto
0.71825 0.09519 lineto
0.72073 0.0949 lineto
0.72321 0.09469 lineto
0.72445 0.09461 lineto
0.72569 0.09455 lineto
0.72693 0.09451 lineto
0.72817 0.09448 lineto
0.72941 0.09448 lineto
0.73065 0.09449 lineto
0.73189 0.09453 lineto
0.73313 0.09458 lineto
0.73438 0.09465 lineto
0.73562 0.09474 lineto
0.7381 0.09498 lineto
0.74058 0.0953 lineto
0.74306 0.09569 lineto
0.74802 0.09673 lineto
0.75298 0.09809 lineto
0.75794 0.09979 lineto
0.76786 0.1042 lineto
0.77778 0.11003 lineto
0.79762 0.12612 lineto
0.81746 0.14849 lineto
0.8373 0.17754 lineto
0.85714 0.2137 lineto
0.89683 0.30902 lineto
0.93651 0.43777 lineto
0.97619 0.60332 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 358 1379 a Fi(Fig)p Fq(.)f(24.)k(Plot)c(in)h(critical)h(region)e
(sho)o(wing)g(lo)q(cations)h(of)f(s3)g(and)g(s5.)639 1884 y
@beginspecial 0 @llx 0 @lly 282 @urx 174 @ury 1614 @rwi @setspecial
%%BeginDocument: largerscale.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.119048 0.309017 0.004905 [
[(-4)] 0.02381 0.30902 0 2 Msboxa
[(-2)] 0.2619 0.30902 0 2 Msboxa
[(2)] 0.7381 0.30902 0 2 Msboxa
[(4)] 0.97619 0.30902 0 2 Msboxa
[(-60)] 0.4875 0.01472 1 0 Msboxa
[(-40)] 0.4875 0.11282 1 0 Msboxa
[(-20)] 0.4875 0.21092 1 0 Msboxa
[(20)] 0.4875 0.40712 1 0 Msboxa
[(40)] 0.4875 0.50522 1 0 Msboxa
[(60)] 0.4875 0.60332 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.30902 moveto
0.02381 0.31527 lineto
stroke
grestore
[(-4)] 0.02381 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.30902 moveto
0.2619 0.31527 lineto
stroke
grestore
[(-2)] 0.2619 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.30902 moveto
0.7381 0.31527 lineto
stroke
grestore
[(2)] 0.7381 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.30902 moveto
0.97619 0.31527 lineto
stroke
grestore
[(4)] 0.97619 0.30902 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.30902 moveto
0.07143 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.30902 moveto
0.11905 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.30902 moveto
0.16667 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.30902 moveto
0.21429 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.30902 moveto
0.30952 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.30902 moveto
0.35714 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.30902 moveto
0.40476 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.30902 moveto
0.45238 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.30902 moveto
0.54762 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.30902 moveto
0.59524 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.30902 moveto
0.64286 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.30902 moveto
0.69048 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.30902 moveto
0.78571 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.30902 moveto
0.83333 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.30902 moveto
0.88095 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.30902 moveto
0.92857 0.31277 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.30902 moveto
1 0.30902 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.01472 moveto
0.50625 0.01472 lineto
stroke
grestore
[(-60)] 0.4875 0.01472 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.11282 moveto
0.50625 0.11282 lineto
stroke
grestore
[(-40)] 0.4875 0.11282 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.21092 moveto
0.50625 0.21092 lineto
stroke
grestore
[(-20)] 0.4875 0.21092 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.40712 moveto
0.50625 0.40712 lineto
stroke
grestore
[(20)] 0.4875 0.40712 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.50522 moveto
0.50625 0.50522 lineto
stroke
grestore
[(40)] 0.4875 0.50522 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.60332 moveto
0.50625 0.60332 lineto
stroke
grestore
[(60)] 0.4875 0.60332 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.03434 moveto
0.50375 0.03434 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.05396 moveto
0.50375 0.05396 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.07358 moveto
0.50375 0.07358 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.0932 moveto
0.50375 0.0932 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13244 moveto
0.50375 0.13244 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.15206 moveto
0.50375 0.15206 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.17168 moveto
0.50375 0.17168 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1913 moveto
0.50375 0.1913 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.23054 moveto
0.50375 0.23054 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.25016 moveto
0.50375 0.25016 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.26978 moveto
0.50375 0.26978 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.2894 moveto
0.50375 0.2894 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.32864 moveto
0.50375 0.32864 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.34826 moveto
0.50375 0.34826 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36788 moveto
0.50375 0.36788 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.3875 moveto
0.50375 0.3875 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.42674 moveto
0.50375 0.42674 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.44636 moveto
0.50375 0.44636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.46598 moveto
0.50375 0.46598 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.4856 moveto
0.50375 0.4856 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.52484 moveto
0.50375 0.52484 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54446 moveto
0.50375 0.54446 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.56408 moveto
0.50375 0.56408 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.5837 moveto
0.50375 0.5837 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
gsave
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.06349 0.0852 lineto
0.10317 0.1437 lineto
0.14286 0.1913 lineto
0.18254 0.22908 lineto
0.22222 0.25815 lineto
0.24206 0.26975 lineto
0.2619 0.27959 lineto
0.28175 0.28778 lineto
0.30159 0.29448 lineto
0.32143 0.29982 lineto
0.34127 0.30393 lineto
0.36111 0.30695 lineto
0.37103 0.30809 lineto
0.38095 0.30902 lineto
0.39087 0.30974 lineto
0.39583 0.31002 lineto
0.40079 0.31027 lineto
0.40575 0.31047 lineto
0.41071 0.31063 lineto
0.41319 0.31069 lineto
0.41567 0.31075 lineto
0.41815 0.3108 lineto
0.42063 0.31083 lineto
0.42312 0.31086 lineto
0.4256 0.31089 lineto
0.42684 0.31089 lineto
0.42808 0.3109 lineto
0.42932 0.3109 lineto
0.43056 0.3109 lineto
0.4318 0.3109 lineto
0.43304 0.3109 lineto
0.43428 0.3109 lineto
0.43552 0.31089 lineto
0.43676 0.31089 lineto
0.438 0.31088 lineto
0.44048 0.31086 lineto
0.44296 0.31083 lineto
0.44544 0.31079 lineto
0.4504 0.31071 lineto
0.46032 0.31047 lineto
0.48016 0.30981 lineto
0.5 0.30902 lineto
0.51984 0.30822 lineto
0.53968 0.30756 lineto
0.5496 0.30733 lineto
0.55456 0.30724 lineto
0.55704 0.30721 lineto
0.55952 0.30718 lineto
0.562 0.30716 lineto
Mistroke
0.56324 0.30715 lineto
0.56448 0.30714 lineto
0.56572 0.30713 lineto
0.56696 0.30713 lineto
0.5682 0.30713 lineto
0.56944 0.30713 lineto
0.57068 0.30713 lineto
0.57192 0.30714 lineto
0.57316 0.30714 lineto
0.5744 0.30715 lineto
0.57688 0.30717 lineto
0.57937 0.3072 lineto
0.58185 0.30724 lineto
0.58433 0.30729 lineto
0.58929 0.30741 lineto
0.59425 0.30757 lineto
0.59921 0.30777 lineto
0.60913 0.3083 lineto
0.61905 0.30902 lineto
0.62897 0.30994 lineto
0.63889 0.31108 lineto
0.65873 0.3141 lineto
0.67857 0.31821 lineto
0.69841 0.32355 lineto
0.7381 0.33845 lineto
0.75794 0.34828 lineto
0.77778 0.35988 lineto
0.81746 0.38895 lineto
0.85714 0.42674 lineto
0.89683 0.47433 lineto
0.93651 0.53283 lineto
0.97619 0.60332 lineto
Mfstroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 693 1971 a Fi(Fig)p Fq(.)g(25.)k(A)c(larger)g(scale)h(lo)q(ok.)
75 2079 y Fn(Exercise)f(3.)k Fq(F)l(or)12 b Fh(s)p Fq(3)g Fh(<)h(x)g(<)g
Fq(1,)g(the)g(\014rst)f(iterate)h(is)g(larger)g(than)g(1,)f(so)h(w)o(e)f(can)
h(con\014ne)h(atten)o(tion)f(to)75 2135 y(starting)i(v)m(alues)h(in)g
Fh(x)d(>)g Fq(1.)19 b(The)d(plots)f(sho)o(w)g(that)f(the)h(successiv)o(e)i
(tangen)o(ts)d(will)j(con)o(v)o(erge)e(rapidly)75 2192 y(to)g(the)g(ro)q(ot)g
Fh(x)e Fq(=)g(1.)20 b(Similarly)e(near)d Fh(x)e Fq(=)g(0,)i(the)g(tangen)o(t)
g(lines)i(quic)o(kly)g(lead)f(in)o(to)f(the)h(ro)q(ot)e Fh(x)f
Fq(=)h(0.)75 2248 y(These)20 b(facts)f(are)g(a)g(consequence)h(of)f(the)h
(conca)o(vit)o(y)f(prop)q(erties)h(of)f(the)g(function.)34
b(Here)19 b(is)h(some)75 2305 y(empirical)d(evidence:)75 2479
y Fj(xn)k(=)h(0.8;)75 2529 y(Do[)162 2579 y(xn)g(=)f(xn)h(-)f(f[xn]/f'[xn];)
162 2629 y(Print[)g(N[xn,)f(16])i(],)p eop
%%Page: 44 44
44 43 bop 75 -100 a Fq(44)1571 b Fm(Chaos)p 1692 -93 183 2
v 75 49 a Fj({8}])162 99 y(1.113043478260869)162 149 y(1.015175458447746)162
199 y(1.000333632313382)162 249 y(1.000000166835904)162 298
y(1.000000000000042)162 348 y(1.)162 398 y(1.)162 448 y(1.)75
547 y(xn)21 b(=)h(2.0;)75 597 y(Do[)162 647 y(xn)g(=)f(xn)h(-)f
(f[xn]/f'[xn];)162 697 y(Print[)g(N[xn,)f(16])i(],)75 747 y({8}])162
796 y(1.454545454545455)162 846 y(1.151046789377547)162 896
y(1.025325928976698)162 946 y(1.000908451943051)162 996 y(1.000001235308945)
162 1046 y(1.000000000002289)162 1095 y(1.)162 1145 y(1.)75
1245 y(xn)f(=)h(0.4;)75 1295 y(Do[)162 1344 y(xn)g(=)f(xn)h(-)f
(f[xn]/f'[xn];)162 1394 y(Print[)g(N[xn,)f(16])i(],)75 1444
y({8}])162 1494 y(-0.246153846153846)o(3)162 1544 y(0.0364566876571506)162
1593 y(-0.000097296390460)o(6189)598 1643 y(-12)162 1693 y(1.842129666038486)
c(10)162 1743 y(0.)162 1793 y(0.)162 1843 y(0.)162 1892 y(0.)75
2040 y Fn(Exercise)h(4.)24 b Fq(Here)17 b(is)g(the)g(story)e(on)i(the)g([)p
Fh(s)p Fq(5)p Fh(;)8 b(s)p Fq(3])15 b(in)o(terv)m(al:)23 b(there)17
b(are)f(a)h(sequence)h(of)e(alternating)75 2097 y(in)o(terv)m(als)g(of)f
(decreasing)h(lengths)g(approac)o(hing)f Fh(s)p Fq(5,)g(in)h(whic)o(h)g(con)o
(v)o(ergence)f(to)g(+1)g(alternates)g(with)75 2153 y(con)o(v)o(ergence)f(to)g
(-1.)19 b(Selecting)d(a)e(starting)g(p)q(oin)o(t)h(in)g(eac)o(h)f(successiv)o
(e)h(in)o(terv)m(al)h(approac)o(hing)e Fh(s)p Fq(5)g(will)75
2209 y(cause)h(the)h(iteration)f(to)g(\\b)q(ounce")h(one)f(more)g(time)g
(than)g(in)h(its)g(predecessor)f(in)o(terv)m(al.)75 2287 y(W)l(e)j(selected)h
(the)f Fl(midd)r(le)k Fq(p)q(oin)o(t)c(of)g(the)g(2)843 2270
y Fe(th)896 2287 y Fq(through)f(6)1093 2270 y Fe(th)1146 2287
y Fq(suc)o(h)h(in)o(terv)m(al)h(and)g(then)f(tac)o(k)o(ed)f(on)h(an)75
2343 y(additional)h(p)q(oin)o(t)f(that)f(is)h(actually)g(sligh)o(tly)h
Fl(less)h Fq(than)d Fh(s)p Fq(5.)27 b(Th)o(us)17 b(w)o(e)h(see)f(alternate)h
(con)o(v)o(ergence)75 2400 y(to)c Fg(\006)p Fq(1)h(with)h(an)f(extra)f(b)q
(ounce)i(eac)o(h)g(time)f(\(i.e.,)f(more)h(and)g(more)g(initial)i(\\c)o
(haotic")e(b)q(eha)o(vior\))g(and)75 2456 y(\014nally)i(one)e(\\c)o(haotic")g
(con)o(v)o(ergence)g(to)g(0.)k(Here)d(are)f(the)g(runs:)p eop
%%Page: 45 45
45 44 bop 75 -100 a Fm(Chaos)p 75 -93 183 2 v 1573 w Fq(45)75
49 y Fj(k)22 b(=)f(1)305 b(k)22 b(=)f(2)283 b(k)22 b(=)g(3)75
99 y(-0.45781972)172 b(-0.4489534)g(-0.4475028)75 149 y(0.5170132)238
b(0.45780679)172 b(0.44895305)75 199 y(-1.3953008)194 b(-0.51691998)150
b(-0.45780465)75 249 y(-1.1223672)194 b(1.3925135)216 b(0.51690448)75
298 y(-1.0174824)194 b(1.1210532)g(-1.392051)75 348 y(-1.0004211)g(1.0171497)
g(-1.1208355)75 398 y(-1.0000003)g(1.0004242)g(-1.0170948)75
448 y(-1.)348 b(1.0000003)194 b(-1.0004215)75 498 y(-1.)348
b(1.)g(-1.0000003)489 547 y(1.)g(-1.)881 597 y(-1.)75 697 y(k)22
b(=)f(4)305 b(k)22 b(=)f(5)283 b(k)22 b(=)g(6)75 747 y(-0.44726178)172
b(-0.44722141)150 b(-0.44721002)75 796 y(0.44750279)194 b(0.44726048)172
b(0.44719216)75 846 y(-0.448953)216 b(-0.447495)194 b(-0.447085)75
896 y(0.45780429)g(0.448906)216 b(0.44644282)75 946 y(-0.5169019)194
b(-0.45751405)150 b(-0.44261868)75 996 y(1.391974)238 b(0.51481422)172
b(0.42067004)75 1046 y(1.1207992)216 b(-1.3318087)172 b(-0.31738028)75
1095 y(1.0170857)216 b(-1.0933441)172 b(0.091629025)75 1145
y(1.0004129)216 b(-1.0107362)172 b(-0.096004644)75 1195 y(1.0000003)216
b(-1.0001687)172 b(-0.0015783676)75 1245 y(1.)370 b(-1.)588
b(-9)75 1295 y(1.)370 b(-1.)326 b(7.8642575)20 b(10)489 1344
y(-1.)588 b(-24)881 1394 y(-1.6543612)20 b(10)881 1444 y(0.)881
1494 y(0.)881 1544 y(0.)75 1691 y Fn(Exercise)14 b(5.)k Fq(The)13
b(last)f(3)g(starting)f(p)q(oin)o(ts)i(agree)e(to)h(4)g(decimal)h(places)g
(and)g(y)o(et)e(w)o(e)h(get)g(con)o(v)o(ergence)75 1748 y(to)j(three)g
(di\013eren)o(t)g(ro)q(ots!)k(This)d(b)q(ears)f(out)g(the)g(discussion)i(of)e
(c)o(haotic)g(b)q(eha)o(vior)h(in)g(the)f(pro)s(ject.)75 1825
y Fn(Exercise)21 b(6.)31 b Fq(If)19 b(w)o(e)f(ha)o(v)o(e)h(the)g(ro)q(ot)f
(brac)o(k)o(eted)g(as)h(h)o(yp)q(othesized,)h(w)o(e)f(can)g(certainly)h(send)
f(up)g(a)75 1882 y(\015are)c(if)h(the)g(iteration)g(bursts)f(out)g(of)g(the)g
(in)o(terv)m(al.)22 b(Lik)o(ewise,)17 b(b)o(y)e(monitoring)h(successiv)o(e)h
(iterates,)75 1938 y(w)o(e)g(can)g(notice)h(if)g(the)f(iterations)h(are)f
(\\b)q(ouncing)h(around".)26 b(In)18 b(these)f(cases,)h(w)o(e)f(could)h
(switc)o(h)g(to)75 1994 y(bisection)f(either)f(temp)q(orarily)f(or)g(p)q
(ermanen)o(tly)l(.)75 2072 y(The)d(ab)q(o)o(v)o(e)f(is)h(just)g(one)f
(\\ideal")i(studen)o(t)e(answ)o(er.)18 b(This)13 b(is)f(a)f(tough)g(problem)i
(and)e(v)m(arious)h(strategies)75 2128 y(are)j(emplo)o(y)o(ed.)p
eop
%%Page: 46 46
46 45 bop 75 -105 a Fq(46)827 b Fm(FindRo)r(ot)23 b(&)g(F)-6
b(riends)23 b(\(optional\))p 948 -84 927 2 v 606 49 a Fn(PURPOSE)18
b(OF)g(THE)g(PR)o(OJECT)146 152 y Fq(This)g(pro)s(ject)f(in)o(tro)q(duces)h
(the)g(equation)g(solving)g(facilities)i(in)e Fl(Mathematic)n(a)s
Fq(.)28 b(It)18 b(is)g Fn(optional)75 208 y Fq(b)q(ecause)g(it)g(do)q(esn't)f
(in)o(v)o(olv)o(e)h(calculus)h(tec)o(hniques.)27 b(Ho)o(w)o(ev)o(er,)17
b(most)f(studen)o(ts)h(are)g(curious)h(ab)q(out)75 265 y(these)d(commands)g
(and)h(it)f(do)q(es)h(tak)o(e)e(some)h(kno)o(wledge)h(to)e(b)q(e)i(able)g(to)
f(use)g(them)g(successfully)l(.)75 342 y Fn(Shorter)i(Pro)s(ject)p
Fq(:)j(Omit)15 b(an)o(y)g(com)o(bination)h(of)f(1,)f(4,)h(6.)75
419 y Fn(Instructor)i(Note)p Fq(:)35 b(There)16 b(is)f(no)h(\\After)e(the)h
(Lab")h(section)f(for)g(this)h(pro)s(ject.)577 545 y Fn(ANSWERS)h(F)o(OR)h
(INSTR)o(UCTORS)75 648 y(Exercise)j(1.)28 b Fq(In)19 b(discussions)h(with)f
(studen)o(ts,)f(y)o(ou)g(ma)o(y)f(w)o(an)o(t)g(to)h(tak)o(e)f(this)i(opp)q
(ortunit)o(y)f(to)g(re-)75 704 y(inforce)j(generalit)o(y)l(,)g(as)f
(indicated)i(in)f(Figure)f(26.)34 b(Using)20 b(the)g(similar)h(triangles)g
(in)g(that)e(Figure,)75 761 y(w)o(e)e(obtain)g Fh(y)r(=h)f
Fq(=)g(\()p Fh(l)11 b Fq(+)h Fh(y)r Fq(\))p Fh(=x)p Fq(,)k(leading)j(to)d
Fh(y)i Fq(=)e Fh(l)q(h=)p Fq(\()p Fh(x)10 b Fg(\000)i Fh(h)p
Fq(\).)25 b(Then)18 b(use)f(Pythagoras)f(on)h(the)g(large)75
817 y(triangle)e(and)g(get)f(\()p Fh(l)9 b Fq(+)g Fh(y)r Fq(\))531
801 y Fe(2)559 817 y Fq(+)g Fh(x)629 801 y Fe(2)662 817 y Fq(=)k(\()p
Fh(L)8 b Fg(\000)h Fh(x)p Fq(\))855 801 y Fe(2)875 817 y Fq(.)19
b(Use)c(the)g(result)g(for)f Fh(y)i Fq(in)f(this)g(equation)g(and)g(simplify)
75 874 y(\()p Fl(Mathematic)n(a)21 b Fq(can)d(b)q(e)h(a)e(big)h(help)h(with)g
(the)e(algebra!\))28 b(to)17 b(deriv)o(e)h(2)p Fh(Lx)1402 857
y Fe(3)1433 874 y Fg(\000)13 b Fq(\()p Fh(L)1530 857 y Fe(2)1561
874 y Fq(+)f(4)p Fh(hl)g Fg(\000)g Fh(l)1745 857 y Fe(2)1764
874 y Fq(\))p Fh(x)1808 857 y Fe(2)1840 874 y Fq(+)75 930 y(2)p
Fh(hL)p Fq(\()p Fh(h)g Fq(+)g Fh(L)p Fq(\))p Fh(x)g Fg(\000)h
Fh(h)419 914 y Fe(2)438 930 y Fh(L)469 914 y Fe(2)507 930 y
Fq(=)18 b(0.)29 b(Substituting)19 b(the)f(n)o(umerical)i(v)m(alues)f(for)f
Fh(L)p Fq(,)g Fh(l)q Fq(,)g(and)h Fh(h)f Fq(leads)h(to)f(the)75
987 y(stated)d(equation)g Fh(x)423 970 y Fe(3)453 987 y Fg(\000)10
b Fq(68)p Fh(x)570 970 y Fe(2)600 987 y Fq(+)g(1100)p Fh(x)f
Fg(\000)i Fq(5000)g(=)i(0)i(for)g Fh(x)p Fq(.)638 1461 y @beginspecial
45 @llx 525 @lly 305 @urx 685 @ury 1618 @rwi @setspecial
%%BeginDocument: genbrokentree.eps


/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/setcmykcolor{
	1.0 exch sub dup dup 6 -1 roll
	sub dup 0 lt{pop 0}if 5 1 roll
	4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll
	exch sub dup 0 lt{pop 0}if setrgbcolor
}__NXbdef
/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def   
/_NXfstr 128 string dup 0 (_NX) putinterval def   
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {//findfont exec}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {//findfont exec dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXProcArray 5 array __NXdef
/_NXChannels 0 __NXdef
/_NXTotalBytes 0 __NXdef
/_NXDoImageOp{
	1 index{dup}{1}ifelse /_NXChannels exch store
	_NXChannels 2 add 2 roll _NXProcArray 0 _NXChannels getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /_NXTotalBytes exch store pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{	0 1 _NXChannels 1 sub{
			_NXProcArray exch get exec
			length _NXTotalBytes exch sub /_NXTotalBytes exch store}for
		_NXTotalBytes 0 le{exit}if
	}loop /_NXProcArray 5 array def
}__NXbdef
/colorimage{_NXDoImageOp}__NXbdef
/alphaimage{1 add _NXDoImageOp}def

gsave
-20 351 translate
 /__NXbasematrix matrix currentmatrix def
grestore
/oval {
    translate scale newpath 0.5 0.5 0.5 0 360 arc
} def /line {
    moveto rlineto stroke
} def /setup {
    setlinewidth setlinecap setlinejoin gsave
} def /arrow {
    newpath moveto dup rotate -13 6 rlineto 4 -6 rlineto -4 -6 rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def
gsave
45 525 260 160 rectclip
45 525 260 160 rectclip
0 0 0 setup
0 setgray
0 120 80 560 line
grestore
0 0 0 setup
0 setgray
250 0 50 560 line
grestore
0 0 0 setup
0 setgray
0 -30 140 590 line
grestore
0 0 0 setup
0 setgray
80 -120 80 680 line
grestore
0 0 0 setup
gsave
/Courier findfont 12 scalefont [1 0 0 -1 0 0] makefont
33
exch
defineuserobject
33 execuserobject setfont
0 setgray
[1 0 0 -1 0 1262] concat
33 execuserobject setfont
0 setgray
120 629 moveto () show
grestore
grestore
0 0 0 setup
grestore
0 0 0 setup
grestore
0 0 0 setup
grestore
0 0 0 setup
grestore
0 0 0 setup
grestore
0 0 0 setup
gsave
33 execuserobject setfont
0 setgray
[1 0 0 -1 0 1304] concat
33 execuserobject setfont
0 setgray
109 656 moveto (L - x) show
grestore
grestore
0 0 0 setup
gsave
33 execuserobject setfont
0 setgray
[1 0 0 -1 0 1227] concat
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
8
exch
defineuserobject
8 execuserobject setfont
0 setgray
62 618 moveto (x) show
grestore
grestore
0 0 0 setup
gsave
8 execuserobject setfont
0 setgray
[1 0 0 -1 0 1152] concat
33 execuserobject setfont
0 setgray
133 580 moveto (h) show
grestore
grestore
0 0 0 setup
0 setgray
0 20 80 530 line
grestore
0 0 0 setup
0 setgray
0 20 140 530 line
grestore
0 0 0 setup
0 setgray
0 20 160 530 line
grestore
0 0 0 setup
0 setgray
20 0 80 540 line
grestore
0 0 0 setup
0 setgray
20 0 120 540 line
grestore
0 0 0 setup
gsave
33 execuserobject setfont
0 setgray
[1 0 0 -1 0 1078] concat
33 execuserobject setfont
0 setgray
108 543 moveto (l) show
grestore
grestore
0 0 0 setup
gsave
33 execuserobject setfont
0 setgray
[1 0 0 -1 0 1074] concat
33 execuserobject setfont
0 setgray
149 541 moveto (y) show
grestore
grestore
0 0 0 setup
gsave
33 execuserobject setfont
0 setgray
[1 0 0 -1 0 1250] concat
33 execuserobject setfont
0 setgray
170 629 moveto (L = 100) show
grestore
grestore
0 0 0 setup
gsave
33 execuserobject setfont
0 setgray
[1 0 0 -1 0 1216] concat
33 execuserobject setfont
0 setgray
170 612 moveto (l = 20) show
grestore
grestore
0 0 0 setup
grestore
0 setgray
0.333333 setgray
gsave
0 0 540 720 rectclip
[1 0 0 -1 0 720] concat
gsave
1 setgray
169 128 49 12 rectfill
33 execuserobject setfont
0 setgray
171 138 moveto (h = 10) show
grestore
grestore
grestore
%%EndDocument
 @endspecial 649 1547 a Fi(Fig)p Fq(.)g(26.)k(Diagram)c(for)f(Exercise)i(1.)
75 1668 y Fn(Exercise)h(2.)75 1776 y Fj(equation)j(=)i(x^2)f(-3x)g(+)h(4)f
(==)h(0;)75 1825 y(Solve[equation,)d(x])402 1875 y(2)162 1925
y(4)j(-)f(3)h(x)g(+)f(x)43 b(==)22 b(0)315 1975 y(3)f(+)h(I)f(Sqrt[7])195
b(3)22 b(-)f(I)h(Sqrt[7])162 2025 y({{x)f(->)h(-------------},)c({x)k(->)f
(-------------}})445 2074 y(2)458 b(2)75 2174 y(NSolve[equation,)18
b(x])162 2224 y({{x)j(->)h(1.5)f(-)g(1.3228756555323)e(I},)206
2274 y({x)i(->)h(1.5)f(+)g(1.3228756555323)e(I}})p eop
%%Page: 47 47
47 46 bop 75 -105 a Fm(FindRo)r(ot)23 b(&)g(F)-6 b(riends)23
b(\(optional\))p 75 -84 927 2 v 827 w Fq(47)75 49 y Fn(Exercise)17
b(3.)j Fk(Solve)14 b Fq(do)q(es)i Fl(not)j Fq(w)o(ork)c(\(the)g(p)q
(olynomial)h(has)f(degree)h(greater)e(than)h(4\):)75 157 y
Fj(equation)20 b(=)i(x^5)f(-3x)g(+)h(4)f(==)h(0;)75 207 y(Solve[equation,)d
(x])663 257 y(5)162 307 y({ToRules[Roots[-3)f(x)k(+)g(x)43
b(==)21 b(-4,)h(x]]})75 406 y(NSolve[equation,)c(x])162 456
y({{x)j(->)h(-1.53834},)d({x)j(->)f(-0.240425)f(-)i(1.42838)e(I},)206
506 y({x)h(->)h(-0.240425)d(+)j(1.42838)e(I},)206 556 y({x)h(->)h(1.00959)e
(-)h(0.46911)g(I},)g({x)g(->)h(1.00959)e(+)i(0.46911)e(I}})75
691 y Fn(Exercise)g(4.)28 b Fk(NSolve)17 b Fq(giv)o(es)h Fk(x)24
b(->)f(8.20511,)g(x)h(->)f(13.0309,)g(x)h(->)f(46.764)p Fq(.)k(The)18
b(\014rst)g(ro)q(ot)75 747 y(is)g(smaller)g(than)g(the)g(fence)g(heigh)o(t,)g
(so)f(that)g(one)h(do)q(esn't)g(mak)o(e)f(ph)o(ysical)i(sense.)27
b(The)18 b(other)f(t)o(w)o(o)75 804 y(are)e(v)m(alid)i(solutions|the)e
(solution)h(is)g(non-unique!)75 874 y Fn(Exercise)h(5.)75 982
y Fj(equation)j(=)i(x^3)f(-)g(2a)h(x^2)f(-)h(4)f(x)h(+)f(8a)h(==)f(0;)75
1032 y(rules)g(=)g(Solve[equation,)e(x])162 1082 y({{x)i(->)h(2)f(a},)g({x)h
(->)f(2},)g({x)h(->)f(-2}})75 1132 y(equation)f(/.)i(rules)162
1182 y({True,)f(True,)f(True})75 1310 y Fn(Exercise)d(6.)j
Fq(The)15 b(plot)g(is)h(sho)o(wn)f(in)h(Figure)f(27.)k(The)d(p)q(ositiv)o(e)g
(ro)q(ots)e(are)h(appro)o(ximately)g(2,)f(5,)h(8,)75 1360 y(11,)f
Fh(:)8 b(:)g(:)e Fq(.)20 b(The)15 b(output)g(for)g(the)g(\014rst)g(ro)q(ot)f
(is:)75 1468 y Fj(lhs)21 b(=)h(Tan[x])e(+)i(x;)75 1518 y(soln)f(=)h
(FindRoot[lhs)d(==)i(0,)h({x,)f(2}])162 1568 y({x)h(->)f(2.02876})75
1618 y(lhs)g(/.)h(soln)402 1667 y(-16)162 1717 y(-8.88178)e(10)75
1832 y Fq(The)15 b(remaining)i(ro)q(ots)d(are:)20 b(4.91318,)12
b(7.97867,)h(and)i(11.0855)f(with)h(resp)q(ectiv)o(e)h(accuracies:)75
1888 y(-1.13776e-12,)d(-3.09175e-10,)f(and)k(-5.25979e-11.)639
2362 y @beginspecial 0 @llx 0 @lly 282 @urx 174 @ury 1614 @rwi
@setspecial
%%BeginDocument: tanequation.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.000000 def
/Mwidth		282.000000 def
/Mheight	174.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.02381 0.075788 0.246337 0.009227 [
[(2)] 0.17539 0.24634 0 2 Msboxa
[(4)] 0.32696 0.24634 0 2 Msboxa
[(6)] 0.47854 0.24634 0 2 Msboxa
[(8)] 0.63011 0.24634 0 2 Msboxa
[(10)] 0.78169 0.24634 0 2 Msboxa
[(12)] 0.93327 0.24634 0 2 Msboxa
[(-20)] 0.01131 0.0618 1 0 Msboxa
[(-10)] 0.01131 0.15407 1 0 Msboxa
[(10)] 0.01131 0.3386 1 0 Msboxa
[(20)] 0.01131 0.43087 1 0 Msboxa
[(30)] 0.01131 0.52314 1 0 Msboxa
[(40)] 0.01131 0.61541 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.17539 0.24634 moveto
0.17539 0.25259 lineto
stroke
grestore
[(2)] 0.17539 0.24634 0 2 Mshowa
gsave
0.002 setlinewidth
0.32696 0.24634 moveto
0.32696 0.25259 lineto
stroke
grestore
[(4)] 0.32696 0.24634 0 2 Mshowa
gsave
0.002 setlinewidth
0.47854 0.24634 moveto
0.47854 0.25259 lineto
stroke
grestore
[(6)] 0.47854 0.24634 0 2 Mshowa
gsave
0.002 setlinewidth
0.63011 0.24634 moveto
0.63011 0.25259 lineto
stroke
grestore
[(8)] 0.63011 0.24634 0 2 Mshowa
gsave
0.002 setlinewidth
0.78169 0.24634 moveto
0.78169 0.25259 lineto
stroke
grestore
[(10)] 0.78169 0.24634 0 2 Mshowa
gsave
0.002 setlinewidth
0.93327 0.24634 moveto
0.93327 0.25259 lineto
stroke
grestore
[(12)] 0.93327 0.24634 0 2 Mshowa
gsave
0.001 setlinewidth
0.05412 0.24634 moveto
0.05412 0.25009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.08444 0.24634 moveto
0.08444 0.25009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11476 0.24634 moveto
0.11476 0.25009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.14507 0.24634 moveto
0.14507 0.25009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2057 0.24634 moveto
0.2057 0.25009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.23602 0.24634 moveto
0.23602 0.25009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.26633 0.24634 moveto
0.26633 0.25009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29665 0.24634 moveto
0.29665 0.25009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35728 0.24634 moveto
0.35728 0.25009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38759 0.24634 moveto
0.38759 0.25009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.41791 0.24634 moveto
0.41791 0.25009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44822 0.24634 moveto
0.44822 0.25009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.50885 0.24634 moveto
0.50885 0.25009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53917 0.24634 moveto
0.53917 0.25009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56948 0.24634 moveto
0.56948 0.25009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5998 0.24634 moveto
0.5998 0.25009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.66043 0.24634 moveto
0.66043 0.25009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69074 0.24634 moveto
0.69074 0.25009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72106 0.24634 moveto
0.72106 0.25009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.75137 0.24634 moveto
0.75137 0.25009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81201 0.24634 moveto
0.81201 0.25009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84232 0.24634 moveto
0.84232 0.25009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.87264 0.24634 moveto
0.87264 0.25009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90295 0.24634 moveto
0.90295 0.25009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.96358 0.24634 moveto
0.96358 0.25009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9939 0.24634 moveto
0.9939 0.25009 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.24634 moveto
1 0.24634 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0.0618 moveto
0.03006 0.0618 lineto
stroke
grestore
[(-20)] 0.01131 0.0618 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.15407 moveto
0.03006 0.15407 lineto
stroke
grestore
[(-10)] 0.01131 0.15407 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.3386 moveto
0.03006 0.3386 lineto
stroke
grestore
[(10)] 0.01131 0.3386 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.43087 moveto
0.03006 0.43087 lineto
stroke
grestore
[(20)] 0.01131 0.43087 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.52314 moveto
0.03006 0.52314 lineto
stroke
grestore
[(30)] 0.01131 0.52314 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.61541 moveto
0.03006 0.61541 lineto
stroke
grestore
[(40)] 0.01131 0.61541 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.08026 moveto
0.02756 0.08026 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.09871 moveto
0.02756 0.09871 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.11716 moveto
0.02756 0.11716 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.13562 moveto
0.02756 0.13562 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.17252 moveto
0.02756 0.17252 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.19098 moveto
0.02756 0.19098 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.20943 moveto
0.02756 0.20943 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.22788 moveto
0.02756 0.22788 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.26479 moveto
0.02756 0.26479 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.28324 moveto
0.02756 0.28324 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.3017 moveto
0.02756 0.3017 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.32015 moveto
0.02756 0.32015 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.35706 moveto
0.02756 0.35706 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.37551 moveto
0.02756 0.37551 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.39397 moveto
0.02756 0.39397 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.41242 moveto
0.02756 0.41242 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.44933 moveto
0.02756 0.44933 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.46778 moveto
0.02756 0.46778 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.48623 moveto
0.02756 0.48623 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.50469 moveto
0.02756 0.50469 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.54159 moveto
0.02756 0.54159 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.56005 moveto
0.02756 0.56005 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.5785 moveto
0.02756 0.5785 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.59695 moveto
0.02756 0.59695 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.04335 moveto
0.02756 0.04335 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.0249 moveto
0.02756 0.0249 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.00644 moveto
0.02756 0.00644 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.24634 moveto
0.04365 0.25123 lineto
0.06349 0.2565 lineto
0.07341 0.25946 lineto
0.08333 0.26281 lineto
0.09325 0.26682 lineto
0.10317 0.27198 lineto
0.10813 0.27531 lineto
0.1131 0.27948 lineto
0.11558 0.28202 lineto
0.11806 0.28499 lineto
0.12054 0.28853 lineto
0.12302 0.29285 lineto
0.1255 0.29829 lineto
0.12798 0.30541 lineto
0.12922 0.30988 lineto
0.13046 0.31521 lineto
0.1317 0.32167 lineto
0.13294 0.32971 lineto
0.13418 0.33998 lineto
0.13542 0.35361 lineto
0.13666 0.3726 lineto
0.1379 0.401 lineto
0.13914 0.44819 lineto
0.14038 0.54238 lineto
stroke
0.14071 0.61803 moveto
0.14038 0.54238 lineto
stroke
stroke
0.1441 0.61803 moveto
0.1441 0 lineto
stroke
stroke
0.1441 0 moveto
0.1441 0.61803 lineto
stroke
stroke
0.14561 0 moveto
0.14658 0.07347 lineto
stroke
0.14658 0.07347 moveto
0.14782 0.12066 lineto
0.14906 0.14906 lineto
0.1503 0.16806 lineto
0.15154 0.18168 lineto
0.15278 0.19195 lineto
0.15402 0.19999 lineto
0.15526 0.20645 lineto
0.15774 0.21626 lineto
0.16022 0.22337 lineto
0.1627 0.22881 lineto
0.16518 0.23313 lineto
0.16766 0.23667 lineto
0.17262 0.24218 lineto
0.17758 0.24635 lineto
0.18254 0.24968 lineto
0.19246 0.25485 lineto
0.20238 0.25885 lineto
0.22222 0.26517 lineto
0.2619 0.27532 lineto
0.28175 0.28021 lineto
0.30159 0.28548 lineto
0.31151 0.28844 lineto
0.32143 0.2918 lineto
0.33135 0.2958 lineto
0.33631 0.29819 lineto
0.34127 0.30097 lineto
0.34623 0.3043 lineto
0.35119 0.30847 lineto
0.35367 0.31101 lineto
0.35615 0.31398 lineto
0.35863 0.31752 lineto
0.36111 0.32184 lineto
0.36359 0.32728 lineto
0.36607 0.33439 lineto
0.36855 0.34419 lineto
0.36979 0.35066 lineto
0.37103 0.35869 lineto
0.37227 0.36896 lineto
0.37351 0.38259 lineto
0.37475 0.40159 lineto
0.37599 0.42999 lineto
0.37723 0.47718 lineto
0.37847 0.57136 lineto
stroke
0.37868 0.61803 moveto
0.37847 0.57136 lineto
stroke
stroke
0.38219 0.61803 moveto
0.38219 0 lineto
stroke
stroke
0.38219 0 moveto
0.38219 0.61803 lineto
stroke
0.3834 0 moveto
0.38343 0.00827 lineto
stroke
0.38343 0.00827 moveto
0.38467 0.10246 lineto
0.38591 0.14965 lineto
0.38715 0.17804 lineto
0.38839 0.19704 lineto
0.38963 0.21067 lineto
0.39087 0.22094 lineto
0.39211 0.22897 lineto
0.39335 0.23544 lineto
0.39583 0.24524 lineto
0.39831 0.25236 lineto
0.40079 0.2578 lineto
0.40327 0.26212 lineto
0.40575 0.26566 lineto
0.41071 0.27117 lineto
0.41567 0.27533 lineto
0.42063 0.27867 lineto
0.43056 0.28383 lineto
0.44048 0.28784 lineto
0.46032 0.29415 lineto
0.5 0.30431 lineto
0.53968 0.31447 lineto
0.55952 0.32078 lineto
0.56944 0.32479 lineto
0.5744 0.32718 lineto
0.57937 0.32995 lineto
0.58433 0.33329 lineto
0.58929 0.33746 lineto
0.59177 0.34 lineto
0.59425 0.34297 lineto
0.59673 0.3465 lineto
0.59921 0.35082 lineto
0.60169 0.35626 lineto
0.60417 0.36338 lineto
0.60541 0.36785 lineto
0.60665 0.37318 lineto
0.60789 0.37965 lineto
0.60913 0.38768 lineto
0.61037 0.39795 lineto
0.61161 0.41158 lineto
0.61285 0.43058 lineto
0.61409 0.45897 lineto
0.61533 0.50617 lineto
0.61657 0.60035 lineto
stroke
0.61665 0.61803 moveto
0.61657 0.60035 lineto
stroke
stroke
0.62029 0.61803 moveto
0.62029 0 lineto
stroke
stroke
0.62029 0 moveto
0.62029 0.61803 lineto
stroke
0.62136 0 moveto
0.62153 0.03726 lineto
stroke
0.62153 0.03726 moveto
0.62277 0.13144 lineto
0.62401 0.17863 lineto
0.62525 0.20703 lineto
0.62649 0.22603 lineto
0.62773 0.23966 lineto
0.62897 0.24993 lineto
0.63021 0.25796 lineto
0.63145 0.26443 lineto
0.63393 0.27423 lineto
0.63641 0.28135 lineto
0.63889 0.28678 lineto
0.64137 0.29111 lineto
0.64385 0.29464 lineto
0.64881 0.30015 lineto
0.65377 0.30432 lineto
0.65873 0.30765 lineto
0.66865 0.31282 lineto
0.67857 0.31682 lineto
0.69841 0.32314 lineto
0.7381 0.3333 lineto
0.75794 0.33819 lineto
0.77778 0.34346 lineto
0.7877 0.34642 lineto
0.79762 0.34977 lineto
0.80754 0.35378 lineto
0.8125 0.35616 lineto
0.81746 0.35894 lineto
0.82242 0.36227 lineto
0.82738 0.36644 lineto
0.82986 0.36898 lineto
0.83234 0.37195 lineto
0.83482 0.37549 lineto
0.8373 0.37981 lineto
0.83978 0.38525 lineto
0.84226 0.39237 lineto
0.84474 0.40217 lineto
0.84598 0.40863 lineto
0.84722 0.41667 lineto
0.84846 0.42694 lineto
0.8497 0.44057 lineto
0.85094 0.45956 lineto
0.85218 0.48796 lineto
0.85342 0.53515 lineto
stroke
0.85451 0.61803 moveto
0.85342 0.53515 lineto
stroke
stroke
stroke
0.85838 0.61803 moveto
0.85838 0 lineto
stroke
stroke
0.85838 0 moveto
0.85838 0.61803 lineto
stroke
0.85933 0 moveto
0.85962 0.06624 lineto
stroke
0.85962 0.06624 moveto
0.86086 0.16043 lineto
0.8621 0.20762 lineto
0.86334 0.23602 lineto
0.86458 0.25502 lineto
0.86582 0.26864 lineto
0.86706 0.27891 lineto
0.8683 0.28695 lineto
0.86954 0.29341 lineto
0.87202 0.30322 lineto
0.8745 0.31033 lineto
0.87698 0.31577 lineto
0.87946 0.32009 lineto
0.88194 0.32363 lineto
0.8869 0.32914 lineto
0.89187 0.33331 lineto
0.89683 0.33664 lineto
0.90675 0.34181 lineto
0.91667 0.34581 lineto
0.93651 0.35213 lineto
0.97619 0.36228 lineto
stroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 362 2449 a Fi(Fig)p Fq(.)f(27.)20 b(Plot)15 b(generated)g(b)o
(y:)20 b Fk(Plot[Tan[x])i(+)i(x,)f(x,)h(0,)g(4Pi])p Fq(.)p
eop
%%Page: 48 48
48 47 bop 75 -100 a Fq(48)1609 b Fm(Area)p 1730 -93 146 2 v
606 49 a Fn(PURPOSE)18 b(OF)g(THE)g(PR)o(OJECT)146 150 y Fq(This)g(is)g(the)g
(\014rst)f(of)h(a)f(sequence)i(of)e(pro)s(jects)g(in)o(tended)i(to)e
(illuminate)k(the)c(concepts)i(of)e(area,)75 207 y(an)o(ti-di\013eren)o
(tiation)i(and)f(n)o(umerical)h(in)o(tegration.)27 b(Naturally)l(,)19
b(a)e(prime)i(goal)e(of)g(this)i(sequence)f(is)75 263 y(to)d(instill)i(an)e
(appreciation)h(of)f(the)g(F)l(undamen)o(tal)h(Theorem.)146
339 y(In)k(this)g(\014rst)f(pro)s(ject,)g(w)o(e)h(concen)o(trate)f(on)g(the)h
(area)f(problem)h(and)g(the)g(utilit)o(y)g(of)g(Riemann)75
396 y(sums)e(in)g(appro)o(ximating)g(it.)28 b(T)l(o)18 b(get)f(appropriately)
i(impressiv)o(e)g(answ)o(ers,)e(w)o(e)h(use)g(the)g(midp)q(oin)o(t)75
452 y(rule)13 b(without)e(giving)i(it)f(a)f(name.)19 b(Ev)o(en)12
b(to)f(the)h(no)o(vice,)h(it)f Fl(do)n(es)j Fq(seems)c(a)h(natural)g(c)o
(hoice)g(of)g(Riemann)75 508 y(sum,)17 b(if)h(w)o(e)e(ha)o(v)o(e)h(to)f(pic)o
(k)i(just)f(one.)26 b(Later)16 b(pro)s(jects)h(in)o(v)o(olv)o(e)g(making)g
(comparisons)h(b)q(et)o(w)o(een)f(the)75 565 y(basic)f(n)o(umerical)g(appro)o
(ximations)f(to)g(the)g(de\014nite)i(in)o(tegral.)75 641 y
Fn(Shorter)g(Pro)s(ject)p Fq(:)j(A)15 b(core)g(pro)s(ject)f(is:)21
b(2,)14 b(3,)h(4,)f(8,)h(9,)f(10.)577 764 y Fn(ANSWERS)j(F)o(OR)h(INSTR)o
(UCTORS)75 865 y(Exercise)e(1.)j Fq(Noting)c(that)e(the)h(v)m(alues)h(of)f
Fh(i)g Fq(are)g(0,)f(1,)h Fh(:)8 b(:)g(:)d Fq(,)14 b Fh(n)9
b Fg(\000)f Fq(1)14 b(in)h(the)f(\014rst)g(case)g(and)g(1,)g(2,)f
Fh(:)8 b(:)g(:)e Fq(,)14 b Fh(n)75 922 y Fq(in)h(the)e(second,)h(leads)h(to)e
(the)h(conclusion)h(that)e(the)h(v)o(ery)f(same)h(p)q(oin)o(ts)g(and)g(in)o
(terv)m(als)g(o)q(ccur)g(in)h(b)q(oth)75 978 y(expressions)h(for)f
Fh(R)p Fq(.)75 1054 y Fn(Exercise)j(2.)23 b Fq(It)16 b(helps)h(to)e(deal)i
(with)g(just)e(one)i(quadran)o(t)e(and)h(then)h(m)o(ultiply)g(b)o(y)f(4.)23
b(W)l(e)16 b(coun)o(ted)75 1110 y(4\(8)q(+)q(7)q(+)q(7)q(+)q(7)q(+)q(6)q(+)q
(5)q(+)q(4)q(+)q(1\))9 b(=)k(180)d(totally)g(inside)j(and)e(4\()p
Fh(:)p Fq(8)q(+)q Fh(:)p Fq(6)q(+)q Fh(:)p Fq(2)q(+)q Fh(:)p
Fq(5+)q Fh(:)p Fq(6+)q Fh(:)p Fq(5)q(+)q Fh(:)p Fq(2+)q Fh(:)p
Fq(6+)q Fh(:)p Fq(8\))e(=)k(19)p Fh(:)p Fq(2)75 1167 y(partial)j(squares)g
(for)f(a)h(total)f(of)g(appro)o(ximately)h(199.2)f(enclosed)i(squares.)22
b(Since)17 b(the)f(circle)h(dra)o(wn)75 1223 y(has)k(radius)g(8,)g(w)o(e)g
(get)f Fh(\031)j Fg(\031)f Fq(199)p Fh(:)p Fq(2)p Fh(=)p Fq(64)e(=)i(3)p
Fh(:)p Fq(11.)35 b(Of)21 b(course,)h(others)e(will)j(get)d(sligh)o(tly)i
(di\013eren)o(t)75 1280 y(answ)o(ers.)75 1355 y Fn(Exercise)15
b(3.)k Fq(W)l(e)13 b(coun)o(ted)g(4\(4)6 b(+)g(4)g(+)g(3)g(+)g(3)f(+)h(3)f(+)
h(2)g(+)g(2)f(+)h(1)o(\))g(+)g(4)o(\()p Fh(:)p Fq(9)f(+)h Fh(:)o
Fq(8)g(+)g Fh(:)o Fq(6)g(+)g Fh(:)o Fq(3)f(+)h Fh(:)p Fq(8)f(+)h
Fh(:)p Fq(3\))j(=)k(102)p Fh(:)p Fq(8.)75 1412 y(Since)k(w)o(e)f(\(but)g(not)
f(most)g(studen)o(ts\))h(kno)o(w)f(that)g(the)h(exact)g(area)f(is)h
Fh(\031)r(ab)p Fq(,)f(w)o(e)h(can)g(judge)g(this)g(\(and)75
1468 y(other)f(tries\))g(b)o(y)g(dividing)j(b)o(y)d(32:)k(102)p
Fh(:)p Fq(8)p Fh(=)p Fq(32)10 b(=)j(3)p Fh(:)p Fq(21.)75 1544
y Fn(Exercise)21 b(4.)29 b Fq(The)19 b(unit)g(circle)h(has)e(equation)h
Fh(x)973 1527 y Fe(2)1005 1544 y Fq(+)12 b Fh(y)1076 1527 y
Fe(2)1114 1544 y Fq(=)18 b(1,)g(whence)i Fh(y)f Fq(=)1479 1506
y Fg(p)p 1516 1506 124 2 v 1516 1544 a Fq(1)10 b Fg(\000)h
Fh(x)1621 1531 y Fe(2)1659 1544 y Fq(in)19 b(the)f(\014rst)75
1600 y(quadran)o(t.)75 1676 y Fn(Exercise)f(5.)j Fq(2)366 1660
y Fe(2)396 1676 y Fq(+)10 b(3)464 1660 y Fe(2)494 1676 y Fq(+)g(4)562
1660 y Fe(2)592 1676 y Fq(+)g(5)660 1660 y Fe(2)690 1676 y
Fq(+)g(6)758 1660 y Fe(2)790 1676 y Fq(=)j(4)d(+)g(9)g(+)h(16)e(+)i(25)e(+)i
(36)h(=)h(90.)75 1745 y Fn(Exercise)18 b(6.)23 b Fq(The)16
b(p)q(edestrian)h(approac)o(h)f(is)g(to)g(run)g(the)g(giv)o(en)h(co)q(de)f(5)
g(times,)g(c)o(hanging)h(the)f(4)g(to)75 1795 y(a)f(16,)f(etc.)20
b(P)o(erhaps)15 b(some)g(will)h(p)q(onder)g(the)f(paren)o(thetical)h(remark)f
(giving)h(the)f(pattern)g(and)g(write)75 1845 y(a)g Fk(Table)f
Fq(or)h Fk(Do)g Fq(lo)q(op)h(to)e(do)h(it)h(all)g(in)g(one)f(pass:)75
1944 y Fj(Table[{4^k,)20 b(Sum[i^3,)g({i,)h(1,)g(4^k}]},)g({k,)g(5}])g
(//TableForm)162 1994 y(4)131 b(100)162 2044 y(16)109 b(18496)162
2093 y(64)g(4326400)162 2143 y(256)87 b(1082146816)162 2193
y(1024)65 b(275415040000)75 2311 y Fn(Exercise)17 b(7.)j Fq(2)366
2295 y Fe(2)396 2311 y Fg(\003)9 b Fq(3)451 2295 y Fe(2)481
2311 y Fg(\003)h Fq(4)537 2295 y Fe(2)566 2311 y Fg(\003)g
Fq(5)622 2295 y Fe(2)652 2311 y Fg(\003)g Fq(6)708 2295 y Fe(2)740
2311 y Fq(=)j(4)c Fg(\003)h Fq(9)g Fg(\003)g Fq(16)f Fg(\003)h
Fq(25)g Fg(\003)g Fq(36)i(=)h(518400.)75 2411 y Fj(Product[i^2,)19
b({i,)i(2,)h(6}])162 2460 y(518400)75 2579 y Fn(Exercise)e(8.)28
b Fq(Using)19 b(the)e(giv)o(en)i(co)q(de,)g(it)f(tak)o(es)f(ab)q(out)h
Fh(n)f Fq(=)g(25)h(to)f(get)g Fh(\031)j Fq(to)d(three)h(\014gures.)28
b(The)75 2629 y(righ)o(t)15 b(idea)h(is)g(go)e(far)h(enough)g(to)g(b)q(e)h
(\\sure")f(that)f(three)h(\014gures)h(ha)o(v)o(e)e(\\settled)i(do)o(wn:")p
eop
%%Page: 49 49
49 48 bop 75 -100 a Fm(Area)p 75 -93 146 2 v 1610 w Fq(49)184
49 y Fj(n)109 b(approx)162 99 y(19)87 b(3.14574)162 149 y(20)g(3.14543)162
199 y(21)g(3.14516)162 249 y(22)g(3.14492)162 298 y(23)g(3.14471)162
348 y(24)g(3.14451)162 398 y(25)g(3.14434)162 448 y(26)g(3.14418)162
498 y(27)g(3.14404)162 547 y(28)g(3.14391)162 597 y(29)g(3.14379)162
647 y(30)g(3.14368)75 778 y Fn(Exercise)16 b(9.)k Fq(Again)14
b(the)h(p)q(edestrian)g(approac)o(h)f(is)h(to)e(run)i(the)f(co)q(de)h(with)f
(v)m(arious)h Fh(n)p Fq('s,)f(but)g(a)g(lo)q(op)75 828 y(is)i(more)e
(e\016cien)o(t:)75 937 y Fj(f[x_])21 b(:=)g(Sin[x])75 987 y(a)h(=)f(0.0;)g(b)
h(=)f(N[Pi];)75 1087 y(Do[)249 1136 y(delx)g(=)h(\(b)f(-)h(a\)/n;)249
1186 y(Rsum)f(=)44 b(delx)21 b(Sum[f[a)f(+)i(\(i+1/2\))e(delx],)g({i,)i(0,)f
(n-1}])g(//N;)249 1236 y(Print[n,)f(")87 b(",)44 b(Rsum],)75
1286 y({n,)21 b(5,)h(30,)f(5}])162 1385 y(5)87 b(2.03328)162
1435 y(10)g(2.00825)162 1485 y(15)g(2.00366)162 1535 y(20)g(2.00206)162
1585 y(25)g(2.00132)162 1634 y(30)g(2.00091)75 1751 y Fq(The)15
b(exact)g(answ)o(er)g(is)h(2)f(and)g(the)g(ab)q(o)o(v)o(e)g(giv)o(es)g(2.00)f
(to)h(three)g(\014gures.)75 1822 y Fn(Exercise)i(10.)75 1931
y Fj(f[x_])k(:=)g(Sin[Sin[x]])75 1981 y(a)h(=)f(0.0;)g(b)h(=)f(N[Pi];)75
2081 y(Do[)75 2130 y(delx)g(=)h(\(b)f(-)h(a\)/n;)75 2180 y(Rsum)f(=)43
b(delx)21 b(Sum[f[a)g(+)g(\(i+1/2\))g(delx])f(,)i({i,)f(0,)g(n-1}])g(//N;)75
2230 y(Print[n,)f(")87 b(",)43 b(Rsum],)75 2280 y({n,)21 b(5,)h(50,)f(5}])162
2380 y(5)87 b(1.8202)162 2429 y(10)g(1.79476)162 2479 y(15)g(1.79015)162
2529 y(20)g(1.78855)162 2579 y(25)g(1.7878)162 2629 y(30)g(1.7874)p
eop
%%Page: 50 50
50 49 bop 75 -100 a Fq(50)1609 b Fm(Area)p 1730 -93 146 2 v
162 49 a Fj(35)87 b(1.78716)162 99 y(40)g(1.787)162 149 y(45)g(1.78689)162
199 y(50)g(1.78682)75 334 y Fn(Exercise)13 b(11.)19 b Fq(Most)11
b(texts)g(will)j(giv)o(e)e(form)o(ulas)f(for)h(the)f(sum)h(of)g(the)g
(\014rst)f(few)h(p)q(o)o(w)o(ers)f(in)i(connection)75 390 y(with)18
b(taking)f(limits)i(of)f(Riemann)f(sums.)27 b(F)l(or)17 b(most)g(texts,)g
(the)h(righ)o(t)f(hin)o(t)i(for)e(studen)o(ts)g(who)g(ask)75
447 y(for)d(one,)g(is)g(\\y)o(our)g(text)g(has)g(an)g(index.")20
b(Ours)15 b(has)f(the)g(needed)i(form)o(ula)d(in)i(the)g(section)f(p)q(oin)o
(ted)i(to)75 503 y(b)o(y)f(the)g(index)i(en)o(try)e(\\Summation)g(Con)o(v)o
(en)o(tion")f(as)782 582 y Ff(n)762 595 y Fd(X)764 686 y Ff(i)p
Fe(=1)830 635 y Fh(i)846 616 y Fe(3)878 635 y Fq(=)926 576
y Fd(\024)953 604 y Fh(n)p Fq(\()p Fh(n)c Fq(+)g(1\))p 953
625 169 2 v 1025 666 a(2)1126 576 y Fd(\025)1148 583 y Fe(2)1175
635 y Fh(:)75 792 y Fn(Exercise)23 b(12.)35 b Fq(Again,)22
b(the)e(index)h(of)f(most)g(texts)f(will)j(pro)o(vide)f(most)e(or)h(all)h(of)
f(the)g(requested)75 849 y(information.)g(An)o(y)15 b(encyclop)q(edia)j(will)
f(also)e(do)g(the)g(tric)o(k.)p eop
%%Page: 51 51
51 50 bop 75 -103 a Fm(Numerical)20 b(In)n(tegration)j(I)p
75 -85 719 2 v 1037 w Fq(51)606 49 y Fn(PURPOSE)18 b(OF)g(THE)g(PR)o(OJECT)
146 154 y Fq(As)11 b(stated)h(in)h(the)f(in)o(tro)q(duction)h(to)e(the)h(pro)
s(ject)f(the)h(purp)q(ose)h(of)e(this)i(and)f(the)g(next)g(pro)s(ject)f(is)i
(to)75 210 y(examine)f(the)g(accuracy)f(of)g(some)g(simple)i(n)o(umerical)g
(appro)o(ximations)e(to)g(the)h(in)o(tegral.)19 b(This)12 b(pro)s(ject)75
267 y(studies)21 b(ordinary)f(Riemann)g(sums)g(while)h(the)f(next)g(pro)s
(ject)f(builds)j(on)e(this)g(one)g(and)g(compares)75 323 y(three)d(basic)h(n)
o(umerical)g(in)o(tegration)f(appro)o(ximations:)24 b(the)17
b(midp)q(oin)o(t,)h(trap)q(ezoid)g(and)g(Simpson's)75 380 y(rule.)38
b(The)21 b(pro)s(ject)f(also)g(con)o(trasts)g(using)h(the)g(F)l(undamen)o
(tal)h(Theorem)e(with)h(doing)h(n)o(umerical)75 436 y(appro)o(ximations.)75
515 y Fn(Shorter)17 b(Pro)s(ject)p Fq(:)j(Omit)15 b(one)h(or)e(more)h(of)g
(the)g(After)g(the)g(Lab)h(problems.)577 647 y Fn(ANSWERS)h(F)o(OR)h(INSTR)o
(UCTORS)75 752 y(Exercise)f(1.)j Fq(The)15 b(FT)g(sho)o(ws)g(that)f
Fh(D)781 759 y Ff(x)810 717 y Fd(R)838 730 y Ff(x)830 765 y(a)867
752 y Fh(f)5 b Fq(\()p Fh(t)p Fq(\))j Fh(dt)13 b Fq(=)g Fh(f)5
b Fq(\()p Fh(x)p Fq(\).)75 830 y Fn(Exercise)20 b(3.)27 b Fq(It's)18
b(the)f(\014rst)h(quadran)o(t)f(p)q(ortion)h(of)f(the)h(circle)h(of)e(radius)
h(10,)g(so)f(the)h(v)m(alue)h(of)e(the)75 886 y(in)o(tegral)f(is)291
868 y Fe(1)p 291 875 18 2 v 291 902 a(4)314 886 y Fh(\031)r
Fq(\(10\))424 870 y Fe(2)455 886 y Fq(=)d(25)p Fh(\031)r Fq(.)18
b(\(A)d(similar)i(problem)f(w)o(as)e(in)i(the)f(Area)g(pro)s(ject.\))75
965 y Fn(Exercise)20 b(4.)25 b Fq(F)l(or)17 b Fh(n)f Fq(=)h(10,)g(the)g
(result)h(is)f(484.156,)f(for)g Fh(n)g Fq(=)h(100,)f(it's)h(614.479.)24
b(Recall)18 b(that)f(the)75 1021 y(correct)e(answ)o(er)f(is)i(630.)75
1099 y Fn(Exercise)h(5.)j Fq(F)l(or)15 b Fh(n)e Fq(=)f(10,)j(the)g(result)h
(is)f(796.656,)e(for)i Fh(n)e Fq(=)g(100,)h(it's)h(645.729.)75
1171 y Fn(Exercise)i(6.)228 1283 y Fj(0.)173 b(0.5)240 b(1.0)75
1383 y(10)109 b(145.844)63 b(5.19922)152 b(-166.656)75 1483
y(100)87 b(15.5208)63 b(0.0520824)108 b(-15.7292)75 1582 y(1000)65
b(1.56146)e(0.000520833)h(-1.56354)75 1716 y Fn(Exercise)17
b(7.)228 1828 y Fj(0.)239 b(0.5)261 b(1.0)75 1928 y(10)109
b(-4.07314)e(-0.270469)129 b(5.92686)75 2028 y(100)87 b(-0.470609)e
(-0.00860511)g(0.529391)75 2127 y(1000)65 b(-0.0490703)e(-0.000272283)g
(0.0509297)75 2268 y Fn(Exercise)24 b(8.)39 b Fq(F)l(or)20
b(su\016cien)o(tly)j(smo)q(oth)e(functions)h(the)f(left)h(and)g(righ)o(t)f
(sums)g(ha)o(v)o(e)g(errors)g(lik)o(e)75 2324 y(1)p Fh(=n)p
Fq(,)15 b(while)j(the)d(midp)q(oin)o(t)i(error)f(b)q(eha)o(v)o(es)g(lik)o(e)g
(1)p Fh(=n)1008 2308 y Fe(2)1028 2324 y Fq(.)22 b(This)16 b(is)g(what)f(happ)
q(ens)i(for)e(the)h(p)q(olynomial)75 2381 y(example,)f(but)g(for)f(the)g
(circle)j(example,)e(the)f(midp)q(oin)o(t)i(rule)f(only)h(giv)o(es)e(an)h
(impro)o(v)o(emen)o(t)f(of)g(ab)q(out)75 2437 y(30)j(p)q(er)h(decade)h
(instead)f(of)f(100.)27 b(\(Because)18 b(the)f(deriv)m(ativ)o(e)i(do)q(esn't)
f(exist)g(at)f(the)h(endp)q(oin)o(ts,)h(the)75 2494 y(classical)e(remainder)f
(form)o(ula)e(do)q(esn't)i(apply)l(.\))75 2572 y Fn(Exercise)22
b(9.)32 b Fq(In)20 b(a)f(\\t)o(ypical")h(subin)o(terv)m(al,)h(a)e(con)o(tin)o
(uous)h(function)g(is)g(monotone)f(and)g(there)g(is)75 2629
y(some)c(cancellation)i(of)e(p)q(ositiv)o(e)h(and)f(negativ)o(e)h(error)e(in)
i(suc)o(h)g(in)o(terv)m(als.)p eop
%%Page: 52 52
52 51 bop 75 -103 a Fq(52)1036 b Fm(Numerical)20 b(In)n(tegration)j(I)p
1157 -85 719 2 v 75 49 a Fn(Exercise)e(10.)29 b Fq(The)19 b(ET)f(guaran)o
(tees)f(existence)j(since)g(the)e(in)o(tegrand)h(is)f(a)h(comp)q(osition)g
(of)f(con-)75 106 y(tin)o(uous)f(functions.)25 b(Since)18 b(it)f(seems)g(v)o
(ery)g(unlik)o(ely)i(that)d(an)g(elemen)o(tary)h(function)h(an)o(tideriv)m
(ativ)o(e)75 162 y(exists)i(for)f(this)h(complex)g(in)o(tegrand,)g(the)g(FT)f
(is)h(of)f(no)g(use)h(in)g(ev)m(aluating)h(the)f(de\014nite)h(in)o(tegral)75
219 y(from)c(0)g(to)f(1.)27 b(W)l(e)17 b(could)h(get)f(a)g(go)q(o)q(d)h(n)o
(umerical)g(v)m(alue)h(b)o(y)e(using)h(the)g(midp)q(oin)o(t)h(rule)f(\(or)e
(b)q(etter,)75 275 y(Simpson's)f(rule,)g(whic)o(h)g(ma)o(y)f(b)q(e)h(in)g
(the)f(studen)o(t)h(v)o(o)q(cabulary)f(b)o(y)h(the)f(time)h(this)f(pro)s
(ject)g(is)h(written)75 332 y(up\).)20 b(Clev)o(er)15 b(studen)o(ts)g(migh)o
(t)g(think)h(of)f(graphing)g(the)g(function)h(and)f(making)h(an)f(ey)o(eball)
h(estimate)75 388 y(of)f(the)g(area.)p eop
%%Page: 53 53
53 52 bop 75 -103 a Fm(Numerical)20 b(In)n(tegration)j(I)r(I)p
75 -85 747 2 v 1009 w Fq(53)606 49 y Fn(PURPOSE)18 b(OF)g(THE)g(PR)o(OJECT)
146 152 y Fq(This)h(pro)s(ject)e(reviews)i(the)g(in)o(terpla)o(y)f(b)q(et)o
(w)o(een)h(the)g(F)l(undamen)o(tal)f(Theorem)h(and)f(the)h(use)f(of)75
208 y(n)o(umerical)g(metho)q(ds.)24 b(It)17 b(dev)o(elops)h(and)f(compares)f
(three)h(common)f(in)o(tegration)h(rules:)23 b(Midp)q(oin)o(t,)75
265 y(T)l(rap)q(ezoid)16 b(and)g(Simpson.)k(It)c(also)f(in)o(tro)q(duces)h
(the)f Fl(Mathematic)n(a)k Fk(Module)c Fq(statemen)o(t.)75
342 y Fn(Shorter)j(Pro)s(ject)p Fq(:)j(Core)15 b(pro)s(ject:)21
b(6,)15 b(7,)h(8,)f(10,)h(11,)f(12.)21 b(Or)16 b(do)g(some)g(of)f(the)h(area)
g(exercises)h(and)75 398 y(omit)e(7,)g(11)f(and/or)h(8,)f(12.)75
469 y Fn(Instructor)g(Note)p Fq(:)31 b(The)12 b Fl(Mathematic)n(a)17
b Fq(mo)q(dules)c(giv)o(en)g(in)g(the)f(pro)s(ject)g(for)g(the)g(basic)h(in)o
(tegration)75 519 y(routines)e(are)f(written)h(so)f(that)f(studen)o(ts)i
(will)h(understand)f(what)f(they)h(do.)18 b(Professional)11
b(co)q(des)g(w)o(ould)75 569 y(lo)q(ok)16 b(and)f(op)q(erate)g(more)g(lik)o
(e)i Fk(Plot)e Fq(and)g Fk(Integrate)p Fq(.)k(In)d(particular,)g(the)f
(routines)h(in)g(the)g(pro)s(ject)75 618 y(fail)g(if)g(y)o(ou)f(don't)f
(follo)o(w)i(the)f(indicated)i(usage,)d(for)h(example:)75 726
y Fj(a)22 b(=)f(0.0;)g(b)h(=)f(N[Pi];)75 776 y(n)h(=)f(5;)h(p)f(=)h(1.0;)75
826 y(Rsum[Sin[x],)d(a,)j(b,)f(n,)g(p])109 b(\(*)21 b(DOESN'T)g(WORK!!)f(*\))
162 876 y(0.628319)g(\(Sin[x][0.628319])f(+)i(Sin[x][1.25664])e(+)249
926 y(Sin[x][1.88496])g(+)j(Sin[x][2.51327])c(+)k(Sin[x][3.14159]\))75
1040 y Fq(The)15 b(\014le)i Fk(Calculus.m)c Fq(con)o(tains)j(co)q(des)f(for)g
(these)g(routines)h(that)f(do)g(act)f(lik)o(e)j Fk(Plot)p Fq(.)577
1166 y Fn(ANSWERS)g(F)o(OR)h(INSTR)o(UCTORS)75 1269 y(Exercise)d(1.)20
b Fq(W)l(e)13 b(kno)o(w)g(the)h(area)f(for)g(rectangles)h(and)g(triangles:)20
b Fh(c)p Fq(\()p Fh(x)7 b Fg(\000)g Fh(a)p Fq(\))12 b(and)1535
1251 y Fe(1)p 1535 1258 18 2 v 1535 1285 a(2)1558 1269 y Fh(x)7
b Fg(\001)g Fh(cx)g Fg(\000)1710 1251 y Fe(1)p 1710 1258 V
1710 1285 a(2)1733 1269 y Fh(a)g Fg(\001)g Fh(ca)12 b Fq(=)81
1308 y Ff(c)p 80 1315 V 80 1341 a Fe(2)103 1325 y Fq(\()p Fh(x)147
1309 y Fe(2)176 1325 y Fg(\000)f Fh(a)246 1309 y Fe(2)265 1325
y Fq(\).)75 1403 y Fn(Exercise)17 b(2.)j Fq(This)c(is)g(a)e(consequence)j(of)
e(the)g(F)l(undamen)o(tal)h(Theorem.)75 1480 y Fn(Exercise)h(3.)j
Fq(F)l(ollo)o(ws)15 b(from)f(the)h(\014rst)f(part)h(of)f(Exercise)i(1)f(or)f
(from)g(our)h(kno)o(wledge)g(of)g(an)o(tideriv)m(a-)75 1536
y(tiv)o(es.)75 1614 y Fn(Exercise)21 b(4.)29 b Fq(The)18 b(cited)i(equation)e
(in)h(the)g(pro)s(ject)e(rev)o(eals)i(that)e(Simpson's)i(rule)g(in)o
(tegrates)f(all)75 1670 y(cubics)f Fl(exactly)i Fq(since)d(their)g(fourth)f
(deriv)m(ativ)o(es)h(v)m(anish.)75 1747 y Fn(Exercise)h(5.)j
Fq(Only)c(t)o(w)o(o)e(curv)o(es)i(app)q(ear)f(b)q(ecause)h
Fh(z)f Fq(=)e Fh(u)i Fq(b)o(y)g(the)g(F)l(undamen)o(tal)h(Theorem.)75
1818 y Fn(Exercise)h(6.)75 1926 y Fj(n)131 b(MidE)173 b(TrapE)g(SimpE)75
1976 y(2)87 b(-0.221441)e(0.429204)h(-0.00455975)75 2025 y(4)h(-0.0523443)e
(0.103881)h(-0.00026917)75 2075 y(8)h(-0.0129091)e(0.0257684)g(-0.000016591)
1077 2125 y(-6)75 2175 y(16)i(-0.00321638)e(0.00642966)g(-1.03337)20
b(10)1056 2225 y(-8)75 2274 y(32)87 b(-0.000803416)d(0.00160664)i(-6.453)20
b(10)1121 2324 y(-9)75 2374 y(64)87 b(-0.000200812)d(0.000401611)h(-4.03226)
20 b(10)1121 2424 y(-10)75 2474 y(128)87 b(-0.0000502003)d(0.0001004)h
(-2.52002)20 b(10)p eop
%%Page: 54 54
54 53 bop 75 -103 a Fq(54)1008 b Fm(Numerical)20 b(In)n(tegration)j(I)r(I)p
1129 -85 747 2 v 75 49 a Fn(Exercise)17 b(7.)75 157 y Fj(n)131
b(MidE)173 b(TrapE)g(SimpE)75 207 y(2)87 b(-0.254407)e(0.464708)h(-0.0147021)
75 257 y(4)h(-0.0534759)e(0.10515)h(-0.000600463)75 307 y(8)h(-0.0129696)e
(0.0258373)g(-0.0000339812)1077 356 y(-6)75 406 y(16)i(-0.00322003)e
(0.00643383)g(-2.07874)20 b(10)1077 456 y(-7)75 506 y(32)87
b(-0.000803643)d(0.0016069)i(-1.29246)20 b(10)1099 556 y(-9)75
606 y(64)87 b(-0.000200826)d(0.000401627)h(-8.0674)21 b(10)1165
655 y(-10)75 705 y(128)87 b(-0.0000502012)d(0.000100401)h(-5.04043)20
b(10)75 834 y Fn(Exercise)d(8.)75 942 y Fj(n)131 b(MidE)173
b(TrapE)g(SimpE)75 992 y(2)87 b(-0.117775)e(0.409542)h(0.0579975)75
1041 y(4)h(-0.0423366)e(0.145884)h(0.0204035)75 1091 y(8)h(-0.0150943)e
(0.0517735)g(0.00719498)75 1141 y(16)i(-0.00535915)e(0.0183396)g(0.00254044)
75 1191 y(32)i(-0.00189875)e(0.00649023)g(0.000897578)75 1241
y(64)i(-0.000672018)d(0.00229574)i(0.000317235)75 1290 y(128)h(-0.00023772)d
(0.000811861)h(0.00011214)75 1426 y Fn(Exercise)17 b(9.)126
1540 y Fq(a\))22 b Fh(f)5 b Fq(\()p Fh(x)p Fq(\))123 1634 y(b\))23
b Fh(A)p Fq(\()p Fh(a)p Fq(\))12 b(=)h(0)f(b)q(ecause)h(it)f(represen)o(ts)g
(an)g(area)g(of)g(zero)g(width)h(or,)e(more)h(formally)l(,)h(the)f
(established)189 1691 y(theorem)j(that)464 1656 y Fd(R)492
1669 y Ff(a)484 1704 y(a)520 1691 y Fh(f)5 b Fq(\()p Fh(x)p
Fq(\))j Fh(dx)j Fq(=)i(0)i(for)g Fh(f)20 b Fq(a)15 b(con)o(tin)o(uous)h
(function.)128 1784 y(c\))23 b Fh(F)6 b Fq(\()p Fh(x)p Fq(\))21
b(=)g Fh(A)p Fq(\()p Fh(x)p Fq(\))13 b(+)h Fh(C)s Fq(,)21 b(where)f
Fh(C)j Fq(is)e(a)f(constan)o(t.)35 b(This)20 b(is)h(a)f(corollary)h(to)e(the)
i(Mean)f(V)l(alue)189 1841 y(Theorem.)75 1955 y Fn(Exercise)f(10.)25
b Fh(k)17 b Fq(=)f(2)g(for)g(b)q(oth)h(T)l(rap)q(ezoid)h(and)f(MidP)o(oin)o
(t)h(while)g Fh(k)f Fq(=)e(4)i(for)f(Simpson.)26 b Fh(C)1755
1962 y Ff(M)t(id)1840 1955 y Fq(=)75 2012 y Fg(\000)p Fq(0)p
Fh(:)p Fq(82,)17 b Fh(C)255 2019 y Ff(T)5 b(r)q(ap)353 2012
y Fq(=)17 b(1)p Fh(:)p Fq(65,)g(and)h Fh(C)641 2019 y Ff(S)r(imp)744
2012 y Fq(=)g(0)p Fh(:)p Fq(068.)26 b(Of)18 b(course,)g Fh(C)1196
2019 y Ff(T)5 b(r)q(ap)1294 2012 y Fq(=)17 b Fg(\000)p Fq(2)p
Fh(C)1437 2019 y Ff(M)t(id)1524 2012 y Fq(as)h(alw)o(a)o(ys.)27
b(The)18 b Fh(k)75 2068 y Fq(v)m(alues)e(are)f(exactly)h(what)e(the)i(error)e
(term)h(in)h(the)f(pro)s(ject)g(equation)g(predicts.)75 2146
y Fn(Exercise)d(11.)19 b Fq(Again)12 b(in)g(accordance)f(with)g(Equation)h
(1,)f Fh(k)j Fq(=)f(2)e(for)f(b)q(oth)h(T)l(rap)q(ezoid)h(and)g(MidP)o(oin)o
(t)75 2202 y(while)23 b Fh(k)h Fq(=)g(4)d(for)g(Simpson.)40
b Fh(C)679 2209 y Ff(M)t(id)772 2202 y Fq(=)23 b Fg(\000)p
Fq(0)p Fh(:)p Fq(82,)f Fh(C)1015 2209 y Ff(T)5 b(r)q(ap)1119
2202 y Fq(=)23 b(1)p Fh(:)p Fq(65,)f(and)g Fh(C)1422 2209 y
Ff(S)r(imp)1531 2202 y Fq(=)h(0)p Fh(:)p Fq(135.)38 b(Again,)75
2258 y Fh(C)108 2265 y Ff(T)5 b(r)q(ap)201 2258 y Fq(=)13 b
Fg(\000)p Fq(2)p Fh(C)340 2265 y Ff(M)t(id)409 2258 y Fq(.)75
2336 y Fn(Exercise)18 b(12.)j Fq(W)l(e)15 b(get)g Fh(k)g Fq(=)e(1)p
Fh(:)p Fq(5)i(for)g(all)h(three)g(rules.)22 b(The)16 b(explanation)g(for)f
(this)h(loss)g(of)f(accuracy)75 2392 y(lies)h(in)f(the)g(error)f(term)g(of)g
(the)g(pro)s(ject)g(equation:)20 b(the)15 b(deriv)m(ativ)o(e)h(b)q(ecomes)f
(un)o(b)q(ounded)h(as)e Fh(x)f Fg(!)g Fq(2.)75 2449 y Fh(C)108
2456 y Ff(M)t(id)190 2449 y Fq(=)g Fg(\000)p Fq(0)p Fh(:)p
Fq(342983,)g Fh(C)506 2456 y Ff(T)5 b(r)q(ap)599 2449 y Fq(=)13
b(1)p Fh(:)p Fq(17373,)f(and)k Fh(C)945 2456 y Ff(S)r(imp)1043
2449 y Fq(=)d(0)p Fh(:)p Fq(459965.)p eop
%%Page: 55 55
55 54 bop 75 -100 a Fm(The)22 b(T)-6 b(ank)24 b(Problem)p 75
-93 570 2 v 1185 w Fq(55)606 49 y Fn(PURPOSE)18 b(OF)g(THE)g(PR)o(OJECT)146
152 y Fq(This)e(pro)s(ject)f(presen)o(ts)h(a)g(simple)i(v)o(olume)e(problem.)
23 b(The)16 b(pro)s(ject)f(illustrates)i(using)g(substitu-)75
208 y(tion)d(in)h(an)e(in)o(tegral)i(to)e(reduce)h(it)g(to)g(a)f(kno)o(wn)h
(one)g(and)f(also)h(reviews)h(Newton's)e(metho)q(d.)19 b(Because)75
265 y(w)o(e)13 b(think)g(the)g(studen)o(ts)g(should)h(b)o(y)f(no)o(w)f(b)q(e)
i(encouraged)f(to)g(dev)o(elop)g(a)g(sensitivit)o(y)h(to)f
Fl(Mathematic)n(a)75 321 y Fq(usage,)h(in)i(this)f(pro)s(ject)f(they)h(are)f
(required)i(to)e(create)g(their)h(o)o(wn)g Fk(Integrate)p Fq(,)e
Fk(Table)h Fq(and)h Fk(Do)f Fq(com-)75 378 y(mands)h(\(some)f(hin)o(ts)h(are)
g(giv)o(en,)g(but)g(there)g(isn't)g(m)o(uc)o(h)g(`cop)o(y)f(and)h(paste')g
(in)g(the)g(online)i(noteb)q(o)q(ok)75 434 y(for)c(this)h(pro)s(ject\).)k(Ho)
o(w)o(ev)o(er,)12 b(if)i(y)o(ou)f(prefer)h(to)f(supply)h(more)f(help,)i(y)o
(ou)e(can)h(dra)o(w)e(on)i(the)f(solutions)75 491 y(presen)o(ted)j(b)q(elo)o
(w.)75 568 y Fn(Shorter)h(Pro)s(ject)p Fq(:)j(Omit)15 b(an)o(y)g(of)g(3,)f
(6,)h(8.)75 645 y Fn(Instructor)j(Note)p Fq(:)37 b(The)16 b(tank)g(v)o(olume)
g(can)g(actually)h(b)q(e)f(in)o(tegrated)g(exactly)l(,)g(but)g(the)g(studen)o
(ts)75 702 y(ha)o(v)o(e)g(not)f(seen)i(the)f(metho)q(dology)h(\(trig)e
(substitution\))i(in)g(most)e(texts)h(at)f(the)h(time)h(when)g(de\014nite)75
758 y(in)o(tegral)12 b(applications)h(suc)o(h)f(as)f(v)o(olume)h(are)f
(presen)o(ted.)20 b Fn(Instructor)12 b(Note)p Fq(:)30 b(Sharp)12
b(ey)o(ed)g(studen)o(ts)75 814 y(who)j(notice)i(that)d(w)o(e'v)o(e)h(omitted)
h(the)f(colon)h(b)q(efore)g(the)g(equal)g(sign)g(in)h(some)e(function)h
(de\014nitions)75 871 y(in)e(the)f(co)q(ding)i(hin)o(ts)e(b)q(elo)o(w)h(and)g
(\\correct")e(this)h(omission)h(will)h(actually)f(pa)o(y)f(a)g(sligh)o(t)h(p)
q(erformance)75 927 y(p)q(enalt)o(y)l(.)21 b(The)15 b(subtle)h(distinction)h
(b)q(et)o(w)o(een)f Fk(:=)f Fq(and)g Fk(=)g Fq(is)h(explained)h(in)f(a)f
(later)g(pro)s(ject.)577 1053 y Fn(ANSWERS)i(F)o(OR)h(INSTR)o(UCTORS)75
1156 y(Exercise)g(1.)k Fq(As)16 b(the)g(studen)o(ts)g(ha)o(v)o(e)g(seen)g(b)q
(efore,)h(the)f(area)f(under)i Fh(y)f Fq(=)1426 1118 y Fg(p)p
1464 1118 143 2 v 38 x Fh(r)1486 1143 y Fe(2)1515 1156 y Fg(\000)11
b Fh(x)1587 1143 y Fe(2)1623 1156 y Fq(is)16 b(one-fourth)75
1213 y(the)k(area)f(of)g(the)h(circle)i(\(i.e.,)638 1195 y
Fe(1)p 638 1202 18 2 v 638 1228 a(4)660 1213 y Fh(\031)r(r)710
1196 y Fe(2)730 1213 y Fq(\).)33 b(F)l(actoring)19 b(an)h Fh(r)g
Fq(from)f(the)h(square)g(ro)q(ot)f(giv)o(es)h(the)g(stated)75
1269 y(result.)75 1346 y Fn(Exercise)c(3.)j Fq(The)14 b Fh(x=a)f
Fq(substitution)i(leads)f(to)g(4)p Fh(ab)1013 1312 y Fd(R)1039
1325 y Fe(1)1031 1360 y(0)1066 1308 y Fg(p)p 1104 1308 125
2 v 38 x Fq(1)c Fg(\000)g Fh(u)1208 1333 y Fe(2)1236 1346 y
Fh(du)p Fq(.)19 b(Since)c(the)f(in)o(tegral)g(represen)o(ts)75
1403 y(one-fourth)20 b(of)f(the)h(unit)h(circle,)h(w)o(e)d(obtain)h(an)g
(area)f(of)h Fh(\031)r(ab)f Fq(for)g(the)h(ellipse.)36 b(The)20
b(substitution)75 1459 y Fh(u)c Fq(=)h Fh(y)r(=b)f Fq(leads)i(to)e(the)i
(same)f(result)g(for)g(the)g(other)g(represen)o(tation)h(of)e(the)i(area.)25
b(Finally)l(,)19 b(w)o(e)e(get)75 1516 y(the)d(circle)j(if)d
Fh(a)f Fq(=)g Fh(b)f Fq(=)h Fh(r)i Fq(and,)g(indeed,)h(in)f(this)g(case)f
Fh(\031)r(ab)e Fq(=)h Fh(\031)r(r)1186 1499 y Fe(2)1205 1516
y Fq(,)h(the)g(area)g(of)g(the)h(circle)h(of)e(radius)h Fh(r)q
Fq(.)75 1593 y Fn(Exercise)e(4.)19 b Fq(The)12 b(cross)f(sectional)i(area)e
(is)i(a)e(rectangle)i(of)e(width)h(2)p Fh(x)h Fq(=)g(2)p Fh(a)1414
1556 y Fd(p)p 1455 1556 200 2 v 1455 1593 a Fq(1)d Fg(\000)g
Fq(\()p Fh(y)r(=b)p Fq(\))1636 1580 y Fe(2)1666 1593 y Fq(and)i(length)75
1649 y Fh(L)p Fq(.)20 b(Cho)q(osing)15 b(the)h(cen)o(ter)f(of)g(the)g
(ellipse)i(as)e(the)h(origin)f(giv)o(es)h(the)f(limits)i(indicated.)75
1720 y Fn(Exercise)g(5.)75 1828 y Fj(4)22 b(r)f(Integrate[Sqrt[1)e(-)i
(\(x/r\)^2],)f({x,)h(0,)h(r}])249 1878 y(2)162 1927 y(Pi)g(r)75
1977 y(4)g(b)f(Integrate[Sqrt[1)e(-)i(\(x/a\)^2],)f({x,)h(0,)h(a}])162
2027 y(a)g(b)f(Pi)75 2077 y(4)h(a)f(Integrate[Sqrt[1)e(-)i(\(y/b\)^2],)f({y,)
h(0,)h(b}])162 2127 y(a)g(b)f(Pi)75 2262 y Fn(Exercise)g(6.)29
b Fq(The)19 b(command)f Fk(2)24 b(L)f(a)h(Integrate[Sqrt[1)e(-)h(\(y/b\)^2],)
g({y,)g(-b,)h(h}])18 b Fq(giv)o(es)75 2318 y(the)d(result)568
2416 y(2)8 b Fh(a)g(L)676 2332 y Fd(0)676 2406 y(@)717 2377
y Fh(h)751 2326 y Fd(q)p 792 2326 126 2 v 792 2377 a Fq(1)i
Fg(\000)876 2359 y Ff(h)896 2350 y Fc(2)p 876 2366 38 2 v 879
2393 a Ff(b)894 2384 y Fc(2)p 717 2406 202 2 v 806 2447 a Fq(2)933
2416 y(+)984 2385 y Fh(b)e(\031)p 984 2406 55 2 v 1000 2447
a Fq(4)1053 2416 y(+)1104 2383 y Fh(b)15 b Fq(arcsin\()1278
2365 y Ff(h)p 1278 2372 21 2 v 1281 2399 a(b)1303 2383 y Fq(\))p
1104 2406 217 2 v 1201 2447 a(2)1326 2332 y Fd(1)1326 2406
y(A)1370 2416 y Fh(:)p eop
%%Page: 56 56
56 55 bop 75 -100 a Fq(56)1185 b Fm(The)22 b(T)-6 b(ank)24
b(Problem)p 1306 -93 570 2 v 75 49 a Fn(Exercise)17 b(7.)75
157 y Fj(L)22 b(=)f(20;)g(a)h(=)g(10;)f(b)g(=)h(5;)75 207 y(V[h_])f(=)g(2)h
(L)g(a)f(Integrate[Sqrt[1)e(-)i(\(y/b\)^2],)f({y,)h(-b,)g(h}];)75
257 y(Table[{h,)f(V[h]},)g({h,)i(-5,)f(5}])g(//N//TableForm)162
307 y(-5.)65 b(0)162 356 y(-4.)g(163.501)162 406 y(-3.)g(447.295)162
456 y(-2.)g(792.673)162 506 y(-1.)g(1173.48)162 556 y(0)109
b(1570.8)162 606 y(1.)87 b(1968.11)162 655 y(2.)g(2348.92)162
705 y(3.)g(2694.3)162 755 y(4.)g(2978.09)162 805 y(5.)g(3141.59)75
933 y Fn(Exercise)17 b(8.)75 1041 y Fj(L)22 b(=)f(20;)g(a)h(=)g(10;)f(b)g(=)h
(5;)75 1091 y(V[h_])f(=)g(2)h(L)g(a)f(Integrate[Sqrt[1)e(-)i(\(y/b\)^2],)f
({y,)h(-b,)g(h}]//N;)75 1141 y(Vprime[h_])f(=)h(2)h(L)f(a)h(Sqrt[1)f(-)g
(\(h/b\)^2]//N;)75 1191 y(c)h(=)f(500.0;)75 1241 y(hn)g(=)h(-2.8;)f(\(*)g
(suggested)f(by)h(results)g(in)g(7)h(*\))75 1290 y(Do)f([)75
1340 y(hn)g(=)h(hn)f(-)h(\(V[hn])e(-)i(c\)/Vprime[hn];)75 1390
y(Print[hn],)75 1440 y({5}])162 1490 y(-2.83758)162 1539 y(-2.8377)162
1589 y(-2.8377)162 1639 y(-2.8377)162 1689 y(-2.8377)75 1804
y Fq(T)l(o)15 b(measure)g(from)g(the)g Fl(b)n(ottom)k Fq(of)c(the)g(stic)o
(k,)g(add)g(5)g(to)g(this)g(result:)21 b(2.1623.)75 1874 y
Fn(Exercise)c(9.)75 1982 y Fj(L)22 b(=)f(20;)g(a)h(=)g(10;)f(b)g(=)h(5;)75
2032 y(Pi)f(a)h(b)g(L)f(//N)75 2082 y(3141.59)75 2131 y(\045)h(/)f(2)75
2181 y(1570.8)p eop
%%Page: 57 57
57 56 bop 75 -105 a Fm(Arclength)22 b(\(optional\))p 75 -84
619 2 v 1135 w Fq(57)606 49 y Fn(PURPOSE)c(OF)g(THE)g(PR)o(OJECT)146
152 y Fq(Examine)11 b(arclength)g(problems)g(from)g(an)f(\\insider's")i(p)q
(oin)o(t)f(of)f(view.)19 b(That)10 b(is,)i(try)e(to)h(in)o(v)o(olv)o(e)g(the)
75 208 y(studen)o(ts)k(in)g(the)g(construction)g(of)f(text)g(b)q(o)q(ok)h
(problems.)21 b(The)14 b(relation)i(b)q(et)o(w)o(een)f(the)g(fundamen)o(tal)
75 265 y(theorem)g(and)g(n)o(umerical)i(existence)f(of)f(the)g(in)o(tegral)h
(is)f(again)h(revisited.)75 342 y Fn(Shorter)h(Pro)s(ject)p
Fq(:)j(Omit)15 b(4,)g(8,)f(9)h(and)h(12.)577 468 y Fn(ANSWERS)h(F)o(OR)h
(INSTR)o(UCTORS)75 571 y(Exercise)j(1.)29 b Fq(The)19 b(di\013eren)o(tial)g
(arclength)g(is)g Fh(ds)f Fq(=)1051 533 y Fd(p)p 1093 533 230
2 v 38 x Fq(1)10 b(+)g Fh(p)1194 558 y Fe(2)1214 571 y Fh(x)1240
558 y Fe(2)p Ff(p)p Fb(\000)p Fe(2)1330 571 y Fh(dx)p Fq(.)29
b(Hence)19 b(2)p Fh(p)12 b Fg(\000)h Fq(2)18 b(is)h(in)g(the)75
627 y(range)14 b Fg(\000)p Fq(2)g(to)g(2,)g(so)g(the)g Fh(p)p
Fq(-v)m(alues)i(are)e(0,)f(1/2,)h(1,)f(3/2,)h(2.)19 b(The)14
b(v)m(alues)i(0)e(and)g(1)g(corresp)q(ond)h(to)f(lines.)75
704 y Fn(Exercise)k(2.)23 b Fq(The)17 b(di\013eren)o(tial)g(arclengths)f(are)
g(giv)o(en)h(b)o(y)f Fh(x)1175 688 y Fe(2)1206 704 y Fq(+)11
b(1)p Fh(=)p Fq(\(4)p Fh(x)1365 688 y Fe(2)1383 704 y Fq(\))16
b(and)g Fh(x=)p Fq(4)11 b(+)g(1)p Fh(=x)p Fq(,)k(eac)o(h)h(of)75
761 y(whic)o(h)f(is)g(easily)h(in)o(tegrated.)j(As)c(the)f(succeeding)i
(explanation)g(sho)o(ws,)d(the)i(in)o(tegrals)g(are)f(the)g(same)75
817 y(as)h(the)g(original)h Fh(y)r Fq('s)f(except)h(for)e(a)h(sign)h(c)o
(hange)f(b)q(et)o(w)o(een)h(the)f(t)o(w)o(o)f(comp)q(onen)o(ts.)75
888 y Fn(Exercise)j(3.)75 996 y Fj(f[x_])k(:=)g(x^2)75 1046
y(Integrate[f[x])e(-)i(1/\(4f[x]\),)f(x])i(\(*)f(y)h(*\))315
1096 y(3)184 1145 y(1)87 b(x)162 1195 y(---)21 b(+)h(--)162
1245 y(4)g(x)65 b(3)75 1295 y(Integrate[f[x])19 b(+)i(1/\(4f[x]\),)f(x])i
(\(*)f(s)h(*\))315 1345 y(3)162 1394 y(-1)87 b(x)162 1444 y(---)21
b(+)h(--)162 1494 y(4)g(x)65 b(3)75 1594 y(f[x_])21 b(:=)g(1/x)75
1643 y(Integrate[f[x])e(-)i(1/\(4f[x]\),)f(x])i(\(*)f(y)h(*\))206
1693 y(2)162 1743 y(-x)162 1793 y(---)f(+)h(Log[x])184 1843
y(8)75 1893 y(Integrate[f[x])d(+)i(1/\(4f[x]\),)f(x])i(\(*)f(s)h(*\))184
1942 y(2)162 1992 y(x)162 2042 y(--)g(+)f(Log[x])162 2092 y(8)75
2227 y Fn(Exercise)c(5.)j Fq(Resp)q(ectiv)o(ely)l(,)c(no,)f(y)o(es,)g(no.)p
eop
%%Page: 58 58
58 57 bop 75 -105 a Fq(58)1135 b Fm(Arclength)22 b(\(optional\))p
1256 -84 619 2 v 75 49 a Fn(Exercise)17 b(6.)75 155 y Fj(y[x_])k(:=)g(x^3/3)g
(+)g(1/\(4x\))75 205 y(Integrate[ds[y,x])o(,)e(x])i(//Simplify)445
254 y(4)h(2)271 304 y(\(1)g(+)f(4)h(x)f(\))87 b(x)131 b(4)21
b(x)162 354 y(Sqrt[-----------])d(\(-)k(-)f(---------\))380
404 y(4)174 b(3)240 b(4)358 454 y(x)283 b(3)22 b(+)g(12)f(x)162
503 y(------------------)o(-----)o(-----)o(-----)511 553 y(4)75
653 y(y[x_])g(:=)g(Log[x])g(-)g(x^2/8)75 703 y(Integrate[ds[y,x])o(,)e(x])i
(//Simplify)467 753 y(2)h(2)544 b(2)22 b(2)184 802 y(3)131
b(\(4)21 b(+)g(x)h(\))436 b(\(4)21 b(+)h(x)f(\))162 852 y(x)44
b(Sqrt[---------])280 b(Sqrt[---------])424 902 y(2)588 b(2)402
952 y(x)g(x)162 1002 y(------------------)18 b(+)k(Integrate[-------)o(----)o
(----,)c(x])424 1051 y(2)588 b(2)249 1101 y(8)22 b(\(4)f(+)h(x)f(\))458
b(4)22 b(+)f(x)75 1234 y Fn(Exercise)c(7.)j Fq(3.8202)571 1781
y @beginspecial 0 @llx 0 @lly 282 @urx 174 @ury 1937 @rwi @setspecial
%%BeginDocument: ArcL.sine.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.02381 0.303152 0.014715 0.154077 [
[(0.5)] 0.17539 0.01472 0 2 Msboxa
[(1)] 0.32696 0.01472 0 2 Msboxa
[(1.5)] 0.47854 0.01472 0 2 Msboxa
[(2)] 0.63011 0.01472 0 2 Msboxa
[(2.5)] 0.78169 0.01472 0 2 Msboxa
[(3)] 0.93327 0.01472 0 2 Msboxa
[(1)] 0.01131 0.16879 1 0 Msboxa
[(2)] 0.01131 0.32287 1 0 Msboxa
[(3)] 0.01131 0.47695 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.17539 0.01472 moveto
0.17539 0.02097 lineto
stroke
grestore
[(0.5)] 0.17539 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.32696 0.01472 moveto
0.32696 0.02097 lineto
stroke
grestore
[(1)] 0.32696 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.47854 0.01472 moveto
0.47854 0.02097 lineto
stroke
grestore
[(1.5)] 0.47854 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.63011 0.01472 moveto
0.63011 0.02097 lineto
stroke
grestore
[(2)] 0.63011 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.78169 0.01472 moveto
0.78169 0.02097 lineto
stroke
grestore
[(2.5)] 0.78169 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.93327 0.01472 moveto
0.93327 0.02097 lineto
stroke
grestore
[(3)] 0.93327 0.01472 0 2 Mshowa
gsave
0.001 setlinewidth
0.05412 0.01472 moveto
0.05412 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.08444 0.01472 moveto
0.08444 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11476 0.01472 moveto
0.11476 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.14507 0.01472 moveto
0.14507 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2057 0.01472 moveto
0.2057 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.23602 0.01472 moveto
0.23602 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.26633 0.01472 moveto
0.26633 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29665 0.01472 moveto
0.29665 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35728 0.01472 moveto
0.35728 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38759 0.01472 moveto
0.38759 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.41791 0.01472 moveto
0.41791 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44822 0.01472 moveto
0.44822 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.50885 0.01472 moveto
0.50885 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53917 0.01472 moveto
0.53917 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56948 0.01472 moveto
0.56948 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5998 0.01472 moveto
0.5998 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.66043 0.01472 moveto
0.66043 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69074 0.01472 moveto
0.69074 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72106 0.01472 moveto
0.72106 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.75137 0.01472 moveto
0.75137 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81201 0.01472 moveto
0.81201 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84232 0.01472 moveto
0.84232 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.87264 0.01472 moveto
0.87264 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90295 0.01472 moveto
0.90295 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.96358 0.01472 moveto
0.96358 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9939 0.01472 moveto
0.9939 0.01847 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.01472 moveto
1 0.01472 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0.16879 moveto
0.03006 0.16879 lineto
stroke
grestore
[(1)] 0.01131 0.16879 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.32287 moveto
0.03006 0.32287 lineto
stroke
grestore
[(2)] 0.01131 0.32287 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.47695 moveto
0.03006 0.47695 lineto
stroke
grestore
[(3)] 0.01131 0.47695 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.04553 moveto
0.02756 0.04553 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.07635 moveto
0.02756 0.07635 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.10716 moveto
0.02756 0.10716 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.13798 moveto
0.02756 0.13798 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.19961 moveto
0.02756 0.19961 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.23042 moveto
0.02756 0.23042 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.26124 moveto
0.02756 0.26124 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.29205 moveto
0.02756 0.29205 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.35368 moveto
0.02756 0.35368 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.3845 moveto
0.02756 0.3845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.41531 moveto
0.02756 0.41531 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.44613 moveto
0.02756 0.44613 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.50776 moveto
0.02756 0.50776 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.53858 moveto
0.02756 0.53858 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.56939 moveto
0.02756 0.56939 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.60021 moveto
0.02756 0.60021 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.06349 0.0432 lineto
0.10317 0.07144 lineto
0.14286 0.0992 lineto
0.18254 0.12629 lineto
0.22222 0.15251 lineto
0.2619 0.17774 lineto
0.30159 0.2019 lineto
0.34127 0.22498 lineto
0.38095 0.24704 lineto
0.42063 0.26823 lineto
0.46032 0.28879 lineto
0.5 0.30902 lineto
0.53968 0.32924 lineto
0.57937 0.3498 lineto
0.61905 0.371 lineto
0.65873 0.39306 lineto
0.69841 0.41613 lineto
0.7381 0.44029 lineto
0.77778 0.46552 lineto
0.81746 0.49174 lineto
0.85714 0.51883 lineto
0.89683 0.5466 lineto
0.93651 0.57484 lineto
0.97619 0.60332 lineto
stroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 531 1867 a Fi(Fig)p Fq(.)15 b(28.)k(Arclength)d(of)f(sine)h
(function)g(v)o(ersus)f Fh(x)p Fq(.)75 1975 y Fn(Exercise)i(8.)75
2081 y Fj(y[x_])k(:=)g(Sin[x])75 2130 y(Table[{N[b],)e(NIntegrate[ds[y,x],)f
({x,)j(0,)h(b}]},)75 2180 y({b,)f(0,)h(Pi,)f(Pi/8}])f(//TableForm)162
2230 y(0)218 b(0)162 2280 y(0.392699)64 b(0.548362)162 2330
y(0.785398)g(1.0581)162 2380 y(1.1781)108 b(1.50782)162 2429
y(1.5708)g(1.9101)162 2479 y(1.9635)g(2.31238)162 2529 y(2.35619)86
b(2.7621)162 2579 y(2.74889)g(3.27184)162 2629 y(3.14159)g(3.8202)p
eop
%%Page: 59 59
59 58 bop 75 -105 a Fm(Arclength)22 b(\(optional\))p 75 -84
619 2 v 1135 w Fq(59)75 49 y Fn(Exercise)17 b(9.)j Fq(The)15
b(co)q(de)75 157 y Fj(y[x_])21 b(:=)g(Sin[x])75 207 y(Plot[NIntegrate[d)o
(s[y,x)o(],)e({x,)i(0,)g(b}],)g({b,)h(0,)f(Pi}])75 322 y Fq(pro)q(duces)16
b(the)f(plot)h(in)g(Figure)f(28.)75 399 y Fn(Exercise)21 b(11.)31
b Fq(In)19 b(b)q(oth)g(cases,)g Fl(Mathematic)n(a)j Fq(do)q(es)d(not)g
(extract)f(the)g(ob)o(vious)h(square)g(ro)q(ot.)29 b(In)75
455 y(the)18 b(second)h(case,)g(it)g(can't)e(ev)o(en)i(do)f(the)h(in)o
(tegral)f(b)q(ecause)i(of)d(this.)30 b(Once)19 b(the)g(square)f(ro)q(ots)f
(are)75 512 y(extracted)k(man)o(ually)l(,)i(it)e(isn't)g(hard)g(to)f
(reconcile)j(the)e(results.)38 b(Note:)31 b(The)21 b(exact)g(b)q(eha)o(vior)g
(of)75 568 y Fl(Mathematic)n(a)e Fq(ma)o(y)c(v)m(ary)g(with)g(v)o(ersion.)75
645 y Fn(Exercise)i(12.)j Fq(The)c(results)f(are)g(totally)g(consisten)o(t)h
(\(or)e(should)i(b)q(e!\).)p eop
%%Page: 60 60
60 59 bop 75 -103 a Fq(60)1161 b Fm(W)-6 b(ork)24 b(Along)f(an)g(Arc)p
1282 -85 594 2 v 606 49 a Fn(PURPOSE)18 b(OF)g(THE)g(PR)o(OJECT)146
152 y Fq(This)23 b(pro)s(ject)e(generalizes)j(the)e(w)o(ork)g(form)o(ula)g
(from)f(a)h(straigh)o(t)g(line)i(path)e(to)g(a)g(curv)o(ed)g(or)75
208 y(segmen)o(ted)17 b(path.)24 b(Since)18 b(w)o(e)e(restrict)g(the)h(force)
g(to)f(b)q(e)h(a)f(function)i(of)e Fh(x)g Fq(and)h(the)g(direction)h(of)e
(the)75 265 y(force)g(to)f(b)q(e)h(along)g(the)g(path,)f(it)h(is)g(only)g(a)g
(\014rst)f(step)h(to)o(w)o(ards)e(the)i(completely)h(general)f(case.)22
b(The)75 321 y(pro)s(ject)e(also)g(reinforces)h(the)g(form)o(ula)f(for)f
(di\013eren)o(tial)j(arclength.)36 b(The)20 b(last)h(problem)g(asks)f(the)75
378 y(studen)o(ts)15 b(to)g(tak)o(e)f(the)h(role)h(of)f(a)g(text)f(b)q(o)q
(ok)i(author)e(\(as)h(w)o(as)f(done)i(in)g(the)f(Arclength)h(pro)s(ject\).)75
455 y Fn(Shorter)h(Pro)s(ject)p Fq(:)j(Omit)15 b(4)g(and)h(6.)577
581 y Fn(ANSWERS)h(F)o(OR)h(INSTR)o(UCTORS)75 684 y(Exercise)f(1.)75
740 y(a\))f Fq(\()154 703 y Fd(p)p 195 703 368 2 v 195 740
a Fq(\(3)10 b Fg(\000)g Fq(1\))332 727 y Fe(2)361 740 y Fq(+)h(\(3)e
Fg(\000)i Fq(2\))544 727 y Fe(2)573 740 y Fq(+)f Fg(\001)e(\001)g(\001)g
Fq(+)727 703 y Fd(p)p 768 703 V 768 740 a Fq(\(6)i Fg(\000)g
Fq(5\))905 727 y Fe(2)935 740 y Fq(+)g(\(8)g Fg(\000)g Fq(5\))1117
727 y Fe(2)1136 740 y Fq(\))p Fh(k)k Fq(=)f(8)p Fh(:)p Fq(63)p
Fh(k)q Fq(.)75 797 y Fn(b\))j Fq(This)f(is)h(the)f(top)g(of)g(a)g(circle)i
(of)d(radius)i(2:)906 779 y Fe(1)p 906 786 18 2 v 906 812 a(2)928
797 y Fh(\031)r Fq(2)979 780 y Fe(2)1011 797 y Fq(=)d(2)p Fh(\031)h
Fg(\031)f Fq(6)p Fh(:)p Fq(28.)75 853 y Fn(c\))j Fq(A)f(four)g(p)q(oin)o(t)g
(c)o(hordal)h(appro)o(ximation)f(with)h Fh(f)5 b Fq(\()p Fh(x)p
Fq(\))12 b(=)h Fh(x)1139 837 y Fe(2)1169 853 y Fg(\000)d Fq(4)15
b(giv)o(es:)75 910 y(\()93 873 y Fd(p)p 134 873 518 2 v 134
910 a Fq(\()p Fh(:)p Fq(5)9 b Fg(\000)i Fq(0\))284 896 y Fe(2)313
910 y Fq(+)f(\()p Fh(f)5 b Fq(\()p Fh(:)p Fq(5\))k Fg(\000)i
Fh(f)5 b Fq(\(0\)\))634 896 y Fe(2)662 910 y Fq(+)11 b Fg(\001)d(\001)g(\001)
g Fq(+)816 873 y Fd(p)p 858 873 564 2 v 37 x Fq(\(2)h Fg(\000)i
Fq(1)p Fh(:)p Fq(5\))1031 896 y Fe(2)1059 910 y Fq(+)g(\()p
Fh(f)5 b Fq(\(2\))k Fg(\000)h Fh(f)5 b Fq(\(1)p Fh(:)p Fq(5\)\))1403
896 y Fe(2)1421 910 y Fq(\))p Fh(k)14 b Fq(=)f(4)p Fh(:)p Fq(63)p
Fh(k)q Fq(.)75 987 y Fn(Exercise)k(2.)75 1043 y(a\))c Fq(\()151
1007 y Fd(p)p 192 1007 368 2 v 192 1043 a Fq(\(3)d Fg(\000)g
Fq(1\))329 1030 y Fe(2)358 1043 y Fq(+)h(\(3)e Fg(\000)i Fq(2\))541
1030 y Fe(2)560 1043 y Fq(\(3)t Fg(\000)t Fq(2\))p Fh(=)p Fq(\(3)t
Fg(\000)t Fq(1\))t(+)t Fg(\001)d(\001)g(\001)r Fq(+)972 1007
y Fd(p)p 1014 1007 V 36 x Fq(\(6)h Fg(\000)i Fq(5\))1151 1030
y Fe(2)1180 1043 y Fq(+)f(\(8)g Fg(\000)g Fq(5\))1362 1030
y Fe(2)1381 1043 y Fq(\(8)t Fg(\000)t Fq(5\))p Fh(=)p Fq(\(6)t
Fg(\000)t Fq(5\)\))p Fh(k)i Fq(=)h(15)p Fh(:)p Fq(1)p Fh(k)q
Fq(.)75 1100 y Fn(b\))j Fq(2)p Fh(\031)r(k)d Fg(\031)f Fq(6)p
Fh(:)p Fq(28)p Fh(k)q Fq(.)75 1156 y Fn(c\))k Fq(The)f(four)g(c)o(hords)g
(used)h(in)g(\(1c\))e(giv)o(e)i(11.4)p Fh(k)q Fq(.)75 1233
y Fn(Exercise)25 b(3.)39 b Fq(F)l(or)21 b(part)h(\(b\),)g(use)g(the)g
(substitution)h Fh(u)g Fq(=)h(1)14 b(+)h(4)p Fh(x)1334 1217
y Fe(2)1375 1233 y Fq(to)22 b(get)f(the)h(an)o(tideriv)m(ativ)o(e)80
1272 y Fe(1)p 80 1279 18 2 v 80 1305 a(4)103 1290 y Fq(\(1)9
b(+)i(4)p Fh(x)248 1273 y Fe(2)267 1290 y Fq(\))285 1273 y
Fe(3)p Ff(=)p Fe(2)340 1290 y Fq(.)19 b(The)d(n)o(umerical)g(result)g(is)g
(17.2732.)75 1367 y Fn(Exercise)j(4.)25 b Fq(F)l(or)16 b Fh(C)466
1374 y Fe(2)502 1367 y Fq(the)g(length)i(is)f(0)p Fh(:)p Fq(5)p
Fh(\031)r Fq(2)879 1351 y Fe(2)912 1367 y Fq(=)f(6)p Fh(:)p
Fq(28319.)23 b(Ho)o(w)o(ev)o(er,)15 b Fk(Integrate)h Fq(fails)h(altogether)75
1423 y(and)10 b Fk(NIntegrate)f Fq(tak)o(es)h(a)f(long)i(time)f(to)g(come)g
(up)h(with)f(this)h(result.)19 b(The)10 b(problem)h(is)g(the)f(singularit)o
(y)75 1480 y(in)16 b(the)f(arclength)h(at)e(the)i(endp)q(oin)o(ts)g(\(the)f
(circle)i(has)e(v)o(ertical)h(tangen)o(ts)e(there!\).)75 1550
y(F)l(or)h Fh(C)190 1557 y Fe(3)209 1550 y Fq(:)75 1658 y Fj(h[x_])21
b(:=)g(x^2)g(-)h(4.0;)75 1708 y(F[x_])f(:=)g(3x;)75 1758 y(a)h(=)f(0;)h(b)f
(=)h(2;)75 1808 y(ArcLength)e(=)i(Integrate[Sqrt[)o(1)d(+)j(h'[x]^2],)e({x,)h
(a,)g(b}])402 1907 y(ArcSinh[4])162 1957 y(Sqrt[17])f(+)i(----------)489
2007 y(4)75 2057 y(N[ArcLength])162 2107 y(4.64678)p eop
%%Page: 61 61
61 60 bop 75 -103 a Fm(W)-6 b(ork)24 b(Along)f(an)h(Arc)p 75
-85 594 2 v 1161 w Fq(61)571 502 y @beginspecial 0 @llx 0 @lly
282 @urx 174 @ury 1937 @rwi @setspecial
%%BeginDocument: WorkArc.h.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.000000 def
/Mwidth		282.000000 def
/Mheight	174.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.02381 0.303152 0.174339 0.528546 [
[(0.5)] 0.17539 0.17434 0 2 Msboxa
[(1)] 0.32696 0.17434 0 2 Msboxa
[(1.5)] 0.47854 0.17434 0 2 Msboxa
[(2)] 0.63011 0.17434 0 2 Msboxa
[(2.5)] 0.78169 0.17434 0 2 Msboxa
[(3)] 0.93327 0.17434 0 2 Msboxa
[(-0.2)] 0.01131 0.06863 1 0 Msboxa
[(0.2)] 0.01131 0.28005 1 0 Msboxa
[(0.4)] 0.01131 0.38576 1 0 Msboxa
[(0.6)] 0.01131 0.49147 1 0 Msboxa
[(0.8)] 0.01131 0.59718 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.17539 0.17434 moveto
0.17539 0.18059 lineto
stroke
grestore
[(0.5)] 0.17539 0.17434 0 2 Mshowa
gsave
0.002 setlinewidth
0.32696 0.17434 moveto
0.32696 0.18059 lineto
stroke
grestore
[(1)] 0.32696 0.17434 0 2 Mshowa
gsave
0.002 setlinewidth
0.47854 0.17434 moveto
0.47854 0.18059 lineto
stroke
grestore
[(1.5)] 0.47854 0.17434 0 2 Mshowa
gsave
0.002 setlinewidth
0.63011 0.17434 moveto
0.63011 0.18059 lineto
stroke
grestore
[(2)] 0.63011 0.17434 0 2 Mshowa
gsave
0.002 setlinewidth
0.78169 0.17434 moveto
0.78169 0.18059 lineto
stroke
grestore
[(2.5)] 0.78169 0.17434 0 2 Mshowa
gsave
0.002 setlinewidth
0.93327 0.17434 moveto
0.93327 0.18059 lineto
stroke
grestore
[(3)] 0.93327 0.17434 0 2 Mshowa
gsave
0.001 setlinewidth
0.05412 0.17434 moveto
0.05412 0.17809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.08444 0.17434 moveto
0.08444 0.17809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11476 0.17434 moveto
0.11476 0.17809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.14507 0.17434 moveto
0.14507 0.17809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2057 0.17434 moveto
0.2057 0.17809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.23602 0.17434 moveto
0.23602 0.17809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.26633 0.17434 moveto
0.26633 0.17809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29665 0.17434 moveto
0.29665 0.17809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35728 0.17434 moveto
0.35728 0.17809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38759 0.17434 moveto
0.38759 0.17809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.41791 0.17434 moveto
0.41791 0.17809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44822 0.17434 moveto
0.44822 0.17809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.50885 0.17434 moveto
0.50885 0.17809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53917 0.17434 moveto
0.53917 0.17809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56948 0.17434 moveto
0.56948 0.17809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5998 0.17434 moveto
0.5998 0.17809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.66043 0.17434 moveto
0.66043 0.17809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69074 0.17434 moveto
0.69074 0.17809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72106 0.17434 moveto
0.72106 0.17809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.75137 0.17434 moveto
0.75137 0.17809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81201 0.17434 moveto
0.81201 0.17809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84232 0.17434 moveto
0.84232 0.17809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.87264 0.17434 moveto
0.87264 0.17809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90295 0.17434 moveto
0.90295 0.17809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.96358 0.17434 moveto
0.96358 0.17809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9939 0.17434 moveto
0.9939 0.17809 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.17434 moveto
1 0.17434 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0.06863 moveto
0.03006 0.06863 lineto
stroke
grestore
[(-0.2)] 0.01131 0.06863 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.28005 moveto
0.03006 0.28005 lineto
stroke
grestore
[(0.2)] 0.01131 0.28005 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.38576 moveto
0.03006 0.38576 lineto
stroke
grestore
[(0.4)] 0.01131 0.38576 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.49147 moveto
0.03006 0.49147 lineto
stroke
grestore
[(0.6)] 0.01131 0.49147 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.59718 moveto
0.03006 0.59718 lineto
stroke
grestore
[(0.8)] 0.01131 0.59718 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.08977 moveto
0.02756 0.08977 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.11091 moveto
0.02756 0.11091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.13206 moveto
0.02756 0.13206 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.1532 moveto
0.02756 0.1532 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.19548 moveto
0.02756 0.19548 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.21662 moveto
0.02756 0.21662 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.23776 moveto
0.02756 0.23776 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.25891 moveto
0.02756 0.25891 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.30119 moveto
0.02756 0.30119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.32233 moveto
0.02756 0.32233 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.34347 moveto
0.02756 0.34347 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.36462 moveto
0.02756 0.36462 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.4069 moveto
0.02756 0.4069 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.42804 moveto
0.02756 0.42804 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.44918 moveto
0.02756 0.44918 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.47032 moveto
0.02756 0.47032 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.51261 moveto
0.02756 0.51261 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.53375 moveto
0.02756 0.53375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.55489 moveto
0.02756 0.55489 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.57603 moveto
0.02756 0.57603 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.04749 moveto
0.02756 0.04749 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.02635 moveto
0.02756 0.02635 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.0052 moveto
0.02756 0.0052 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.17434 moveto
0.06349 0.3732 lineto
0.08333 0.45708 lineto
0.10317 0.5241 lineto
0.1131 0.5503 lineto
0.12302 0.5713 lineto
0.12798 0.57981 lineto
0.13294 0.587 lineto
0.1379 0.59286 lineto
0.14286 0.59741 lineto
0.14534 0.59919 lineto
0.14782 0.60065 lineto
0.1503 0.60179 lineto
0.15154 0.60224 lineto
0.15278 0.60261 lineto
0.15402 0.60291 lineto
0.15526 0.60312 lineto
0.1565 0.60326 lineto
0.15774 0.60332 lineto
0.15898 0.6033 lineto
0.16022 0.60321 lineto
0.16146 0.60304 lineto
0.1627 0.6028 lineto
0.16518 0.60208 lineto
0.16766 0.60108 lineto
0.17014 0.59978 lineto
0.17262 0.59821 lineto
0.17758 0.59422 lineto
0.18254 0.58916 lineto
0.19246 0.57602 lineto
0.20238 0.55919 lineto
0.22222 0.51621 lineto
0.2619 0.40549 lineto
0.30159 0.28429 lineto
0.34127 0.17434 lineto
0.36111 0.12826 lineto
0.38095 0.08964 lineto
0.40079 0.05902 lineto
0.41071 0.04679 lineto
0.42063 0.0366 lineto
0.43056 0.02843 lineto
0.44048 0.02223 lineto
0.44544 0.01984 lineto
0.4504 0.01792 lineto
0.45288 0.01714 lineto
0.45536 0.01646 lineto
0.45784 0.0159 lineto
0.46032 0.01545 lineto
0.46156 0.01527 lineto
0.4628 0.01511 lineto
Mistroke
0.46404 0.01498 lineto
0.46528 0.01487 lineto
0.46652 0.01479 lineto
0.46776 0.01474 lineto
0.469 0.01472 lineto
0.47024 0.01472 lineto
0.47148 0.01474 lineto
0.47272 0.01479 lineto
0.47396 0.01487 lineto
0.4752 0.01497 lineto
0.47768 0.01525 lineto
0.48016 0.01562 lineto
0.48512 0.01665 lineto
0.49008 0.01805 lineto
0.5 0.02191 lineto
0.50992 0.02705 lineto
0.51984 0.03337 lineto
0.53968 0.04899 lineto
0.57937 0.08859 lineto
0.61905 0.13268 lineto
0.65873 0.17434 lineto
0.69841 0.20832 lineto
0.71825 0.22134 lineto
0.72817 0.22674 lineto
0.7381 0.23138 lineto
0.74802 0.23526 lineto
0.75794 0.23836 lineto
0.76786 0.2407 lineto
0.77282 0.24159 lineto
0.77778 0.2423 lineto
0.78026 0.24258 lineto
0.78274 0.24282 lineto
0.78522 0.24301 lineto
0.78646 0.24309 lineto
0.7877 0.24316 lineto
0.78894 0.24322 lineto
0.79018 0.24326 lineto
0.79142 0.2433 lineto
0.79266 0.24332 lineto
0.7939 0.24334 lineto
0.79514 0.24334 lineto
0.79638 0.24333 lineto
0.79762 0.24332 lineto
0.79886 0.24329 lineto
0.8001 0.24325 lineto
0.80134 0.2432 lineto
0.80258 0.24314 lineto
0.80754 0.2428 lineto
0.81002 0.24257 lineto
0.8125 0.24229 lineto
Mistroke
0.81746 0.24164 lineto
0.82738 0.23987 lineto
0.8373 0.23755 lineto
0.85714 0.23141 lineto
0.89683 0.21456 lineto
0.93651 0.19444 lineto
0.97619 0.17434 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 549 588 a Fi(Fig)p Fq(.)16 b(29.)j(The)c(curv)o(e)h
Fh(h)p Fq(\()p Fh(x)p Fq(\))c(=)h(sin)8 b(3)p Fh(x=)p Fq(\(1)h(+)i
Fh(x)1351 572 y Fe(2)1370 588 y Fq(\).)75 728 y Fn(Exercise)17
b(5.)75 778 y(a\))75 886 y Fj(h[x_])k(:=)g(x^2)g(-)h(4)75 936
y(F[x_])f(:=)g(3x)75 986 y(a)h(=)f(0;)43 b(b)22 b(=)g(2;)75
1036 y(Work)f(=)h(Integrate[F[x])c(Sqrt[1)j(+)h(h'[x]^2],)e({x,)h(a,)g(b}])
358 1085 y(3/2)206 1135 y(1)87 b(17)162 1185 y(-\(-\))21 b(+)h(-----)206
1235 y(4)130 b(4)75 1335 y(N[Work])162 1384 y(17.2732)75 1542
y Fn(b\))16 b Fq(The)f(curv)o(e)g(is)h(sho)o(wn)f(in)h(Figure)f(29.)75
1650 y Fj(h[x_])21 b(:=)g(Sin[3x])f(/)i(\(1)f(+)h(x^2\))75
1700 y(F[x_])f(:=)g(2)h(x^2)75 1750 y(a)g(=)f(0;)43 b(b)22
b(=)g(Pi;)75 1799 y(ArcLength)e(=)i(NIntegrate[Sqrt)o([1)d(+)i(h'[x]^2],)f
({x,)h(a,)h(b}])162 1849 y(4.32258)75 1899 y(Work)f(=)h(NIntegrate[F[x])c
(Sqrt[1)j(+)g(h'[x]^2],)f({x,)h(a,)h(b}])162 1949 y(22.6568)75
2107 y Fn(c\))16 b Fq(F)l(or)e(the)i(force)f(prop)q(ortional)g(to)g(the)g
(slop)q(e:)75 2215 y Fj(F[x_])21 b(:=)g(3)h(h'[x])75 2264 y(Work)f(=)h
(NIntegrate[F[x])c(Sqrt[1)j(+)g(h'[x]^2],)f({x,)h(a,)h(b}])162
2314 y(1.52628)75 2449 y Fn(Exercise)17 b(6.)j Fq(Note)15 b(that)f
Fh(h)i Fq(is)f(negativ)o(e)h(on)f(part)f(of)h(the)g(path.)75
2527 y Fn(Exercise)20 b(7.)26 b Fq(One)18 b(w)o(a)o(y)e(is)i(to)f(pic)o(k)h
(an)o(y)f Fh(h)g Fq(and)h(then)f(pic)o(k)h Fh(F)24 b Fq(prop)q(ortional)18
b(to)e(the)i(deriv)m(ativ)o(e)g(of)75 2583 y Fh(h)101 2567
y Fb(0)p Fe(2)130 2583 y Fq(,)d(so)g(that)g(the)g(substitution)h
Fh(u)d Fq(=)f(1)e(+)h Fh(h)835 2567 y Fb(0)p Fe(2)864 2583
y Fq(\()p Fh(x)p Fq(\))k(w)o(orks.)p eop
%%Page: 62 62
62 61 bop 75 -105 a Fq(62)329 b Fm(Curv)n(e)23 b(Fitting)e(for)j(Discrete)c
(Data)k(Sets)e(\(optional\))p 450 -84 1425 2 v 606 49 a Fn(PURPOSE)c(OF)g
(THE)g(PR)o(OJECT)146 154 y Fq(This)h(pro)s(ject)f(in)o(tro)q(duces)h(the)g
(concept)g(of)f(least)h(squares.)30 b(W)l(e)18 b(lean)i(hea)o(vily)f(on)g
(the)g(built-in)75 210 y Fk(Fit)13 b Fq(command.)20 b(Some)13
b(instructors)h(ma)o(y)f(w)o(an)o(t)g(to)g(sa)o(y)g(a)g(bit)h(more)g(\(or)f
(induce)i(the)f(studen)o(ts)g(to)f(sa)o(y)75 267 y(a)h(bit)g(more\))g(ab)q
(out)g(ho)o(w)f(the)h(solution)h(form)o(ulas)f(for)f(the)i(t)o(w)o(o)d(v)m
(ariable)k(least)e(squares)g(problem)h(can)75 323 y(b)q(e)h(obtained)g(as)f
(an)g(enhancemen)o(t)h(of)e(the)i(\\After)e(the)i(Lab")f(discussion.)75
402 y Fn(Shorter)i(Pro)s(ject)p Fq(:)j(Omit)15 b(4)g(and/or)g(5.)577
534 y Fn(ANSWERS)i(F)o(OR)h(INSTR)o(UCTORS)75 638 y(Exercise)e(2.)k
Fq(In)14 b(brief,)h(the)f(diameter)h(data)e(giv)o(es)i(a)f(decen)o(t)g(\014t)
g(\(despite)h(the)g(ob)o(vious)f(dimensional)75 695 y(con\015ict\);)20
b(while)f(the)f(heigh)o(t)h(data)e(is)h(useless)h(\(lo)q(oks)f(lik)o(e)h(a)f
(scatter)f(plot\).)28 b(Here's)18 b(the)g(result)h(for)75 751
y(the)c(diameter)h(data:)162 877 y Fj(-41.1313)k(+)i(5.38555)e(x)75
1031 y Fn(Exercise)d(3.)571 1581 y @beginspecial 0 @llx 0 @lly
282 @urx 174 @ury 1937 @rwi @setspecial
%%BeginDocument: CurFit.porshedata.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.02381 0.037202 0.014715 0.004528 [
[(5)] 0.20982 0.01472 0 2 Msboxa
[(10)] 0.39583 0.01472 0 2 Msboxa
[(15)] 0.58185 0.01472 0 2 Msboxa
[(20)] 0.76786 0.01472 0 2 Msboxa
[(25)] 0.95387 0.01472 0 2 Msboxa
[(20)] 0.01131 0.10527 1 0 Msboxa
[(40)] 0.01131 0.19582 1 0 Msboxa
[(60)] 0.01131 0.28638 1 0 Msboxa
[(80)] 0.01131 0.37693 1 0 Msboxa
[(100)] 0.01131 0.46749 1 0 Msboxa
[(120)] 0.01131 0.55804 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.20982 0.01472 moveto
0.20982 0.02097 lineto
stroke
grestore
[(5)] 0.20982 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.39583 0.01472 moveto
0.39583 0.02097 lineto
stroke
grestore
[(10)] 0.39583 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.58185 0.01472 moveto
0.58185 0.02097 lineto
stroke
grestore
[(15)] 0.58185 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.76786 0.01472 moveto
0.76786 0.02097 lineto
stroke
grestore
[(20)] 0.76786 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.95387 0.01472 moveto
0.95387 0.02097 lineto
stroke
grestore
[(25)] 0.95387 0.01472 0 2 Mshowa
gsave
0.001 setlinewidth
0.06101 0.01472 moveto
0.06101 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.09821 0.01472 moveto
0.09821 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.13542 0.01472 moveto
0.13542 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.17262 0.01472 moveto
0.17262 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.24702 0.01472 moveto
0.24702 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.28423 0.01472 moveto
0.28423 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.32143 0.01472 moveto
0.32143 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35863 0.01472 moveto
0.35863 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.43304 0.01472 moveto
0.43304 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.47024 0.01472 moveto
0.47024 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.50744 0.01472 moveto
0.50744 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54464 0.01472 moveto
0.54464 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.61905 0.01472 moveto
0.61905 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.65625 0.01472 moveto
0.65625 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69345 0.01472 moveto
0.69345 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.73065 0.01472 moveto
0.73065 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.80506 0.01472 moveto
0.80506 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84226 0.01472 moveto
0.84226 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.87946 0.01472 moveto
0.87946 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.91667 0.01472 moveto
0.91667 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.99107 0.01472 moveto
0.99107 0.01847 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.01472 moveto
1 0.01472 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0.10527 moveto
0.03006 0.10527 lineto
stroke
grestore
[(20)] 0.01131 0.10527 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.19582 moveto
0.03006 0.19582 lineto
stroke
grestore
[(40)] 0.01131 0.19582 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.28638 moveto
0.03006 0.28638 lineto
stroke
grestore
[(60)] 0.01131 0.28638 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.37693 moveto
0.03006 0.37693 lineto
stroke
grestore
[(80)] 0.01131 0.37693 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.46749 moveto
0.03006 0.46749 lineto
stroke
grestore
[(100)] 0.01131 0.46749 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.55804 moveto
0.03006 0.55804 lineto
stroke
grestore
[(120)] 0.01131 0.55804 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.03283 moveto
0.02756 0.03283 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.05094 moveto
0.02756 0.05094 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.06905 moveto
0.02756 0.06905 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.08716 moveto
0.02756 0.08716 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.12338 moveto
0.02756 0.12338 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.14149 moveto
0.02756 0.14149 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.1596 moveto
0.02756 0.1596 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.17771 moveto
0.02756 0.17771 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.21393 moveto
0.02756 0.21393 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.23205 moveto
0.02756 0.23205 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.25016 moveto
0.02756 0.25016 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.26827 moveto
0.02756 0.26827 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.30449 moveto
0.02756 0.30449 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.3226 moveto
0.02756 0.3226 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.34071 moveto
0.02756 0.34071 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.35882 moveto
0.02756 0.35882 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.39504 moveto
0.02756 0.39504 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.41315 moveto
0.02756 0.41315 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.43127 moveto
0.02756 0.43127 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.44938 moveto
0.02756 0.44938 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.4856 moveto
0.02756 0.4856 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.50371 moveto
0.02756 0.50371 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.52182 moveto
0.02756 0.52182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.53993 moveto
0.02756 0.53993 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.57615 moveto
0.02756 0.57615 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.59426 moveto
0.02756 0.59426 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.61237 moveto
0.02756 0.61237 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
gsave
0.013 setlinewidth
0.02381 0.01472 Mdot
0.09077 0.15055 Mdot
0.12798 0.19582 Mdot
0.1689 0.2411 Mdot
0.21354 0.28638 Mdot
0.27679 0.33166 Mdot
0.34375 0.37693 Mdot
0.41443 0.42221 Mdot
0.50744 0.46749 Mdot
0.63021 0.51276 Mdot
0.7567 0.55804 Mdot
0.97619 0.60332 Mdot
grestore
grestore
grestore
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.06439 moveto
0.06349 0.11016 lineto
0.10317 0.15384 lineto
0.14286 0.19543 lineto
0.18254 0.23492 lineto
0.22222 0.27232 lineto
0.2619 0.30763 lineto
0.30159 0.34084 lineto
0.34127 0.37196 lineto
0.38095 0.40098 lineto
0.42063 0.42792 lineto
0.46032 0.45276 lineto
0.5 0.4755 lineto
0.53968 0.49615 lineto
0.57937 0.51471 lineto
0.61905 0.53118 lineto
0.65873 0.54555 lineto
0.69841 0.55783 lineto
0.7381 0.56801 lineto
0.77778 0.5761 lineto
0.79762 0.57936 lineto
0.81746 0.5821 lineto
0.8373 0.58432 lineto
0.84722 0.58523 lineto
0.85714 0.58601 lineto
0.86706 0.58666 lineto
0.87698 0.58717 lineto
0.8869 0.58756 lineto
0.89187 0.58771 lineto
0.89683 0.58782 lineto
0.89931 0.58786 lineto
0.90179 0.5879 lineto
0.90303 0.58791 lineto
0.90427 0.58792 lineto
0.90551 0.58793 lineto
0.90675 0.58794 lineto
0.90799 0.58795 lineto
0.90923 0.58795 lineto
0.91047 0.58796 lineto
0.91171 0.58796 lineto
0.91295 0.58795 lineto
0.91419 0.58795 lineto
0.91543 0.58795 lineto
0.91667 0.58794 lineto
0.91915 0.58792 lineto
0.92163 0.58789 lineto
0.92659 0.5878 lineto
0.93155 0.58768 lineto
0.93651 0.58753 lineto
0.94643 0.58714 lineto
Mistroke
0.95635 0.58661 lineto
0.97619 0.58516 lineto
Mfstroke
grestore
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 278 1667 a Fi(Fig)p Fq(.)e(30.)k(The)c(data)g(and)g(quadratic)h
(\014t)f(for)f(the)i(P)o(orsc)o(he)e(acceleration)i(data.)146
1800 y(Here)f(is)h(the)f(quadratic)g(\014t)g(\(see)h(Figure)f(30\):)75
1912 y Fj(tdata)21 b(=)g({0,)h(1.8,)e(2.8,)h(3.9,)g(5.1,)g(6.8,)g(8.6,)g
(10.5,)g(13,)g(16.3,)g(19.7,)g(25.6};)75 1962 y(vdata)g(=)g({0,)h(30,)f(40,)g
(50,)g(60,)g(70,)g(80,)h(90,)f(100,)g(110,)g(120,)g(130};)75
2011 y(data)g(=)h(Transpose[{tdat)o(a,)d(vdata}];)75 2061 y(gr1)i(=)h
(ListPlot[data,)d(PlotStyle)h(->)h(PointSize[.015],)75 2111
y(DisplayFunction)e(->)i(Identity];)75 2161 y(v)h(=)f(Fit[data,)f({1,)h(t,)h
(t^2},)e(t])860 2211 y(2)162 2260 y(10.9705)h(+)g(9.69454)f(t)i(-)g(0.203188)
e(t)75 2310 y(gr2)h(=)h(Plot[v,)e({t,)h(0,)h(25.6},)e(DisplayFunction)f(->)i
(Identity];)75 2360 y(Show[gr1,)f(gr2,)h(DisplayFunction)e(->)i
($DisplayFunction])75 2501 y Fn(Exercise)h(4.)33 b Fq(The)19
b(curv)o(e)h(lo)q(oks)g(lik)o(e)g(a)f(square)h(ro)q(ot,)f Fk(Fit[data,)j({1,)
i(t^\(1/2\)},)f(t])c Fq(giv)o(es)g(a)75 2557 y(prett)o(y)14
b(go)q(o)q(d)i(\014t.)j(See)d(Figure)g(31.)75 2629 y Fn(Exercise)h(5.)j
Fq(Here's)15 b(the)g Fl(Mathematic)n(a)k Fq(equiv)m(alen)o(t)e(of)e(part)g
(b:)p eop
%%Page: 63 63
63 62 bop 75 -105 a Fm(Curv)n(e)23 b(Fitting)e(for)j(Discrete)c(Data)k(Sets)e
(\(optional\))p 75 -84 1425 2 v 329 w Fq(63)571 502 y @beginspecial
0 @llx 0 @lly 282 @urx 174 @ury 1937 @rwi @setspecial
%%BeginDocument: CurFit.sqrootdata.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.02381 0.037202 0.024231 0.004255 [
[(5)] 0.20982 0.02423 0 2 Msboxa
[(10)] 0.39583 0.02423 0 2 Msboxa
[(15)] 0.58185 0.02423 0 2 Msboxa
[(20)] 0.76786 0.02423 0 2 Msboxa
[(25)] 0.95387 0.02423 0 2 Msboxa
[(Using {1, t^\(1/2\)})] 0.5 0.61803 0 -2 Msboxa
[(20)] 0.01131 0.10933 1 0 Msboxa
[(40)] 0.01131 0.19444 1 0 Msboxa
[(60)] 0.01131 0.27954 1 0 Msboxa
[(80)] 0.01131 0.36464 1 0 Msboxa
[(100)] 0.01131 0.44975 1 0 Msboxa
[(120)] 0.01131 0.53485 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.20982 0.02423 moveto
0.20982 0.03048 lineto
stroke
grestore
[(5)] 0.20982 0.02423 0 2 Mshowa
gsave
0.002 setlinewidth
0.39583 0.02423 moveto
0.39583 0.03048 lineto
stroke
grestore
[(10)] 0.39583 0.02423 0 2 Mshowa
gsave
0.002 setlinewidth
0.58185 0.02423 moveto
0.58185 0.03048 lineto
stroke
grestore
[(15)] 0.58185 0.02423 0 2 Mshowa
gsave
0.002 setlinewidth
0.76786 0.02423 moveto
0.76786 0.03048 lineto
stroke
grestore
[(20)] 0.76786 0.02423 0 2 Mshowa
gsave
0.002 setlinewidth
0.95387 0.02423 moveto
0.95387 0.03048 lineto
stroke
grestore
[(25)] 0.95387 0.02423 0 2 Mshowa
gsave
0.001 setlinewidth
0.06101 0.02423 moveto
0.06101 0.02798 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.09821 0.02423 moveto
0.09821 0.02798 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.13542 0.02423 moveto
0.13542 0.02798 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.17262 0.02423 moveto
0.17262 0.02798 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.24702 0.02423 moveto
0.24702 0.02798 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.28423 0.02423 moveto
0.28423 0.02798 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.32143 0.02423 moveto
0.32143 0.02798 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35863 0.02423 moveto
0.35863 0.02798 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.43304 0.02423 moveto
0.43304 0.02798 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.47024 0.02423 moveto
0.47024 0.02798 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.50744 0.02423 moveto
0.50744 0.02798 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54464 0.02423 moveto
0.54464 0.02798 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.61905 0.02423 moveto
0.61905 0.02798 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.65625 0.02423 moveto
0.65625 0.02798 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69345 0.02423 moveto
0.69345 0.02798 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.73065 0.02423 moveto
0.73065 0.02798 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.80506 0.02423 moveto
0.80506 0.02798 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84226 0.02423 moveto
0.84226 0.02798 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.87946 0.02423 moveto
0.87946 0.02798 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.91667 0.02423 moveto
0.91667 0.02798 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.99107 0.02423 moveto
0.99107 0.02798 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.02423 moveto
1 0.02423 lineto
stroke
grestore
[(Using {1, t^\(1/2\)})] 0.5 0.61803 0 -2 Mshowa
gsave
0.002 setlinewidth
0.02381 0.10933 moveto
0.03006 0.10933 lineto
stroke
grestore
[(20)] 0.01131 0.10933 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.19444 moveto
0.03006 0.19444 lineto
stroke
grestore
[(40)] 0.01131 0.19444 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.27954 moveto
0.03006 0.27954 lineto
stroke
grestore
[(60)] 0.01131 0.27954 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.36464 moveto
0.03006 0.36464 lineto
stroke
grestore
[(80)] 0.01131 0.36464 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.44975 moveto
0.03006 0.44975 lineto
stroke
grestore
[(100)] 0.01131 0.44975 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.53485 moveto
0.03006 0.53485 lineto
stroke
grestore
[(120)] 0.01131 0.53485 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.04125 moveto
0.02756 0.04125 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.05827 moveto
0.02756 0.05827 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.07529 moveto
0.02756 0.07529 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.09231 moveto
0.02756 0.09231 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.12636 moveto
0.02756 0.12636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.14338 moveto
0.02756 0.14338 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.1604 moveto
0.02756 0.1604 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.17742 moveto
0.02756 0.17742 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.21146 moveto
0.02756 0.21146 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.22848 moveto
0.02756 0.22848 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.2455 moveto
0.02756 0.2455 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.26252 moveto
0.02756 0.26252 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.29656 moveto
0.02756 0.29656 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.31358 moveto
0.02756 0.31358 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.3306 moveto
0.02756 0.3306 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.34762 moveto
0.02756 0.34762 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.38166 moveto
0.02756 0.38166 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.39869 moveto
0.02756 0.39869 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.41571 moveto
0.02756 0.41571 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.43273 moveto
0.02756 0.43273 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.46677 moveto
0.02756 0.46677 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.48379 moveto
0.02756 0.48379 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.50081 moveto
0.02756 0.50081 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.51783 moveto
0.02756 0.51783 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.55187 moveto
0.02756 0.55187 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.56889 moveto
0.02756 0.56889 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.58591 moveto
0.02756 0.58591 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.60293 moveto
0.02756 0.60293 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.00721 moveto
0.02756 0.00721 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
gsave
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.02505 0.03595 lineto
0.02629 0.04475 lineto
0.02877 0.05719 lineto
0.03373 0.07479 lineto
0.04365 0.09967 lineto
0.06349 0.13486 lineto
0.10317 0.18463 lineto
0.14286 0.22282 lineto
0.18254 0.25501 lineto
0.22222 0.28337 lineto
0.2619 0.30902 lineto
0.30159 0.3326 lineto
0.34127 0.35455 lineto
0.38095 0.37516 lineto
0.42063 0.39466 lineto
0.46032 0.4132 lineto
0.5 0.43092 lineto
0.53968 0.44792 lineto
0.57937 0.46427 lineto
0.61905 0.48005 lineto
0.65873 0.49531 lineto
0.69841 0.5101 lineto
0.7381 0.52446 lineto
0.77778 0.53843 lineto
0.81746 0.55203 lineto
0.85714 0.5653 lineto
0.89683 0.57826 lineto
0.93651 0.59093 lineto
0.97619 0.60332 lineto
stroke
grestore
grestore
gsave
0.015 setlinewidth
0.02381 0.02423 Mdot
0.09077 0.15189 Mdot
0.12798 0.19444 Mdot
0.1689 0.23699 Mdot
0.21354 0.27954 Mdot
0.27679 0.32209 Mdot
0.34375 0.36464 Mdot
0.41443 0.4072 Mdot
0.50744 0.44975 Mdot
0.63021 0.4923 Mdot
0.7567 0.53485 Mdot
0.97619 0.5774 Mdot
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 81 588 a Fi(Fig)p Fq(.)15 b(31.)k(The)d(data)e(and)i(\014t)f
(for)f(the)h(P)o(orsc)o(he)g(acceleration)h(data)f(using)h(a)f(constan)o(t)f
(and)h(a)g(square)928 634 y(ro)q(ot.)75 762 y Fj(data)21 b(=)h({{1,1},)e
({2,4},)g({3,5},)h({4,6}};)75 812 y(y)h(=)f(Fit[data,)f({1,)h(t},)g(t])380
912 y(-15)162 961 y(-1.6688)g(10)86 b(+)22 b(1.6)f(t)75 1076
y Fq(So)15 b(assuming)h Fh(b)c Fq(=)h(0)i(w)o(as)f(prett)o(y)g(go)q(o)q(d.)
571 1633 y @beginspecial 0 @llx 0 @lly 282 @urx 174 @ury 1937
@rwi @setspecial
%%BeginDocument: CurFit.b0.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.02381 0.190476 0.014715 0.073575 [
[(1)] 0.21429 0.01472 0 2 Msboxa
[(2)] 0.40476 0.01472 0 2 Msboxa
[(3)] 0.59524 0.01472 0 2 Msboxa
[(4)] 0.78571 0.01472 0 2 Msboxa
[(5)] 0.97619 0.01472 0 2 Msboxa
[(2)] 0.01131 0.16187 1 0 Msboxa
[(4)] 0.01131 0.30902 1 0 Msboxa
[(6)] 0.01131 0.45617 1 0 Msboxa
[(8)] 0.01131 0.60332 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.21429 0.01472 moveto
0.21429 0.02097 lineto
stroke
grestore
[(1)] 0.21429 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.40476 0.01472 moveto
0.40476 0.02097 lineto
stroke
grestore
[(2)] 0.40476 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.59524 0.01472 moveto
0.59524 0.02097 lineto
stroke
grestore
[(3)] 0.59524 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.78571 0.01472 moveto
0.78571 0.02097 lineto
stroke
grestore
[(4)] 0.78571 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.01472 moveto
0.97619 0.02097 lineto
stroke
grestore
[(5)] 0.97619 0.01472 0 2 Mshowa
gsave
0.001 setlinewidth
0.0619 0.01472 moveto
0.0619 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1 0.01472 moveto
0.1 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1381 0.01472 moveto
0.1381 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.17619 0.01472 moveto
0.17619 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.25238 0.01472 moveto
0.25238 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29048 0.01472 moveto
0.29048 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.32857 0.01472 moveto
0.32857 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36667 0.01472 moveto
0.36667 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44286 0.01472 moveto
0.44286 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.48095 0.01472 moveto
0.48095 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.51905 0.01472 moveto
0.51905 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.55714 0.01472 moveto
0.55714 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63333 0.01472 moveto
0.63333 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.67143 0.01472 moveto
0.67143 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.70952 0.01472 moveto
0.70952 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.74762 0.01472 moveto
0.74762 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.82381 0.01472 moveto
0.82381 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.8619 0.01472 moveto
0.8619 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9 0.01472 moveto
0.9 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9381 0.01472 moveto
0.9381 0.01847 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.01472 moveto
1 0.01472 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0.16187 moveto
0.03006 0.16187 lineto
stroke
grestore
[(2)] 0.01131 0.16187 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.30902 moveto
0.03006 0.30902 lineto
stroke
grestore
[(4)] 0.01131 0.30902 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.45617 moveto
0.03006 0.45617 lineto
stroke
grestore
[(6)] 0.01131 0.45617 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.60332 moveto
0.03006 0.60332 lineto
stroke
grestore
[(8)] 0.01131 0.60332 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.04415 moveto
0.02756 0.04415 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.07358 moveto
0.02756 0.07358 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.10301 moveto
0.02756 0.10301 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.13244 moveto
0.02756 0.13244 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.1913 moveto
0.02756 0.1913 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.22073 moveto
0.02756 0.22073 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.25016 moveto
0.02756 0.25016 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.27959 moveto
0.02756 0.27959 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.33845 moveto
0.02756 0.33845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.36788 moveto
0.02756 0.36788 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.39731 moveto
0.02756 0.39731 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.42674 moveto
0.02756 0.42674 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.4856 moveto
0.02756 0.4856 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.51503 moveto
0.02756 0.51503 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.54446 moveto
0.02756 0.54446 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.57389 moveto
0.02756 0.57389 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
gsave
0.013 setlinewidth
0.21429 0.08829 Mdot
0.40476 0.30902 Mdot
0.59524 0.38259 Mdot
0.78571 0.45617 Mdot
grestore
grestore
grestore
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.06349 0.03924 lineto
0.10317 0.06377 lineto
0.14286 0.08829 lineto
0.18254 0.11282 lineto
0.22222 0.13734 lineto
0.2619 0.16187 lineto
0.30159 0.18639 lineto
0.34127 0.21092 lineto
0.38095 0.23544 lineto
0.42063 0.25997 lineto
0.46032 0.28449 lineto
0.5 0.30902 lineto
0.53968 0.33354 lineto
0.57937 0.35807 lineto
0.61905 0.38259 lineto
0.65873 0.40712 lineto
0.69841 0.43164 lineto
0.7381 0.45617 lineto
0.77778 0.48069 lineto
0.81746 0.50522 lineto
0.85714 0.52974 lineto
0.89683 0.55427 lineto
0.93651 0.57879 lineto
0.97619 0.60332 lineto
stroke
grestore
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 579 1720 a Fi(Fig)p Fq(.)h(32.)k(Data)14 b(\014t)h(for)g(the)g
Fh(b)d Fq(=)h(0)i(problem.)75 1826 y Fn(Exercise)23 b(6.)35
b Fq(Since)22 b(a)e(v)o(olume)h(is)g(prop)q(ortional)f(to)g(the)g(cub)q(e)i
(of)e(a)g(linear)h(dimension)h(and)f(the)75 1882 y(diameter)16
b(is)g(prop)q(ortional)f(to)g(the)h(square)f(of)g(a)g(linear)i(dimension,)g
(it)e(is)h(plausible)i(that)d Fh(v)f Fq(=)g Fh(ad)1808 1866
y Fe(3)p Ff(=)p Fe(2)1862 1882 y Fq(.)75 1939 y Fn(Instructor)k(Note)p
Fq(:)37 b(Ho)o(w)o(ev)o(er,)15 b(taking)h(logarithms)g(of)f(the)i(data)e(rev)
o(eals)h(that)f(a)h(p)q(o)o(w)o(er)f(closer)i(to)75 1995 y(2.25)f(seems)g(to)
h(do)f(b)q(etter.)25 b(Our)17 b(dimensionalit)o(y)i(theory)d(ignores)h
(\014ne)h(details)f(lik)o(e)h(branc)o(hes,)f(etc.)75 2052 y(In)f(the)f(face)g
(of)g(suc)o(h)h(complications,)g(empirical)h(\014ts)e(sometimes)g(do)g(b)q
(etter)g(than)h(naiv)o(e)f(theories.)75 2129 y Fn(Exercise)k(7.)26
b Fq(P)o(erhaps)17 b(b)q(ecause)h(the)f(heigh)o(t)h(is)g(unduly)g
(in\015uenced)i(b)o(y)d(the)g(presence)i(or)d(absence)75 2185
y(of)f(long)g(skinn)o(y)h(branc)o(hes)g(at)e(the)i(top)e(whic)o(h)i(con)o
(tain)g(little)g(useful)h(w)o(o)q(o)q(d.)p eop
%%Page: 64 64
64 63 bop 75 -105 a Fq(64)474 b Fm(Linearization)22 b(of)h(Nonlinear)f(Data)h
(\(optional\))p 595 -84 1280 2 v 606 49 a Fn(PURPOSE)18 b(OF)g(THE)g(PR)o
(OJECT)146 153 y Fq(Uses)e(the)g(logarithm)g(as)f(a)h Fl(function)j
Fq(to)d(accomplish)h(a)f(sym)o(b)q(olic,)h(not)e(merely)i(computational,)75
209 y(task.)24 b(Illustrates)17 b(some)g(simple)h(instances)f(of)g
(mathematical)g(mo)q(deling)h(and)f(the)g(di\016culties)i(that)75
266 y(can)i(arise.)36 b(Con)o(trasts)19 b(theoretical)i(mo)q(dels)h(with)f
(empirical)h(b)q(est)f(\014ts.)36 b(The)21 b(pro)s(ject)f(on)g
Fl(Curve)75 322 y(Fitting)15 b(for)i(Discr)n(ete)f(Data)h(Sets)h
Fq(is)e(a)f(prerequisite)h(for)f(this)h(one.)75 393 y Fn(Instructor)21
b(Note)p Fq(:)45 b(The)19 b(treatmen)o(t)e(of)i(the)f(Illustrativ)o(e)i
(Example)f(con)o(tained)g(in)h(the)e(Instruc-)75 443 y(tor's)12
b(Noteb)q(o)q(ok)i(for)f(this)h(pro)s(ject)f(con)o(tains)h(a)f(n)o(um)o(b)q
(er)h(of)f(extensions)i(and)f(adv)m(anced)h Fl(Mathematic)n(a)75
493 y Fq(usages.)23 b(Y)l(ou)17 b(ma)o(y)f(w)o(an)o(t)f(to)h(share)g(some)h
(of)f(these)g(with)h(y)o(our)f(b)q(est)h(studen)o(ts.)23 b(In)17
b(particular,)h(this)75 543 y(Noteb)q(o)q(ok)e(\(but)g Fl(not)21
b Fq(the)16 b(online)i(Studen)o(t)e(Noteb)q(o)q(ok\))g(con)o(tains)g(a)g(mo)q
(dule)i(to)d(compute)i(residuals)75 593 y(\(graphical)f(comparisons)g(are)g
(not)f(adequate)h(in)h(the)f(long)g(run\).)22 b(Here)16 b(is)g(the)g(co)q(de)
h(and)f(its)g(results)75 643 y(for)f(the)g(tree)g(data)f(problem)i(\(see)f
(the)h(Instructor)f(Noteb)q(o)q(ok)g(for)f(the)i(complete)f(story\):)75
753 y Fj(Residual[f_,)k(xlist_,)i(ylist_])f(:=)75 803 y(Module[)162
852 y({approxVals,sqdiff)o(s},)162 902 y(approxVals)g(=)h(f)h(/@)f(xlist;)162
952 y(sqdiffs)g(=)g(\(ylist)g(-)g(approxVals\)^2;)162 1002
y(Sqrt)g(@)h(\(Plus)e(@@)i(sqdiffs\))75 1052 y(])75 1151 y(linearFit[x_])d(=)
j(Fit[data,)e({1,)h(x},)g(x];)75 1201 y(powerFit[x_])e(=)j(c)f(x^m;)75
1251 y(betterpowerFit[x_)o(])e(=)j(Fit[data,)e({x^m},)g(x];)75
1350 y(Residual[linearFi)o(t,)f(ddata,)h(vdata])162 1400 y(13.7501)75
1450 y(Residual[powerFit)o(,)f(ddata,)i(vdata])162 1500 y(8.98993)75
1550 y(Residual[betterpo)o(werFi)o(t,)e(ddata,)h(vdata])162
1600 y(8.94119)75 1738 y Fn(Shorter)i(Pro)s(ject)p Fq(:)29
b(Omit)21 b(6)f(and)g(7)f(or)h(omit)f(5)h(and)g(8.)34 b(Exercise)21
b(6)e(is)i(long,)g(y)o(ou)e(migh)o(t)h(w)o(an)o(t)75 1794 y(to)c(omit)h(the)g
(request)g(for)g(the)g(exp)q(onen)o(tial)h(\014t)f(or)f(giv)o(e)i(the)f
Fh(M)22 b Fq(v)m(alue)c(\(remo)o(ving)e(the)h(exploration)75
1851 y(asp)q(ect)e(of)g(the)g(problem\).)577 1980 y Fn(ANSWERS)i(F)o(OR)h
(INSTR)o(UCTORS)75 2084 y(Exercise)f(1.)j Fq(T)l(aking)c(logs)f(giv)o(es)781
2142 y(ln)9 b Fh(y)14 b Fq(=)f(ln)c Fh(k)i Fq(+)f Fh(m)e Fq(ln)g
Fh(x;)75 2227 y Fq(so)19 b(w)o(e)g(get)g(the)h(stated)f(results,)h
Fh(Y)30 b Fq(=)20 b(ln)9 b Fh(y)r Fq(,)20 b Fh(K)i Fq(=)e(ln)9
b Fh(k)q Fq(,)20 b(and)g Fh(X)i Fq(=)e(ln)9 b Fh(x)p Fq(.)32
b(Relating)20 b(the)g(auxiliary)75 2284 y(quan)o(tit)o(y)15
b Fh(K)j Fq(to)c(the)i(mo)q(del)g(parameter)e Fh(k)i Fq(is)g(imp)q(ortan)o
(t.)75 2361 y Fn(Exercise)h(2.)j Fh(Y)j Fq(=)13 b(ln)c Fh(y)r
Fq(,)14 b Fh(C)i Fq(=)d(ln)8 b Fh(c)p Fq(,)15 b(and)g Fh(X)h
Fq(=)d Fh(x)p Fq(.)75 2439 y Fn(Exercise)k(3.)j Fh(Y)j Fq(=)13
b(ln)q(\()501 2421 y Ff(M)p 501 2428 38 2 v 510 2455 a(y)553
2439 y Fg(\000)e Fq(1\).)19 b(Note)c(one)g(needs)h Fh(y)f(<)e(M)5
b Fq(.)75 2518 y Fn(Exercise)17 b(4.)75 2629 y Fj(adata)k(=)g({58,)g(108,)g
(149,)g(228,)g(778,)g(1426};)p eop
%%Page: 65 65
65 64 bop 75 -105 a Fm(Linearization)21 b(of)j(Nonlinear)d(Data)j
(\(optional\))p 75 -84 1280 2 v 474 w Fq(65)75 49 y Fj(Tdata)d(=)g({87.97,)g
(224.70,)f(365.26,)g(686.98,)h(4332.59,)f(10759.20};)75 99
y(data)h(=)h(Transpose[{adat)o(a,)d(Tdata}];)75 149 y(logdata)h(=)i
(N@Log@data;)75 199 y(ylinear)e(=)i(Fit[logdata,)d({1,)i(x},)h(x])162
249 y(-1.6099)f(+)g(1.49996)f(x)75 360 y Fq(The)i(linear)h(\014t)f(giv)o(es)g
Fh(y)k Fq(=)e Fh(k)q(x)649 344 y Ff(m)705 360 y Fq(where)e
Fh(m)i Fq(=)g(1)p Fh(:)p Fq(49996)c(and)i Fh(k)j Fq(=)f Fh(e)1361
344 y Fb(\000)p Fe(1)p Ff(:)p Fe(6099)1513 360 y Fq(=)g(0)p
Fh(:)p Fq(199908.)38 b(The)75 417 y Fh(m)13 b Fq(=)g(1)p Fh(:)p
Fq(49996)e(v)m(alue)16 b(agrees)d(nearly)i(p)q(erfectly)g(with)f(the)g(v)m
(alue)h(1.5)e(predicted)i(b)o(y)f(Newton's)g(theory)l(.)75
487 y Fn(Exercise)21 b(5.)28 b Fq(Without)18 b(the)h(\\outlier,")g(w)o(e)e
(get)h(the)g(results)h(sho)o(wn)f(in)h(Figure)f(33)g(and)g(the)g(co)q(de)571
1042 y @beginspecial 0 @llx 0 @lly 282 @urx 174 @ury 1937 @rwi
@setspecial
%%BeginDocument: NLF.weights.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
-0.928571 0.017316 -1.018229 0.003531 [
[(70)] 0.28355 0.0412 0 2 Msboxa
[(80)] 0.45671 0.0412 0 2 Msboxa
[(90)] 0.62987 0.0412 0 2 Msboxa
[(100)] 0.80303 0.0412 0 2 Msboxa
[(110)] 0.97619 0.0412 0 2 Msboxa
[(325)] 0.09789 0.12949 1 0 Msboxa
[(350)] 0.09789 0.21777 1 0 Msboxa
[(375)] 0.09789 0.30606 1 0 Msboxa
[(400)] 0.09789 0.39434 1 0 Msboxa
[(425)] 0.09789 0.48263 1 0 Msboxa
[(450)] 0.09789 0.57092 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.28355 0.0412 moveto
0.28355 0.04745 lineto
stroke
grestore
[(70)] 0.28355 0.0412 0 2 Mshowa
gsave
0.002 setlinewidth
0.45671 0.0412 moveto
0.45671 0.04745 lineto
stroke
grestore
[(80)] 0.45671 0.0412 0 2 Mshowa
gsave
0.002 setlinewidth
0.62987 0.0412 moveto
0.62987 0.04745 lineto
stroke
grestore
[(90)] 0.62987 0.0412 0 2 Mshowa
gsave
0.002 setlinewidth
0.80303 0.0412 moveto
0.80303 0.04745 lineto
stroke
grestore
[(100)] 0.80303 0.0412 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.0412 moveto
0.97619 0.04745 lineto
stroke
grestore
[(110)] 0.97619 0.0412 0 2 Mshowa
gsave
0.001 setlinewidth
0.14502 0.0412 moveto
0.14502 0.04495 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.17965 0.0412 moveto
0.17965 0.04495 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.0412 moveto
0.21429 0.04495 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.24892 0.0412 moveto
0.24892 0.04495 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31818 0.0412 moveto
0.31818 0.04495 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35281 0.0412 moveto
0.35281 0.04495 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38745 0.0412 moveto
0.38745 0.04495 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.42208 0.0412 moveto
0.42208 0.04495 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49134 0.0412 moveto
0.49134 0.04495 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.52597 0.0412 moveto
0.52597 0.04495 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56061 0.0412 moveto
0.56061 0.04495 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.0412 moveto
0.59524 0.04495 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.6645 0.0412 moveto
0.6645 0.04495 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69913 0.0412 moveto
0.69913 0.04495 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.73377 0.0412 moveto
0.73377 0.04495 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.7684 0.0412 moveto
0.7684 0.04495 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83766 0.0412 moveto
0.83766 0.04495 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.87229 0.0412 moveto
0.87229 0.04495 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90693 0.0412 moveto
0.90693 0.04495 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.94156 0.0412 moveto
0.94156 0.04495 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.07576 0.0412 moveto
0.07576 0.04495 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.04113 0.0412 moveto
0.04113 0.04495 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.00649 0.0412 moveto
0.00649 0.04495 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.0412 moveto
1 0.0412 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.11039 0.12949 moveto
0.11664 0.12949 lineto
stroke
grestore
[(325)] 0.09789 0.12949 1 0 Mshowa
gsave
0.002 setlinewidth
0.11039 0.21777 moveto
0.11664 0.21777 lineto
stroke
grestore
[(350)] 0.09789 0.21777 1 0 Mshowa
gsave
0.002 setlinewidth
0.11039 0.30606 moveto
0.11664 0.30606 lineto
stroke
grestore
[(375)] 0.09789 0.30606 1 0 Mshowa
gsave
0.002 setlinewidth
0.11039 0.39434 moveto
0.11664 0.39434 lineto
stroke
grestore
[(400)] 0.09789 0.39434 1 0 Mshowa
gsave
0.002 setlinewidth
0.11039 0.48263 moveto
0.11664 0.48263 lineto
stroke
grestore
[(425)] 0.09789 0.48263 1 0 Mshowa
gsave
0.002 setlinewidth
0.11039 0.57092 moveto
0.11664 0.57092 lineto
stroke
grestore
[(450)] 0.09789 0.57092 1 0 Mshowa
gsave
0.001 setlinewidth
0.11039 0.05886 moveto
0.11414 0.05886 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.07652 moveto
0.11414 0.07652 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.09417 moveto
0.11414 0.09417 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.11183 moveto
0.11414 0.11183 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.14714 moveto
0.11414 0.14714 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.1648 moveto
0.11414 0.1648 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.18246 moveto
0.11414 0.18246 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.20012 moveto
0.11414 0.20012 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.23543 moveto
0.11414 0.23543 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.25309 moveto
0.11414 0.25309 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.27074 moveto
0.11414 0.27074 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.2884 moveto
0.11414 0.2884 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.32372 moveto
0.11414 0.32372 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.34137 moveto
0.11414 0.34137 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.35903 moveto
0.11414 0.35903 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.37669 moveto
0.11414 0.37669 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.412 moveto
0.11414 0.412 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.42966 moveto
0.11414 0.42966 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.44732 moveto
0.11414 0.44732 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.46497 moveto
0.11414 0.46497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.50029 moveto
0.11414 0.50029 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.51794 moveto
0.11414 0.51794 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.5356 moveto
0.11414 0.5356 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.55326 moveto
0.11414 0.55326 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.02354 moveto
0.11414 0.02354 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.00589 moveto
0.11414 0.00589 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.58857 moveto
0.11414 0.58857 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11039 0.60623 moveto
0.11414 0.60623 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.11039 0 moveto
0.11039 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.015 setlinewidth
0.04113 0.01472 Mdot
0.24026 0.18246 Mdot
0.37013 0.30606 Mdot
0.5 0.31489 Mdot
0.62987 0.43849 Mdot
0.80303 0.48263 Mdot
0.97619 0.58857 Mdot
grestore
grestore
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.02848 moveto
0.06349 0.05582 lineto
0.10317 0.08275 lineto
0.14286 0.10931 lineto
0.18254 0.1355 lineto
0.22222 0.16136 lineto
0.2619 0.18688 lineto
0.30159 0.2121 lineto
0.34127 0.23701 lineto
0.38095 0.26164 lineto
0.42063 0.286 lineto
0.46032 0.3101 lineto
0.5 0.33394 lineto
0.53968 0.35754 lineto
0.57937 0.3809 lineto
0.61905 0.40404 lineto
0.65873 0.42697 lineto
0.69841 0.44968 lineto
0.7381 0.47219 lineto
0.77778 0.4945 lineto
0.81746 0.51662 lineto
0.85714 0.53856 lineto
0.89683 0.56032 lineto
0.93651 0.5819 lineto
0.97619 0.60332 lineto
stroke
grestore
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 463 1129 a Fi(Fig)p Fq(.)d(33.)k(W)l(eigh)o(tlifting)e(data)e
(without)g(the)g(60)7 b(kg)15 b(class.)75 1228 y(b)q(elo)o(w:)75
1333 y Fj(xdata)21 b(=)g({56,)g(67.5,)g(75,)g(82.5,)g(90,)g(100,)g(110};)75
1382 y(wdata)g(=)g({292.5,)g(340,)g(375,)g(377.5,)f(412.5,)h(425,)g(455};)75
1432 y(data)g(=)h(Transpose[{xdat)o(a,)d(wdata}];)75 1482 y(logdata)h(=)i
(N@Log@data;)75 1532 y(ylinear)e(=)i(Fit[logdata,)d({1,)i(x},)h(x])162
1582 y(3.16129)f(+)g(0.631506)f(x)75 1631 y(m)i(=)f(0.631506;)75
1681 y(k)h(=)f(Exp[3.16129];)75 1781 y(gr1)g(=)h(ListPlot[data,)d
(DisplayFunction)f(->)k(Identity];)75 1831 y(gr2)f(=)h(Plot[k)e(x^m,)h({x,)g
(55,)h(110},)e(DisplayFunction)f(->)i(Identity];)75 1880 y(Show[gr1,)f(gr2,)h
(Prolog)f(->)i(PointSize[0.015],)162 1930 y(DisplayFunction)d(->)i
($DisplayFunction])75 2042 y Fq(So)c Fh(k)g Fq(=)f Fh(:)p Fq(6315)g(whic)o(h)
i(is)g(fairly)f(close)h(to)f(2/3.)25 b(When)17 b(the)g(60)7
b(kg)17 b(data)g(is)g(inserted)h(the)g(results)f(are)75 2098
y(badly)i(distorted)g(from)f(the)g(theoretical)i Fh(k)f Fq(=)g(2)p
Fh(=)p Fq(3)e(due)i(to)f(the)h(v)o(ery)f(strong)g(p)q(erformance)h(at)f(this)
75 2155 y(lev)o(el.)75 2225 y Fn(Exercise)f(6.)j Fq(Here)15
b(is)h(the)f(set)g(up)h(for)f(the)g(exp)q(onen)o(tial)i(\014t)e(\(see)g
(Figure)g(34\):)75 2330 y Fj(expdata)20 b(=)i(Transpose[{xdata,)c
(Log[ydata]}];)75 2380 y(expFit)j(=)g(Fit[expdata,)e({1,)j(x},)f(x])162
2429 y(2.0519)g(+)g(0.0197108)f(x)75 2529 y(a)i(=)f(Coefficient[expFit)o(,)e
(x,)i(1];)43 b(\(*)22 b(students)e(just)h(copy)g(values)f(*\))75
2579 y(c)i(=)f(Exp@Coefficient[ex)o(pFit,)d(x,)k(0];)75 2629
y(y)g(=)f(c)h(Exp[a)f(x];)p eop
%%Page: 66 66
66 65 bop 75 -105 a Fq(66)474 b Fm(Linearization)22 b(of)h(Nonlinear)f(Data)h
(\(optional\))p 595 -84 1280 2 v 571 502 a @beginspecial 0
@llx 0 @lly 282 @urx 174 @ury 1937 @rwi @setspecial
%%BeginDocument: NLF.expfit.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.02381 0.00381 0.014715 0.000776 [
[(50)] 0.21429 0.01472 0 2 Msboxa
[(100)] 0.40476 0.01472 0 2 Msboxa
[(150)] 0.59524 0.01472 0 2 Msboxa
[(200)] 0.78571 0.01472 0 2 Msboxa
[(250)] 0.97619 0.01472 0 2 Msboxa
[(100)] 0.01131 0.09236 1 0 Msboxa
[(200)] 0.01131 0.17001 1 0 Msboxa
[(300)] 0.01131 0.24765 1 0 Msboxa
[(400)] 0.01131 0.3253 1 0 Msboxa
[(500)] 0.01131 0.40295 1 0 Msboxa
[(600)] 0.01131 0.48059 1 0 Msboxa
[(700)] 0.01131 0.55824 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.21429 0.01472 moveto
0.21429 0.02097 lineto
stroke
grestore
[(50)] 0.21429 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.40476 0.01472 moveto
0.40476 0.02097 lineto
stroke
grestore
[(100)] 0.40476 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.59524 0.01472 moveto
0.59524 0.02097 lineto
stroke
grestore
[(150)] 0.59524 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.78571 0.01472 moveto
0.78571 0.02097 lineto
stroke
grestore
[(200)] 0.78571 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.01472 moveto
0.97619 0.02097 lineto
stroke
grestore
[(250)] 0.97619 0.01472 0 2 Mshowa
gsave
0.001 setlinewidth
0.0619 0.01472 moveto
0.0619 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1 0.01472 moveto
0.1 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1381 0.01472 moveto
0.1381 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.17619 0.01472 moveto
0.17619 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.25238 0.01472 moveto
0.25238 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29048 0.01472 moveto
0.29048 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.32857 0.01472 moveto
0.32857 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36667 0.01472 moveto
0.36667 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44286 0.01472 moveto
0.44286 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.48095 0.01472 moveto
0.48095 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.51905 0.01472 moveto
0.51905 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.55714 0.01472 moveto
0.55714 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63333 0.01472 moveto
0.63333 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.67143 0.01472 moveto
0.67143 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.70952 0.01472 moveto
0.70952 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.74762 0.01472 moveto
0.74762 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.82381 0.01472 moveto
0.82381 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.8619 0.01472 moveto
0.8619 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9 0.01472 moveto
0.9 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9381 0.01472 moveto
0.9381 0.01847 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.01472 moveto
1 0.01472 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0.09236 moveto
0.03006 0.09236 lineto
stroke
grestore
[(100)] 0.01131 0.09236 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.17001 moveto
0.03006 0.17001 lineto
stroke
grestore
[(200)] 0.01131 0.17001 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.24765 moveto
0.03006 0.24765 lineto
stroke
grestore
[(300)] 0.01131 0.24765 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.3253 moveto
0.03006 0.3253 lineto
stroke
grestore
[(400)] 0.01131 0.3253 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.40295 moveto
0.03006 0.40295 lineto
stroke
grestore
[(500)] 0.01131 0.40295 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.48059 moveto
0.03006 0.48059 lineto
stroke
grestore
[(600)] 0.01131 0.48059 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.55824 moveto
0.03006 0.55824 lineto
stroke
grestore
[(700)] 0.01131 0.55824 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.03024 moveto
0.02756 0.03024 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.04577 moveto
0.02756 0.04577 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.0613 moveto
0.02756 0.0613 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.07683 moveto
0.02756 0.07683 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.10789 moveto
0.02756 0.10789 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.12342 moveto
0.02756 0.12342 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.13895 moveto
0.02756 0.13895 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.15448 moveto
0.02756 0.15448 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.18554 moveto
0.02756 0.18554 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.20107 moveto
0.02756 0.20107 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.2166 moveto
0.02756 0.2166 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.23213 moveto
0.02756 0.23213 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.26318 moveto
0.02756 0.26318 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.27871 moveto
0.02756 0.27871 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.29424 moveto
0.02756 0.29424 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.30977 moveto
0.02756 0.30977 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.34083 moveto
0.02756 0.34083 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.35636 moveto
0.02756 0.35636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.37189 moveto
0.02756 0.37189 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.38742 moveto
0.02756 0.38742 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.41848 moveto
0.02756 0.41848 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.43401 moveto
0.02756 0.43401 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.44954 moveto
0.02756 0.44954 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.46507 moveto
0.02756 0.46507 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.49612 moveto
0.02756 0.49612 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.51165 moveto
0.02756 0.51165 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.52718 moveto
0.02756 0.52718 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.54271 moveto
0.02756 0.54271 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.57377 moveto
0.02756 0.57377 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.5893 moveto
0.02756 0.5893 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.60483 moveto
0.02756 0.60483 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.015 setlinewidth
0.02381 0.01883 Mdot
0.1 0.0222 Mdot
0.17619 0.02797 Mdot
0.25238 0.03913 Mdot
0.32857 0.05369 Mdot
0.40476 0.07388 Mdot
0.48095 0.09702 Mdot
0.55714 0.11736 Mdot
0.63333 0.15394 Mdot
0.67143 0.17257 Mdot
0.70952 0.19058 Mdot
0.74762 0.20782 Mdot
grestore
grestore
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.02076 moveto
0.06349 0.02214 lineto
0.10317 0.02383 lineto
0.14286 0.0259 lineto
0.18254 0.02845 lineto
0.22222 0.03158 lineto
0.2619 0.03543 lineto
0.30159 0.04015 lineto
0.34127 0.04595 lineto
0.38095 0.05307 lineto
0.42063 0.06181 lineto
0.46032 0.07254 lineto
0.5 0.08572 lineto
0.53968 0.1019 lineto
0.57937 0.12178 lineto
0.61905 0.14618 lineto
0.65873 0.17614 lineto
0.69841 0.21293 lineto
0.7381 0.25811 lineto
0.77778 0.31358 lineto
0.81746 0.3817 lineto
0.85714 0.46534 lineto
0.89683 0.56805 lineto
stroke
0.91255 0.61803 moveto
0.89683 0.56805 lineto
stroke
stroke
stroke
grestore
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 543 588 a Fi(Fig)p Fq(.)15 b(34.)20 b(The)15 b(data)g(and)g(b)q
(est)g(exp)q(onen)o(tial)i(\014t.)75 714 y Fj(gr1)k(=)h(ListPlot[data,)d
(DisplayFunction)f(->)k(Identity];)75 764 y(gr2)f(=)h(Plot[y,)e({x,)h(0,)h
(250},)75 813 y(DisplayFunction)d(->)i(Identity];)75 863 y(Show[gr1,)f(gr2,)h
(Prolog)f(->)i(PointSize[0.015],)75 913 y(DisplayFunction)d(->)i
($DisplayFunction])75 1003 y Fq(Here)15 b(is)h(the)f(set)g(up)h(for)f(the)g
(logistic)h(\014t)f(with)h Fh(M)h Fq(=)c(300:)75 1093 y Fj(xdata)21
b(=)g({0,)h(20,)f(40,)g(60,)g(80,)g(100,)g(120,)g(140,)g(160,)g(170,)g(180,)g
(190};)75 1143 y(ydata)g(=)g({5.3,)g(9.638,)g(17.07,)f(31.44,)h(50.19,)f
(76.2,)h(106.0,)75 1192 y(132.2,)g(179.3,)f(203.3,)h(226.5,)f(248.7};)75
1242 y(data)h(=)h(Transpose[{xdat)o(a,)d(ydata}];)75 1342 y(M)j(=)f(300.0;)75
1392 y(Ydata)g(=)g(Log[M/ydata)f(-)h(1.0];)75 1441 y(logisticdata)e(=)j
(N@Transpose@{xdat)o(a,)d(Ydata};)75 1491 y(logisticFit)h(=)h
(Fit[logisticdata,)d({1,)k(x},)f(x])162 1541 y(3.94392)g(-)g(0.0279906)f(x)75
1641 y(a)i(=)f(-Coefficient[logis)o(ticFi)o(t,)e(x,)i(1];)75
1690 y(c)h(=)f(Coefficient[logist)o(icFit)o(,)e(x,)i(0];)75
1740 y(y)h(=)f(M/\(1)g(+)h(Exp[c)e(-)i(a)g(x]\);)75 1790 y(gr1)f(=)h
(ListPlot[data,)d(DisplayFunction)f(->)k(Identity];)75 1840
y(gr2)f(=)h(Plot[y,)e({x,)h(0,)h(250},)75 1890 y(DisplayFunction)d(->)i
(Identity];)75 1940 y(Show[gr1,)f(gr2,)h(Prolog)f(->)i(PointSize[0.015],)75
1989 y(DisplayFunction)d(->)i($DisplayFunction])75 2079 y Fq(Note)d(it)h(is)f
(failing)i(at)e(a)g(bad)g(place|1990)g(\(see)g(Figure)h(35\).)28
b(Rep)q(eating)19 b(with)g Fk(M)k(=)h(320.0)18 b Fq(giv)o(es)75
2129 y(Figure)c(36,)g(this)g(is)h(b)q(etter)f(at)g(1990.)k(Finally)l(,)e(the)
e(v)m(alue)i Fk(M)23 b(=)h(340.0)13 b Fq(giv)o(es)i(Figure)f(37)g(whic)o(h)h
(seems)75 2179 y(a)g(satisfactory)f(\014t.)20 b(T)l(o)15 b(\014nd)h(the)f
(resulting)h(p)q(opulation)h(at)d(y)o(ear)h(2050)f(\()p Fh(x)e
Fq(=)h(250\):)75 2269 y Fj(y)22 b(/.)f(x)h(->)f(250)162 2318
y(315.261)75 2433 y Fn(Exercise)d(7.)k Fq(W)l(e)17 b(w)o(an)o(t)e(a)g(v)m
(alue)j(that)d(giv)o(es)h(a)g(smo)q(oth)f(\014t)h(at)f(1990)g(in)i(order)f
(to)f(feel)i(comfortable)75 2489 y(extrap)q(olating)e(forw)o(ard.)75
2563 y Fn(Exercise)j(8.)j Fq(W)l(e)16 b(could)g(do)g(a)f(go)q(o)q(d)h(job)f
(of)g(b)q(o)q(dy)i(w)o(eigh)o(t)e(handicapping)j(b)o(y)d(just)h(comparing)g
(\\k")75 2620 y(v)m(alues)g(for)f(a)g(giv)o(en)g(lift)h(or)f(com)o(bination)h
(of)f(lifts.)p eop
%%Page: 67 67
67 66 bop 75 -105 a Fm(Linearization)21 b(of)j(Nonlinear)d(Data)j
(\(optional\))p 75 -84 1280 2 v 474 w Fq(67)571 636 y @beginspecial
0 @llx 0 @lly 282 @urx 174 @ury 1937 @rwi @setspecial
%%BeginDocument: NLF.logistic1.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.02381 0.00381 0.014715 0.002055 [
[(50)] 0.21429 0.01472 0 2 Msboxa
[(100)] 0.40476 0.01472 0 2 Msboxa
[(150)] 0.59524 0.01472 0 2 Msboxa
[(200)] 0.78571 0.01472 0 2 Msboxa
[(250)] 0.97619 0.01472 0 2 Msboxa
[(50)] 0.01131 0.11744 1 0 Msboxa
[(100)] 0.01131 0.22017 1 0 Msboxa
[(150)] 0.01131 0.3229 1 0 Msboxa
[(200)] 0.01131 0.42563 1 0 Msboxa
[(250)] 0.01131 0.52836 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.21429 0.01472 moveto
0.21429 0.02097 lineto
stroke
grestore
[(50)] 0.21429 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.40476 0.01472 moveto
0.40476 0.02097 lineto
stroke
grestore
[(100)] 0.40476 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.59524 0.01472 moveto
0.59524 0.02097 lineto
stroke
grestore
[(150)] 0.59524 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.78571 0.01472 moveto
0.78571 0.02097 lineto
stroke
grestore
[(200)] 0.78571 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.01472 moveto
0.97619 0.02097 lineto
stroke
grestore
[(250)] 0.97619 0.01472 0 2 Mshowa
gsave
0.001 setlinewidth
0.0619 0.01472 moveto
0.0619 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1 0.01472 moveto
0.1 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1381 0.01472 moveto
0.1381 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.17619 0.01472 moveto
0.17619 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.25238 0.01472 moveto
0.25238 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29048 0.01472 moveto
0.29048 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.32857 0.01472 moveto
0.32857 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36667 0.01472 moveto
0.36667 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44286 0.01472 moveto
0.44286 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.48095 0.01472 moveto
0.48095 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.51905 0.01472 moveto
0.51905 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.55714 0.01472 moveto
0.55714 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63333 0.01472 moveto
0.63333 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.67143 0.01472 moveto
0.67143 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.70952 0.01472 moveto
0.70952 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.74762 0.01472 moveto
0.74762 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.82381 0.01472 moveto
0.82381 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.8619 0.01472 moveto
0.8619 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9 0.01472 moveto
0.9 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9381 0.01472 moveto
0.9381 0.01847 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.01472 moveto
1 0.01472 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0.11744 moveto
0.03006 0.11744 lineto
stroke
grestore
[(50)] 0.01131 0.11744 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.22017 moveto
0.03006 0.22017 lineto
stroke
grestore
[(100)] 0.01131 0.22017 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.3229 moveto
0.03006 0.3229 lineto
stroke
grestore
[(150)] 0.01131 0.3229 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.42563 moveto
0.03006 0.42563 lineto
stroke
grestore
[(200)] 0.01131 0.42563 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.52836 moveto
0.03006 0.52836 lineto
stroke
grestore
[(250)] 0.01131 0.52836 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.03526 moveto
0.02756 0.03526 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.05581 moveto
0.02756 0.05581 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.07635 moveto
0.02756 0.07635 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.0969 moveto
0.02756 0.0969 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.13799 moveto
0.02756 0.13799 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.15854 moveto
0.02756 0.15854 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.17908 moveto
0.02756 0.17908 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.19963 moveto
0.02756 0.19963 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.24072 moveto
0.02756 0.24072 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.26127 moveto
0.02756 0.26127 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.28181 moveto
0.02756 0.28181 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.30236 moveto
0.02756 0.30236 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.34345 moveto
0.02756 0.34345 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.36399 moveto
0.02756 0.36399 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.38454 moveto
0.02756 0.38454 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.40509 moveto
0.02756 0.40509 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.44618 moveto
0.02756 0.44618 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.46672 moveto
0.02756 0.46672 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.48727 moveto
0.02756 0.48727 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.50782 moveto
0.02756 0.50782 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.54891 moveto
0.02756 0.54891 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.56945 moveto
0.02756 0.56945 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.59 moveto
0.02756 0.59 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.61054 moveto
0.02756 0.61054 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.015 setlinewidth
0.02381 0.0256 Mdot
0.1 0.03452 Mdot
0.17619 0.04979 Mdot
0.25238 0.07931 Mdot
0.32857 0.11783 Mdot
0.40476 0.17127 Mdot
0.48095 0.2325 Mdot
0.55714 0.28633 Mdot
0.63333 0.3831 Mdot
0.67143 0.43241 Mdot
0.70952 0.48008 Mdot
0.74762 0.52569 Mdot
grestore
grestore
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.02643 moveto
0.06349 0.03029 lineto
0.10317 0.03539 lineto
0.14286 0.04208 lineto
0.18254 0.0508 lineto
0.22222 0.06208 lineto
0.2619 0.0765 lineto
0.30159 0.09471 lineto
0.34127 0.11728 lineto
0.38095 0.14468 lineto
0.42063 0.17709 lineto
0.46032 0.21426 lineto
0.5 0.25543 lineto
0.53968 0.29929 lineto
0.57937 0.34414 lineto
0.61905 0.3881 lineto
0.65873 0.42945 lineto
0.69841 0.46686 lineto
0.7381 0.49953 lineto
0.77778 0.5272 lineto
0.81746 0.55002 lineto
0.85714 0.56844 lineto
0.89683 0.58305 lineto
0.93651 0.59448 lineto
0.97619 0.60332 lineto
stroke
grestore
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 566 722 a Fi(Fig)p Fq(.)15 b(35.)k(The)c(data)g(and)g(\014t)g
(with)h Fh(M)i Fq(=)13 b(300.)571 1522 y @beginspecial 0 @llx
0 @lly 282 @urx 174 @ury 1937 @rwi @setspecial
%%BeginDocument: NLF.logistic2.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.02381 0.00381 0.014715 0.001955 [
[(50)] 0.21429 0.01472 0 2 Msboxa
[(100)] 0.40476 0.01472 0 2 Msboxa
[(150)] 0.59524 0.01472 0 2 Msboxa
[(200)] 0.78571 0.01472 0 2 Msboxa
[(250)] 0.97619 0.01472 0 2 Msboxa
[(50)] 0.01131 0.11245 1 0 Msboxa
[(100)] 0.01131 0.21018 1 0 Msboxa
[(150)] 0.01131 0.30791 1 0 Msboxa
[(200)] 0.01131 0.40564 1 0 Msboxa
[(250)] 0.01131 0.50337 1 0 Msboxa
[(300)] 0.01131 0.6011 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.21429 0.01472 moveto
0.21429 0.02097 lineto
stroke
grestore
[(50)] 0.21429 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.40476 0.01472 moveto
0.40476 0.02097 lineto
stroke
grestore
[(100)] 0.40476 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.59524 0.01472 moveto
0.59524 0.02097 lineto
stroke
grestore
[(150)] 0.59524 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.78571 0.01472 moveto
0.78571 0.02097 lineto
stroke
grestore
[(200)] 0.78571 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.01472 moveto
0.97619 0.02097 lineto
stroke
grestore
[(250)] 0.97619 0.01472 0 2 Mshowa
gsave
0.001 setlinewidth
0.0619 0.01472 moveto
0.0619 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1 0.01472 moveto
0.1 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1381 0.01472 moveto
0.1381 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.17619 0.01472 moveto
0.17619 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.25238 0.01472 moveto
0.25238 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29048 0.01472 moveto
0.29048 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.32857 0.01472 moveto
0.32857 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36667 0.01472 moveto
0.36667 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44286 0.01472 moveto
0.44286 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.48095 0.01472 moveto
0.48095 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.51905 0.01472 moveto
0.51905 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.55714 0.01472 moveto
0.55714 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63333 0.01472 moveto
0.63333 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.67143 0.01472 moveto
0.67143 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.70952 0.01472 moveto
0.70952 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.74762 0.01472 moveto
0.74762 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.82381 0.01472 moveto
0.82381 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.8619 0.01472 moveto
0.8619 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9 0.01472 moveto
0.9 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9381 0.01472 moveto
0.9381 0.01847 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.01472 moveto
1 0.01472 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0.11245 moveto
0.03006 0.11245 lineto
stroke
grestore
[(50)] 0.01131 0.11245 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.21018 moveto
0.03006 0.21018 lineto
stroke
grestore
[(100)] 0.01131 0.21018 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.30791 moveto
0.03006 0.30791 lineto
stroke
grestore
[(150)] 0.01131 0.30791 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.40564 moveto
0.03006 0.40564 lineto
stroke
grestore
[(200)] 0.01131 0.40564 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.50337 moveto
0.03006 0.50337 lineto
stroke
grestore
[(250)] 0.01131 0.50337 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.6011 moveto
0.03006 0.6011 lineto
stroke
grestore
[(300)] 0.01131 0.6011 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.03426 moveto
0.02756 0.03426 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.05381 moveto
0.02756 0.05381 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.07335 moveto
0.02756 0.07335 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.0929 moveto
0.02756 0.0929 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.13199 moveto
0.02756 0.13199 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.15154 moveto
0.02756 0.15154 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.17108 moveto
0.02756 0.17108 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.19063 moveto
0.02756 0.19063 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.22972 moveto
0.02756 0.22972 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.24927 moveto
0.02756 0.24927 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.26882 moveto
0.02756 0.26882 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.28836 moveto
0.02756 0.28836 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.32745 moveto
0.02756 0.32745 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.347 moveto
0.02756 0.347 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.36655 moveto
0.02756 0.36655 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.38609 moveto
0.02756 0.38609 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.42518 moveto
0.02756 0.42518 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.44473 moveto
0.02756 0.44473 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.46428 moveto
0.02756 0.46428 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.48382 moveto
0.02756 0.48382 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.52292 moveto
0.02756 0.52292 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.54246 moveto
0.02756 0.54246 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.56201 moveto
0.02756 0.56201 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.58155 moveto
0.02756 0.58155 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.015 setlinewidth
0.02381 0.02507 Mdot
0.1 0.03355 Mdot
0.17619 0.04808 Mdot
0.25238 0.07617 Mdot
0.32857 0.11282 Mdot
0.40476 0.16366 Mdot
0.48095 0.2219 Mdot
0.55714 0.27312 Mdot
0.63333 0.36518 Mdot
0.67143 0.41209 Mdot
0.70952 0.45744 Mdot
0.74762 0.50083 Mdot
grestore
grestore
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.02639 moveto
0.06349 0.03008 lineto
0.10317 0.03489 lineto
0.14286 0.04115 lineto
0.18254 0.04923 lineto
0.22222 0.05961 lineto
0.2619 0.0728 lineto
0.30159 0.08936 lineto
0.34127 0.10986 lineto
0.38095 0.13475 lineto
0.42063 0.16433 lineto
0.46032 0.19854 lineto
0.5 0.23692 lineto
0.53968 0.27852 lineto
0.57937 0.32198 lineto
0.61905 0.36566 lineto
0.65873 0.40787 lineto
0.69841 0.44716 lineto
0.7381 0.48247 lineto
0.77778 0.51322 lineto
0.81746 0.53927 lineto
0.85714 0.56082 lineto
0.89683 0.57832 lineto
0.93651 0.59229 lineto
0.97619 0.60332 lineto
stroke
grestore
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 566 1608 a Fi(Fig)p Fq(.)i(36.)k(The)c(data)g(and)g(\014t)g
(with)h Fh(M)i Fq(=)13 b(320.)571 2408 y @beginspecial 0 @llx
0 @lly 282 @urx 174 @ury 1937 @rwi @setspecial
%%BeginDocument: NLF.logistic3.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.02381 0.00381 0.014715 0.001867 [
[(50)] 0.21429 0.01472 0 2 Msboxa
[(100)] 0.40476 0.01472 0 2 Msboxa
[(150)] 0.59524 0.01472 0 2 Msboxa
[(200)] 0.78571 0.01472 0 2 Msboxa
[(250)] 0.97619 0.01472 0 2 Msboxa
[(50)] 0.01131 0.10807 1 0 Msboxa
[(100)] 0.01131 0.20142 1 0 Msboxa
[(150)] 0.01131 0.29477 1 0 Msboxa
[(200)] 0.01131 0.38812 1 0 Msboxa
[(250)] 0.01131 0.48147 1 0 Msboxa
[(300)] 0.01131 0.57483 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.21429 0.01472 moveto
0.21429 0.02097 lineto
stroke
grestore
[(50)] 0.21429 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.40476 0.01472 moveto
0.40476 0.02097 lineto
stroke
grestore
[(100)] 0.40476 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.59524 0.01472 moveto
0.59524 0.02097 lineto
stroke
grestore
[(150)] 0.59524 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.78571 0.01472 moveto
0.78571 0.02097 lineto
stroke
grestore
[(200)] 0.78571 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.01472 moveto
0.97619 0.02097 lineto
stroke
grestore
[(250)] 0.97619 0.01472 0 2 Mshowa
gsave
0.001 setlinewidth
0.0619 0.01472 moveto
0.0619 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1 0.01472 moveto
0.1 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1381 0.01472 moveto
0.1381 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.17619 0.01472 moveto
0.17619 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.25238 0.01472 moveto
0.25238 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29048 0.01472 moveto
0.29048 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.32857 0.01472 moveto
0.32857 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36667 0.01472 moveto
0.36667 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44286 0.01472 moveto
0.44286 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.48095 0.01472 moveto
0.48095 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.51905 0.01472 moveto
0.51905 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.55714 0.01472 moveto
0.55714 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63333 0.01472 moveto
0.63333 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.67143 0.01472 moveto
0.67143 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.70952 0.01472 moveto
0.70952 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.74762 0.01472 moveto
0.74762 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.82381 0.01472 moveto
0.82381 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.8619 0.01472 moveto
0.8619 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9 0.01472 moveto
0.9 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9381 0.01472 moveto
0.9381 0.01847 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.01472 moveto
1 0.01472 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0.10807 moveto
0.03006 0.10807 lineto
stroke
grestore
[(50)] 0.01131 0.10807 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.20142 moveto
0.03006 0.20142 lineto
stroke
grestore
[(100)] 0.01131 0.20142 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.29477 moveto
0.03006 0.29477 lineto
stroke
grestore
[(150)] 0.01131 0.29477 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.38812 moveto
0.03006 0.38812 lineto
stroke
grestore
[(200)] 0.01131 0.38812 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.48147 moveto
0.03006 0.48147 lineto
stroke
grestore
[(250)] 0.01131 0.48147 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.57483 moveto
0.03006 0.57483 lineto
stroke
grestore
[(300)] 0.01131 0.57483 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.03339 moveto
0.02756 0.03339 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.05206 moveto
0.02756 0.05206 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.07073 moveto
0.02756 0.07073 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.0894 moveto
0.02756 0.0894 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.12674 moveto
0.02756 0.12674 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.14541 moveto
0.02756 0.14541 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.16408 moveto
0.02756 0.16408 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.18275 moveto
0.02756 0.18275 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.22009 moveto
0.02756 0.22009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.23876 moveto
0.02756 0.23876 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.25743 moveto
0.02756 0.25743 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.2761 moveto
0.02756 0.2761 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.31344 moveto
0.02756 0.31344 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.33211 moveto
0.02756 0.33211 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.35078 moveto
0.02756 0.35078 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.36945 moveto
0.02756 0.36945 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.40679 moveto
0.02756 0.40679 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.42546 moveto
0.02756 0.42546 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.44413 moveto
0.02756 0.44413 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.4628 moveto
0.02756 0.4628 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.50014 moveto
0.02756 0.50014 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.51882 moveto
0.02756 0.51882 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.53749 moveto
0.02756 0.53749 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.55616 moveto
0.02756 0.55616 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.5935 moveto
0.02756 0.5935 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.61217 moveto
0.02756 0.61217 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.015 setlinewidth
0.02381 0.02461 Mdot
0.1 0.03271 Mdot
0.17619 0.04659 Mdot
0.25238 0.07341 Mdot
0.32857 0.10842 Mdot
0.40476 0.15698 Mdot
0.48095 0.21262 Mdot
0.55714 0.26154 Mdot
0.63333 0.34948 Mdot
0.67143 0.39428 Mdot
0.70952 0.4376 Mdot
0.74762 0.47905 Mdot
grestore
grestore
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.02624 moveto
0.06349 0.02977 lineto
0.10317 0.03433 lineto
0.14286 0.04023 lineto
0.18254 0.04779 lineto
0.22222 0.05745 lineto
0.2619 0.06967 lineto
0.30159 0.08496 lineto
0.34127 0.10386 lineto
0.38095 0.12683 lineto
0.42063 0.15421 lineto
0.46032 0.18609 lineto
0.5 0.22219 lineto
0.53968 0.26184 lineto
0.57937 0.30395 lineto
0.61905 0.34708 lineto
0.65873 0.38966 lineto
0.69841 0.4302 lineto
0.7381 0.46748 lineto
0.77778 0.5007 lineto
0.81746 0.52947 lineto
0.85714 0.55376 lineto
0.89683 0.57387 lineto
0.93651 0.59021 lineto
0.97619 0.60332 lineto
stroke
grestore
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 566 2495 a Fi(Fig)p Fq(.)i(37.)k(The)c(data)g(and)g(\014t)g
(with)h Fh(M)i Fq(=)13 b(340.)p eop
%%Page: 68 68
68 67 bop 75 -103 a Fq(68)992 b Fm(Simple)20 b(Harmonic)i(Motion)p
1113 -85 763 2 v 606 49 a Fn(PURPOSE)c(OF)g(THE)g(PR)o(OJECT)146
151 y Fq(This)d(pro)s(ject)f(and)h(the)g(later)g(one)g(on)g
Fl(F)m(ourier)g(F)m(r)n(e)n(quency)g(De)n(c)n(omp)n(osition)i
Fq(in)o(tro)q(duces)f(the)f(stu-)75 208 y(den)o(t)g(to)g(the)g(elemen)o(ts)h
(of)f(harmonic)g(analysis.)21 b(In)16 b(particular,)f(this)h(pro)s(ject)f
(mak)o(e)f(the)i(p)q(oin)o(t)f(some)75 264 y(functions)i(can)f(b)q(e)h
(rewritten)f(so)g(that)g(the)g(v)m(arious)h(frequencies)g(inheren)o(t)h(in)f
(the)f(function)h(are)f(ap-)75 320 y(paren)o(t.)j(This)d(pro)s(ject)f(is)g(v)
o(ery)g(brief.)577 445 y Fn(ANSWERS)i(F)o(OR)h(INSTR)o(UCTORS)75
547 y(Exercise)e(1.)j Fq(Solution)c(is)g Fh(y)f Fq(=)f(4)8
b(cos)f(3)p Fh(t)h Fq(+)g(2)g(sin)f(3)p Fh(t)13 b Fq(=)1030
509 y Fg(p)p 1068 509 46 2 v 38 x Fq(20)7 b(cos)o(\(3)p Fh(t)h
Fg(\000)g Fq(arctan)1428 529 y Fe(1)p 1428 536 18 2 v 1428
563 a(2)1450 547 y Fq(\),)14 b(so)f Fh(A)g Fq(=)1644 509 y
Fg(p)p 1682 509 46 2 v 38 x Fq(20)o(,)h Fh(k)g Fq(=)f(3,)75
603 y(and)i Fh(\013)e Fq(=)258 586 y Fe(1)p 258 593 18 2 v
258 619 a(3)288 603 y Fq(arctan)427 586 y Fe(1)p 427 593 V
427 619 a(2)450 603 y Fq(.)75 684 y Fn(Exercise)19 b(2.)24
b Fq(No)o(w)16 b Fh(y)h Fq(=)e(cos)8 b Fh(x)j Fg(\000)g Fq(sin)e
Fh(x)15 b Fq(=)850 647 y Fg(p)p 888 647 23 2 v 37 x Fq(2)7
b(cos\()p Fh(x)k Fq(+)1085 666 y Ff(\031)p 1085 673 22 2 v
1087 700 a Fe(4)1111 684 y Fq(\),)17 b(so)f(the)h(range)f(is)h([)p
Fg(\000)1516 647 y(p)p 1554 647 23 2 v 37 x Fq(2)p Fh(;)8 b
Fq(+)1633 647 y Fg(p)p 1670 647 V 1670 684 a Fq(2])16 b(and)h(the)75
741 y(domain)c(of)f(monotonicit)o(y)g(including)j(the)d(origin)h(is)g([)p
Fg(\000)1046 723 y Ff(\031)p 1046 730 22 2 v 1048 756 a Fe(4)1073
741 y Fh(;)8 b Fg(\000)1134 723 y Ff(\031)p 1134 730 V 1136
756 a Fe(4)1164 741 y Fq(+)t Fh(\031)r Fq(])k(=)h([)p Fg(\000)1357
723 y Ff(\031)p 1357 730 V 1359 756 a Fe(4)1384 741 y Fh(;)1409
723 y Fe(3)p Ff(\031)p 1409 730 40 2 v 1420 756 a Fe(4)1453
741 y Fq(],)f(see)h(Figure)f(38)g(whic)o(h)75 797 y(w)o(as)i(pro)q(duced)j(b)
o(y)e(the)g(co)q(de)h(sho)o(wn)f(b)q(elo)o(w.)571 1352 y @beginspecial
0 @llx 0 @lly 282 @urx 174 @ury 1937 @rwi @setspecial
%%BeginDocument: Har.shiftedcos.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.380952 0.151576 0.309017 0.208103 [
[(-2)] 0.0778 0.30902 0 2 Msboxa
[(-1)] 0.22938 0.30902 0 2 Msboxa
[(1)] 0.53253 0.30902 0 2 Msboxa
[(2)] 0.6841 0.30902 0 2 Msboxa
[(3)] 0.83568 0.30902 0 2 Msboxa
[(4)] 0.98726 0.30902 0 2 Msboxa
[(-1)] 0.36845 0.10091 1 0 Msboxa
[(-0.5)] 0.36845 0.20497 1 0 Msboxa
[(0.5)] 0.36845 0.41307 1 0 Msboxa
[(1)] 0.36845 0.51712 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.0778 0.30902 moveto
0.0778 0.31527 lineto
stroke
grestore
[(-2)] 0.0778 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.22938 0.30902 moveto
0.22938 0.31527 lineto
stroke
grestore
[(-1)] 0.22938 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.53253 0.30902 moveto
0.53253 0.31527 lineto
stroke
grestore
[(1)] 0.53253 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.6841 0.30902 moveto
0.6841 0.31527 lineto
stroke
grestore
[(2)] 0.6841 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.83568 0.30902 moveto
0.83568 0.31527 lineto
stroke
grestore
[(3)] 0.83568 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.98726 0.30902 moveto
0.98726 0.31527 lineto
stroke
grestore
[(4)] 0.98726 0.30902 0 2 Mshowa
gsave
0.001 setlinewidth
0.10812 0.30902 moveto
0.10812 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.13843 0.30902 moveto
0.13843 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16875 0.30902 moveto
0.16875 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.19906 0.30902 moveto
0.19906 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.25969 0.30902 moveto
0.25969 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29001 0.30902 moveto
0.29001 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.32032 0.30902 moveto
0.32032 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35064 0.30902 moveto
0.35064 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.41127 0.30902 moveto
0.41127 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44158 0.30902 moveto
0.44158 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.4719 0.30902 moveto
0.4719 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.50221 0.30902 moveto
0.50221 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56284 0.30902 moveto
0.56284 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59316 0.30902 moveto
0.59316 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.62347 0.30902 moveto
0.62347 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.65379 0.30902 moveto
0.65379 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.71442 0.30902 moveto
0.71442 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.74474 0.30902 moveto
0.74474 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77505 0.30902 moveto
0.77505 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.80537 0.30902 moveto
0.80537 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.866 0.30902 moveto
0.866 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.89631 0.30902 moveto
0.89631 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92663 0.30902 moveto
0.92663 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.95694 0.30902 moveto
0.95694 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.04748 0.30902 moveto
0.04748 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.01717 0.30902 moveto
0.01717 0.31277 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.30902 moveto
1 0.30902 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.38095 0.10091 moveto
0.3872 0.10091 lineto
stroke
grestore
[(-1)] 0.36845 0.10091 1 0 Mshowa
gsave
0.002 setlinewidth
0.38095 0.20497 moveto
0.3872 0.20497 lineto
stroke
grestore
[(-0.5)] 0.36845 0.20497 1 0 Mshowa
gsave
0.002 setlinewidth
0.38095 0.41307 moveto
0.3872 0.41307 lineto
stroke
grestore
[(0.5)] 0.36845 0.41307 1 0 Mshowa
gsave
0.002 setlinewidth
0.38095 0.51712 moveto
0.3872 0.51712 lineto
stroke
grestore
[(1)] 0.36845 0.51712 1 0 Mshowa
gsave
0.001 setlinewidth
0.38095 0.01767 moveto
0.3847 0.01767 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38095 0.03848 moveto
0.3847 0.03848 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38095 0.05929 moveto
0.3847 0.05929 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38095 0.0801 moveto
0.3847 0.0801 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38095 0.12172 moveto
0.3847 0.12172 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38095 0.14253 moveto
0.3847 0.14253 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38095 0.16334 moveto
0.3847 0.16334 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38095 0.18416 moveto
0.3847 0.18416 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38095 0.22578 moveto
0.3847 0.22578 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38095 0.24659 moveto
0.3847 0.24659 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38095 0.2674 moveto
0.3847 0.2674 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38095 0.28821 moveto
0.3847 0.28821 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38095 0.32983 moveto
0.3847 0.32983 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38095 0.35064 moveto
0.3847 0.35064 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38095 0.37145 moveto
0.3847 0.37145 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38095 0.39226 moveto
0.3847 0.39226 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38095 0.43388 moveto
0.3847 0.43388 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38095 0.45469 moveto
0.3847 0.45469 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38095 0.4755 moveto
0.3847 0.4755 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38095 0.49631 moveto
0.3847 0.49631 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38095 0.53793 moveto
0.3847 0.53793 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38095 0.55874 moveto
0.3847 0.55874 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38095 0.57955 moveto
0.3847 0.57955 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38095 0.60036 moveto
0.3847 0.60036 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.38095 0 moveto
0.38095 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.6 setgray
gsave
0.004 setlinewidth
0.02381 0.30902 moveto
0.06349 0.38519 lineto
0.10317 0.45617 lineto
0.14286 0.51712 lineto
0.1627 0.5425 lineto
0.18254 0.56389 lineto
0.20238 0.58092 lineto
0.22222 0.59329 lineto
0.23214 0.59766 lineto
0.2371 0.59939 lineto
0.24206 0.6008 lineto
0.24702 0.6019 lineto
0.2495 0.60233 lineto
0.25198 0.60269 lineto
0.25446 0.60296 lineto
0.2557 0.60307 lineto
0.25694 0.60316 lineto
0.25818 0.60323 lineto
0.25942 0.60328 lineto
0.26066 0.60331 lineto
0.2619 0.60332 lineto
0.26314 0.60331 lineto
0.26438 0.60328 lineto
0.26562 0.60323 lineto
0.26687 0.60316 lineto
0.26935 0.60296 lineto
0.27183 0.60269 lineto
0.27431 0.60233 lineto
0.27679 0.6019 lineto
0.28175 0.6008 lineto
0.28671 0.59939 lineto
0.29167 0.59766 lineto
0.30159 0.59329 lineto
0.32143 0.58092 lineto
0.34127 0.56389 lineto
0.38095 0.51712 lineto
0.42063 0.45617 lineto
0.46032 0.38519 lineto
0.5 0.30902 lineto
0.53968 0.23285 lineto
0.57937 0.16187 lineto
0.61905 0.10091 lineto
0.65873 0.05414 lineto
0.67857 0.03712 lineto
0.68849 0.03033 lineto
0.69841 0.02474 lineto
0.70833 0.02037 lineto
0.71329 0.01865 lineto
0.71825 0.01723 lineto
0.72321 0.01613 lineto
Mistroke
0.72569 0.0157 lineto
0.72817 0.01535 lineto
0.73065 0.01507 lineto
0.73189 0.01496 lineto
0.73313 0.01487 lineto
0.73438 0.0148 lineto
0.73562 0.01475 lineto
0.73686 0.01472 lineto
0.7381 0.01472 lineto
0.73934 0.01472 lineto
0.74058 0.01475 lineto
0.74182 0.0148 lineto
0.74306 0.01487 lineto
0.7443 0.01496 lineto
0.74554 0.01507 lineto
0.74802 0.01535 lineto
0.7505 0.0157 lineto
0.75298 0.01613 lineto
0.75794 0.01723 lineto
0.7629 0.01865 lineto
0.76786 0.02037 lineto
0.77778 0.02474 lineto
0.79762 0.03712 lineto
0.81746 0.05414 lineto
0.85714 0.10091 lineto
0.89683 0.16187 lineto
0.93651 0.23285 lineto
0.97619 0.30902 lineto
Mfstroke
grestore
grestore
grestore
gsave
gsave
gsave
0.004 setlinewidth
0.2619 0.60332 moveto
0.26252 0.60332 lineto
0.26314 0.60331 lineto
0.26376 0.6033 lineto
0.26438 0.60328 lineto
0.26562 0.60323 lineto
0.26687 0.60316 lineto
0.26811 0.60307 lineto
0.26935 0.60296 lineto
0.27183 0.60269 lineto
0.27431 0.60233 lineto
0.27679 0.6019 lineto
0.28175 0.6008 lineto
0.28671 0.59939 lineto
0.29167 0.59766 lineto
0.30159 0.59329 lineto
0.32143 0.58092 lineto
0.34127 0.56389 lineto
0.36111 0.5425 lineto
0.38095 0.51712 lineto
0.40079 0.48818 lineto
0.42063 0.45617 lineto
0.44048 0.42164 lineto
0.46032 0.38519 lineto
0.48016 0.34743 lineto
0.5 0.30902 lineto
0.51984 0.2706 lineto
0.53968 0.23285 lineto
0.55952 0.19639 lineto
0.57937 0.16187 lineto
0.59921 0.12986 lineto
0.61905 0.10091 lineto
0.63889 0.07553 lineto
0.65873 0.05414 lineto
0.67857 0.03712 lineto
0.68849 0.03033 lineto
0.69841 0.02474 lineto
0.70833 0.02037 lineto
0.71329 0.01865 lineto
0.71825 0.01723 lineto
0.72321 0.01613 lineto
0.72569 0.0157 lineto
0.72817 0.01535 lineto
0.73065 0.01507 lineto
0.73189 0.01496 lineto
0.73313 0.01487 lineto
0.73438 0.0148 lineto
0.735 0.01478 lineto
0.73562 0.01475 lineto
0.73624 0.01474 lineto
Mistroke
0.73686 0.01472 lineto
0.73748 0.01472 lineto
0.7381 0.01472 lineto
Mfstroke
grestore
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 158 1439 a Fi(Fig)p Fq(.)g(38.)k(Plot)c(of)g(cos)7
b Fh(x)j Fg(\000)h Fq(sin)d Fh(x)15 b Fq(with)h(monotone)e(region)i
(including)i Fh(x)13 b Fq(=)f(0)j(sho)o(wn)g(dark)o(er.)75
1581 y Fj(f[x_])21 b(:=)g(Cos[x])g(-)g(Sin[x])75 1631 y(p1)g(=)75
1681 y(Plot[f[x],)f({x,)h(-3Pi/4,)f(5Pi/4},)162 1731 y(PlotStyle)g(->)h
(GrayLevel[0.6],)162 1781 y(DisplayFunction)e(->)i(Identity)75
1831 y(];)75 1880 y(p2)g(=)75 1930 y(Plot[f[x],)f({x,)h(-Pi/4,)f(3Pi/4},)162
1980 y(DisplayFunction)f(->)i(Identity)75 2030 y(];)75 2080
y(Show[p1,)f(p2,)h(DisplayFunction)e(->)i($DisplayFunction])75
2200 y Fq(In)o(v)o(erse:)f(\(1\))14 b(In)o(terc)o(hange)i Fh(x)f
Fq(and)g Fh(y)i Fq(to)e(get)g Fh(x)d Fq(=)953 2163 y Fg(p)p
991 2163 23 2 v 37 x Fq(2)7 b(cos\()p Fh(y)12 b Fq(+)1184 2182
y Ff(\031)p 1184 2189 22 2 v 1186 2216 a Fe(4)1211 2200 y Fq(\))j(and,)g
(\(2\))f(Solv)o(e)i(for)e Fh(y)j Fq(to)e(get)769 2311 y Fh(y)f
Fq(=)f Fg(\000)893 2281 y Fh(\031)p 893 2301 28 2 v 895 2343
a Fq(4)936 2311 y(+)e(arccos)1133 2281 y Fh(x)p 1116 2301 61
2 v 1116 2309 a Fg(p)p 1154 2309 23 2 v 38 x Fq(2)1817 2311
y(\(1\))75 2439 y(with)16 b(domain)f([)p Fg(\000)388 2402 y(p)p
426 2402 V 37 x Fq(2)p Fh(;)8 b Fq(+)505 2402 y Fg(p)p 542
2402 V 542 2439 a Fq(2])15 b(and)g(range)g([)p Fg(\000)858
2421 y Ff(\031)p 858 2428 22 2 v 860 2455 a Fe(4)884 2439 y
Fh(;)910 2421 y Fe(3)p Ff(\031)p 910 2428 40 2 v 920 2455 a
Fe(4)954 2439 y Fq(].)75 2516 y Fn(Exercise)21 b(3.)28 b Fq(Notice)19
b(that)f(in)h(the)f(in)o(v)o(erse)h(computed)f(ab)q(o)o(v)o(e,)g(w)o(e)g(ha)o
(v)o(e)g(delib)q(erately)j(set)d(things)75 2572 y(up)e(so)f(that)g(the)h
(arccosine)g(function)g(obtained)h(is)f(the)f Fl(princip)n(al)20
b Fq(branc)o(h)c(giv)o(en)g(b)o(y)f Fl(Mathematic)n(a)s Fq('s)75
2629 y Fk(ArcCos)f Fq(function,)i(see)f(Figure)h(39)f(whic)o(h)h(w)o(as)e
(pro)q(duced)i(b)o(y)f(the)h(co)q(de)g(sho)o(wn)e(b)q(elo)o(w.)p
eop
%%Page: 69 69
69 68 bop 75 -103 a Fm(Simple)20 b(Harmonic)i(Motion)p 75 -85
763 2 v 993 w Fq(69)726 502 y @beginspecial 0 @llx 0 @lly 241
@urx 241 @ury 1195 @rwi @setspecial
%%BeginDocument: Har.inverse.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	241.203873 def
/Mwidth		241.203857 def
/Mheight	241.203873 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.461063 0.218627 0.461063 0.218627 [
[(-2)] 0.02381 0.46106 0 2 Msboxa
[(-1)] 0.24244 0.46106 0 2 Msboxa
[(1)] 0.67969 0.46106 0 2 Msboxa
[(2)] 0.89832 0.46106 0 2 Msboxa
[(-2)] 0.44856 0.02381 1 0 Msboxa
[(-1)] 0.44856 0.24244 1 0 Msboxa
[(1)] 0.44856 0.67969 1 0 Msboxa
[(2)] 0.44856 0.89832 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.46106 moveto
0.02381 0.46731 lineto
stroke
grestore
[(-2)] 0.02381 0.46106 0 2 Mshowa
gsave
0.002 setlinewidth
0.24244 0.46106 moveto
0.24244 0.46731 lineto
stroke
grestore
[(-1)] 0.24244 0.46106 0 2 Mshowa
gsave
0.002 setlinewidth
0.67969 0.46106 moveto
0.67969 0.46731 lineto
stroke
grestore
[(1)] 0.67969 0.46106 0 2 Mshowa
gsave
0.002 setlinewidth
0.89832 0.46106 moveto
0.89832 0.46731 lineto
stroke
grestore
[(2)] 0.89832 0.46106 0 2 Mshowa
gsave
0.001 setlinewidth
0.06753 0.46106 moveto
0.06753 0.46481 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11126 0.46106 moveto
0.11126 0.46481 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.15499 0.46106 moveto
0.15499 0.46481 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.19871 0.46106 moveto
0.19871 0.46481 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.28616 0.46106 moveto
0.28616 0.46481 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.32989 0.46106 moveto
0.32989 0.46481 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.37361 0.46106 moveto
0.37361 0.46481 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.41734 0.46106 moveto
0.41734 0.46481 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.50479 0.46106 moveto
0.50479 0.46481 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54851 0.46106 moveto
0.54851 0.46481 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59224 0.46106 moveto
0.59224 0.46481 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63596 0.46106 moveto
0.63596 0.46481 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72342 0.46106 moveto
0.72342 0.46481 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.76714 0.46106 moveto
0.76714 0.46481 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81087 0.46106 moveto
0.81087 0.46481 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85459 0.46106 moveto
0.85459 0.46481 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.94204 0.46106 moveto
0.94204 0.46481 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.98577 0.46106 moveto
0.98577 0.46481 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.46106 moveto
1 0.46106 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.46106 0.02381 moveto
0.46731 0.02381 lineto
stroke
grestore
[(-2)] 0.44856 0.02381 1 0 Mshowa
gsave
0.002 setlinewidth
0.46106 0.24244 moveto
0.46731 0.24244 lineto
stroke
grestore
[(-1)] 0.44856 0.24244 1 0 Mshowa
gsave
0.002 setlinewidth
0.46106 0.67969 moveto
0.46731 0.67969 lineto
stroke
grestore
[(1)] 0.44856 0.67969 1 0 Mshowa
gsave
0.002 setlinewidth
0.46106 0.89832 moveto
0.46731 0.89832 lineto
stroke
grestore
[(2)] 0.44856 0.89832 1 0 Mshowa
gsave
0.001 setlinewidth
0.46106 0.06753 moveto
0.46481 0.06753 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46106 0.11126 moveto
0.46481 0.11126 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46106 0.15499 moveto
0.46481 0.15499 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46106 0.19871 moveto
0.46481 0.19871 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46106 0.28616 moveto
0.46481 0.28616 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46106 0.32989 moveto
0.46481 0.32989 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46106 0.37361 moveto
0.46481 0.37361 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46106 0.41734 moveto
0.46481 0.41734 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46106 0.50479 moveto
0.46481 0.50479 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46106 0.54851 moveto
0.46481 0.54851 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46106 0.59224 moveto
0.46481 0.59224 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46106 0.63596 moveto
0.46481 0.63596 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46106 0.72342 moveto
0.46481 0.72342 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46106 0.76714 moveto
0.46481 0.76714 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46106 0.81087 moveto
0.46481 0.81087 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46106 0.85459 moveto
0.46481 0.85459 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46106 0.94204 moveto
0.46481 0.94204 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46106 0.98577 moveto
0.46481 0.98577 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.46106 0 moveto
0.46106 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
gsave
gsave
0.004 setlinewidth
0.28935 0.77025 moveto
0.29025 0.77025 lineto
0.29114 0.77024 lineto
0.29204 0.77022 lineto
0.29293 0.77021 lineto
0.29472 0.77016 lineto
0.29651 0.77008 lineto
0.2983 0.76999 lineto
0.30009 0.76988 lineto
0.30366 0.76959 lineto
0.30724 0.76921 lineto
0.31082 0.76876 lineto
0.31797 0.7676 lineto
0.32513 0.76612 lineto
0.33228 0.76431 lineto
0.34659 0.75971 lineto
0.37521 0.74671 lineto
0.40383 0.72883 lineto
0.43244 0.70636 lineto
0.46106 0.67969 lineto
0.48968 0.64928 lineto
0.5183 0.61566 lineto
0.54692 0.57938 lineto
0.57554 0.54109 lineto
0.60415 0.50142 lineto
0.63277 0.46106 lineto
0.66139 0.42071 lineto
0.69001 0.38104 lineto
0.71863 0.34274 lineto
0.74725 0.30647 lineto
0.77586 0.27284 lineto
0.80448 0.24244 lineto
0.8331 0.21577 lineto
0.86172 0.1933 lineto
0.89034 0.17541 lineto
0.90465 0.16829 lineto
0.91895 0.16241 lineto
0.93326 0.15782 lineto
0.94042 0.15601 lineto
0.94757 0.15452 lineto
0.95473 0.15337 lineto
0.9583 0.15291 lineto
0.96188 0.15254 lineto
0.96546 0.15225 lineto
0.96725 0.15214 lineto
0.96904 0.15204 lineto
0.97082 0.15197 lineto
0.97172 0.15194 lineto
0.97261 0.15192 lineto
0.97351 0.1519 lineto
Mistroke
0.9744 0.15189 lineto
0.9753 0.15188 lineto
0.97619 0.15188 lineto
Mfstroke
grestore
grestore
grestore
gsave
gsave
0.333 setgray
gsave
0.004 setlinewidth
0.15188 0.97619 moveto
0.15268 0.96041 lineto
0.15349 0.95387 lineto
0.1551 0.94461 lineto
0.15832 0.93149 lineto
0.16154 0.92139 lineto
0.16476 0.91286 lineto
0.17764 0.8863 lineto
0.19053 0.86571 lineto
0.20341 0.84814 lineto
0.22917 0.81818 lineto
0.25494 0.79231 lineto
0.28071 0.76894 lineto
0.30647 0.74725 lineto
0.33224 0.72673 lineto
0.358 0.70707 lineto
0.38377 0.68801 lineto
0.40953 0.66938 lineto
0.4353 0.65101 lineto
0.46106 0.63277 lineto
0.48683 0.61453 lineto
0.51259 0.59616 lineto
0.53836 0.57753 lineto
0.56412 0.55847 lineto
0.58989 0.53881 lineto
0.61566 0.5183 lineto
0.64142 0.49661 lineto
0.66719 0.47323 lineto
0.69295 0.44736 lineto
0.71872 0.4174 lineto
0.7316 0.39984 lineto
0.74448 0.37924 lineto
0.75092 0.36706 lineto
0.75737 0.35269 lineto
0.76059 0.34415 lineto
0.76381 0.33406 lineto
0.76703 0.32094 lineto
0.76864 0.31168 lineto
0.76944 0.30514 lineto
0.77025 0.28935 lineto
stroke
grestore
grestore
grestore
gsave
gsave
0.667 setgray
gsave
0.004 setlinewidth
0.02381 0.02381 moveto
0.05491 0.05491 lineto
0.08601 0.08601 lineto
0.11711 0.11711 lineto
0.14822 0.14822 lineto
0.17932 0.17932 lineto
0.21042 0.21042 lineto
0.24152 0.24152 lineto
0.27262 0.27262 lineto
0.30372 0.30372 lineto
0.33483 0.33483 lineto
0.36593 0.36593 lineto
0.39703 0.39703 lineto
0.42813 0.42813 lineto
0.45923 0.45923 lineto
0.49033 0.49033 lineto
0.52144 0.52144 lineto
0.55254 0.55254 lineto
0.58364 0.58364 lineto
0.61474 0.61474 lineto
0.64584 0.64584 lineto
0.67694 0.67694 lineto
0.70804 0.70804 lineto
0.73915 0.73915 lineto
0.77025 0.77025 lineto
stroke
grestore
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 82 588 a Fi(Fig)p Fq(.)15 b(39.)20 b(Plot)15 b(of)f(cos)8
b Fh(x)i Fg(\000)g Fq(sin)f Fh(x)15 b Fq(\(dark\))f(together)h(with)g(in)o(v)
o(erse)h(function)g(\(medium\))f(and)h(the)f(line)843 638 y
Fh(y)g Fq(=)e Fh(x)i Fq(\(ligh)o(t\).)75 782 y Fj(p3)21 b(=)75
831 y(Plot[-Pi/4)f(+)h(ArcCos[x/Sqrt[2]],)d({x,)k(-Sqrt[2],)d(Sqrt[2]},)162
881 y(PlotStyle)h(->)h(GrayLevel[0.333],)162 931 y(DisplayFunction)e(->)i
(Identity)75 981 y(];)75 1031 y(p4)g(=)75 1081 y(Plot[x,)f({x,)i(-2,)f
(Sqrt[2]},)162 1130 y(PlotStyle)f(->)h(GrayLevel[0.667],)162
1180 y(DisplayFunction)e(->)i(Identity)75 1230 y(];)75 1280
y(Show[p2,)f(p3,)h(p4,)162 1330 y(AspectRatio)f(->)h(Automatic,)162
1379 y(DisplayFunction)e(->)i($DisplayFunction)75 1429 y(])75
1588 y Fn(Exercise)c(4.)126 1703 y Fq(a\))22 b Fj(A)f(=)h(5;)189
1753 y(B)f(=)h(A;)189 1802 y(y)f(=)h(Sin[A)f(x])g(+)h(Sin[B)e(x];)189
1852 y(Plot[y,)g({x,)h(0,)h(4Pi}])204 1924 y Fq(W)l(e)15 b(read)g(the)g(p)q
(erio)q(d)i(o\013)d(Figure)i(40)e(b)o(y)i(pic)o(king)g(t)o(w)o(o)e(p)q(oin)o
(ts)i(a)f(p)q(erio)q(d)h(apart.)571 2485 y @beginspecial 0
@llx 0 @lly 282 @urx 174 @ury 1937 @rwi @setspecial
%%BeginDocument: Har.equal.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.02381 0.075788 0.309017 0.147151 [
[(2)] 0.17539 0.30902 0 2 Msboxa
[(4)] 0.32696 0.30902 0 2 Msboxa
[(6)] 0.47854 0.30902 0 2 Msboxa
[(8)] 0.63011 0.30902 0 2 Msboxa
[(10)] 0.78169 0.30902 0 2 Msboxa
[(12)] 0.93327 0.30902 0 2 Msboxa
[(-2)] 0.01131 0.01472 1 0 Msboxa
[(-1)] 0.01131 0.16187 1 0 Msboxa
[(1)] 0.01131 0.45617 1 0 Msboxa
[(2)] 0.01131 0.60332 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.17539 0.30902 moveto
0.17539 0.31527 lineto
stroke
grestore
[(2)] 0.17539 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.32696 0.30902 moveto
0.32696 0.31527 lineto
stroke
grestore
[(4)] 0.32696 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.47854 0.30902 moveto
0.47854 0.31527 lineto
stroke
grestore
[(6)] 0.47854 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.63011 0.30902 moveto
0.63011 0.31527 lineto
stroke
grestore
[(8)] 0.63011 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.78169 0.30902 moveto
0.78169 0.31527 lineto
stroke
grestore
[(10)] 0.78169 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.93327 0.30902 moveto
0.93327 0.31527 lineto
stroke
grestore
[(12)] 0.93327 0.30902 0 2 Mshowa
gsave
0.001 setlinewidth
0.05412 0.30902 moveto
0.05412 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.08444 0.30902 moveto
0.08444 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11476 0.30902 moveto
0.11476 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.14507 0.30902 moveto
0.14507 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2057 0.30902 moveto
0.2057 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.23602 0.30902 moveto
0.23602 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.26633 0.30902 moveto
0.26633 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29665 0.30902 moveto
0.29665 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35728 0.30902 moveto
0.35728 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38759 0.30902 moveto
0.38759 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.41791 0.30902 moveto
0.41791 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44822 0.30902 moveto
0.44822 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.50885 0.30902 moveto
0.50885 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53917 0.30902 moveto
0.53917 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56948 0.30902 moveto
0.56948 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5998 0.30902 moveto
0.5998 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.66043 0.30902 moveto
0.66043 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69074 0.30902 moveto
0.69074 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72106 0.30902 moveto
0.72106 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.75137 0.30902 moveto
0.75137 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81201 0.30902 moveto
0.81201 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84232 0.30902 moveto
0.84232 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.87264 0.30902 moveto
0.87264 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90295 0.30902 moveto
0.90295 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.96358 0.30902 moveto
0.96358 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9939 0.30902 moveto
0.9939 0.31277 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.30902 moveto
1 0.30902 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0.01472 moveto
0.03006 0.01472 lineto
stroke
grestore
[(-2)] 0.01131 0.01472 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.16187 moveto
0.03006 0.16187 lineto
stroke
grestore
[(-1)] 0.01131 0.16187 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.45617 moveto
0.03006 0.45617 lineto
stroke
grestore
[(1)] 0.01131 0.45617 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.60332 moveto
0.03006 0.60332 lineto
stroke
grestore
[(2)] 0.01131 0.60332 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.04415 moveto
0.02756 0.04415 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.07358 moveto
0.02756 0.07358 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.10301 moveto
0.02756 0.10301 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.13244 moveto
0.02756 0.13244 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.1913 moveto
0.02756 0.1913 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.22073 moveto
0.02756 0.22073 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.25016 moveto
0.02756 0.25016 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.27959 moveto
0.02756 0.27959 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.33845 moveto
0.02756 0.33845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.36788 moveto
0.02756 0.36788 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.39731 moveto
0.02756 0.39731 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.42674 moveto
0.02756 0.42674 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.4856 moveto
0.02756 0.4856 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.51503 moveto
0.02756 0.51503 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.54446 moveto
0.02756 0.54446 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.57389 moveto
0.02756 0.57389 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.30902 moveto
0.02877 0.40362 lineto
0.03373 0.48818 lineto
0.03621 0.52382 lineto
0.03869 0.55372 lineto
0.03993 0.56626 lineto
0.04117 0.57709 lineto
0.04241 0.58612 lineto
0.04365 0.59329 lineto
0.04489 0.59856 lineto
0.04613 0.6019 lineto
0.04737 0.60328 lineto
0.04861 0.60269 lineto
0.04985 0.60013 lineto
0.05109 0.59563 lineto
0.05233 0.58921 lineto
0.05357 0.58092 lineto
0.05605 0.55894 lineto
0.05853 0.53028 lineto
0.06349 0.45617 lineto
0.07341 0.2706 lineto
0.07837 0.17885 lineto
0.08333 0.10091 lineto
0.08581 0.06979 lineto
0.08829 0.04507 lineto
0.08953 0.03531 lineto
0.09077 0.02739 lineto
0.09201 0.02135 lineto
0.09325 0.01723 lineto
0.09449 0.01507 lineto
0.09573 0.01487 lineto
0.09697 0.01664 lineto
0.09821 0.02037 lineto
0.09945 0.02603 lineto
0.10069 0.03358 lineto
0.10317 0.05414 lineto
0.10565 0.08152 lineto
0.10813 0.11497 lineto
0.1131 0.19639 lineto
0.12302 0.38519 lineto
0.12798 0.47252 lineto
0.13046 0.5102 lineto
0.13294 0.5425 lineto
0.13542 0.56857 lineto
0.13666 0.57904 lineto
0.1379 0.5877 lineto
0.13914 0.5945 lineto
0.14038 0.59939 lineto
0.14162 0.60233 lineto
0.14286 0.60332 lineto
Mistroke
0.1441 0.60233 lineto
0.14534 0.59939 lineto
0.14658 0.5945 lineto
0.14782 0.5877 lineto
0.1503 0.56857 lineto
0.15278 0.5425 lineto
0.15774 0.47252 lineto
0.1627 0.38519 lineto
0.17262 0.19639 lineto
0.17758 0.11497 lineto
0.18006 0.08152 lineto
0.18254 0.05414 lineto
0.18502 0.03358 lineto
0.18626 0.02603 lineto
0.1875 0.02037 lineto
0.18874 0.01664 lineto
0.18998 0.01487 lineto
0.19122 0.01507 lineto
0.19246 0.01723 lineto
0.1937 0.02135 lineto
0.19494 0.02739 lineto
0.19742 0.04507 lineto
0.1999 0.06979 lineto
0.20238 0.10091 lineto
0.2123 0.2706 lineto
0.21726 0.36643 lineto
0.22222 0.45617 lineto
0.2247 0.49572 lineto
0.22718 0.53028 lineto
0.22966 0.55894 lineto
0.2309 0.5708 lineto
0.23214 0.58092 lineto
0.23338 0.58921 lineto
0.23462 0.59563 lineto
0.23586 0.60013 lineto
0.2371 0.60269 lineto
0.23834 0.60328 lineto
0.23958 0.6019 lineto
0.24082 0.59856 lineto
0.24206 0.59329 lineto
0.24454 0.57709 lineto
0.24578 0.56626 lineto
0.24702 0.55372 lineto
0.25198 0.48818 lineto
0.2619 0.30902 lineto
0.26687 0.21442 lineto
0.27183 0.12986 lineto
0.27431 0.09422 lineto
0.27679 0.06431 lineto
0.27927 0.04095 lineto
Mistroke
0.28051 0.03192 lineto
0.28175 0.02474 lineto
0.28299 0.01947 lineto
0.28423 0.01613 lineto
0.28547 0.01475 lineto
0.28671 0.01535 lineto
0.28795 0.0179 lineto
0.28919 0.0224 lineto
0.29043 0.02882 lineto
0.29167 0.03712 lineto
0.29415 0.0591 lineto
0.29663 0.08775 lineto
0.30159 0.16187 lineto
0.31151 0.34743 lineto
0.31647 0.43918 lineto
0.32143 0.51712 lineto
0.32391 0.54824 lineto
0.32639 0.57297 lineto
0.32763 0.58272 lineto
0.32887 0.59065 lineto
0.33011 0.59669 lineto
0.33135 0.6008 lineto
0.33259 0.60296 lineto
0.33383 0.60316 lineto
0.33507 0.60139 lineto
0.33631 0.59766 lineto
0.33755 0.59201 lineto
0.33879 0.58446 lineto
0.34003 0.57506 lineto
0.34127 0.56389 lineto
0.35119 0.42164 lineto
0.36111 0.23285 lineto
0.36607 0.14551 lineto
0.36855 0.10783 lineto
0.37103 0.07553 lineto
0.37351 0.04947 lineto
0.37599 0.03033 lineto
0.37723 0.02353 lineto
0.37847 0.01865 lineto
0.37971 0.0157 lineto
0.38095 0.01472 lineto
0.38219 0.0157 lineto
0.38343 0.01865 lineto
0.38467 0.02353 lineto
0.38591 0.03033 lineto
0.38839 0.04947 lineto
0.39087 0.07553 lineto
0.39583 0.14551 lineto
0.40079 0.23285 lineto
0.41071 0.42164 lineto
Mistroke
0.41567 0.50306 lineto
0.41815 0.53652 lineto
0.42063 0.56389 lineto
0.42188 0.57506 lineto
0.42312 0.58446 lineto
0.42436 0.59201 lineto
0.4256 0.59766 lineto
0.42684 0.60139 lineto
0.42808 0.60316 lineto
0.42932 0.60296 lineto
0.43056 0.6008 lineto
0.4318 0.59669 lineto
0.43304 0.59065 lineto
0.43552 0.57297 lineto
0.438 0.54824 lineto
0.44048 0.51712 lineto
0.44544 0.43918 lineto
0.4504 0.34743 lineto
0.45536 0.2516 lineto
0.46032 0.16187 lineto
0.46528 0.08775 lineto
0.46776 0.0591 lineto
0.469 0.04723 lineto
0.47024 0.03712 lineto
0.47148 0.02882 lineto
0.47272 0.0224 lineto
0.47396 0.0179 lineto
0.4752 0.01535 lineto
0.47644 0.01475 lineto
0.47768 0.01613 lineto
0.47892 0.01947 lineto
0.48016 0.02474 lineto
0.4814 0.03192 lineto
0.48264 0.04095 lineto
0.48512 0.06431 lineto
0.49008 0.12986 lineto
0.5 0.30902 lineto
0.50496 0.40362 lineto
0.50992 0.48818 lineto
0.51488 0.55372 lineto
0.51612 0.56626 lineto
0.51736 0.57709 lineto
0.5186 0.58612 lineto
0.51984 0.59329 lineto
0.52108 0.59856 lineto
0.52232 0.6019 lineto
0.52356 0.60328 lineto
0.5248 0.60269 lineto
0.52604 0.60013 lineto
0.52728 0.59563 lineto
Mistroke
0.52852 0.58921 lineto
0.52976 0.58092 lineto
0.53968 0.45617 lineto
0.5496 0.2706 lineto
0.55456 0.17885 lineto
0.55952 0.10091 lineto
0.562 0.06979 lineto
0.56448 0.04507 lineto
0.56572 0.03531 lineto
0.56696 0.02739 lineto
0.5682 0.02135 lineto
0.56944 0.01723 lineto
0.57068 0.01507 lineto
0.57192 0.01487 lineto
0.57316 0.01664 lineto
0.5744 0.02037 lineto
0.57564 0.02603 lineto
0.57688 0.03358 lineto
0.57813 0.04297 lineto
0.57937 0.05414 lineto
0.58929 0.19639 lineto
0.59921 0.38519 lineto
0.60417 0.47252 lineto
0.60665 0.5102 lineto
0.60913 0.5425 lineto
0.61161 0.56857 lineto
0.61285 0.57904 lineto
0.61409 0.5877 lineto
0.61533 0.5945 lineto
0.61657 0.59939 lineto
0.61781 0.60233 lineto
0.61905 0.60332 lineto
0.62029 0.60233 lineto
0.62153 0.59939 lineto
0.62277 0.5945 lineto
0.62401 0.5877 lineto
0.62525 0.57904 lineto
0.62649 0.56857 lineto
0.62897 0.5425 lineto
0.63393 0.47252 lineto
0.63889 0.38519 lineto
0.64881 0.19639 lineto
0.65377 0.11497 lineto
0.65625 0.08152 lineto
0.65873 0.05414 lineto
0.66121 0.03358 lineto
0.66245 0.02603 lineto
0.66369 0.02037 lineto
0.66493 0.01664 lineto
0.66617 0.01487 lineto
Mistroke
0.66741 0.01507 lineto
0.66865 0.01723 lineto
0.66989 0.02135 lineto
0.67113 0.02739 lineto
0.67361 0.04507 lineto
0.67609 0.06979 lineto
0.67857 0.10091 lineto
0.68849 0.2706 lineto
0.69345 0.36643 lineto
0.69841 0.45617 lineto
0.70089 0.49572 lineto
0.70337 0.53028 lineto
0.70585 0.55894 lineto
0.70833 0.58092 lineto
0.70957 0.58921 lineto
0.71081 0.59563 lineto
0.71205 0.60013 lineto
0.71329 0.60269 lineto
0.71453 0.60328 lineto
0.71577 0.6019 lineto
0.71701 0.59856 lineto
0.71825 0.59329 lineto
0.7381 0.30902 lineto
0.74306 0.21442 lineto
0.74802 0.12986 lineto
0.75298 0.06431 lineto
0.75422 0.05177 lineto
0.75546 0.04095 lineto
0.7567 0.03192 lineto
0.75794 0.02474 lineto
0.75918 0.01947 lineto
0.76042 0.01613 lineto
0.76166 0.01475 lineto
0.7629 0.01535 lineto
0.76414 0.0179 lineto
0.76538 0.0224 lineto
0.76786 0.03712 lineto
0.7691 0.04723 lineto
0.77034 0.0591 lineto
0.77282 0.08775 lineto
0.77778 0.16187 lineto
0.7877 0.34743 lineto
0.79266 0.43918 lineto
0.79762 0.51712 lineto
0.8001 0.54824 lineto
0.80258 0.57297 lineto
0.80382 0.58272 lineto
0.80506 0.59065 lineto
0.8063 0.59669 lineto
0.80754 0.6008 lineto
Mistroke
0.80878 0.60296 lineto
0.81002 0.60316 lineto
0.81126 0.60139 lineto
0.8125 0.59766 lineto
0.81374 0.59201 lineto
0.81498 0.58446 lineto
0.81622 0.57506 lineto
0.81746 0.56389 lineto
0.82738 0.42164 lineto
0.8373 0.23285 lineto
0.84226 0.14551 lineto
0.84474 0.10783 lineto
0.84722 0.07553 lineto
0.8497 0.04947 lineto
0.85218 0.03033 lineto
0.85342 0.02353 lineto
0.85466 0.01865 lineto
0.8559 0.0157 lineto
0.85714 0.01472 lineto
0.85838 0.0157 lineto
0.85962 0.01865 lineto
0.86086 0.02353 lineto
0.8621 0.03033 lineto
0.86458 0.04947 lineto
0.86706 0.07553 lineto
0.86954 0.10783 lineto
0.87202 0.14551 lineto
0.87698 0.23285 lineto
0.8869 0.42164 lineto
0.89187 0.50306 lineto
0.89435 0.53652 lineto
0.89683 0.56389 lineto
0.89931 0.58446 lineto
0.90055 0.59201 lineto
0.90179 0.59766 lineto
0.90303 0.60139 lineto
0.90427 0.60316 lineto
0.90551 0.60296 lineto
0.90675 0.6008 lineto
0.90799 0.59669 lineto
0.90923 0.59065 lineto
0.91171 0.57297 lineto
0.91419 0.54824 lineto
0.91667 0.51712 lineto
0.92659 0.34743 lineto
0.93155 0.2516 lineto
0.93651 0.16187 lineto
0.93899 0.12231 lineto
0.94147 0.08775 lineto
0.94395 0.0591 lineto
Mistroke
0.94643 0.03712 lineto
0.94767 0.02882 lineto
0.94891 0.0224 lineto
0.95015 0.0179 lineto
0.95139 0.01535 lineto
0.95263 0.01475 lineto
0.95387 0.01613 lineto
0.95511 0.01947 lineto
0.95635 0.02474 lineto
0.95759 0.03192 lineto
0.95883 0.04095 lineto
0.96131 0.06431 lineto
0.96627 0.12986 lineto
0.97619 0.30902 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 663 2571 a Fi(Fig)p Fq(.)f(40.)k(Plot)c(of)g(sin)8
b(5)p Fh(x)i Fq(+)h(sin)d(5)p Fh(x)p Fq(.)p eop
%%Page: 70 70
70 69 bop 75 -103 a Fq(70)992 b Fm(Simple)20 b(Harmonic)i(Motion)p
1113 -85 763 2 v 189 49 a Fj({{0.650275,)d(0.067971},)h({1.946648,)g
(0.043242}})189 99 y(period)g(=)i(1.946648)e(-)h(0.650275)276
149 y(1.29637)189 249 y(2Pi/5)f(//N)276 298 y(1.25664)571 902
y @beginspecial 0 @llx 0 @lly 282 @urx 174 @ury 1937 @rwi @setspecial
%%BeginDocument: Har.slowperiod.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.02381 0.010105 0.309017 0.14726 [
[(20)] 0.22591 0.30902 0 2 Msboxa
[(40)] 0.42801 0.30902 0 2 Msboxa
[(60)] 0.63011 0.30902 0 2 Msboxa
[(80)] 0.83222 0.30902 0 2 Msboxa
[(-2)] 0.01131 0.0145 1 0 Msboxa
[(-1)] 0.01131 0.16176 1 0 Msboxa
[(1)] 0.01131 0.45628 1 0 Msboxa
[(2)] 0.01131 0.60354 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.22591 0.30902 moveto
0.22591 0.31527 lineto
stroke
grestore
[(20)] 0.22591 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.42801 0.30902 moveto
0.42801 0.31527 lineto
stroke
grestore
[(40)] 0.42801 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.63011 0.30902 moveto
0.63011 0.31527 lineto
stroke
grestore
[(60)] 0.63011 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.83222 0.30902 moveto
0.83222 0.31527 lineto
stroke
grestore
[(80)] 0.83222 0.30902 0 2 Mshowa
gsave
0.001 setlinewidth
0.06423 0.30902 moveto
0.06423 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.10465 0.30902 moveto
0.10465 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.14507 0.30902 moveto
0.14507 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18549 0.30902 moveto
0.18549 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.26633 0.30902 moveto
0.26633 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30675 0.30902 moveto
0.30675 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.34717 0.30902 moveto
0.34717 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38759 0.30902 moveto
0.38759 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46843 0.30902 moveto
0.46843 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.50885 0.30902 moveto
0.50885 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54927 0.30902 moveto
0.54927 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.58969 0.30902 moveto
0.58969 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.67053 0.30902 moveto
0.67053 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.71095 0.30902 moveto
0.71095 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.75137 0.30902 moveto
0.75137 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.7918 0.30902 moveto
0.7918 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.87264 0.30902 moveto
0.87264 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.91306 0.30902 moveto
0.91306 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.95348 0.30902 moveto
0.95348 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9939 0.30902 moveto
0.9939 0.31277 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.30902 moveto
1 0.30902 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0.0145 moveto
0.03006 0.0145 lineto
stroke
grestore
[(-2)] 0.01131 0.0145 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.16176 moveto
0.03006 0.16176 lineto
stroke
grestore
[(-1)] 0.01131 0.16176 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.45628 moveto
0.03006 0.45628 lineto
stroke
grestore
[(1)] 0.01131 0.45628 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.60354 moveto
0.03006 0.60354 lineto
stroke
grestore
[(2)] 0.01131 0.60354 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.04395 moveto
0.02756 0.04395 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.0734 moveto
0.02756 0.0734 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.10285 moveto
0.02756 0.10285 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.13231 moveto
0.02756 0.13231 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.19121 moveto
0.02756 0.19121 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.22066 moveto
0.02756 0.22066 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.25011 moveto
0.02756 0.25011 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.27957 moveto
0.02756 0.27957 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.33847 moveto
0.02756 0.33847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.36792 moveto
0.02756 0.36792 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.39737 moveto
0.02756 0.39737 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.42683 moveto
0.02756 0.42683 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.48573 moveto
0.02756 0.48573 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.51518 moveto
0.02756 0.51518 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.54463 moveto
0.02756 0.54463 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.57408 moveto
0.02756 0.57408 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.30902 moveto
0.02461 0.42512 lineto
0.02541 0.52238 lineto
0.02581 0.55883 lineto
0.02601 0.57329 lineto
0.02621 0.58504 lineto
0.02641 0.59395 lineto
0.02661 0.59994 lineto
0.02681 0.60295 lineto
0.02701 0.60294 lineto
0.02721 0.59991 lineto
0.0274 0.5939 lineto
0.0276 0.58497 lineto
0.0278 0.57321 lineto
0.0282 0.54172 lineto
0.0286 0.50072 lineto
0.0294 0.39727 lineto
0.0302 0.27966 lineto
0.031 0.167 lineto
0.0314 0.11834 lineto
0.0318 0.07752 lineto
0.032 0.06059 lineto
0.0322 0.04622 lineto
0.0324 0.03455 lineto
0.0326 0.0257 lineto
0.0328 0.01977 lineto
0.033 0.0168 lineto
0.0332 0.01683 lineto
0.0334 0.01986 lineto
0.03659 0.36689 lineto
0.03739 0.47429 lineto
0.03779 0.51878 lineto
0.03819 0.5546 lineto
0.03839 0.5688 lineto
0.03859 0.58032 lineto
0.03879 0.58905 lineto
0.03899 0.5949 lineto
0.03919 0.59781 lineto
0.03939 0.59775 lineto
0.03959 0.59474 lineto
0.03979 0.5888 lineto
0.03999 0.57999 lineto
0.04019 0.56842 lineto
0.04059 0.53747 lineto
0.04099 0.49724 lineto
0.04139 0.44941 lineto
0.04298 0.22429 lineto
0.04338 0.17117 lineto
0.04378 0.12381 lineto
0.04418 0.08414 lineto
Mistroke
0.04438 0.06771 lineto
0.04458 0.05377 lineto
0.04478 0.04246 lineto
0.04498 0.03391 lineto
0.04518 0.02818 lineto
0.04538 0.02535 lineto
0.04558 0.02542 lineto
0.04578 0.02841 lineto
0.04598 0.03426 lineto
0.04618 0.04293 lineto
0.04658 0.06829 lineto
0.04698 0.10342 lineto
0.04778 0.19679 lineto
0.04858 0.30772 lineto
0.04938 0.41818 lineto
0.04978 0.46755 lineto
0.05018 0.51028 lineto
0.05058 0.54465 lineto
0.05078 0.55825 lineto
0.05097 0.56926 lineto
0.05117 0.5776 lineto
0.05137 0.58316 lineto
0.05157 0.5859 lineto
0.05177 0.5858 lineto
0.05197 0.58287 lineto
0.05217 0.57713 lineto
0.05237 0.56865 lineto
0.05257 0.55752 lineto
0.05297 0.52784 lineto
0.05337 0.48932 lineto
0.05417 0.39252 lineto
0.05497 0.28298 lineto
0.05577 0.17853 lineto
0.05617 0.13358 lineto
0.05657 0.09599 lineto
0.05677 0.08044 lineto
0.05697 0.06727 lineto
0.05717 0.0566 lineto
0.05737 0.04854 lineto
0.05757 0.04317 lineto
0.05777 0.04054 lineto
0.05797 0.04066 lineto
0.05817 0.04354 lineto
0.05837 0.04913 lineto
0.05857 0.05737 lineto
0.05896 0.08142 lineto
0.05936 0.11466 lineto
0.05976 0.15568 lineto
0.06056 0.25398 lineto
0.06136 0.36022 lineto
Mistroke
0.06216 0.45715 lineto
0.06256 0.49712 lineto
0.06296 0.52921 lineto
0.06316 0.54188 lineto
0.06336 0.55213 lineto
0.06356 0.55987 lineto
0.06376 0.56501 lineto
0.06396 0.56752 lineto
0.06416 0.56737 lineto
0.06436 0.56457 lineto
0.06456 0.55916 lineto
0.06476 0.5512 lineto
0.06496 0.54078 lineto
0.06536 0.51304 lineto
0.06616 0.43454 lineto
0.06695 0.3367 lineto
0.06775 0.23553 lineto
0.06815 0.18887 lineto
0.06855 0.14741 lineto
0.06895 0.11279 lineto
0.06935 0.0864 lineto
0.06955 0.07662 lineto
0.06975 0.06926 lineto
0.06995 0.06437 lineto
0.07015 0.06201 lineto
0.07035 0.06219 lineto
0.07055 0.0649 lineto
0.07075 0.0701 lineto
0.07095 0.07773 lineto
0.07135 0.09992 lineto
0.07175 0.1305 lineto
0.07255 0.21133 lineto
0.07335 0.30679 lineto
0.07415 0.4013 lineto
0.07454 0.44335 lineto
0.07494 0.47962 lineto
0.07534 0.50866 lineto
0.07554 0.5201 lineto
0.07574 0.52934 lineto
0.07594 0.53629 lineto
0.07614 0.54088 lineto
0.07634 0.54308 lineto
0.07654 0.54287 lineto
0.07674 0.54027 lineto
0.07694 0.53531 lineto
0.07714 0.52804 lineto
0.07734 0.51856 lineto
0.07774 0.4934 lineto
0.07814 0.4609 lineto
0.07974 0.28842 lineto
Mistroke
0.08054 0.20194 lineto
0.08094 0.16493 lineto
0.08134 0.13411 lineto
0.08154 0.12141 lineto
0.08174 0.11069 lineto
0.08194 0.10204 lineto
0.08213 0.09556 lineto
0.08233 0.09129 lineto
0.08253 0.08927 lineto
0.08273 0.08951 lineto
0.08293 0.09199 lineto
0.08313 0.09669 lineto
0.08333 0.10355 lineto
0.08353 0.11248 lineto
0.08373 0.12338 lineto
0.08453 0.18405 lineto
0.08613 0.34914 lineto
0.08693 0.42651 lineto
0.08733 0.4582 lineto
0.08773 0.4835 lineto
0.08793 0.49344 lineto
0.08813 0.50143 lineto
0.08833 0.50742 lineto
0.08853 0.51134 lineto
0.08873 0.51317 lineto
0.08893 0.5129 lineto
0.08913 0.51053 lineto
0.08933 0.50612 lineto
0.08953 0.49971 lineto
0.08973 0.49138 lineto
0.09012 0.46936 lineto
0.09092 0.40762 lineto
0.09252 0.2532 lineto
0.09292 0.2174 lineto
0.09332 0.18573 lineto
0.09372 0.15945 lineto
0.09392 0.14866 lineto
0.09412 0.13957 lineto
0.09432 0.13227 lineto
0.09452 0.12683 lineto
0.09472 0.12328 lineto
0.09492 0.12166 lineto
0.09512 0.12197 lineto
0.09532 0.12419 lineto
0.09552 0.1283 lineto
0.09572 0.13423 lineto
0.09612 0.15127 lineto
0.09652 0.17453 lineto
0.09732 0.2354 lineto
0.09811 0.30655 lineto
Mistroke
0.09891 0.37627 lineto
0.09931 0.40703 lineto
0.09971 0.4334 lineto
0.09991 0.4446 lineto
0.10011 0.45434 lineto
0.10031 0.46252 lineto
0.10051 0.46907 lineto
0.10071 0.47394 lineto
0.10091 0.47708 lineto
0.10111 0.47848 lineto
0.10131 0.47814 lineto
0.10151 0.47606 lineto
0.10171 0.47228 lineto
0.10191 0.46686 lineto
0.10211 0.45986 lineto
0.10251 0.44147 lineto
0.10291 0.41795 lineto
0.10371 0.35981 lineto
0.10451 0.29526 lineto
0.10531 0.23486 lineto
0.1057 0.20929 lineto
0.1061 0.18819 lineto
0.1063 0.17957 lineto
0.1065 0.17235 lineto
0.1067 0.16658 lineto
0.1069 0.16232 lineto
0.1071 0.1596 lineto
0.1073 0.15843 lineto
0.1075 0.15882 lineto
0.1077 0.16075 lineto
0.1079 0.16417 lineto
0.1081 0.16906 lineto
0.1085 0.18293 lineto
0.1089 0.2017 lineto
0.1093 0.22452 lineto
0.1101 0.27819 lineto
0.1109 0.33488 lineto
0.1117 0.3854 lineto
0.1121 0.40579 lineto
0.1123 0.41441 lineto
0.1125 0.42186 lineto
0.1127 0.42808 lineto
0.1129 0.43302 lineto
0.1131 0.43664 lineto
0.11329 0.43892 lineto
0.11349 0.43984 lineto
0.11369 0.43941 lineto
0.11389 0.43764 lineto
0.11409 0.43458 lineto
0.11429 0.43026 lineto
Mistroke
0.11449 0.42474 lineto
0.11489 0.41038 lineto
0.11569 0.37099 lineto
0.11649 0.32336 lineto
0.11729 0.27549 lineto
0.11809 0.23506 lineto
0.11849 0.21965 lineto
0.11869 0.21342 lineto
0.11889 0.20824 lineto
0.11909 0.20416 lineto
0.11929 0.2012 lineto
0.11949 0.19939 lineto
0.11969 0.19872 lineto
0.12288 0.30718 lineto
0.12368 0.34558 lineto
0.12448 0.37605 lineto
0.12468 0.38186 lineto
0.12488 0.38683 lineto
0.12508 0.39093 lineto
0.12528 0.39413 lineto
0.12548 0.3964 lineto
0.12568 0.39774 lineto
0.12588 0.39814 lineto
0.12608 0.39762 lineto
0.12628 0.39619 lineto
0.12648 0.39389 lineto
0.12688 0.38682 lineto
0.12728 0.3768 lineto
0.12768 0.36434 lineto
0.12927 0.30269 lineto
0.13007 0.27408 lineto
0.13047 0.26241 lineto
0.13087 0.25309 lineto
0.13107 0.24941 lineto
0.13127 0.24642 lineto
0.13147 0.24413 lineto
0.13167 0.24256 lineto
0.13187 0.24172 lineto
0.13207 0.24158 lineto
0.13227 0.24215 lineto
0.13247 0.24341 lineto
0.13267 0.24531 lineto
0.13287 0.24784 lineto
0.13327 0.25459 lineto
0.13367 0.26327 lineto
0.13407 0.27344 lineto
0.13487 0.29625 lineto
0.13567 0.31893 lineto
0.13607 0.32903 lineto
0.13647 0.33778 lineto
Mistroke
0.13686 0.34488 lineto
0.13706 0.34773 lineto
0.13726 0.35009 lineto
0.13746 0.35196 lineto
0.13766 0.35332 lineto
0.13786 0.35417 lineto
0.13806 0.35451 lineto
0.13826 0.35437 lineto
0.13846 0.35375 lineto
0.13866 0.35267 lineto
0.13886 0.35117 lineto
0.13926 0.347 lineto
0.13966 0.34151 lineto
0.14046 0.32795 lineto
0.14126 0.31328 lineto
0.14206 0.30018 lineto
0.14246 0.29489 lineto
0.14286 0.2907 lineto
0.14306 0.28905 lineto
0.14326 0.28771 lineto
0.14346 0.28668 lineto
0.14366 0.28596 lineto
0.14386 0.28555 lineto
0.14406 0.28542 lineto
0.14426 0.28558 lineto
0.14446 0.28601 lineto
0.14525 0.28995 lineto
0.14605 0.29624 lineto
0.14685 0.30306 lineto
0.14725 0.30613 lineto
0.14765 0.30875 lineto
0.14785 0.30986 lineto
0.14805 0.3108 lineto
0.14825 0.31159 lineto
0.14845 0.3122 lineto
0.14865 0.31265 lineto
0.14885 0.31293 lineto
0.14905 0.31304 lineto
0.14925 0.313 lineto
0.14945 0.31282 lineto
0.14965 0.31251 lineto
0.15005 0.31154 lineto
0.15045 0.31026 lineto
0.15085 0.30882 lineto
0.15125 0.30741 lineto
0.15145 0.30677 lineto
0.15165 0.3062 lineto
0.15185 0.30572 lineto
0.15205 0.30535 lineto
0.15225 0.3051 lineto
Mistroke
0.15244 0.30499 lineto
0.15264 0.30503 lineto
0.15284 0.30524 lineto
0.15304 0.3056 lineto
0.15324 0.30614 lineto
0.15364 0.30772 lineto
0.15404 0.30993 lineto
0.15484 0.31586 lineto
0.15564 0.3227 lineto
0.15644 0.32878 lineto
0.15664 0.32996 lineto
0.15684 0.33096 lineto
0.15704 0.33174 lineto
0.15724 0.33228 lineto
0.15744 0.33257 lineto
0.15764 0.33258 lineto
0.15784 0.3323 lineto
0.15804 0.33173 lineto
0.15824 0.33084 lineto
0.15844 0.32964 lineto
0.15884 0.32633 lineto
0.15924 0.32183 lineto
0.15964 0.31628 lineto
0.16123 0.28815 lineto
0.16163 0.28119 lineto
0.16203 0.27495 lineto
0.16243 0.26978 lineto
0.16263 0.26771 lineto
0.16283 0.26601 lineto
0.16303 0.26473 lineto
0.16323 0.2639 lineto
0.16343 0.26353 lineto
0.16363 0.26364 lineto
0.16383 0.26426 lineto
0.16403 0.26538 lineto
0.16423 0.26701 lineto
0.16443 0.26914 lineto
0.16483 0.27488 lineto
0.16523 0.28244 lineto
0.16603 0.30198 lineto
0.16683 0.32491 lineto
0.16763 0.34742 lineto
0.16802 0.35724 lineto
0.16842 0.36545 lineto
0.16862 0.36882 lineto
0.16882 0.37162 lineto
0.16902 0.37382 lineto
0.16922 0.37538 lineto
0.16942 0.37627 lineto
0.16962 0.37647 lineto
Mistroke
0.16982 0.37596 lineto
0.17002 0.37473 lineto
0.17082 0.36271 lineto
0.17242 0.31117 lineto
0.17322 0.27929 lineto
0.17402 0.25017 lineto
0.17442 0.2383 lineto
0.17482 0.22902 lineto
0.17502 0.22551 lineto
0.17522 0.22281 lineto
0.17542 0.22097 lineto
0.17562 0.22002 lineto
0.17581 0.21999 lineto
0.17601 0.22089 lineto
0.17621 0.22273 lineto
0.17641 0.2255 lineto
0.17721 0.24541 lineto
0.17881 0.31626 lineto
0.17961 0.35627 lineto
0.18001 0.37452 lineto
0.18041 0.39052 lineto
0.18081 0.40354 lineto
0.18101 0.40872 lineto
0.18121 0.41293 lineto
0.18141 0.41612 lineto
0.18161 0.41823 lineto
0.18181 0.41923 lineto
0.18201 0.4191 lineto
0.18221 0.41782 lineto
0.18241 0.41539 lineto
0.18261 0.41183 lineto
0.18281 0.40716 lineto
0.18321 0.39464 lineto
0.1836 0.37826 lineto
0.1852 0.28813 lineto
0.186 0.24115 lineto
0.1864 0.22066 lineto
0.1868 0.20342 lineto
0.187 0.19627 lineto
0.1872 0.19021 lineto
0.1874 0.18532 lineto
0.1876 0.18166 lineto
0.1878 0.17929 lineto
0.188 0.17823 lineto
0.1882 0.17852 lineto
0.1884 0.18016 lineto
0.1886 0.18316 lineto
0.1888 0.18749 lineto
0.189 0.19312 lineto
0.1892 0.2 lineto
Mistroke
0.19 0.23871 lineto
0.19159 0.34739 lineto
0.19239 0.39994 lineto
0.19279 0.42177 lineto
0.19319 0.43931 lineto
0.19339 0.44622 lineto
0.19359 0.45176 lineto
0.19379 0.45587 lineto
0.19399 0.45851 lineto
0.19419 0.45961 lineto
0.19439 0.45917 lineto
0.19459 0.45718 lineto
0.19479 0.45363 lineto
0.19639 0.37572 lineto
0.19799 0.24987 lineto
0.19839 0.22 lineto
0.19879 0.19337 lineto
0.19919 0.17112 lineto
0.19938 0.16196 lineto
0.19958 0.15425 lineto
0.19978 0.14808 lineto
0.19998 0.14353 lineto
0.20018 0.14065 lineto
0.20038 0.1395 lineto
0.20058 0.14008 lineto
0.20078 0.14241 lineto
0.20098 0.14648 lineto
0.20118 0.15225 lineto
0.20158 0.1687 lineto
0.20198 0.19118 lineto
0.20278 0.25056 lineto
0.20358 0.32115 lineto
0.20438 0.39159 lineto
0.20478 0.42309 lineto
0.20518 0.45027 lineto
0.20538 0.46186 lineto
0.20558 0.47196 lineto
0.20578 0.48043 lineto
0.20598 0.48719 lineto
0.20618 0.49216 lineto
0.20638 0.49526 lineto
0.20658 0.49647 lineto
0.20678 0.49575 lineto
0.20698 0.4931 lineto
0.20717 0.48854 lineto
0.20737 0.4821 lineto
0.20757 0.47384 lineto
0.20917 0.35476 lineto
0.20997 0.2761 lineto
0.21077 0.20109 lineto
Mistroke
0.21117 0.1689 lineto
0.21157 0.14214 lineto
0.21177 0.13117 lineto
0.21197 0.12198 lineto
0.21217 0.11466 lineto
0.21237 0.10931 lineto
0.21257 0.10598 lineto
0.21277 0.10473 lineto
0.21297 0.10558 lineto
0.21317 0.10853 lineto
0.21337 0.11355 lineto
0.21357 0.12062 lineto
0.21397 0.14059 lineto
0.21437 0.1677 lineto
0.21477 0.2009 lineto
0.21556 0.28012 lineto
0.21636 0.3656 lineto
0.21716 0.44343 lineto
0.21756 0.47535 lineto
0.21776 0.48892 lineto
0.21796 0.50071 lineto
0.21816 0.51057 lineto
0.21836 0.51841 lineto
0.21856 0.52412 lineto
0.21876 0.52765 lineto
0.22196 0.31739 lineto
0.22275 0.2266 lineto
0.22315 0.18483 lineto
0.22355 0.14782 lineto
0.22395 0.11716 lineto
0.22415 0.10463 lineto
0.22435 0.09415 lineto
0.22455 0.08584 lineto
0.22475 0.07979 lineto
0.22495 0.07608 lineto
0.22515 0.07475 lineto
0.22535 0.07583 lineto
0.22555 0.07931 lineto
0.22575 0.08516 lineto
0.22595 0.09334 lineto
0.22635 0.11634 lineto
0.22675 0.14744 lineto
0.22835 0.32426 lineto
0.22915 0.41865 lineto
0.22995 0.49644 lineto
0.23015 0.51169 lineto
0.23035 0.5249 lineto
0.23054 0.53593 lineto
0.23074 0.54467 lineto
0.23094 0.55102 lineto
Mistroke
0.23114 0.55489 lineto
0.23134 0.55626 lineto
0.23154 0.55508 lineto
0.23474 0.26774 lineto
0.23554 0.17159 lineto
0.23594 0.13062 lineto
0.23634 0.09674 lineto
0.23674 0.0714 lineto
0.23694 0.06228 lineto
0.23714 0.05567 lineto
0.23734 0.05165 lineto
0.23754 0.05026 lineto
0.23774 0.05152 lineto
0.23794 0.05544 lineto
0.23814 0.06197 lineto
0.23833 0.07106 lineto
0.23873 0.09653 lineto
0.23913 0.13086 lineto
0.23953 0.17268 lineto
0.24113 0.37799 lineto
0.24193 0.47397 lineto
0.24233 0.51307 lineto
0.24253 0.52964 lineto
0.24273 0.54398 lineto
0.24293 0.55594 lineto
0.24313 0.56539 lineto
0.24333 0.57222 lineto
0.24353 0.57637 lineto
0.24373 0.57778 lineto
0.24393 0.57644 lineto
0.24413 0.57234 lineto
0.24433 0.56553 lineto
0.24473 0.54404 lineto
0.24493 0.52958 lineto
0.24513 0.51283 lineto
0.24593 0.42651 lineto
0.24752 0.2115 lineto
0.24792 0.16165 lineto
0.24832 0.11766 lineto
0.24872 0.08136 lineto
0.24912 0.05425 lineto
0.24932 0.04453 lineto
0.24952 0.0375 lineto
0.24972 0.03325 lineto
0.24992 0.03182 lineto
0.25012 0.03324 lineto
0.25032 0.03749 lineto
0.25052 0.04454 lineto
0.25072 0.05432 lineto
0.25232 0.2139 lineto
Mistroke
0.25312 0.32548 lineto
0.25391 0.43509 lineto
0.25471 0.52486 lineto
0.25491 0.54237 lineto
0.25511 0.55751 lineto
0.25531 0.57012 lineto
0.25551 0.58007 lineto
0.25571 0.58725 lineto
0.25591 0.59158 lineto
0.25611 0.59302 lineto
0.25631 0.59154 lineto
0.25651 0.58716 lineto
0.25671 0.57991 lineto
0.25711 0.55715 lineto
0.25731 0.54187 lineto
0.25751 0.52417 lineto
0.25791 0.48227 lineto
0.25871 0.37887 lineto
0.25951 0.26363 lineto
0.26031 0.15524 lineto
0.26071 0.10925 lineto
0.26111 0.07135 lineto
0.26131 0.05594 lineto
0.26151 0.04311 lineto
0.26171 0.033 lineto
0.2619 0.02571 lineto
0.2621 0.02132 lineto
0.2623 0.01988 lineto
0.2625 0.02141 lineto
0.2627 0.02589 lineto
0.2629 0.03329 lineto
0.2631 0.04352 lineto
0.2633 0.05648 lineto
0.2635 0.07205 lineto
0.2651 0.26662 lineto
0.2659 0.38362 lineto
0.2667 0.48886 lineto
0.2671 0.53156 lineto
0.2675 0.5652 lineto
0.2677 0.57817 lineto
0.2679 0.58839 lineto
0.2681 0.59574 lineto
0.2683 0.60016 lineto
0.2685 0.60159 lineto
0.2687 0.60003 lineto
0.2689 0.59547 lineto
0.2691 0.58797 lineto
0.2693 0.5776 lineto
0.2695 0.56448 lineto
0.26989 0.5305 lineto
Mistroke
0.27069 0.43699 lineto
0.27149 0.32256 lineto
0.27229 0.20575 lineto
0.27269 0.15246 lineto
0.27309 0.10554 lineto
0.27349 0.06693 lineto
0.27389 0.03821 lineto
0.27409 0.02794 lineto
0.27429 0.02056 lineto
0.27449 0.01613 lineto
0.27469 0.01472 lineto
0.27489 0.01631 lineto
0.27509 0.02092 lineto
0.27529 0.02848 lineto
0.27549 0.03892 lineto
0.27629 0.10692 lineto
0.27669 0.15414 lineto
0.27709 0.2077 lineto
0.27788 0.32492 lineto
0.27868 0.43956 lineto
0.27908 0.49 lineto
0.27948 0.53302 lineto
0.27988 0.56687 lineto
0.28008 0.5799 lineto
0.28028 0.59015 lineto
0.28048 0.59752 lineto
0.28068 0.60192 lineto
0.28088 0.60332 lineto
0.28108 0.6017 lineto
0.28128 0.59707 lineto
0.28148 0.5895 lineto
0.28168 0.57904 lineto
0.28188 0.56582 lineto
0.28228 0.53165 lineto
0.28268 0.48839 lineto
0.28428 0.26393 lineto
0.28508 0.15336 lineto
0.28547 0.10661 lineto
0.28587 0.06819 lineto
0.28607 0.0526 lineto
0.28627 0.03965 lineto
0.28647 0.02947 lineto
0.28667 0.02217 lineto
0.28687 0.01781 lineto
0.28707 0.01644 lineto
0.28727 0.01808 lineto
0.28747 0.02269 lineto
0.28767 0.03024 lineto
0.28787 0.04065 lineto
0.28807 0.0538 lineto
Mistroke
0.28827 0.06956 lineto
0.28907 0.15506 lineto
0.29067 0.38218 lineto
0.29147 0.48691 lineto
0.29187 0.52924 lineto
0.29207 0.5471 lineto
0.29227 0.5625 lineto
0.29247 0.57529 lineto
0.29267 0.58533 lineto
0.29287 0.59253 lineto
0.29306 0.59682 lineto
0.29326 0.59815 lineto
0.29346 0.59651 lineto
0.29366 0.59193 lineto
0.29386 0.58445 lineto
0.29406 0.57416 lineto
0.29426 0.56115 lineto
0.29466 0.52759 lineto
0.29546 0.43561 lineto
0.29706 0.20968 lineto
0.29746 0.15789 lineto
0.29786 0.11241 lineto
0.29826 0.07507 lineto
0.29846 0.05995 lineto
0.29866 0.0474 lineto
0.29886 0.03755 lineto
0.29906 0.0305 lineto
0.29926 0.02631 lineto
0.29946 0.02502 lineto
0.29966 0.02665 lineto
0.29986 0.03118 lineto
0.30006 0.03854 lineto
0.30026 0.04867 lineto
0.30066 0.07676 lineto
0.30105 0.11426 lineto
0.30185 0.21094 lineto
0.30265 0.32288 lineto
0.30345 0.43188 lineto
0.30385 0.47967 lineto
0.30425 0.52033 lineto
0.30445 0.53746 lineto
0.30465 0.55221 lineto
0.30485 0.56445 lineto
0.30505 0.57405 lineto
0.30525 0.58091 lineto
0.30545 0.58498 lineto
0.30565 0.58621 lineto
0.30585 0.58459 lineto
0.30605 0.58015 lineto
0.30625 0.57294 lineto
Mistroke
0.30645 0.56304 lineto
0.30665 0.55055 lineto
0.30705 0.51837 lineto
0.30745 0.47776 lineto
0.30825 0.37827 lineto
0.30904 0.26837 lineto
0.30984 0.16592 lineto
0.31024 0.12277 lineto
0.31064 0.08741 lineto
0.31084 0.07311 lineto
0.31104 0.06126 lineto
0.31124 0.05197 lineto
0.31144 0.04534 lineto
0.31164 0.04142 lineto
0.31184 0.04026 lineto
0.31204 0.04185 lineto
0.31224 0.04618 lineto
0.31244 0.0532 lineto
0.31264 0.06282 lineto
0.31304 0.08943 lineto
0.31344 0.1249 lineto
0.31384 0.16772 lineto
0.31464 0.26806 lineto
0.31544 0.37405 lineto
0.31624 0.46849 lineto
0.31663 0.50651 lineto
0.31683 0.5225 lineto
0.31703 0.53626 lineto
0.31723 0.54766 lineto
0.31743 0.55658 lineto
0.31763 0.56294 lineto
0.31783 0.56668 lineto
0.31803 0.56777 lineto
0.31823 0.5662 lineto
0.31843 0.56201 lineto
0.31863 0.55523 lineto
0.31883 0.54594 lineto
0.31903 0.53426 lineto
0.31943 0.5042 lineto
0.32023 0.42228 lineto
0.32103 0.32303 lineto
0.32183 0.22268 lineto
0.32223 0.17724 lineto
0.32263 0.13744 lineto
0.32303 0.1049 lineto
0.32343 0.08089 lineto
0.32363 0.07239 lineto
0.32383 0.06634 lineto
0.32403 0.0628 lineto
0.32422 0.06179 lineto
Mistroke
0.32442 0.06332 lineto
0.32462 0.06736 lineto
0.32482 0.07387 lineto
0.32502 0.08277 lineto
0.32582 0.13991 lineto
0.32622 0.17921 lineto
0.32662 0.22354 lineto
0.32742 0.3198 lineto
0.32822 0.41299 lineto
0.32862 0.45365 lineto
0.32902 0.48812 lineto
0.32942 0.51503 lineto
0.32962 0.52531 lineto
0.32982 0.53334 lineto
0.33002 0.53904 lineto
0.33022 0.54235 lineto
0.33042 0.54327 lineto
0.33062 0.54178 lineto
0.33082 0.53791 lineto
0.33102 0.53171 lineto
0.33142 0.51264 lineto
0.33162 0.49997 lineto
0.33182 0.4854 lineto
0.33221 0.45117 lineto
0.33381 0.27629 lineto
0.33461 0.19154 lineto
0.33501 0.15605 lineto
0.33541 0.1271 lineto
0.33581 0.10581 lineto
0.33601 0.09831 lineto
0.33621 0.093 lineto
0.33641 0.08993 lineto
0.33661 0.08911 lineto
0.33681 0.09055 lineto
0.33701 0.09423 lineto
0.33721 0.10009 lineto
0.33741 0.10806 lineto
0.33781 0.12996 lineto
0.33821 0.15898 lineto
0.33861 0.19384 lineto
0.3402 0.36021 lineto
0.341 0.43552 lineto
0.3414 0.46562 lineto
0.3416 0.47823 lineto
0.3418 0.48904 lineto
0.342 0.49795 lineto
0.3422 0.50488 lineto
0.3424 0.50977 lineto
0.3426 0.51258 lineto
0.3428 0.51328 lineto
Mistroke
0.343 0.51189 lineto
0.3432 0.50843 lineto
0.3434 0.50295 lineto
0.3438 0.48618 lineto
0.344 0.4751 lineto
0.3442 0.46237 lineto
0.345 0.39803 lineto
0.3458 0.32078 lineto
0.3466 0.24333 lineto
0.3474 0.17815 lineto
0.34779 0.15349 lineto
0.34799 0.14359 lineto
0.34819 0.13545 lineto
0.34839 0.12913 lineto
0.34859 0.1247 lineto
0.34879 0.12218 lineto
0.34899 0.12159 lineto
0.34919 0.12292 lineto
0.34939 0.12615 lineto
0.34959 0.13124 lineto
0.34979 0.13811 lineto
0.35019 0.1569 lineto
0.35059 0.18165 lineto
0.35139 0.24454 lineto
0.35219 0.31618 lineto
0.35299 0.38484 lineto
0.35379 0.43955 lineto
0.35399 0.44998 lineto
0.35419 0.4589 lineto
0.35439 0.46622 lineto
0.35459 0.47188 lineto
0.35479 0.47583 lineto
0.35499 0.47805 lineto
0.35519 0.47851 lineto
0.35539 0.47724 lineto
0.35558 0.47425 lineto
0.35578 0.46959 lineto
0.35618 0.45551 lineto
0.35658 0.43566 lineto
0.35698 0.41094 lineto
0.35778 0.35134 lineto
0.35858 0.28674 lineto
0.35938 0.22766 lineto
0.35978 0.20319 lineto
0.36018 0.18342 lineto
0.36038 0.17554 lineto
0.36058 0.16909 lineto
0.36078 0.16412 lineto
0.36098 0.16068 lineto
0.36118 0.15878 lineto
Mistroke
0.36138 0.15845 lineto
0.36158 0.15966 lineto
0.36178 0.16239 lineto
0.36218 0.17224 lineto
0.36238 0.17923 lineto
0.36258 0.18749 lineto
0.36417 0.28578 lineto
0.36497 0.34217 lineto
0.36537 0.36814 lineto
0.36577 0.39122 lineto
0.36617 0.41053 lineto
0.36637 0.41853 lineto
0.36657 0.42533 lineto
0.36677 0.43088 lineto
0.36697 0.43512 lineto
0.36717 0.43802 lineto
0.36737 0.43958 lineto
0.36757 0.43978 lineto
0.36777 0.43863 lineto
0.36797 0.43617 lineto
0.36817 0.43243 lineto
0.36857 0.42132 lineto
0.36897 0.40587 lineto
0.37057 0.31682 lineto
0.37136 0.26951 lineto
0.37176 0.24858 lineto
0.37216 0.23059 lineto
0.37256 0.2162 lineto
0.37276 0.21053 lineto
0.37296 0.20593 lineto
0.37316 0.20244 lineto
0.37336 0.20009 lineto
0.37356 0.19889 lineto
0.37376 0.19884 lineto
0.37396 0.19991 lineto
0.37416 0.2021 lineto
0.37436 0.20535 lineto
0.37456 0.20963 lineto
0.37496 0.22103 lineto
0.37536 0.23572 lineto
0.37696 0.31255 lineto
0.37776 0.35022 lineto
0.37816 0.36612 lineto
0.37856 0.37925 lineto
0.37876 0.38462 lineto
0.37895 0.38913 lineto
0.37915 0.39275 lineto
0.37935 0.39546 lineto
0.37955 0.39723 lineto
0.37975 0.39807 lineto
Mistroke
0.37995 0.39798 lineto
0.38015 0.39697 lineto
0.38035 0.39507 lineto
0.38055 0.39232 lineto
0.38095 0.38442 lineto
0.38135 0.37369 lineto
0.38175 0.36068 lineto
0.38335 0.29858 lineto
0.38415 0.27076 lineto
0.38455 0.25968 lineto
0.38475 0.25504 lineto
0.38495 0.25104 lineto
0.38515 0.24773 lineto
0.38535 0.24511 lineto
0.38555 0.2432 lineto
0.38575 0.24202 lineto
0.38595 0.24156 lineto
0.38615 0.2418 lineto
0.38635 0.24274 lineto
0.38655 0.24434 lineto
0.38694 0.24943 lineto
0.38714 0.25282 lineto
0.38734 0.25673 lineto
0.38814 0.27634 lineto
0.38894 0.29937 lineto
0.38974 0.32173 lineto
0.39054 0.33985 lineto
0.39094 0.34646 lineto
0.39114 0.34905 lineto
0.39134 0.35115 lineto
0.39154 0.35275 lineto
0.39174 0.35383 lineto
0.39194 0.35441 lineto
0.39214 0.3545 lineto
0.39234 0.3541 lineto
0.39254 0.35323 lineto
0.39294 0.3502 lineto
0.39314 0.3481 lineto
0.39334 0.34565 lineto
0.39374 0.33987 lineto
0.39453 0.32599 lineto
0.39533 0.31139 lineto
0.39573 0.30465 lineto
0.39613 0.29867 lineto
0.39653 0.29366 lineto
0.39673 0.29158 lineto
0.39693 0.28979 lineto
0.39713 0.2883 lineto
0.39733 0.28713 lineto
0.39753 0.28626 lineto
Mistroke
0.39773 0.2857 lineto
0.39793 0.28544 lineto
0.39813 0.28548 lineto
0.39833 0.28578 lineto
0.39853 0.28634 lineto
0.39933 0.29069 lineto
0.39973 0.29378 lineto
0.40013 0.29716 lineto
0.40093 0.30391 lineto
0.40133 0.30688 lineto
0.40173 0.30936 lineto
0.40193 0.31038 lineto
0.40213 0.31124 lineto
0.40233 0.31193 lineto
0.40252 0.31246 lineto
0.40272 0.31282 lineto
0.40292 0.31301 lineto
0.40312 0.31304 lineto
0.40332 0.31292 lineto
0.40352 0.31267 lineto
0.40372 0.31229 lineto
0.40412 0.31122 lineto
0.40492 0.30844 lineto
0.40532 0.30706 lineto
0.40572 0.30593 lineto
0.40592 0.3055 lineto
0.40612 0.3052 lineto
0.40632 0.30502 lineto
0.40652 0.30499 lineto
0.40672 0.30512 lineto
0.40692 0.30541 lineto
0.40712 0.30587 lineto
0.40732 0.3065 lineto
0.40892 0.31675 lineto
0.40972 0.3236 lineto
0.41012 0.32676 lineto
0.41051 0.32943 lineto
0.41071 0.33052 lineto
0.41091 0.3314 lineto
0.41111 0.33206 lineto
0.41131 0.33247 lineto
0.41151 0.33261 lineto
0.41171 0.33247 lineto
0.41191 0.33203 lineto
0.41211 0.33129 lineto
0.41231 0.33024 lineto
0.41251 0.32888 lineto
0.41291 0.32524 lineto
0.41331 0.32045 lineto
0.41371 0.31465 lineto
Mistroke
0.41531 0.28624 lineto
0.41571 0.27944 lineto
0.41611 0.27345 lineto
0.41651 0.26863 lineto
0.41671 0.26675 lineto
0.41691 0.26528 lineto
0.41711 0.26423 lineto
0.41731 0.26364 lineto
0.41751 0.26353 lineto
0.41771 0.26391 lineto
0.41791 0.26479 lineto
0.4181 0.26618 lineto
0.4183 0.26808 lineto
0.4185 0.27048 lineto
0.4189 0.27672 lineto
0.4193 0.28473 lineto
0.4201 0.30492 lineto
0.4209 0.32802 lineto
0.4217 0.35017 lineto
0.4221 0.35961 lineto
0.4225 0.36731 lineto
0.4227 0.37038 lineto
0.4229 0.37287 lineto
0.4231 0.37473 lineto
0.4233 0.37594 lineto
0.4235 0.37646 lineto
0.4237 0.37628 lineto
0.4239 0.37539 lineto
0.4241 0.37377 lineto
0.4243 0.37144 lineto
0.4245 0.3684 lineto
0.4249 0.36028 lineto
0.4253 0.34967 lineto
0.4257 0.33691 lineto
0.42649 0.30696 lineto
0.42729 0.27512 lineto
0.42769 0.26018 lineto
0.42809 0.24678 lineto
0.42849 0.23555 lineto
0.42869 0.23093 lineto
0.42889 0.22705 lineto
0.42909 0.22396 lineto
0.42929 0.22172 lineto
0.42949 0.22035 lineto
0.42969 0.21989 lineto
0.42989 0.22036 lineto
0.43009 0.22176 lineto
0.43029 0.22409 lineto
0.43049 0.22735 lineto
0.43129 0.24905 lineto
Mistroke
0.43169 0.26444 lineto
0.43209 0.28215 lineto
0.43289 0.32169 lineto
0.43368 0.36131 lineto
0.43408 0.37904 lineto
0.43448 0.39431 lineto
0.43488 0.40642 lineto
0.43508 0.41109 lineto
0.43528 0.41476 lineto
0.43548 0.41738 lineto
0.43568 0.4189 lineto
0.43588 0.4193 lineto
0.43608 0.41856 lineto
0.43628 0.41667 lineto
0.43648 0.41364 lineto
0.43668 0.40948 lineto
0.43688 0.40423 lineto
0.43768 0.37331 lineto
0.43848 0.33021 lineto
0.43928 0.28161 lineto
0.44008 0.23542 lineto
0.44048 0.21571 lineto
0.44088 0.19947 lineto
0.44128 0.18745 lineto
0.44147 0.18321 lineto
0.44167 0.18023 lineto
0.44187 0.17856 lineto
0.44207 0.17822 lineto
0.44227 0.17923 lineto
0.44247 0.18159 lineto
0.44267 0.1853 lineto
0.44287 0.19033 lineto
0.44327 0.20417 lineto
0.44367 0.22262 lineto
0.44407 0.24502 lineto
0.44567 0.35485 lineto
0.44647 0.40613 lineto
0.44687 0.42691 lineto
0.44727 0.44316 lineto
0.44747 0.44935 lineto
0.44767 0.45414 lineto
0.44787 0.45746 lineto
0.44807 0.45929 lineto
0.44827 0.45957 lineto
0.44847 0.4583 lineto
0.44867 0.45548 lineto
0.44887 0.45112 lineto
0.45206 0.24166 lineto
0.45246 0.21253 lineto
0.45286 0.18696 lineto
Mistroke
0.45326 0.16606 lineto
0.45346 0.15766 lineto
0.45366 0.15076 lineto
0.45386 0.14545 lineto
0.45406 0.14178 lineto
0.45426 0.13982 lineto
0.45446 0.13959 lineto
0.45466 0.14111 lineto
0.45486 0.14437 lineto
0.45506 0.14935 lineto
0.45526 0.15601 lineto
0.45566 0.17414 lineto
0.45606 0.19808 lineto
0.45686 0.25956 lineto
0.45765 0.33081 lineto
0.45845 0.40034 lineto
0.45925 0.45663 lineto
0.45945 0.46744 lineto
0.45965 0.47669 lineto
0.45985 0.48426 lineto
0.46005 0.49007 lineto
0.46025 0.49405 lineto
0.46045 0.49615 lineto
0.46065 0.49633 lineto
0.46085 0.49458 lineto
0.46105 0.4909 lineto
0.46125 0.48533 lineto
0.46165 0.46871 lineto
0.46205 0.44531 lineto
0.46245 0.41601 lineto
0.46325 0.34453 lineto
0.46405 0.2656 lineto
0.46484 0.19205 lineto
0.46524 0.16118 lineto
0.46564 0.13608 lineto
0.46584 0.12604 lineto
0.46604 0.11784 lineto
0.46624 0.11156 lineto
0.46644 0.10728 lineto
0.46664 0.10506 lineto
0.46684 0.10492 lineto
0.46704 0.10689 lineto
0.46724 0.11095 lineto
0.46744 0.11707 lineto
0.46764 0.1252 lineto
0.46804 0.14716 lineto
0.46844 0.17601 lineto
0.46884 0.21062 lineto
0.46964 0.29145 lineto
0.47044 0.37672 lineto
Mistroke
0.47124 0.45251 lineto
0.47164 0.4828 lineto
0.47204 0.50621 lineto
0.47224 0.51501 lineto
0.47244 0.52172 lineto
0.47264 0.52628 lineto
0.47283 0.52862 lineto
0.47303 0.5287 lineto
0.47323 0.52653 lineto
0.47343 0.52211 lineto
0.47363 0.51548 lineto
0.47403 0.49584 lineto
0.47443 0.46834 lineto
0.47483 0.43405 lineto
0.47523 0.39433 lineto
0.47603 0.30512 lineto
0.47683 0.21509 lineto
0.47723 0.17442 lineto
0.47763 0.13897 lineto
0.47803 0.11023 lineto
0.47823 0.09877 lineto
0.47843 0.08944 lineto
0.47863 0.08233 lineto
0.47883 0.07752 lineto
0.47903 0.07507 lineto
0.47923 0.07503 lineto
0.47943 0.07738 lineto
0.47963 0.08213 lineto
0.47983 0.08924 lineto
0.48003 0.09863 lineto
0.48043 0.12389 lineto
0.48082 0.15695 lineto
0.48242 0.33726 lineto
0.48322 0.4303 lineto
0.48402 0.50481 lineto
0.48422 0.51899 lineto
0.48442 0.53106 lineto
0.48462 0.54089 lineto
0.48482 0.54836 lineto
0.48502 0.5534 lineto
0.48522 0.55594 lineto
0.48542 0.55594 lineto
0.48562 0.55342 lineto
0.48582 0.54836 lineto
0.48602 0.54084 lineto
0.48642 0.51866 lineto
0.48682 0.48773 lineto
0.48722 0.44927 lineto
0.48881 0.25423 lineto
0.48961 0.16006 lineto
Mistroke
0.49001 0.12083 lineto
0.49041 0.0891 lineto
0.49061 0.07649 lineto
0.49081 0.06623 lineto
0.49101 0.05843 lineto
0.49121 0.0532 lineto
0.49141 0.05057 lineto
0.49161 0.0506 lineto
0.49181 0.05328 lineto
0.49201 0.0586 lineto
0.49241 0.07692 lineto
0.49261 0.08976 lineto
0.49281 0.10487 lineto
0.49361 0.18489 lineto
0.49521 0.39175 lineto
0.49561 0.44102 lineto
0.49601 0.48511 lineto
0.4964 0.52217 lineto
0.4966 0.53757 lineto
0.4968 0.55066 lineto
0.497 0.5613 lineto
0.4972 0.56936 lineto
0.4974 0.57477 lineto
0.4976 0.57747 lineto
0.4978 0.57741 lineto
0.498 0.57459 lineto
0.4982 0.56904 lineto
0.4984 0.56081 lineto
0.4988 0.53663 lineto
0.4992 0.50301 lineto
0.5 0.41315 lineto
0.5016 0.19775 lineto
0.502 0.14927 lineto
0.5024 0.10716 lineto
0.5028 0.07318 lineto
0.503 0.05969 lineto
0.5032 0.04874 lineto
0.5034 0.04044 lineto
0.5036 0.03488 lineto
0.5038 0.03213 lineto
0.50399 0.03222 lineto
0.50419 0.03516 lineto
0.50439 0.04091 lineto
0.50459 0.04942 lineto
0.50479 0.06062 lineto
0.50519 0.09058 lineto
0.50559 0.1296 lineto
0.50639 0.22822 lineto
0.50719 0.34061 lineto
0.50799 0.44857 lineto
Mistroke
0.50839 0.49528 lineto
0.50879 0.53448 lineto
0.50899 0.55075 lineto
0.50919 0.56456 lineto
0.50939 0.57577 lineto
0.50959 0.58425 lineto
0.50979 0.58992 lineto
0.50999 0.59271 lineto
0.51019 0.59259 lineto
0.51039 0.58956 lineto
0.51059 0.58365 lineto
0.51079 0.5749 lineto
0.51119 0.54931 lineto
0.51159 0.5138 lineto
0.51198 0.46981 lineto
0.51278 0.36379 lineto
0.51358 0.24837 lineto
0.51438 0.14228 lineto
0.51478 0.09828 lineto
0.51518 0.06282 lineto
0.51538 0.04876 lineto
0.51558 0.03737 lineto
0.51578 0.02875 lineto
0.51598 0.023 lineto
0.51618 0.02018 lineto
0.51638 0.02033 lineto
0.51658 0.02344 lineto
0.51678 0.02948 lineto
0.51698 0.03839 lineto
0.51718 0.0501 lineto
0.51758 0.08136 lineto
0.51798 0.12201 lineto
0.51838 0.17039 lineto
0.51918 0.28222 lineto
0.51997 0.39874 lineto
0.52037 0.45279 lineto
0.52077 0.50104 lineto
0.52117 0.54148 lineto
0.52137 0.55824 lineto
0.52157 0.57245 lineto
0.52177 0.58397 lineto
0.52197 0.59267 lineto
0.52217 0.59847 lineto
0.52237 0.6013 lineto
0.52257 0.60113 lineto
0.52277 0.59796 lineto
0.52297 0.59183 lineto
0.52317 0.58279 lineto
0.52357 0.55639 lineto
0.52397 0.51983 lineto
Mistroke
0.52477 0.42255 lineto
0.52557 0.3067 lineto
0.52637 0.19104 lineto
0.52717 0.09436 lineto
0.52756 0.05824 lineto
0.52776 0.04395 lineto
0.52796 0.03238 lineto
0.52816 0.02364 lineto
0.52836 0.01783 lineto
0.52856 0.015 lineto
0.52876 0.01519 lineto
0.53196 0.34078 lineto
0.53276 0.45363 lineto
0.53316 0.50228 lineto
0.53356 0.54301 lineto
0.53376 0.55987 lineto
0.53396 0.57416 lineto
0.53416 0.58572 lineto
0.53436 0.59444 lineto
0.53456 0.60024 lineto
0.53476 0.60304 lineto
0.53496 0.60283 lineto
0.53516 0.5996 lineto
0.53835 0.24834 lineto
0.53915 0.14018 lineto
0.53955 0.09548 lineto
0.53995 0.05955 lineto
0.54015 0.04536 lineto
0.54035 0.03387 lineto
0.54055 0.02522 lineto
0.54075 0.01948 lineto
0.54095 0.01671 lineto
0.54115 0.01694 lineto
0.54135 0.02017 lineto
0.54155 0.02636 lineto
0.54195 0.04733 lineto
0.54215 0.06189 lineto
0.54235 0.07897 lineto
0.54314 0.16869 lineto
0.54474 0.39725 lineto
0.54554 0.49899 lineto
0.54594 0.53906 lineto
0.54614 0.55563 lineto
0.54634 0.56965 lineto
0.54654 0.58099 lineto
0.54674 0.58953 lineto
0.54694 0.59518 lineto
0.54714 0.5979 lineto
0.54734 0.59765 lineto
0.54754 0.59443 lineto
Mistroke
0.54774 0.5883 lineto
0.54794 0.5793 lineto
0.54834 0.55315 lineto
0.54874 0.51707 lineto
0.54954 0.42145 lineto
0.55034 0.30807 lineto
0.55113 0.19537 lineto
0.55193 0.10158 lineto
0.55233 0.0667 lineto
0.55253 0.05293 lineto
0.55273 0.0418 lineto
0.55293 0.03344 lineto
0.55313 0.0279 lineto
0.55333 0.02526 lineto
0.55353 0.02553 lineto
0.55373 0.02871 lineto
0.55393 0.03476 lineto
0.55433 0.05517 lineto
0.55453 0.06931 lineto
0.55473 0.0859 lineto
0.55513 0.12566 lineto
0.55593 0.22537 lineto
0.55673 0.33799 lineto
0.55753 0.44522 lineto
0.55793 0.49129 lineto
0.55833 0.52975 lineto
0.55853 0.54563 lineto
0.55872 0.55906 lineto
0.55892 0.5699 lineto
0.55912 0.57805 lineto
0.55932 0.58343 lineto
0.55952 0.58599 lineto
0.55972 0.5857 lineto
0.55992 0.58257 lineto
0.56012 0.57665 lineto
0.56032 0.56799 lineto
0.56052 0.55669 lineto
0.56072 0.54288 lineto
0.56232 0.36383 lineto
0.56312 0.2539 lineto
0.56392 0.15375 lineto
0.56432 0.11252 lineto
0.56472 0.07949 lineto
0.56492 0.06648 lineto
0.56512 0.05598 lineto
0.56532 0.0481 lineto
0.56552 0.04291 lineto
0.56572 0.04046 lineto
0.56592 0.04077 lineto
0.56612 0.04383 lineto
Mistroke
0.56632 0.04959 lineto
0.56671 0.06898 lineto
0.56691 0.08238 lineto
0.56711 0.09808 lineto
0.56871 0.28225 lineto
0.56951 0.38767 lineto
0.57031 0.47936 lineto
0.57071 0.5153 lineto
0.57091 0.53013 lineto
0.57111 0.54264 lineto
0.57131 0.55273 lineto
0.57151 0.56029 lineto
0.57171 0.56526 lineto
0.57191 0.56759 lineto
0.57351 0.49481 lineto
0.5751 0.30935 lineto
0.5759 0.21011 lineto
0.5763 0.166 lineto
0.5767 0.128 lineto
0.5771 0.09761 lineto
0.5773 0.08567 lineto
0.5775 0.07605 lineto
0.5777 0.06885 lineto
0.5779 0.06414 lineto
0.5781 0.06194 lineto
0.5783 0.06229 lineto
0.5785 0.06517 lineto
0.5787 0.07053 lineto
0.5789 0.07832 lineto
0.5791 0.08845 lineto
0.5799 0.1498 lineto
0.5815 0.33275 lineto
0.58229 0.42435 lineto
0.58269 0.46351 lineto
0.58309 0.49609 lineto
0.58329 0.50949 lineto
0.58349 0.52079 lineto
0.58369 0.52988 lineto
0.58389 0.53667 lineto
0.58409 0.5411 lineto
0.58429 0.54314 lineto
0.58449 0.54277 lineto
0.58469 0.54001 lineto
0.58489 0.53489 lineto
0.58509 0.52748 lineto
0.58529 0.51785 lineto
0.58549 0.50613 lineto
0.58629 0.44104 lineto
0.58789 0.26428 lineto
0.58869 0.18152 lineto
Mistroke
0.58909 0.14764 lineto
0.58949 0.12063 lineto
0.58969 0.11005 lineto
0.58988 0.10154 lineto
0.59008 0.0952 lineto
0.59028 0.09108 lineto
0.59048 0.08921 lineto
0.59068 0.0896 lineto
0.59088 0.09224 lineto
0.59108 0.09708 lineto
0.59128 0.10408 lineto
0.59148 0.11315 lineto
0.59188 0.13705 lineto
0.59268 0.20394 lineto
0.59428 0.37111 lineto
0.59468 0.40987 lineto
0.59508 0.44414 lineto
0.59548 0.47256 lineto
0.59568 0.48422 lineto
0.59588 0.49403 lineto
0.59608 0.5019 lineto
0.59628 0.50775 lineto
0.59648 0.51153 lineto
0.59668 0.51322 lineto
0.59688 0.5128 lineto
0.59708 0.5103 lineto
0.59728 0.50576 lineto
0.59748 0.49921 lineto
0.59767 0.49076 lineto
0.59787 0.48049 lineto
0.59827 0.45496 lineto
0.59907 0.38821 lineto
0.59987 0.31018 lineto
0.60067 0.23367 lineto
0.60107 0.19991 lineto
0.60147 0.17097 lineto
0.60167 0.15868 lineto
0.60187 0.148 lineto
0.60207 0.13903 lineto
0.60227 0.13185 lineto
0.60247 0.12653 lineto
0.60267 0.12311 lineto
0.60287 0.12162 lineto
0.60307 0.12206 lineto
0.60327 0.12441 lineto
0.60347 0.12864 lineto
0.60367 0.13469 lineto
0.60387 0.14249 lineto
0.60547 0.25384 lineto
0.60706 0.39316 lineto
Mistroke
0.60746 0.42171 lineto
0.60786 0.44529 lineto
0.60826 0.46301 lineto
0.60846 0.46945 lineto
0.60866 0.4742 lineto
0.61186 0.34279 lineto
0.61266 0.27832 lineto
0.61345 0.22073 lineto
0.61385 0.19743 lineto
0.61405 0.18757 lineto
0.61425 0.17904 lineto
0.61445 0.17192 lineto
0.61465 0.16625 lineto
0.61485 0.16209 lineto
0.61505 0.15947 lineto
0.61825 0.2934 lineto
0.61905 0.34932 lineto
0.61945 0.37462 lineto
0.61985 0.39677 lineto
0.62025 0.41494 lineto
0.62065 0.42845 lineto
0.62085 0.4333 lineto
0.62105 0.43683 lineto
0.62124 0.43902 lineto
0.62144 0.43985 lineto
0.62164 0.43933 lineto
0.62184 0.43748 lineto
0.62204 0.43433 lineto
0.62224 0.42993 lineto
0.62304 0.40111 lineto
0.62344 0.3812 lineto
0.62384 0.35878 lineto
0.62464 0.31029 lineto
0.62544 0.26369 lineto
0.62584 0.24347 lineto
0.62624 0.22638 lineto
0.62664 0.21304 lineto
0.62684 0.20794 lineto
0.62704 0.20393 lineto
0.62724 0.20105 lineto
0.62744 0.19931 lineto
0.62764 0.19872 lineto
0.62784 0.19927 lineto
0.62804 0.20094 lineto
0.62824 0.2037 lineto
0.62844 0.20751 lineto
0.62864 0.21231 lineto
0.62943 0.24011 lineto
0.63103 0.31787 lineto
0.63183 0.3547 lineto
Mistroke
0.63223 0.36992 lineto
0.63263 0.38222 lineto
0.63283 0.38713 lineto
0.63303 0.39118 lineto
0.63323 0.39431 lineto
0.63343 0.39652 lineto
0.63363 0.39779 lineto
0.63383 0.39813 lineto
0.63403 0.39755 lineto
0.63423 0.39607 lineto
0.63443 0.39371 lineto
0.63463 0.39051 lineto
0.63503 0.38181 lineto
0.63543 0.37042 lineto
0.63583 0.3569 lineto
0.63742 0.29454 lineto
0.63782 0.28022 lineto
0.63822 0.26759 lineto
0.63862 0.25713 lineto
0.63902 0.24919 lineto
0.63922 0.24624 lineto
0.63942 0.244 lineto
0.63962 0.24248 lineto
0.63982 0.24169 lineto
0.64002 0.2416 lineto
0.64022 0.24222 lineto
0.64042 0.24351 lineto
0.64062 0.24546 lineto
0.64222 0.27931 lineto
0.64302 0.30247 lineto
0.64382 0.32446 lineto
0.64422 0.33389 lineto
0.64461 0.34179 lineto
0.64481 0.34508 lineto
0.64501 0.3479 lineto
0.64521 0.35023 lineto
0.64541 0.35207 lineto
0.64561 0.35339 lineto
0.64581 0.35421 lineto
0.64601 0.35452 lineto
0.64621 0.35434 lineto
0.64641 0.35369 lineto
0.64661 0.35259 lineto
0.64681 0.35105 lineto
0.64701 0.34913 lineto
0.64861 0.32403 lineto
0.64941 0.30953 lineto
0.65021 0.29723 lineto
0.65061 0.29251 lineto
0.65081 0.29058 lineto
Mistroke
0.65101 0.28896 lineto
0.65121 0.28764 lineto
0.65141 0.28663 lineto
0.65161 0.28593 lineto
0.65181 0.28553 lineto
0.65201 0.28543 lineto
0.65221 0.2856 lineto
0.6524 0.28605 lineto
0.6526 0.28674 lineto
0.6528 0.28765 lineto
0.653 0.28876 lineto
0.6534 0.29147 lineto
0.655 0.30474 lineto
0.6554 0.30759 lineto
0.6558 0.30992 lineto
0.6562 0.31163 lineto
0.6564 0.31224 lineto
0.6566 0.31267 lineto
0.6568 0.31294 lineto
0.657 0.31305 lineto
0.6572 0.313 lineto
0.6574 0.3128 lineto
0.6576 0.31248 lineto
0.6578 0.31204 lineto
0.6582 0.31089 lineto
0.659 0.30806 lineto
0.6594 0.30673 lineto
0.6596 0.30616 lineto
0.6598 0.30569 lineto
0.66 0.30533 lineto
0.66019 0.30509 lineto
0.66039 0.30499 lineto
0.66059 0.30504 lineto
0.66079 0.30526 lineto
0.66099 0.30563 lineto
0.66139 0.3069 lineto
0.66159 0.30778 lineto
0.66179 0.30882 lineto
0.66219 0.31134 lineto
0.66299 0.31766 lineto
0.66379 0.32448 lineto
0.66419 0.32753 lineto
0.66439 0.32887 lineto
0.66459 0.33004 lineto
0.66479 0.33102 lineto
0.66499 0.33178 lineto
0.66519 0.33231 lineto
0.66539 0.33258 lineto
0.66559 0.33257 lineto
0.66579 0.33227 lineto
Mistroke
0.66599 0.33168 lineto
0.66619 0.33077 lineto
0.66659 0.32803 lineto
0.66679 0.3262 lineto
0.66699 0.32407 lineto
0.66779 0.31296 lineto
0.66858 0.29894 lineto
0.66938 0.28437 lineto
0.67018 0.27204 lineto
0.67038 0.26963 lineto
0.67058 0.26758 lineto
0.67078 0.26591 lineto
0.67098 0.26466 lineto
0.67118 0.26386 lineto
0.67138 0.26352 lineto
0.67158 0.26367 lineto
0.67178 0.26432 lineto
0.67198 0.26547 lineto
0.67218 0.26713 lineto
0.67238 0.2693 lineto
0.67258 0.27196 lineto
0.67418 0.30791 lineto
0.67498 0.33112 lineto
0.67578 0.35283 lineto
0.67617 0.36185 lineto
0.67637 0.36569 lineto
0.67657 0.36902 lineto
0.67677 0.37178 lineto
0.67697 0.37394 lineto
0.67717 0.37546 lineto
0.67737 0.37631 lineto
0.67757 0.37646 lineto
0.67777 0.3759 lineto
0.67797 0.37462 lineto
0.67817 0.37262 lineto
0.67837 0.36991 lineto
0.67857 0.3665 lineto
0.67897 0.35768 lineto
0.67977 0.33321 lineto
0.68057 0.30271 lineto
0.68137 0.27102 lineto
0.68177 0.25643 lineto
0.68217 0.24355 lineto
0.68257 0.233 lineto
0.68277 0.22876 lineto
0.68297 0.2253 lineto
0.68317 0.22266 lineto
0.68337 0.22088 lineto
0.68357 0.21999 lineto
0.68376 0.22002 lineto
Mistroke
0.68396 0.22099 lineto
0.68416 0.22289 lineto
0.68436 0.22571 lineto
0.68456 0.22945 lineto
0.68496 0.23956 lineto
0.68536 0.25289 lineto
0.68616 0.28718 lineto
0.68696 0.32711 lineto
0.68776 0.36624 lineto
0.68856 0.39788 lineto
0.68896 0.40903 lineto
0.68916 0.41318 lineto
0.68936 0.41629 lineto
0.68956 0.41833 lineto
0.68976 0.41926 lineto
0.68996 0.41905 lineto
0.69016 0.41769 lineto
0.69036 0.41519 lineto
0.69056 0.41156 lineto
0.69096 0.401 lineto
0.69136 0.38635 lineto
0.69175 0.36814 lineto
0.69335 0.27513 lineto
0.69415 0.22987 lineto
0.69455 0.21101 lineto
0.69495 0.19583 lineto
0.69515 0.18985 lineto
0.69535 0.18504 lineto
0.69555 0.18146 lineto
0.69575 0.17917 lineto
0.69595 0.17821 lineto
0.69615 0.17859 lineto
0.69635 0.18032 lineto
0.69655 0.18341 lineto
0.69675 0.18782 lineto
0.69695 0.19354 lineto
0.69735 0.20866 lineto
0.69815 0.25155 lineto
0.69895 0.30559 lineto
0.69974 0.36221 lineto
0.70054 0.41206 lineto
0.70094 0.43172 lineto
0.70114 0.43982 lineto
0.70134 0.44663 lineto
0.70154 0.45208 lineto
0.70174 0.4561 lineto
0.70194 0.45863 lineto
0.70214 0.45963 lineto
0.70234 0.45909 lineto
0.70254 0.45699 lineto
Mistroke
0.70274 0.45334 lineto
0.70294 0.44817 lineto
0.70334 0.43345 lineto
0.70374 0.41335 lineto
0.70454 0.36017 lineto
0.70534 0.29686 lineto
0.70614 0.23361 lineto
0.70654 0.20532 lineto
0.70694 0.18089 lineto
0.70713 0.17047 lineto
0.70733 0.1614 lineto
0.70753 0.15379 lineto
0.70773 0.14773 lineto
0.70793 0.14329 lineto
0.70813 0.14052 lineto
0.70833 0.13948 lineto
0.70853 0.14018 lineto
0.70873 0.14263 lineto
0.70893 0.14681 lineto
0.70913 0.1527 lineto
0.70933 0.16023 lineto
0.71093 0.26873 lineto
0.71173 0.34044 lineto
0.71253 0.40885 lineto
0.71293 0.4382 lineto
0.71333 0.46258 lineto
0.71373 0.48094 lineto
0.71393 0.48758 lineto
0.71413 0.49242 lineto
0.71433 0.4954 lineto
0.71453 0.49648 lineto
0.71473 0.49563 lineto
0.71492 0.49286 lineto
0.71512 0.48817 lineto
0.71532 0.4816 lineto
0.71572 0.4631 lineto
0.71612 0.43803 lineto
0.71652 0.40735 lineto
0.71732 0.33416 lineto
0.71812 0.2552 lineto
0.71892 0.18332 lineto
0.71932 0.15387 lineto
0.71952 0.14136 lineto
0.71972 0.1305 lineto
0.71992 0.12143 lineto
0.72012 0.11424 lineto
0.72032 0.10902 lineto
0.72052 0.10583 lineto
0.72072 0.10472 lineto
0.72092 0.10571 lineto
Mistroke
0.72112 0.1088 lineto
0.72132 0.11396 lineto
0.72172 0.13033 lineto
0.72192 0.14139 lineto
0.72212 0.15422 lineto
0.72371 0.30287 lineto
0.72451 0.38767 lineto
0.72491 0.42667 lineto
0.72531 0.46119 lineto
0.72571 0.48976 lineto
0.72591 0.50142 lineto
0.72611 0.51116 lineto
0.72631 0.51885 lineto
0.72651 0.52442 lineto
0.72671 0.5278 lineto
0.72691 0.52894 lineto
0.73011 0.29284 lineto
0.7309 0.20383 lineto
0.7313 0.16439 lineto
0.7317 0.13059 lineto
0.7319 0.11626 lineto
0.7321 0.10386 lineto
0.7323 0.09352 lineto
0.7325 0.08536 lineto
0.7327 0.07947 lineto
0.7329 0.07592 lineto
0.7331 0.07475 lineto
0.7333 0.07598 lineto
0.7365 0.3502 lineto
0.7373 0.44162 lineto
0.7377 0.48052 lineto
0.7381 0.51263 lineto
0.73829 0.5257 lineto
0.73849 0.53659 lineto
0.73869 0.54517 lineto
0.73889 0.55135 lineto
0.73909 0.55506 lineto
0.73929 0.55626 lineto
0.73949 0.55491 lineto
0.73969 0.55103 lineto
0.73989 0.54465 lineto
0.74009 0.53583 lineto
0.74049 0.51122 lineto
0.74089 0.47815 lineto
0.74129 0.43793 lineto
0.74289 0.24087 lineto
0.74369 0.14895 lineto
0.74409 0.11157 lineto
0.74429 0.09575 lineto
0.74449 0.08209 lineto
Mistroke
0.74469 0.07071 lineto
0.74489 0.06176 lineto
0.74509 0.05532 lineto
0.74529 0.05147 lineto
0.74549 0.05026 lineto
0.74569 0.0517 lineto
0.74589 0.05579 lineto
0.74609 0.0625 lineto
0.74628 0.07176 lineto
0.74648 0.08347 lineto
0.74688 0.11382 lineto
0.74768 0.19748 lineto
0.74848 0.30015 lineto
0.74928 0.40528 lineto
0.75008 0.49575 lineto
0.75048 0.53066 lineto
0.75068 0.54485 lineto
0.75088 0.55665 lineto
0.75108 0.56593 lineto
0.75128 0.57259 lineto
0.75148 0.57655 lineto
0.75168 0.57778 lineto
0.75188 0.57625 lineto
0.75208 0.57197 lineto
0.75228 0.56498 lineto
0.75248 0.55534 lineto
0.75288 0.52854 lineto
0.75328 0.49261 lineto
0.75407 0.39947 lineto
0.75567 0.18431 lineto
0.75607 0.13734 lineto
0.75647 0.09724 lineto
0.75667 0.0803 lineto
0.75687 0.06567 lineto
0.75707 0.05352 lineto
0.75727 0.04397 lineto
0.75747 0.03713 lineto
0.75767 0.03307 lineto
0.75787 0.03183 lineto
0.75807 0.03344 lineto
0.75827 0.03788 lineto
0.75847 0.04511 lineto
0.75867 0.05507 lineto
0.75887 0.06765 lineto
0.76047 0.2428 lineto
0.76127 0.35567 lineto
0.76206 0.46165 lineto
0.76246 0.50654 lineto
0.76286 0.54346 lineto
0.76306 0.55843 lineto
Mistroke
0.76326 0.57087 lineto
0.76346 0.58064 lineto
0.76366 0.58763 lineto
0.76386 0.59177 lineto
0.76406 0.59301 lineto
0.76426 0.59133 lineto
0.76446 0.58676 lineto
0.76466 0.57933 lineto
0.76486 0.56911 lineto
0.76506 0.55621 lineto
0.76526 0.54076 lineto
0.76686 0.34854 lineto
0.76766 0.23328 lineto
0.76846 0.12981 lineto
0.76886 0.08792 lineto
0.76906 0.07024 lineto
0.76926 0.055 lineto
0.76946 0.04235 lineto
0.76965 0.03242 lineto
0.76985 0.02532 lineto
0.77005 0.02113 lineto
0.77025 0.01989 lineto
0.77045 0.02162 lineto
0.77065 0.0263 lineto
0.77085 0.03388 lineto
0.77105 0.0443 lineto
0.77125 0.05744 lineto
0.77165 0.09135 lineto
0.77245 0.18435 lineto
0.77325 0.2979 lineto
0.77405 0.4136 lineto
0.77485 0.51266 lineto
0.77525 0.55072 lineto
0.77545 0.56614 lineto
0.77565 0.57894 lineto
0.77585 0.58897 lineto
0.77605 0.59613 lineto
0.77625 0.60035 lineto
0.77645 0.60158 lineto
0.77665 0.59981 lineto
0.77685 0.59506 lineto
0.77705 0.58737 lineto
0.77725 0.57681 lineto
0.77764 0.54758 lineto
0.77804 0.50855 lineto
0.77964 0.29084 lineto
0.78044 0.17666 lineto
0.78084 0.12651 lineto
0.78124 0.0838 lineto
0.78144 0.0658 lineto
Mistroke
0.78164 0.05029 lineto
0.78184 0.03743 lineto
0.78204 0.02736 lineto
0.78224 0.02017 lineto
0.78244 0.01595 lineto
0.78264 0.01473 lineto
0.78284 0.01653 lineto
0.78444 0.13119 lineto
0.78603 0.35655 lineto
0.78683 0.46727 lineto
0.78723 0.51399 lineto
0.78763 0.55231 lineto
0.78803 0.58067 lineto
0.78823 0.59073 lineto
0.78843 0.5979 lineto
0.78863 0.60211 lineto
0.78883 0.6033 lineto
0.78903 0.60148 lineto
0.78923 0.59666 lineto
0.78943 0.58889 lineto
0.78963 0.57825 lineto
0.79003 0.54883 lineto
0.79043 0.50961 lineto
0.79083 0.4622 lineto
0.79243 0.23293 lineto
0.79322 0.1275 lineto
0.79362 0.08497 lineto
0.79382 0.06707 lineto
0.79402 0.05165 lineto
0.79422 0.03889 lineto
0.79442 0.0289 lineto
0.79462 0.02179 lineto
0.79482 0.01763 lineto
0.79502 0.01646 lineto
0.79522 0.01829 lineto
0.79542 0.0231 lineto
0.79562 0.03085 lineto
0.79582 0.04144 lineto
0.79602 0.05477 lineto
0.79642 0.08906 lineto
0.79722 0.18272 lineto
0.79882 0.41206 lineto
0.79922 0.46451 lineto
0.79962 0.51052 lineto
0.80002 0.54821 lineto
0.80022 0.56344 lineto
0.80042 0.57604 lineto
0.80062 0.5859 lineto
0.80081 0.59291 lineto
0.80101 0.597 lineto
Mistroke
0.80121 0.59813 lineto
0.80141 0.5963 lineto
0.80161 0.59152 lineto
0.80181 0.58385 lineto
0.80201 0.57337 lineto
0.80361 0.40697 lineto
0.80441 0.29259 lineto
0.80521 0.1814 lineto
0.80561 0.13272 lineto
0.80601 0.09138 lineto
0.80621 0.07399 lineto
0.80641 0.05903 lineto
0.80661 0.04666 lineto
0.80681 0.03699 lineto
0.80701 0.03013 lineto
0.80721 0.02613 lineto
0.80741 0.02504 lineto
0.80761 0.02687 lineto
0.80781 0.03158 lineto
0.80801 0.03913 lineto
0.80821 0.04944 lineto
0.80841 0.0624 lineto
0.8088 0.09568 lineto
0.8092 0.13759 lineto
0.81 0.24003 lineto
0.8116 0.45815 lineto
0.812 0.50236 lineto
0.8124 0.53852 lineto
0.8126 0.55311 lineto
0.8128 0.56517 lineto
0.813 0.57459 lineto
0.8132 0.58127 lineto
0.8134 0.58515 lineto
0.8136 0.58619 lineto
0.8138 0.58438 lineto
0.814 0.57976 lineto
0.8142 0.57236 lineto
0.8144 0.56229 lineto
0.8146 0.54963 lineto
0.8148 0.53453 lineto
0.8164 0.34925 lineto
0.81719 0.2396 lineto
0.81799 0.14204 lineto
0.81839 0.10285 lineto
0.81859 0.08639 lineto
0.81879 0.07224 lineto
0.81899 0.06056 lineto
0.81919 0.05144 lineto
0.81939 0.04499 lineto
0.81959 0.04126 lineto
Mistroke
0.81979 0.04028 lineto
0.81999 0.04206 lineto
0.82019 0.04657 lineto
0.82039 0.05376 lineto
0.82059 0.06355 lineto
0.82079 0.07583 lineto
0.82119 0.10734 lineto
0.82199 0.19296 lineto
0.82279 0.29649 lineto
0.82359 0.40104 lineto
0.82438 0.48971 lineto
0.82478 0.52349 lineto
0.82498 0.5371 lineto
0.82518 0.54833 lineto
0.82538 0.55708 lineto
0.82558 0.56327 lineto
0.82578 0.56683 lineto
0.82598 0.56775 lineto
0.82618 0.566 lineto
0.82638 0.56163 lineto
0.82658 0.55468 lineto
0.82678 0.54524 lineto
0.82718 0.51928 lineto
0.82758 0.48489 lineto
0.82838 0.39686 lineto
0.82918 0.29569 lineto
0.82998 0.19785 lineto
0.83078 0.11909 lineto
0.83118 0.09096 lineto
0.83138 0.08024 lineto
0.83158 0.07191 lineto
0.83178 0.06602 lineto
0.83198 0.06265 lineto
0.83217 0.06181 lineto
0.83237 0.06351 lineto
0.83257 0.06772 lineto
0.83277 0.07439 lineto
0.83297 0.08344 lineto
0.83317 0.09478 lineto
0.83357 0.12377 lineto
0.83397 0.16014 lineto
0.83557 0.3456 lineto
0.83637 0.43535 lineto
0.83677 0.4729 lineto
0.83717 0.50349 lineto
0.83737 0.51579 lineto
0.83757 0.52592 lineto
0.83777 0.53379 lineto
0.83797 0.53933 lineto
0.83817 0.54249 lineto
Mistroke
0.83837 0.54325 lineto
0.83857 0.5416 lineto
0.83877 0.53757 lineto
0.83897 0.53122 lineto
0.83917 0.52261 lineto
0.83937 0.51185 lineto
0.83957 0.49906 lineto
0.84036 0.43055 lineto
0.84196 0.25243 lineto
0.84276 0.17188 lineto
0.84316 0.13972 lineto
0.84336 0.12626 lineto
0.84356 0.11473 lineto
0.84376 0.10525 lineto
0.84396 0.09789 lineto
0.84416 0.09273 lineto
0.84436 0.0898 lineto
0.84456 0.08914 lineto
0.84476 0.09073 lineto
0.84496 0.09455 lineto
0.84516 0.10055 lineto
0.84556 0.11879 lineto
0.84596 0.14463 lineto
0.84676 0.21433 lineto
0.84756 0.29796 lineto
0.84835 0.3818 lineto
0.84915 0.45234 lineto
0.84955 0.47901 lineto
0.84975 0.48969 lineto
0.84995 0.49847 lineto
0.85015 0.50527 lineto
0.85035 0.51002 lineto
0.85055 0.51269 lineto
0.85075 0.51326 lineto
0.85095 0.51173 lineto
0.85115 0.50813 lineto
0.85135 0.50251 lineto
0.85155 0.49494 lineto
0.85195 0.4743 lineto
0.85235 0.44714 lineto
0.85315 0.37818 lineto
0.85395 0.29961 lineto
0.85475 0.22427 lineto
0.85515 0.19167 lineto
0.85554 0.16422 lineto
0.85574 0.15277 lineto
0.85594 0.14299 lineto
0.85614 0.13497 lineto
0.85634 0.12878 lineto
0.85654 0.12447 lineto
Mistroke
0.85674 0.12208 lineto
0.85694 0.12162 lineto
0.85714 0.12308 lineto
0.85734 0.12643 lineto
0.85754 0.13164 lineto
0.85794 0.14733 lineto
0.85834 0.16942 lineto
0.85874 0.19693 lineto
0.85954 0.26327 lineto
0.86034 0.33526 lineto
0.86114 0.4012 lineto
0.86154 0.42853 lineto
0.86194 0.45062 lineto
0.86214 0.45944 lineto
0.86234 0.46665 lineto
0.86254 0.4722 lineto
0.86274 0.47603 lineto
0.86294 0.47813 lineto
0.86314 0.47848 lineto
0.86333 0.4771 lineto
0.86353 0.47399 lineto
0.86373 0.46922 lineto
0.86393 0.46285 lineto
0.86433 0.44559 lineto
0.86473 0.42302 lineto
0.86513 0.39613 lineto
0.86593 0.33417 lineto
0.86673 0.27003 lineto
0.86713 0.24043 lineto
0.86753 0.21408 lineto
0.86793 0.19201 lineto
0.86813 0.18286 lineto
0.86833 0.17506 lineto
0.86853 0.16871 lineto
0.86873 0.16384 lineto
0.86893 0.1605 lineto
0.86913 0.15871 lineto
0.86933 0.15848 lineto
0.86953 0.15979 lineto
0.86973 0.16262 lineto
0.86993 0.16693 lineto
0.87033 0.17974 lineto
0.87073 0.19759 lineto
0.87152 0.24502 lineto
0.87232 0.30103 lineto
0.87312 0.35632 lineto
0.87352 0.38087 lineto
0.87392 0.40204 lineto
0.87432 0.41902 lineto
0.87452 0.42574 lineto
Mistroke
0.87472 0.4312 lineto
0.87492 0.43535 lineto
0.87512 0.43817 lineto
0.87532 0.43963 lineto
0.87552 0.43974 lineto
0.87572 0.43851 lineto
0.87592 0.43596 lineto
0.87612 0.43213 lineto
0.87632 0.42708 lineto
0.87712 0.3961 lineto
0.87872 0.30379 lineto
0.87951 0.25803 lineto
0.87991 0.23858 lineto
0.88031 0.22243 lineto
0.88051 0.21579 lineto
0.88071 0.21019 lineto
0.88091 0.20566 lineto
0.88111 0.20225 lineto
0.88131 0.19998 lineto
0.88151 0.19885 lineto
0.88171 0.19887 lineto
0.88191 0.20002 lineto
0.88211 0.20228 lineto
0.88231 0.2056 lineto
0.88271 0.21526 lineto
0.88311 0.22849 lineto
0.88351 0.24467 lineto
0.88431 0.28282 lineto
0.88511 0.32313 lineto
0.88591 0.35901 lineto
0.88631 0.3735 lineto
0.88651 0.37963 lineto
0.88671 0.38495 lineto
0.8869 0.3894 lineto
0.8871 0.39296 lineto
0.8873 0.3956 lineto
0.8875 0.39731 lineto
0.8877 0.39809 lineto
0.8879 0.39794 lineto
0.8881 0.39687 lineto
0.8883 0.39492 lineto
0.8887 0.38848 lineto
0.8889 0.3841 lineto
0.8891 0.37902 lineto
0.8899 0.35301 lineto
0.8907 0.32174 lineto
0.8915 0.29059 lineto
0.8923 0.26457 lineto
0.8927 0.25475 lineto
0.8929 0.2508 lineto
Mistroke
0.8931 0.24753 lineto
0.8933 0.24496 lineto
0.8935 0.2431 lineto
0.8937 0.24197 lineto
0.8939 0.24155 lineto
0.8941 0.24184 lineto
0.8943 0.24283 lineto
0.8945 0.24447 lineto
0.89469 0.24676 lineto
0.89509 0.25307 lineto
0.89549 0.2614 lineto
0.89629 0.28232 lineto
0.89709 0.30556 lineto
0.89789 0.32711 lineto
0.89829 0.33616 lineto
0.89869 0.3436 lineto
0.89889 0.34665 lineto
0.89909 0.34921 lineto
0.89929 0.35127 lineto
0.89949 0.35284 lineto
0.89969 0.35389 lineto
0.89989 0.35443 lineto
0.90009 0.35448 lineto
0.90029 0.35405 lineto
0.90049 0.35316 lineto
0.90069 0.35182 lineto
0.90089 0.35007 lineto
0.90109 0.34795 lineto
0.90268 0.32205 lineto
0.90348 0.30772 lineto
0.90388 0.30135 lineto
0.90428 0.29587 lineto
0.90468 0.29145 lineto
0.90488 0.28968 lineto
0.90508 0.28821 lineto
0.90528 0.28706 lineto
0.90548 0.28621 lineto
0.90568 0.28568 lineto
0.90588 0.28544 lineto
0.90608 0.28549 lineto
0.90628 0.28581 lineto
0.90648 0.28639 lineto
0.90668 0.2872 lineto
0.90708 0.28942 lineto
0.90748 0.29229 lineto
0.90828 0.299 lineto
0.90908 0.30555 lineto
0.90948 0.30827 lineto
0.90988 0.31044 lineto
0.91008 0.31129 lineto
Mistroke
0.91027 0.31198 lineto
0.91047 0.31249 lineto
0.91067 0.31284 lineto
0.91087 0.31302 lineto
0.91107 0.31304 lineto
0.91127 0.31291 lineto
0.91147 0.31265 lineto
0.91187 0.31177 lineto
0.91227 0.31053 lineto
0.91307 0.30768 lineto
0.91347 0.30642 lineto
0.91367 0.3059 lineto
0.91387 0.30548 lineto
0.91407 0.30518 lineto
0.91427 0.30502 lineto
0.91447 0.305 lineto
0.91467 0.30514 lineto
0.91487 0.30544 lineto
0.91507 0.30591 lineto
0.91527 0.30654 lineto
0.91547 0.30735 lineto
0.91587 0.30944 lineto
0.91627 0.3121 lineto
0.91707 0.31857 lineto
0.91787 0.32533 lineto
0.91826 0.32826 lineto
0.91846 0.32951 lineto
0.91866 0.33059 lineto
0.91886 0.33146 lineto
0.91906 0.3321 lineto
0.91926 0.33249 lineto
0.91946 0.33261 lineto
0.91966 0.33245 lineto
0.91986 0.33199 lineto
0.92006 0.33123 lineto
0.92026 0.33016 lineto
0.92066 0.32709 lineto
0.92106 0.32282 lineto
0.92186 0.31121 lineto
0.92266 0.29697 lineto
0.92346 0.28253 lineto
0.92386 0.27612 lineto
0.92426 0.27072 lineto
0.92466 0.26664 lineto
0.92486 0.26519 lineto
0.92506 0.26418 lineto
0.92825 0.31095 lineto
0.92905 0.33419 lineto
0.92985 0.35539 lineto
0.93025 0.36396 lineto
Mistroke
0.93045 0.36754 lineto
0.93065 0.37057 lineto
0.93085 0.37301 lineto
0.93105 0.37483 lineto
0.93125 0.376 lineto
0.93145 0.37647 lineto
0.93165 0.37625 lineto
0.93185 0.3753 lineto
0.93205 0.37364 lineto
0.93225 0.37126 lineto
0.93265 0.3644 lineto
0.93305 0.35491 lineto
0.93384 0.32939 lineto
0.93464 0.29843 lineto
0.93544 0.267 lineto
0.93584 0.2528 lineto
0.93624 0.24048 lineto
0.93644 0.23522 lineto
0.93664 0.23065 lineto
0.93684 0.22682 lineto
0.93704 0.22379 lineto
0.93724 0.2216 lineto
0.93744 0.22029 lineto
0.93764 0.21989 lineto
0.93784 0.22042 lineto
0.94104 0.33252 lineto
0.94183 0.37103 lineto
0.94223 0.38754 lineto
0.94263 0.4012 lineto
0.94283 0.40676 lineto
0.94303 0.41137 lineto
0.94323 0.41497 lineto
0.94343 0.41752 lineto
0.94363 0.41896 lineto
0.94383 0.41929 lineto
0.94403 0.41847 lineto
0.94423 0.4165 lineto
0.94443 0.41339 lineto
0.94463 0.40916 lineto
0.94503 0.39747 lineto
0.94543 0.38182 lineto
0.94583 0.36276 lineto
0.94743 0.26872 lineto
0.94823 0.22453 lineto
0.94863 0.20657 lineto
0.94883 0.199 lineto
0.94903 0.1925 lineto
0.94922 0.18713 lineto
0.94942 0.18297 lineto
0.94962 0.18008 lineto
Mistroke
0.94982 0.17849 lineto
0.95002 0.17824 lineto
0.95022 0.17934 lineto
0.95042 0.1818 lineto
0.95062 0.1856 lineto
0.95082 0.19071 lineto
0.95102 0.1971 lineto
0.95142 0.21347 lineto
0.95222 0.25828 lineto
0.95302 0.31319 lineto
0.95382 0.36944 lineto
0.95422 0.39514 lineto
0.95462 0.41772 lineto
0.95502 0.43619 lineto
0.95522 0.44362 lineto
0.95542 0.44971 lineto
0.95562 0.4544 lineto
0.95582 0.45763 lineto
0.95602 0.45935 lineto
0.95622 0.45953 lineto
0.95642 0.45816 lineto
0.95662 0.45523 lineto
0.95682 0.45077 lineto
0.95702 0.44481 lineto
0.95861 0.3521 lineto
0.95941 0.28819 lineto
0.96021 0.22576 lineto
0.96101 0.17517 lineto
0.96141 0.15715 lineto
0.96161 0.15036 lineto
0.96181 0.14515 lineto
0.96201 0.1416 lineto
0.96221 0.13975 lineto
0.96241 0.13964 lineto
0.96261 0.14127 lineto
0.96281 0.14465 lineto
0.96301 0.14974 lineto
0.96341 0.16491 lineto
0.96381 0.18624 lineto
0.96421 0.21293 lineto
0.965 0.27806 lineto
0.9666 0.41709 lineto
0.967 0.44523 lineto
0.9674 0.46811 lineto
0.9676 0.47724 lineto
0.9678 0.4847 lineto
0.968 0.49039 lineto
0.9682 0.49425 lineto
0.9684 0.49622 lineto
0.9686 0.49627 lineto
Mistroke
0.9688 0.49439 lineto
0.969 0.49059 lineto
0.9694 0.47736 lineto
0.9696 0.46804 lineto
0.9698 0.45702 lineto
0.97619 0.16176 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 634 989 a Fi(Fig)p Fq(.)15 b(41.)k(Plot)c(of)g(sin)8
b(5)p Fh(x)i Fq(+)h(sin)d(5)p Fh(:)p Fq(25)p Fh(x)p Fq(.)571
1572 y @beginspecial 0 @llx 0 @lly 282 @urx 174 @ury 1937 @rwi
@setspecial
%%BeginDocument: Har.fastperiod.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.02381 0.303152 0.308148 0.147694 [
[(0.5)] 0.17539 0.30815 0 2 Msboxa
[(1)] 0.32696 0.30815 0 2 Msboxa
[(1.5)] 0.47854 0.30815 0 2 Msboxa
[(2)] 0.63011 0.30815 0 2 Msboxa
[(2.5)] 0.78169 0.30815 0 2 Msboxa
[(3)] 0.93327 0.30815 0 2 Msboxa
[(-2)] 0.01131 0.01276 1 0 Msboxa
[(-1)] 0.01131 0.16045 1 0 Msboxa
[(1)] 0.01131 0.45584 1 0 Msboxa
[(2)] 0.01131 0.60354 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.17539 0.30815 moveto
0.17539 0.3144 lineto
stroke
grestore
[(0.5)] 0.17539 0.30815 0 2 Mshowa
gsave
0.002 setlinewidth
0.32696 0.30815 moveto
0.32696 0.3144 lineto
stroke
grestore
[(1)] 0.32696 0.30815 0 2 Mshowa
gsave
0.002 setlinewidth
0.47854 0.30815 moveto
0.47854 0.3144 lineto
stroke
grestore
[(1.5)] 0.47854 0.30815 0 2 Mshowa
gsave
0.002 setlinewidth
0.63011 0.30815 moveto
0.63011 0.3144 lineto
stroke
grestore
[(2)] 0.63011 0.30815 0 2 Mshowa
gsave
0.002 setlinewidth
0.78169 0.30815 moveto
0.78169 0.3144 lineto
stroke
grestore
[(2.5)] 0.78169 0.30815 0 2 Mshowa
gsave
0.002 setlinewidth
0.93327 0.30815 moveto
0.93327 0.3144 lineto
stroke
grestore
[(3)] 0.93327 0.30815 0 2 Mshowa
gsave
0.001 setlinewidth
0.05412 0.30815 moveto
0.05412 0.3119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.08444 0.30815 moveto
0.08444 0.3119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11476 0.30815 moveto
0.11476 0.3119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.14507 0.30815 moveto
0.14507 0.3119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2057 0.30815 moveto
0.2057 0.3119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.23602 0.30815 moveto
0.23602 0.3119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.26633 0.30815 moveto
0.26633 0.3119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29665 0.30815 moveto
0.29665 0.3119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35728 0.30815 moveto
0.35728 0.3119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38759 0.30815 moveto
0.38759 0.3119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.41791 0.30815 moveto
0.41791 0.3119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44822 0.30815 moveto
0.44822 0.3119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.50885 0.30815 moveto
0.50885 0.3119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53917 0.30815 moveto
0.53917 0.3119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56948 0.30815 moveto
0.56948 0.3119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5998 0.30815 moveto
0.5998 0.3119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.66043 0.30815 moveto
0.66043 0.3119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69074 0.30815 moveto
0.69074 0.3119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72106 0.30815 moveto
0.72106 0.3119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.75137 0.30815 moveto
0.75137 0.3119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81201 0.30815 moveto
0.81201 0.3119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84232 0.30815 moveto
0.84232 0.3119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.87264 0.30815 moveto
0.87264 0.3119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90295 0.30815 moveto
0.90295 0.3119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.96358 0.30815 moveto
0.96358 0.3119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9939 0.30815 moveto
0.9939 0.3119 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.30815 moveto
1 0.30815 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0.01276 moveto
0.03006 0.01276 lineto
stroke
grestore
[(-2)] 0.01131 0.01276 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.16045 moveto
0.03006 0.16045 lineto
stroke
grestore
[(-1)] 0.01131 0.16045 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.45584 moveto
0.03006 0.45584 lineto
stroke
grestore
[(1)] 0.01131 0.45584 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.60354 moveto
0.03006 0.60354 lineto
stroke
grestore
[(2)] 0.01131 0.60354 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.0423 moveto
0.02756 0.0423 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.07184 moveto
0.02756 0.07184 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.10138 moveto
0.02756 0.10138 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.13091 moveto
0.02756 0.13091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.18999 moveto
0.02756 0.18999 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.21953 moveto
0.02756 0.21953 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.24907 moveto
0.02756 0.24907 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.27861 moveto
0.02756 0.27861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.33769 moveto
0.02756 0.33769 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.36723 moveto
0.02756 0.36723 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.39676 moveto
0.02756 0.39676 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.4263 moveto
0.02756 0.4263 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.48538 moveto
0.02756 0.48538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.51492 moveto
0.02756 0.51492 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.54446 moveto
0.02756 0.54446 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.574 moveto
0.02756 0.574 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.30815 moveto
0.04365 0.40538 lineto
0.06349 0.49175 lineto
0.07341 0.52778 lineto
0.08333 0.55763 lineto
0.08829 0.56998 lineto
0.09325 0.58047 lineto
0.09821 0.58906 lineto
0.10317 0.59567 lineto
0.10565 0.59821 lineto
0.10813 0.60025 lineto
0.10938 0.60108 lineto
0.11062 0.60177 lineto
0.11186 0.60234 lineto
0.1131 0.60278 lineto
0.11434 0.60309 lineto
0.11558 0.60327 lineto
0.11682 0.60332 lineto
0.11806 0.60324 lineto
0.1193 0.60303 lineto
0.12054 0.60269 lineto
0.12178 0.60222 lineto
0.12302 0.60162 lineto
0.1255 0.60004 lineto
0.12798 0.59794 lineto
0.13294 0.59222 lineto
0.1379 0.58451 lineto
0.14286 0.57485 lineto
0.15278 0.55 lineto
0.1627 0.51838 lineto
0.18254 0.43852 lineto
0.22222 0.246 lineto
0.24206 0.15484 lineto
0.25198 0.11515 lineto
0.2619 0.08091 lineto
0.27183 0.05307 lineto
0.27679 0.04181 lineto
0.28175 0.03242 lineto
0.28671 0.02497 lineto
0.29167 0.01952 lineto
0.29415 0.01755 lineto
0.29539 0.01676 lineto
0.29663 0.0161 lineto
0.29787 0.01556 lineto
0.29911 0.01516 lineto
0.30035 0.01488 lineto
0.30159 0.01473 lineto
0.30283 0.01472 lineto
0.30407 0.01483 lineto
0.30531 0.01506 lineto
Mistroke
0.30655 0.01543 lineto
0.30779 0.01593 lineto
0.30903 0.01655 lineto
0.31151 0.01819 lineto
0.31399 0.02033 lineto
0.31647 0.02298 lineto
0.32143 0.02978 lineto
0.32639 0.03853 lineto
0.33135 0.04917 lineto
0.34127 0.07581 lineto
0.36111 0.14762 lineto
0.38095 0.23715 lineto
0.42063 0.42843 lineto
0.44048 0.50883 lineto
0.4504 0.54103 lineto
0.46032 0.56666 lineto
0.46528 0.57677 lineto
0.47024 0.58499 lineto
0.47272 0.58837 lineto
0.4752 0.59125 lineto
0.47768 0.59364 lineto
0.48016 0.59552 lineto
0.4814 0.59627 lineto
0.48264 0.5969 lineto
0.48388 0.5974 lineto
0.48512 0.59777 lineto
0.48636 0.59801 lineto
0.4876 0.59813 lineto
0.48884 0.59811 lineto
0.49008 0.59798 lineto
0.49132 0.59771 lineto
0.49256 0.59731 lineto
0.49504 0.59615 lineto
0.49628 0.59537 lineto
0.49752 0.59447 lineto
0.5 0.59229 lineto
0.50496 0.58645 lineto
0.50992 0.57865 lineto
0.51984 0.55744 lineto
0.52976 0.52927 lineto
0.53968 0.49494 lineto
0.57937 0.31756 lineto
0.61905 0.13746 lineto
0.62897 0.10165 lineto
0.63889 0.07171 lineto
0.64385 0.0592 lineto
0.64881 0.04846 lineto
0.65377 0.03955 lineto
0.65873 0.03255 lineto
0.66121 0.02977 lineto
Mistroke
0.66369 0.02748 lineto
0.66617 0.02569 lineto
0.66865 0.0244 lineto
0.66989 0.02394 lineto
0.67113 0.02361 lineto
0.67237 0.0234 lineto
0.67361 0.02331 lineto
0.67485 0.02336 lineto
0.67609 0.02352 lineto
0.67733 0.02381 lineto
0.67857 0.02423 lineto
0.68105 0.02544 lineto
0.68353 0.02714 lineto
0.68601 0.02934 lineto
0.68849 0.03203 lineto
0.69345 0.03884 lineto
0.69841 0.04755 lineto
0.70833 0.07034 lineto
0.71825 0.09975 lineto
0.7381 0.1749 lineto
0.77778 0.35849 lineto
0.79762 0.4464 lineto
0.81746 0.51845 lineto
0.82738 0.54595 lineto
0.83234 0.55721 lineto
0.8373 0.56671 lineto
0.84226 0.57437 lineto
0.84474 0.5775 lineto
0.84722 0.58015 lineto
0.8497 0.58233 lineto
0.85218 0.58402 lineto
0.85342 0.58468 lineto
0.85466 0.58522 lineto
0.8559 0.58564 lineto
0.85714 0.58593 lineto
0.85838 0.58611 lineto
0.85962 0.58616 lineto
0.86086 0.58609 lineto
0.8621 0.5859 lineto
0.86334 0.58558 lineto
0.86458 0.58515 lineto
0.86706 0.58391 lineto
0.86954 0.58219 lineto
0.87202 0.57998 lineto
0.87698 0.57416 lineto
0.88194 0.56647 lineto
0.8869 0.55697 lineto
0.89683 0.53286 lineto
0.91667 0.46684 lineto
0.93651 0.38358 lineto
Mistroke
0.97619 0.20371 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 547 1658 a Fi(Fig)p Fq(.)15 b(42.)20 b(Another)15
b(plot)g(of)g(sin)9 b(5)p Fh(x)g Fq(+)i(sin)d(5)p Fh(:)p Fq(25)p
Fh(x)p Fq(.)123 1767 y(b\))23 b(W)l(e)13 b(read)g(o\013)g(Figure)h(41)e(t)o
(w)o(o)g(p)q(oin)o(ts)i(a)f(\\slo)o(w")g(p)q(erio)q(d)h(apart.)19
b(Note:)f Fl(two)f Fq(\\blobs")d(constitute)189 1817 y(a)h(\\slo)o(w")f(p)q
(erio)q(d.)189 1922 y Fj(B)21 b(=)h(\(1)f(+)h(.05\)A)276 1972
y(5.25)189 2022 y(y)f(=)h(Sin[A)f(x])g(+)h(Sin[B)e(x];)189
2072 y(Plot[y,)g({x,)h(0,)h(30Pi},)276 2122 y(PlotPoints)e(->)h(150)189
2171 y(])189 2271 y({{13.159528,)e(0.04321},)h({63.574359,)f(0.04321}})189
2371 y(slowperiod)g(=)j(63.574359)e(-)h(13.159528)276 2420
y(50.4148)189 2551 y Fq(W)l(e)15 b(read)g(o\013)f(Figure)i(42)e(t)o(w)o(o)g
(p)q(oin)o(ts)i(a)f(\\fast")f(p)q(erio)q(d)i(apart.)p eop
%%Page: 71 71
71 70 bop 75 -103 a Fm(Simple)20 b(Harmonic)i(Motion)p 75 -85
763 2 v 993 w Fq(71)189 49 y Fj(y)f(=)h(Sin[A)f(x])g(+)h(Sin[B)e(x];)189
99 y(Plot[y,)g({x,)h(0,)h(Pi}])189 199 y({{0.6187,)e(0.048967},)f({1.843052,)
h(0.048967}})189 249 y(fastperiod)f(=)j(1.843052)e(-)i(0.6187)276
298 y(1.22435)75 456 y Fn(Exercise)17 b(5.)j Fq(P)o(erio)q(ds:)75
564 y Fj(2Pi/\(1/2\(B)g(-)h(A\)\))g(//N)162 614 y(50.2655)75
713 y(2Pi/\(1/2\(B)f(+)h(A\)\))g(//N)162 763 y(1.22599)75 871
y Fq(F)l(requencies:)75 979 y Fj(\(1/2\(B-A\)\)/\(2Pi\))d(//N)162
1029 y(0.0198944)75 1129 y(\(1/2\(B)j(+)g(A\)\)/\(2Pi\))f(//N)162
1178 y(0.815669)p eop
%%Page: 72 72
72 71 bop 75 -103 a Fq(72)737 b Fm(F)-6 b(ourier)23 b(F)-6
b(requency)23 b(Decomp)r(osition)p 858 -85 1017 2 v 606 49
a Fn(PURPOSE)18 b(OF)g(THE)g(PR)o(OJECT)146 151 y Fq(In)o(tro)q(duction)13
b(to)f(F)l(ourier)h(series.)20 b(Sho)o(w)12 b(that)h(functions)g(can)g(often)
f(b)q(e)i(appro)o(ximated)e(nicely)j(b)o(y)75 208 y(just)d(a)g(few)g(terms)g
(of)g(their)g(F)l(ourier)h(expansion.)20 b(Exercise)13 b(notions)f(of)g(\\ev)
o(en")g(and)g(\\o)q(dd")h(functions.)75 284 y Fn(Instructor)h(Note)p
Fq(:)31 b(The)13 b(Instructor)f(Noteb)q(o)q(ok)h(con)o(tains)f(animation)h
(lo)q(ops)g(that)f(y)o(ou)g(can)h(use)g(for)75 340 y(classro)q(om)e
(demonstrations.)19 b(Exercise)12 b(5)f(in)o(vites)h(the)g(studen)o(ts)f(to)g
(use)h(the)g(\\blac)o(k)f(b)q(o)o(x")h Fk(NDSolve)p Fq(|)75
397 y(y)o(ou)17 b(can)h(skip)g(this)f(without)h(harm.)26 b(Exercise)18
b(7)f(is)h(an)f(optional)h(mathematical)g(in)o(v)o(estigation)g(for)75
453 y(the)d(b)q(etter)h(studen)o(ts.)75 530 y Fn(Shorter)h(Pro)s(ject)p
Fq(:)j(Omit)15 b(Exercise)h(5)f(and)h(7.)577 654 y Fn(ANSWERS)h(F)o(OR)h
(INSTR)o(UCTORS)75 756 y(Exercise)d(2.)k Fq(The)13 b(p)q(oin)o(t)g(of)g(part)
f(\(a\))g(is)h(to)f(giv)o(e)h(the)g(studen)o(ts)g(the)g(an)o(ti-deriv)m(ativ)
o(e)h(of)f Fh(x)8 b Fq(sin)g Fh(x)p Fq(,)13 b(since)75 813
y(in)j(most)e(courses,)h(they)g(don't)g(y)o(et)g(kno)o(w)g(ab)q(out)g(in)o
(tegration)g(b)o(y)g(parts.)75 883 y Fn(Exercise)24 b(3.)38
b Fh(n)23 b Fq(=)f(4)f(is)h(adequate,)g(see)g(Figure)f(43.)37
b(Here)22 b(is)f(co)q(de)h(for)e(a)h(p)q(ossible)i(classro)q(om)75
932 y(animation:)75 1036 y Fj(f[x_])e(:=)g(x\(Pi)g(-)h(x\)\(Pi)e(+)i(x\))75
1135 y(nmax)f(=)h(4;)f(pi)g(=)h(N[Pi];)75 1185 y(Table[b[k])e(=)h(2/pi)g
(NIntegrate[f[x])e(Sin[k)i(x],)g({x,)g(0,)g(pi}],)75 1235 y({k,)g(1,)h
(nmax}];)75 1285 y(Table[f[n_,)e(x_])h(:=)g(Sum[b[k])f(Sin[k)h(x],)g({k,)g
(1,)h(n}],)75 1335 y({n,)f(1,)h(nmax}];)75 1434 y(Do[)162 1484
y(string)f(=)g(StringForm["n)e(=)j(`1`",)f(n];)162 1534 y(label)g(=)h
(FontForm[string)o(,)d({"Times-Bold",)g(16}];)162 1584 y(Plot[{f[x],)h(f[n,)h
(x]},)g({x,)g(0,)g(Pi},)249 1633 y(PlotStyle)f(->)i({GrayLevel[0],)d
(GrayLevel[0.5]})o(,)249 1683 y(PlotLabel)h(->)i(label)162
1733 y(],)75 1783 y({n,)f(1,)h(nmax}])571 2388 y @beginspecial
0 @llx 0 @lly 282 @urx 174 @ury 1937 @rwi @setspecial
%%BeginDocument: Fou.cubic4.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.02381 0.303152 0.014715 0.04932 [
[(0.5)] 0.17539 0.01472 0 2 Msboxa
[(1)] 0.32696 0.01472 0 2 Msboxa
[(1.5)] 0.47854 0.01472 0 2 Msboxa
[(2)] 0.63011 0.01472 0 2 Msboxa
[(2.5)] 0.78169 0.01472 0 2 Msboxa
[(3)] 0.93327 0.01472 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(n = 4)] 0.5 0.61803 0 -2 Msboxa
grestore
[(2)] 0.01131 0.11336 1 0 Msboxa
[(4)] 0.01131 0.212 1 0 Msboxa
[(6)] 0.01131 0.31064 1 0 Msboxa
[(8)] 0.01131 0.40928 1 0 Msboxa
[(10)] 0.01131 0.50792 1 0 Msboxa
[(12)] 0.01131 0.60656 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.17539 0.01472 moveto
0.17539 0.02097 lineto
stroke
grestore
[(0.5)] 0.17539 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.32696 0.01472 moveto
0.32696 0.02097 lineto
stroke
grestore
[(1)] 0.32696 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.47854 0.01472 moveto
0.47854 0.02097 lineto
stroke
grestore
[(1.5)] 0.47854 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.63011 0.01472 moveto
0.63011 0.02097 lineto
stroke
grestore
[(2)] 0.63011 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.78169 0.01472 moveto
0.78169 0.02097 lineto
stroke
grestore
[(2.5)] 0.78169 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.93327 0.01472 moveto
0.93327 0.02097 lineto
stroke
grestore
[(3)] 0.93327 0.01472 0 2 Mshowa
gsave
0.001 setlinewidth
0.05412 0.01472 moveto
0.05412 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.08444 0.01472 moveto
0.08444 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11476 0.01472 moveto
0.11476 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.14507 0.01472 moveto
0.14507 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2057 0.01472 moveto
0.2057 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.23602 0.01472 moveto
0.23602 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.26633 0.01472 moveto
0.26633 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29665 0.01472 moveto
0.29665 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35728 0.01472 moveto
0.35728 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38759 0.01472 moveto
0.38759 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.41791 0.01472 moveto
0.41791 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44822 0.01472 moveto
0.44822 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.50885 0.01472 moveto
0.50885 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53917 0.01472 moveto
0.53917 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56948 0.01472 moveto
0.56948 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5998 0.01472 moveto
0.5998 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.66043 0.01472 moveto
0.66043 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69074 0.01472 moveto
0.69074 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72106 0.01472 moveto
0.72106 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.75137 0.01472 moveto
0.75137 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81201 0.01472 moveto
0.81201 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84232 0.01472 moveto
0.84232 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.87264 0.01472 moveto
0.87264 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90295 0.01472 moveto
0.90295 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.96358 0.01472 moveto
0.96358 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9939 0.01472 moveto
0.9939 0.01847 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.01472 moveto
1 0.01472 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(n = 4)] 0.5 0.61803 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.02381 0.11336 moveto
0.03006 0.11336 lineto
stroke
grestore
[(2)] 0.01131 0.11336 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.212 moveto
0.03006 0.212 lineto
stroke
grestore
[(4)] 0.01131 0.212 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.31064 moveto
0.03006 0.31064 lineto
stroke
grestore
[(6)] 0.01131 0.31064 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.40928 moveto
0.03006 0.40928 lineto
stroke
grestore
[(8)] 0.01131 0.40928 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.50792 moveto
0.03006 0.50792 lineto
stroke
grestore
[(10)] 0.01131 0.50792 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.60656 moveto
0.03006 0.60656 lineto
stroke
grestore
[(12)] 0.01131 0.60656 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.03444 moveto
0.02756 0.03444 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.05417 moveto
0.02756 0.05417 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.0739 moveto
0.02756 0.0739 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.09363 moveto
0.02756 0.09363 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.13308 moveto
0.02756 0.13308 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.15281 moveto
0.02756 0.15281 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.17254 moveto
0.02756 0.17254 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.19227 moveto
0.02756 0.19227 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.23172 moveto
0.02756 0.23172 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.25145 moveto
0.02756 0.25145 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.27118 moveto
0.02756 0.27118 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.29091 moveto
0.02756 0.29091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.33037 moveto
0.02756 0.33037 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.35009 moveto
0.02756 0.35009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.36982 moveto
0.02756 0.36982 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.38955 moveto
0.02756 0.38955 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.42901 moveto
0.02756 0.42901 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.44873 moveto
0.02756 0.44873 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.46846 moveto
0.02756 0.46846 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.48819 moveto
0.02756 0.48819 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.52765 moveto
0.02756 0.52765 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.54737 moveto
0.02756 0.54737 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.5671 moveto
0.02756 0.5671 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.58683 moveto
0.02756 0.58683 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.06349 0.07832 lineto
0.10317 0.14127 lineto
0.14286 0.20288 lineto
0.18254 0.26251 lineto
0.22222 0.31948 lineto
0.2619 0.37313 lineto
0.30159 0.4228 lineto
0.34127 0.46782 lineto
0.38095 0.50754 lineto
0.42063 0.54128 lineto
0.46032 0.56838 lineto
0.48016 0.57923 lineto
0.5 0.58818 lineto
0.50992 0.59191 lineto
0.51984 0.59514 lineto
0.52976 0.59784 lineto
0.53968 0.60002 lineto
0.54464 0.6009 lineto
0.5496 0.60165 lineto
0.55456 0.60227 lineto
0.55952 0.60274 lineto
0.562 0.60293 lineto
0.56448 0.60307 lineto
0.56572 0.60314 lineto
0.56696 0.60319 lineto
0.5682 0.60323 lineto
0.56944 0.60327 lineto
0.57068 0.60329 lineto
0.57192 0.60331 lineto
0.57316 0.60332 lineto
0.5744 0.60332 lineto
0.57564 0.60331 lineto
0.57688 0.60329 lineto
0.57813 0.60326 lineto
0.57937 0.60322 lineto
0.58185 0.60312 lineto
0.58433 0.60299 lineto
0.58681 0.60281 lineto
0.58929 0.6026 lineto
0.59425 0.60207 lineto
0.59921 0.60139 lineto
0.60913 0.59957 lineto
0.61905 0.59714 lineto
0.63889 0.59041 lineto
0.65873 0.5811 lineto
0.67857 0.56914 lineto
0.69841 0.55444 lineto
0.7381 0.5165 lineto
0.77778 0.46661 lineto
Mistroke
0.81746 0.4041 lineto
0.85714 0.32833 lineto
0.89683 0.23861 lineto
0.93651 0.1343 lineto
0.97619 0.01472 lineto
Mfstroke
grestore
grestore
gsave
0.5 setgray
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.06349 0.07658 lineto
0.10317 0.1384 lineto
0.14286 0.1999 lineto
0.18254 0.26048 lineto
0.22222 0.31917 lineto
0.2619 0.37473 lineto
0.30159 0.42581 lineto
0.34127 0.47121 lineto
0.38095 0.51005 lineto
0.42063 0.54191 lineto
0.46032 0.56672 lineto
0.48016 0.57653 lineto
0.5 0.58464 lineto
0.51984 0.59106 lineto
0.52976 0.59363 lineto
0.53968 0.59577 lineto
0.5496 0.59747 lineto
0.55952 0.59873 lineto
0.56448 0.59919 lineto
0.56696 0.59938 lineto
0.56944 0.59954 lineto
0.57192 0.59967 lineto
0.57316 0.59972 lineto
0.5744 0.59977 lineto
0.57564 0.5998 lineto
0.57688 0.59983 lineto
0.57813 0.59986 lineto
0.57937 0.59987 lineto
0.58061 0.59988 lineto
0.58185 0.59988 lineto
0.58309 0.59988 lineto
0.58433 0.59986 lineto
0.58557 0.59984 lineto
0.58681 0.59981 lineto
0.58929 0.59973 lineto
0.59177 0.59961 lineto
0.59425 0.59946 lineto
0.59921 0.59908 lineto
0.60417 0.59856 lineto
0.60913 0.5979 lineto
0.61905 0.59618 lineto
0.62897 0.59389 lineto
0.63889 0.59101 lineto
0.65873 0.58333 lineto
0.67857 0.5729 lineto
0.69841 0.55948 lineto
0.7381 0.52269 lineto
0.77778 0.47134 lineto
0.81746 0.40463 lineto
Mistroke
0.85714 0.32302 lineto
0.89683 0.22839 lineto
0.93651 0.12413 lineto
0.97619 0.01472 lineto
Mfstroke
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 177 2475 a Fi(Fig)p Fq(.)15 b(43.)k(The)d(function)g
Fh(x)p Fq(\()p Fh(\031)11 b Fg(\000)f Fh(x)p Fq(\)\()p Fh(\031)h
Fq(+)g Fh(x)p Fq(\))k(and)g(its)g(four)g(term)g(F)l(ourier)g(appro)o
(ximation.)75 2579 y Fn(Exercise)e(4.)18 b Fq(Something)13
b(lik)o(e)f Fh(n)h Fq(=)g(6)e(giv)o(es)h(a)f(go)q(o)q(d)g(visual)i(\014t.)18
b Fn(Tip)p Fq(|T)l(o)12 b(a)o(v)o(oid)f(the)h(error)e(messages)75
2629 y(\(e.g.,)k(in)i(making)f(an)g(animation)h(as)f(ab)q(o)o(v)o(e\),)f
(rede\014ne)i Fh(f)5 b Fq(\(0\))14 b(lik)o(e)j(this:)p eop
%%Page: 73 73
73 72 bop 75 -103 a Fm(F)-6 b(ourier)23 b(F)-6 b(requency)23
b(Decomp)r(osition)p 75 -85 1017 2 v 736 w Fq(73)75 49 y Fj(f[x_])e(:=)g(x^2)
g(Cot[x/2])f(/;)i(x)f(!=)h(0)75 99 y(f[x_])f(:=)g(0)h(/;)f(x)h(==)f(0)75
203 y Fn(Exercise)c(5.)j Fq(The)15 b(follo)o(wing)h(co)q(de)g(pro)q(duces)g
(Figure)g(44.)75 289 y Fj(n)22 b(=)f(6;)75 339 y(Table[c[k])f(=)h(b[k])g(/)h
(\(8)f(-)h(k^2\),)f({k,)g(1,)g(n}];)75 389 y(yn)g(=)h(Sum[c[k])e(Sin[k)h(x],)
g({k,)g(1,)h(n}];)75 438 y(Plot[{yn,)e(f[n,)h(x]},)g({x,)g(0,)g(Pi},)162
488 y(PlotStyle)f(->)h({GrayLevel[0],)e(GrayLevel[0.5]},)162
538 y(PlotLabel)h(->)h(label)75 588 y(])639 1086 y @beginspecial
0 @llx 0 @lly 282 @urx 174 @ury 1614 @rwi @setspecial
%%BeginDocument: Fou.ysoln.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.02381 0.303152 0.068893 1.02851 [
[(0.5)] 0.17539 0.06889 0 2 Msboxa
[(1)] 0.32696 0.06889 0 2 Msboxa
[(1.5)] 0.47854 0.06889 0 2 Msboxa
[(2)] 0.63011 0.06889 0 2 Msboxa
[(2.5)] 0.78169 0.06889 0 2 Msboxa
[(3)] 0.93327 0.06889 0 2 Msboxa
[(0.1)] 0.01131 0.17174 1 0 Msboxa
[(0.2)] 0.01131 0.2746 1 0 Msboxa
[(0.3)] 0.01131 0.37745 1 0 Msboxa
[(0.4)] 0.01131 0.4803 1 0 Msboxa
[(0.5)] 0.01131 0.58315 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.17539 0.06889 moveto
0.17539 0.07514 lineto
stroke
grestore
[(0.5)] 0.17539 0.06889 0 2 Mshowa
gsave
0.002 setlinewidth
0.32696 0.06889 moveto
0.32696 0.07514 lineto
stroke
grestore
[(1)] 0.32696 0.06889 0 2 Mshowa
gsave
0.002 setlinewidth
0.47854 0.06889 moveto
0.47854 0.07514 lineto
stroke
grestore
[(1.5)] 0.47854 0.06889 0 2 Mshowa
gsave
0.002 setlinewidth
0.63011 0.06889 moveto
0.63011 0.07514 lineto
stroke
grestore
[(2)] 0.63011 0.06889 0 2 Mshowa
gsave
0.002 setlinewidth
0.78169 0.06889 moveto
0.78169 0.07514 lineto
stroke
grestore
[(2.5)] 0.78169 0.06889 0 2 Mshowa
gsave
0.002 setlinewidth
0.93327 0.06889 moveto
0.93327 0.07514 lineto
stroke
grestore
[(3)] 0.93327 0.06889 0 2 Mshowa
gsave
0.001 setlinewidth
0.05412 0.06889 moveto
0.05412 0.07264 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.08444 0.06889 moveto
0.08444 0.07264 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11476 0.06889 moveto
0.11476 0.07264 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.14507 0.06889 moveto
0.14507 0.07264 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2057 0.06889 moveto
0.2057 0.07264 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.23602 0.06889 moveto
0.23602 0.07264 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.26633 0.06889 moveto
0.26633 0.07264 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29665 0.06889 moveto
0.29665 0.07264 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35728 0.06889 moveto
0.35728 0.07264 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38759 0.06889 moveto
0.38759 0.07264 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.41791 0.06889 moveto
0.41791 0.07264 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44822 0.06889 moveto
0.44822 0.07264 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.50885 0.06889 moveto
0.50885 0.07264 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53917 0.06889 moveto
0.53917 0.07264 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56948 0.06889 moveto
0.56948 0.07264 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5998 0.06889 moveto
0.5998 0.07264 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.66043 0.06889 moveto
0.66043 0.07264 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69074 0.06889 moveto
0.69074 0.07264 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72106 0.06889 moveto
0.72106 0.07264 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.75137 0.06889 moveto
0.75137 0.07264 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81201 0.06889 moveto
0.81201 0.07264 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84232 0.06889 moveto
0.84232 0.07264 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.87264 0.06889 moveto
0.87264 0.07264 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90295 0.06889 moveto
0.90295 0.07264 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.96358 0.06889 moveto
0.96358 0.07264 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9939 0.06889 moveto
0.9939 0.07264 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.06889 moveto
1 0.06889 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0.17174 moveto
0.03006 0.17174 lineto
stroke
grestore
[(0.1)] 0.01131 0.17174 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.2746 moveto
0.03006 0.2746 lineto
stroke
grestore
[(0.2)] 0.01131 0.2746 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.37745 moveto
0.03006 0.37745 lineto
stroke
grestore
[(0.3)] 0.01131 0.37745 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.4803 moveto
0.03006 0.4803 lineto
stroke
grestore
[(0.4)] 0.01131 0.4803 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.58315 moveto
0.03006 0.58315 lineto
stroke
grestore
[(0.5)] 0.01131 0.58315 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.08946 moveto
0.02756 0.08946 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.11003 moveto
0.02756 0.11003 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.1306 moveto
0.02756 0.1306 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.15117 moveto
0.02756 0.15117 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.19231 moveto
0.02756 0.19231 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.21288 moveto
0.02756 0.21288 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.23345 moveto
0.02756 0.23345 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.25402 moveto
0.02756 0.25402 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.29517 moveto
0.02756 0.29517 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.31574 moveto
0.02756 0.31574 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.33631 moveto
0.02756 0.33631 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.35688 moveto
0.02756 0.35688 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.39802 moveto
0.02756 0.39802 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.41859 moveto
0.02756 0.41859 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.43916 moveto
0.02756 0.43916 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.45973 moveto
0.02756 0.45973 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.50087 moveto
0.02756 0.50087 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.52144 moveto
0.02756 0.52144 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.54201 moveto
0.02756 0.54201 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.56258 moveto
0.02756 0.56258 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.04832 moveto
0.02756 0.04832 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.02775 moveto
0.02756 0.02775 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.00718 moveto
0.02756 0.00718 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.60372 moveto
0.02756 0.60372 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.06889 moveto
0.06349 0.04028 lineto
0.08333 0.02862 lineto
0.09325 0.02388 lineto
0.10317 0.02002 lineto
0.10813 0.01845 lineto
0.1131 0.01714 lineto
0.11806 0.0161 lineto
0.12054 0.01569 lineto
0.12302 0.01535 lineto
0.1255 0.01508 lineto
0.12798 0.01488 lineto
0.12922 0.01481 lineto
0.13046 0.01476 lineto
0.1317 0.01473 lineto
0.13294 0.01472 lineto
0.13418 0.01472 lineto
0.13542 0.01475 lineto
0.13666 0.0148 lineto
0.1379 0.01486 lineto
0.14038 0.01505 lineto
0.14286 0.01533 lineto
0.14534 0.01568 lineto
0.14782 0.01612 lineto
0.15278 0.01725 lineto
0.15774 0.01871 lineto
0.1627 0.02053 lineto
0.17262 0.02521 lineto
0.18254 0.03133 lineto
0.20238 0.04793 lineto
0.22222 0.07028 lineto
0.2619 0.13112 lineto
0.30159 0.20956 lineto
0.34127 0.2986 lineto
0.38095 0.3895 lineto
0.42063 0.47297 lineto
0.44048 0.50919 lineto
0.46032 0.54047 lineto
0.48016 0.56601 lineto
0.49008 0.57644 lineto
0.5 0.58522 lineto
0.50992 0.5923 lineto
0.51488 0.59519 lineto
0.51984 0.59765 lineto
0.5248 0.59967 lineto
0.52976 0.60124 lineto
0.53472 0.60238 lineto
0.5372 0.60278 lineto
0.53844 0.60294 lineto
0.53968 0.60307 lineto
Mistroke
0.54092 0.60317 lineto
0.54216 0.60325 lineto
0.5434 0.6033 lineto
0.54464 0.60332 lineto
0.54588 0.60331 lineto
0.54712 0.60328 lineto
0.54836 0.60322 lineto
0.5496 0.60313 lineto
0.55208 0.60287 lineto
0.55456 0.6025 lineto
0.55704 0.60202 lineto
0.55952 0.60143 lineto
0.56448 0.59993 lineto
0.56944 0.598 lineto
0.57937 0.59288 lineto
0.58929 0.58612 lineto
0.59921 0.57776 lineto
0.61905 0.55659 lineto
0.65873 0.49894 lineto
0.69841 0.42686 lineto
0.7381 0.34857 lineto
0.77778 0.27237 lineto
0.81746 0.20533 lineto
0.85714 0.152 lineto
0.87698 0.131 lineto
0.89683 0.11358 lineto
0.93651 0.08768 lineto
0.97619 0.06889 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 532 1172 a Fi(Fig)p Fq(.)15 b(44.)20 b(The)15
b(six)h(term)e(appro)o(ximate)h(solution.)639 1664 y @beginspecial
0 @llx 0 @lly 282 @urx 174 @ury 1614 @rwi @setspecial
%%BeginDocument: Fou.ydiff.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.02381 0.303152 0.244861 455.491073 [
[(0.5)] 0.17539 0.24486 0 2 Msboxa
[(1)] 0.32696 0.24486 0 2 Msboxa
[(1.5)] 0.47854 0.24486 0 2 Msboxa
[(2)] 0.63011 0.24486 0 2 Msboxa
[(2.5)] 0.78169 0.24486 0 2 Msboxa
[(3)] 0.93327 0.24486 0 2 Msboxa
[(-0.0004)] 0.01131 0.06266 1 0 Msboxa
[(-0.0002)] 0.01131 0.15376 1 0 Msboxa
[(0.0002)] 0.01131 0.33596 1 0 Msboxa
[(0.0004)] 0.01131 0.42706 1 0 Msboxa
[(0.0006)] 0.01131 0.51816 1 0 Msboxa
[(0.0008)] 0.01131 0.60925 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.17539 0.24486 moveto
0.17539 0.25111 lineto
stroke
grestore
[(0.5)] 0.17539 0.24486 0 2 Mshowa
gsave
0.002 setlinewidth
0.32696 0.24486 moveto
0.32696 0.25111 lineto
stroke
grestore
[(1)] 0.32696 0.24486 0 2 Mshowa
gsave
0.002 setlinewidth
0.47854 0.24486 moveto
0.47854 0.25111 lineto
stroke
grestore
[(1.5)] 0.47854 0.24486 0 2 Mshowa
gsave
0.002 setlinewidth
0.63011 0.24486 moveto
0.63011 0.25111 lineto
stroke
grestore
[(2)] 0.63011 0.24486 0 2 Mshowa
gsave
0.002 setlinewidth
0.78169 0.24486 moveto
0.78169 0.25111 lineto
stroke
grestore
[(2.5)] 0.78169 0.24486 0 2 Mshowa
gsave
0.002 setlinewidth
0.93327 0.24486 moveto
0.93327 0.25111 lineto
stroke
grestore
[(3)] 0.93327 0.24486 0 2 Mshowa
gsave
0.001 setlinewidth
0.05412 0.24486 moveto
0.05412 0.24861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.08444 0.24486 moveto
0.08444 0.24861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11476 0.24486 moveto
0.11476 0.24861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.14507 0.24486 moveto
0.14507 0.24861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2057 0.24486 moveto
0.2057 0.24861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.23602 0.24486 moveto
0.23602 0.24861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.26633 0.24486 moveto
0.26633 0.24861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29665 0.24486 moveto
0.29665 0.24861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35728 0.24486 moveto
0.35728 0.24861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38759 0.24486 moveto
0.38759 0.24861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.41791 0.24486 moveto
0.41791 0.24861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44822 0.24486 moveto
0.44822 0.24861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.50885 0.24486 moveto
0.50885 0.24861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53917 0.24486 moveto
0.53917 0.24861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56948 0.24486 moveto
0.56948 0.24861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5998 0.24486 moveto
0.5998 0.24861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.66043 0.24486 moveto
0.66043 0.24861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69074 0.24486 moveto
0.69074 0.24861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72106 0.24486 moveto
0.72106 0.24861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.75137 0.24486 moveto
0.75137 0.24861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81201 0.24486 moveto
0.81201 0.24861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84232 0.24486 moveto
0.84232 0.24861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.87264 0.24486 moveto
0.87264 0.24861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90295 0.24486 moveto
0.90295 0.24861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.96358 0.24486 moveto
0.96358 0.24861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9939 0.24486 moveto
0.9939 0.24861 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.24486 moveto
1 0.24486 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0.06266 moveto
0.03006 0.06266 lineto
stroke
grestore
[(-0.0004)] 0.01131 0.06266 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.15376 moveto
0.03006 0.15376 lineto
stroke
grestore
[(-0.0002)] 0.01131 0.15376 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.33596 moveto
0.03006 0.33596 lineto
stroke
grestore
[(0.0002)] 0.01131 0.33596 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.42706 moveto
0.03006 0.42706 lineto
stroke
grestore
[(0.0004)] 0.01131 0.42706 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.51816 moveto
0.03006 0.51816 lineto
stroke
grestore
[(0.0006)] 0.01131 0.51816 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.60925 moveto
0.03006 0.60925 lineto
stroke
grestore
[(0.0008)] 0.01131 0.60925 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.08088 moveto
0.02756 0.08088 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.0991 moveto
0.02756 0.0991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.11732 moveto
0.02756 0.11732 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.13554 moveto
0.02756 0.13554 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.17198 moveto
0.02756 0.17198 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.1902 moveto
0.02756 0.1902 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.20842 moveto
0.02756 0.20842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.22664 moveto
0.02756 0.22664 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.26308 moveto
0.02756 0.26308 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.2813 moveto
0.02756 0.2813 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.29952 moveto
0.02756 0.29952 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.31774 moveto
0.02756 0.31774 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.35418 moveto
0.02756 0.35418 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.3724 moveto
0.02756 0.3724 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.39062 moveto
0.02756 0.39062 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.40884 moveto
0.02756 0.40884 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.44528 moveto
0.02756 0.44528 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.4635 moveto
0.02756 0.4635 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.48172 moveto
0.02756 0.48172 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.49994 moveto
0.02756 0.49994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.53638 moveto
0.02756 0.53638 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.55459 moveto
0.02756 0.55459 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.57281 moveto
0.02756 0.57281 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.59103 moveto
0.02756 0.59103 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.04444 moveto
0.02756 0.04444 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.02623 moveto
0.02756 0.02623 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.00801 moveto
0.02756 0.00801 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.24486 moveto
0.02629 0.24487 lineto
0.02753 0.24487 lineto
0.02877 0.24487 lineto
0.03001 0.24489 lineto
0.03125 0.24491 lineto
0.03249 0.24495 lineto
0.03373 0.24499 lineto
0.03621 0.24511 lineto
0.03745 0.24519 lineto
0.03869 0.24529 lineto
0.04117 0.24553 lineto
0.04365 0.24585 lineto
0.04861 0.24674 lineto
0.05109 0.24734 lineto
0.05357 0.24805 lineto
0.05853 0.24988 lineto
0.06349 0.25226 lineto
0.07341 0.25896 lineto
0.07837 0.26335 lineto
0.08333 0.26849 lineto
0.10317 0.29671 lineto
0.12302 0.33634 lineto
0.14286 0.38407 lineto
0.1627 0.43397 lineto
0.18254 0.47893 lineto
0.19246 0.49723 lineto
0.19742 0.50496 lineto
0.20238 0.51161 lineto
0.20734 0.51708 lineto
0.20982 0.51935 lineto
0.2123 0.52131 lineto
0.21478 0.52294 lineto
0.21726 0.52422 lineto
0.21974 0.52517 lineto
0.22098 0.52551 lineto
0.22222 0.52576 lineto
0.22346 0.52593 lineto
0.2247 0.526 lineto
0.22594 0.52599 lineto
0.22718 0.52588 lineto
0.22842 0.52569 lineto
0.22966 0.5254 lineto
0.2309 0.52502 lineto
0.23214 0.52455 lineto
0.23462 0.52333 lineto
0.2371 0.52174 lineto
0.24206 0.51745 lineto
0.24702 0.51169 lineto
0.25198 0.50447 lineto
Mistroke
0.2619 0.48582 lineto
0.28175 0.43336 lineto
0.30159 0.3657 lineto
0.34127 0.21725 lineto
0.36111 0.15382 lineto
0.37103 0.12804 lineto
0.38095 0.10703 lineto
0.38591 0.09844 lineto
0.39087 0.09116 lineto
0.39583 0.08519 lineto
0.40079 0.08054 lineto
0.40327 0.0787 lineto
0.40575 0.07718 lineto
0.40823 0.07598 lineto
0.40947 0.07549 lineto
0.41071 0.07508 lineto
0.41195 0.07475 lineto
0.41319 0.07449 lineto
0.41443 0.07431 lineto
0.41567 0.07419 lineto
0.41691 0.07415 lineto
0.41815 0.07418 lineto
0.41939 0.07428 lineto
0.42063 0.07445 lineto
0.42188 0.07469 lineto
0.42312 0.07499 lineto
0.4256 0.07578 lineto
0.42808 0.07682 lineto
0.43056 0.0781 lineto
0.44048 0.08532 lineto
0.4504 0.09522 lineto
0.46032 0.10683 lineto
0.48016 0.13098 lineto
0.49008 0.14145 lineto
0.49504 0.14591 lineto
0.5 0.14971 lineto
0.50496 0.15276 lineto
0.50744 0.15398 lineto
0.50992 0.15498 lineto
0.51116 0.15539 lineto
0.5124 0.15575 lineto
0.51364 0.15606 lineto
0.51488 0.1563 lineto
0.51612 0.15648 lineto
0.51736 0.15661 lineto
0.5186 0.15667 lineto
0.51984 0.15667 lineto
0.52108 0.15661 lineto
0.52232 0.15649 lineto
0.52356 0.1563 lineto
Mistroke
0.5248 0.15605 lineto
0.52728 0.15537 lineto
0.52976 0.15444 lineto
0.53472 0.15183 lineto
0.53968 0.14824 lineto
0.5496 0.13821 lineto
0.55952 0.12481 lineto
0.57937 0.09085 lineto
0.59921 0.05436 lineto
0.60913 0.03832 lineto
0.61409 0.03143 lineto
0.61905 0.02553 lineto
0.62401 0.02075 lineto
0.62649 0.01884 lineto
0.62897 0.01727 lineto
0.63021 0.01662 lineto
0.63145 0.01606 lineto
0.63269 0.0156 lineto
0.63393 0.01523 lineto
0.63517 0.01496 lineto
0.63641 0.01479 lineto
0.63765 0.01472 lineto
0.63889 0.01475 lineto
0.64013 0.01489 lineto
0.64137 0.01513 lineto
0.64261 0.01549 lineto
0.64385 0.01595 lineto
0.64633 0.01721 lineto
0.64881 0.01892 lineto
0.65377 0.02376 lineto
0.65873 0.03052 lineto
0.66369 0.03925 lineto
0.66865 0.04997 lineto
0.67857 0.07737 lineto
0.69841 0.15442 lineto
0.7381 0.3659 lineto
0.75794 0.47155 lineto
0.76786 0.51679 lineto
0.77778 0.55422 lineto
0.78274 0.56942 lineto
0.7877 0.582 lineto
0.79266 0.59179 lineto
0.79514 0.59559 lineto
0.79762 0.59865 lineto
0.8001 0.60095 lineto
0.80134 0.60181 lineto
0.80258 0.60248 lineto
0.80382 0.60296 lineto
0.80506 0.60324 lineto
0.8063 0.60332 lineto
Mistroke
0.80754 0.60321 lineto
0.80878 0.6029 lineto
0.81002 0.60239 lineto
0.81126 0.60169 lineto
0.8125 0.60079 lineto
0.81498 0.5984 lineto
0.81746 0.59522 lineto
0.82242 0.58655 lineto
0.82738 0.57487 lineto
0.8373 0.54303 lineto
0.84722 0.50119 lineto
0.85714 0.45157 lineto
0.87698 0.34055 lineto
0.8869 0.28605 lineto
0.89683 0.23725 lineto
0.90675 0.19789 lineto
0.91171 0.18284 lineto
0.91419 0.17664 lineto
0.91667 0.17138 lineto
0.91915 0.16711 lineto
0.92039 0.16535 lineto
0.92163 0.16385 lineto
0.92287 0.16261 lineto
0.92411 0.16164 lineto
0.92535 0.16094 lineto
0.92659 0.1605 lineto
0.92783 0.16035 lineto
0.92907 0.16047 lineto
0.93031 0.16086 lineto
0.93155 0.16154 lineto
0.93279 0.1625 lineto
0.93403 0.16374 lineto
0.93651 0.16708 lineto
0.93899 0.17154 lineto
0.94147 0.17712 lineto
0.94643 0.1916 lineto
0.95139 0.21028 lineto
0.95635 0.23284 lineto
0.97619 0.34966 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 281 1751 a Fi(Fig)p Fq(.)g(45.)k(The)d(exact)f(solution)g(min)o
(us)h(the)g(six)f(term)g(appro)o(ximate)g(solution.)146 1849
y(The)g(follo)o(wing)h(co)q(de)g(pro)q(duces)g(Figure)f(45.)75
1935 y Fj(f[x_])21 b(:=)g(x^2)g(Cot[x/2])f(/;)i(x)f(!=)h(0)75
1985 y(f[x_])f(:=)g(0)h(/;)f(x)h(==)f(0)75 2035 y(n)h(=)f(6;)h(pi)f(=)h
(N[Pi];)75 2085 y(Table[b[k])e(=)h(2/pi)g(NIntegrate[f[x])e(Sin[k)i(x],)g
({x,)g(0,)g(pi}],)g({k,)g(1,)h(n}];)75 2134 y(Table[c[k])e(=)h(b[k])g(/)h
(\(8)f(-)h(k^2\),)f({k,)g(1,)g(n}];)75 2184 y(yn)g(=)h(Sum[c[k])e(Sin[k)h
(x],)g({k,)g(1,)h(n}];)75 2234 y(yp0)f(=)h(Sum[k)f(c[k],)f({k,)h(1,)h(n}];)75
2284 y(soln)f(=)h(NDSolve[)162 2334 y({y''[x])f(+)g(8)h(y[x])f(==)g(f[x],)162
2384 y(y[0])g(==)h(0,)f(y'[0])g(==)g(yp0},)162 2433 y(y,)h({x,)f(0,)g(Pi})75
2483 y(];)75 2533 y(\(*)g(Plot[Evaluate[y[x]/)o(.)e(soln],)i({x,)g(0,)g(Pi}])
g(*\))75 2583 y(Plot[Evaluate[y[x)o(]/.)e(soln])h(-)i(yn,)f({x,)g(0,)h(Pi}])p
eop
%%Page: 74 74
74 73 bop 75 -100 a Fq(74)1142 b Fm(The)23 b(Piston)f(Problem)p
1263 -93 612 2 v 606 49 a Fn(PURPOSE)c(OF)g(THE)g(PR)o(OJECT)146
152 y Fq(This)f(pro)s(ject)f(has)g(sev)o(eral)h(in)o(teresting)g(features.)24
b(It)16 b(has)h(the)g(studen)o(ts)f(think)h(ab)q(out)g(the)f(rela-)75
208 y(tionship)k(b)q(et)o(w)o(een)f(angular)f(and)h(linear)h(mo)o(v)o(emen)o
(t)d(and)i(v)o(elo)q(cit)o(y)l(,)h(it)f(asks)f(for)f(some)i(conjectures)75
265 y(regarding)d(a)f(practical)i(and)e(non)o(triv)m(al)i(mec)o(hanical)g
(system;)e(and)h(it)g(lea)o(v)o(es)g(ro)q(om)f(for)g(some)g(exp)q(er-)75
321 y(imen)o(tation)h(and)g(p)q(ondering.)24 b(The)16 b Fl(Mathematic)n(a)g
Fq(requiremen)o(ts)h(are)f(minimal,)h(but)f(the)g(graphical)75
378 y(features)f(are)g(indisp)q(ensable.)577 504 y Fn(ANSWERS)i(F)o(OR)h
(INSTR)o(UCTORS)75 607 y(Exercise)f(1.)j Fh(P)i Fq(mo)o(v)o(es)14
b(at)h(2)f(ft/sec)h(\(assuming)g(the)h(radius)f(is)h(in)g(feet\).)75
663 y(T)l(o)h(get)f(expression)i(for)e Fh(q)r Fq(,)h(start)e(with)i
Fh(L)811 646 y Fe(2)846 663 y Fq(=)f Fh(x)923 646 y Fe(2)954
663 y Fq(+)11 b(\()p Fh(q)i Fg(\000)f Fh(y)r Fq(\))1140 646
y Fe(2)1176 663 y Fq(and)17 b(use)g(the)g(fact)f(that)g Fh(P)22
b Fq(=)16 b(\()p Fh(x;)8 b(y)r Fq(\))14 b(=)75 719 y(\(cos)7
b(2)p Fh(t;)h Fq(sin)g(2)p Fh(t)p Fq(\).)75 776 y(See)16 b
Fh(q)178 759 y Fb(0)205 776 y Fq(in)g(Exercise)g(3.)75 853
y Fn(Exercise)j(2.)k Fq(T)o(ypical)18 b(resp)q(onses.)24 b(I)16
b(exp)q(ect)i Fh(q)g Fq(to)e(mo)o(v)o(e)f(up)i(and)g(do)o(wn)f(m)o(uc)o(h)g
(lik)o(e)i(as)e(in)h(a)f(mass-)75 910 y(spring;)g(and)g(w)o(ould)g(exp)q(ect)
g Fh(q)613 893 y Fb(0)641 910 y Fq(to)f(reac)o(h)g(its)h(max)f(of)g(2.0)g
(when)h Fh(P)k Fq(=)14 b(\(1)p Fh(;)8 b Fq(0\),)13 b(since)k(at)e(that)g(p)q
(oin)o(t)h Fh(Q)75 966 y Fq(is)g(mo)o(ving)f(in)i(parallel)g(with)e
Fh(P)6 b Fq(.)21 b(When)16 b Fh(L)f Fq(is)h(close)g(to)f(1.0,)f(it)i(is)g
(hard)f(to)g(visualize)j(the)d(mo)o(v)o(emen)o(t,)75 1022 y(but)g
Fh(q)i Fq(will)g(v)m(ary)e(from)g(a)g(small)h(p)q(ositiv)o(e)g(v)m(alue)g(to)
f(sligh)o(tly)h(larger)f(than)g(1.0.)75 1093 y Fn(Exercise)i(3.)75
1201 y Fj(q[t_])k(:=)g(Sin[2t])f(+)i(Sqrt[L^2)e(-)i(Cos[2t]^2])75
1301 y(q'[t])f(=)g(2)h(Cos[2t])e(\(1)i(+)f(Sin[2t])g(/)g(Sqrt[L^2)f(-)i
(Cos[2t]^2]\))146 1436 y Fq(Here)15 b(are)g(some)g(useful)h(plot)g(commands:)
75 1556 y Fj(L)22 b(=)f(2;)75 1606 y(Plot[{q[t],)f(q'[t]},)g({t,)h(0,)g
(2Pi},)140 1656 y(PlotStyle)f(->)i({GrayLevel[0],)d(GrayLevel[.5]}])75
1756 y(L)j(=)f(1.01;)75 1805 y(Plot[{q[t],)f(q'[t]},)g({t,)h(0,)g(2Pi},)140
1855 y(PlotStyle)f(->)i({GrayLevel[0],)d(GrayLevel[.5]}])75
1982 y Fn(Exercise)e(5.)j Fq(T)l(aking)c Fh(L)f Fq(v)o(ery)g(close)g(to)g
(1.0)f(leads)i(one)f(to)g(exp)q(ect)h(this)f(limit)i(is)f(4.0.)75
2059 y Fn(Exercise)21 b(6.)29 b Fq(T)l(o)18 b(pro)o(v)o(e)g(that)f(the)i(ab)q
(o)o(v)o(e)f(limit)h(is)g(4.0)f(is)g(a)g(di\016cult)i(c)o(hore.)29
b(Careful)19 b(insp)q(ection)75 2116 y(sho)o(ws)d(that)f Fh(q)328
2099 y Fb(0)356 2116 y Fq(tak)o(es)g(on)h(its)g(max)g(closer)h(and)f(closer)h
(to)e Fh(t)g Fq(=)f(0)i(as)g Fh(L)g Fq(approac)o(hes)g(1.0;)f(so)h(a)g
(double)75 2172 y(\(or)g(coupled\))i(limit)g(is)g(called)g(for.)25
b(Enough)17 b(p)q(ersistence)h(con)o(vinces)g(one)f(that)f(the)h(limit)i(is)e
(indeed)75 2229 y(4.0.)p eop
%%Page: 75 75
75 74 bop 75 -103 a Fm(In)n(tegration)23 b(in)f(Mathematica)p
75 -85 834 2 v 920 w Fq(75)606 49 y Fn(PURPOSE)c(OF)g(THE)g(PR)o(OJECT)146
153 y Fq(While)h(the)e(text)h(treats)e(the)i(classical)h(in)o(tegration)f
(tec)o(hniques,)h(this)g(pro)s(ject)d(and)i(the)g(one)g(on)75
209 y Fl(T)m(e)n(chniques)11 b(of)h(Inte)n(gr)n(ation)i Fq(review)e(and)f
(extend)h(the)f Fl(Mathematic)n(a)s Fq(-based)i(metho)q(ds)e(for)g(doing)g
(in)o(te-)75 266 y(grations.)19 b(This)c(pro)s(ject)f(discusses)h(some)f
Fl(Mathematic)n(a)19 b Fq(issues)c(at)f(a)g(higher)h(lev)o(el)h(than)e
(previously)l(.)75 322 y(W)l(e)h(think)h(it)g(is)f(an)h(appropriate)f(momen)o
(t)f(for)h(this.)75 400 y Fn(Shorter)i(Pro)s(ject)p Fq(:)j(Omit)15
b(Exercise)h(5)f(on)g(Newton's)g(metho)q(d.)75 477 y Fn(Instructor)23
b(Note)p Fq(:)52 b(It)21 b(migh)o(t)g(spice)h(up)f(the)g(lectures)g(to)f
(discuss)i(the)f(Euler)h(form)o(ula)e Fh(e)1765 461 y Ff(iax)1840
477 y Fq(=)75 534 y(cos)7 b Fh(ax)k Fq(+)f Fh(i)e Fq(sin)g
Fh(ax)15 b Fq(and)h(its)g(application)h(to)e(ev)m(aluating)h
Fl(r)n(e)n(al)k Fq(in)o(tegrals.)g(T)l(o)c(em)o(ulate)f(this)h(in)h
Fl(Mathe-)75 590 y(matic)n(a)s Fq(,)f(y)o(ou)e(need)i(the)g
Fk(ComplexExpand)d Fq(command.)20 b(See)c(the)f(discussion)i(of)e(Exercise)h
(2)f(b)q(elo)o(w.)577 719 y Fn(ANSWERS)i(F)o(OR)h(INSTR)o(UCTORS)75
823 y(Exercise)e(1.)341 788 y Fd(R)369 801 y Ff(x)361 836 y
Fe(0)398 823 y Fq(sin)9 b Fh(t)f(dt)k Fq(=)h(1)7 b Fg(\000)g
Fq(cos)i Fh(x)p Fq(.)19 b(Oh,)14 b(ho.)20 b(W)l(e)14 b(see)g(that)f(this)h
(remains)h(non-negativ)o(e)f(b)q(ecause)75 879 y(at)h(w)o(orst,)g(cos)7
b Fh(x)14 b Fq(=)g(1.)22 b(So,)16 b(it)g(is)g(the)g(c)o(hoice)h(of)f(lo)o(w)o
(er)f(limit)j(0)d(that)h(pro)o(vides)g(the)g(magic.)22 b(The)17
b(area)75 935 y(explanation)d(is)g(that)e(w)o(e)h(pile)i(up)e(the)g(full)i
(amoun)o(t)d(under)i(the)f(p)q(ositiv)o(e)h(lob)q(e)g(of)f(the)g(function)h
(b)q(efore)75 992 y(w)o(e)g(b)q(egin)h(subtracting)f(o\013)f(the)h(symmetric)
h(negativ)o(e)f(lob)q(e.)20 b(Th)o(us,)14 b(at)f(the)h(end)h(of)f(a)f(p)q
(erio)q(d)j(w)o(e)d(only)75 1048 y(mak)o(e)i(it)g(bac)o(k)g(to)g(zero)g(area)
f(and)i(that's)e(wh)o(y)h(the)g(function)h(nev)o(er)f(b)q(ecomes)h(negativ)o
(e.)75 1126 y Fn(Exercise)f(2.)k Fq(W)l(e)13 b(recommend)g(giving)h(substan)o
(tial)g(or)e(full)i(credit)g(for)f(a)f(clear)i(road)e(map)h(ev)o(en)h(if)f
(all)75 1182 y(steps)i(are)g(not)f(carried)i(out.)j(F)l(ollo)o(wing)d(is)f
(the)g Fl(Mathematic)n(a)k Fq(approac)o(h)c(along)g(with)g(an)g(indication)75
1239 y(of)g(the)g(hand)h(approac)o(h.)126 1361 y(a\))22 b(Hand)15
b(metho)q(d:)20 b Fh(u)13 b Fq(=)g Fh(x)607 1345 y Fe(4)637
1361 y Fq(+)d(1)15 b(and)g(use)h Fh(x)913 1345 y Fe(8)945 1361
y Fq(=)d(\()p Fh(u)d Fg(\000)g Fq(1\))1133 1345 y Fe(2)1153
1361 y Fq(.)189 1470 y Fj(f[x_])20 b(:=)i(x^11)f(\(x^4)g(+)g(1\)^\(1/3\))189
1519 y(Integrate[f[x],)d(x])755 1619 y(4)131 b(8)f(12)407 1669
y(4)21 b(1/3)43 b(27)87 b(9)21 b(x)87 b(3)22 b(x)87 b(3)22
b(x)276 1719 y(\(1)f(+)h(x)f(\))87 b(\(---)21 b(-)h(----)f(+)g(----)g(+)h
(-----\))559 1768 y(560)65 b(560)86 b(280)109 b(40)123 1896
y Fq(b\))23 b(Hand)17 b(metho)q(d:)24 b Fh(u)16 b Fq(=)h Fh(e)615
1880 y Fe(2)p Ff(x)654 1896 y Fq(,)h Fh(du)d Fq(=)i(2)p Fh(e)846
1880 y Fe(2)p Ff(x)885 1896 y Fh(dx)f Fq(=)-8 b Fg(\))17 b
Fh(dx)e Fq(=)i Fh(du=)p Fq(\(2)p Fh(u)p Fq(\).)24 b(This)18
b(leads)g(immediately)h(to)194 1933 y Fe(1)p 194 1940 18 2
v 194 1967 a(2)224 1951 y Fq(arcsec)7 b Fh(u)k Fq(+)f Fh(C)s
Fq(.)189 2059 y Fj(f[x_])20 b(:=)i(1/Sqrt[Exp[4x])d(-)i(1])189
2109 y(Integrate[f[x],)d(x])668 2208 y(4)k(x)276 2258 y(ArcTan[Sqrt[-1)d(+)i
(E)65 b(]])276 2308 y(----------------)o(-----)o(--)516 2358
y(2)189 2457 y(Plot[{ArcTan[Sqr)o(t[Ex)o(p[4x])18 b(-)k(1]],)f
(ArcSec[Exp[2x]]})o(,)e({x,)i(0,)h(1}])189 2572 y Fq(Note)16
b(that)g(the)h Fl(Mathematic)n(a)k Fq(answ)o(er)c(and)g(the)g(hand)g(answ)o
(er)f(di\013er.)26 b(The)17 b(indicated)i Fk(Plot)189 2629
y Fq(rev)o(eals)c(that)f(the)i(t)o(w)o(o)e(functions)i(are)e
Fl(identic)n(al)5 b Fq(.)p eop
%%Page: 76 76
76 75 bop 75 -103 a Fq(76)920 b Fm(In)n(tegration)23 b(in)f(Mathematica)p
1041 -85 834 2 v 128 49 a Fq(c\))h(If)15 b(y)o(ou)g Fl(have)k
Fq(to)14 b(do)h(it)h(b)o(y)f(hand,)g(it)h(mak)o(es)e(sense)i(to)f(\014gure)g
(out)g(the)g(general)h(case)f(\014rst:)552 168 y Fh(I)572 175
y Ff(n)608 168 y Fq(=)656 110 y Fd(Z)705 168 y Fh(x)731 149
y Ff(n)755 168 y Fh(e)776 149 y Ff(ax)824 168 y Fh(dx)d Fq(=)-8
b Fg(\))14 b Fh(I)992 175 y Ff(n)1028 168 y Fq(=)f(\(1)p Fh(=a)p
Fq(\)\()p Fh(x)1226 149 y Ff(n)1248 168 y Fh(e)1269 149 y Ff(ax)1320
168 y Fg(\000)e Fh(nI)1413 175 y Ff(n)p Fb(\000)p Fe(1)1481
168 y Fq(\))p Fh(:)189 284 y Fq(Then)k(start)f(from)h Fh(n)e
Fq(=)g(5)i(and)g(w)o(ork)f(do)o(wn|)p Fl(Mathematic)n(a)19
b Fq(got)14 b(it)h(righ)o(t)g(to)q(o:)189 390 y Fj(f[x_])20
b(:=)i(x^5)f(Exp[a)g(x])189 440 y(Integrate[f[x],)d(x])821
539 y(2)152 b(3)131 b(4)86 b(5)298 589 y(a)21 b(x)44 b(-120)64
b(120)21 b(x)65 b(60)22 b(x)87 b(20)21 b(x)87 b(5)22 b(x)87
b(x)276 639 y(E)g(\(----)21 b(+)g(-----)g(-)g(-----)g(+)h(-----)f(-)g(----)g
(+)h(--\))450 689 y(6)131 b(5)152 b(4)g(3)h(2)87 b(a)428 739
y(a)131 b(a)152 b(a)h(a)f(a)123 863 y Fq(d\))23 b(The)17 b(trig)g(ones)h(are)
f(nastier)h(b)o(y)f(hand)h(than)f(the)g(exp)q(onen)o(tial)i(one)f(unless)g(y)
o(ou)f(use)h(complex)189 913 y(metho)q(ds)d(\(see)g(follo)o(wing)h
(discussion\).)189 1019 y Fj(f[x_])k(:=)i(x^3)f(Cos[a)g(x])189
1069 y(Integrate[f[x],)d(x])472 1168 y(2)43 b(2)480 b(2)43
b(2)276 1218 y(3)21 b(\(-2)h(+)f(a)44 b(x)21 b(\))h(Cos[a)e(x])65
b(x)22 b(\(-6)f(+)h(a)43 b(x)22 b(\))f(Sin[a)g(x])276 1268
y(----------------)o(-----)o(--)e(+)i(-------------------)o(----)516
1318 y(4)544 b(3)494 1367 y(a)g(a)128 1492 y Fq(e\))23 b Fj(f[x_])d(:=)i(x^3)
f(Sin[a)g(x])189 1542 y(Integrate[f[x],)d(x])450 1641 y(2)44
b(2)479 b(2)43 b(2)276 1691 y(x)21 b(\(6)h(-)f(a)44 b(x)21
b(\))h(Cos[a)f(x])65 b(3)21 b(\(-2)g(+)h(a)43 b(x)22 b(\))g(Sin[a)e(x])276
1741 y(----------------)o(-----)o(-)f(+)j(----------------)o(----)o(---)516
1791 y(3)522 b(4)494 1841 y(a)h(a)189 1916 y Fq(Here)13 b(is)g(ho)o(w)f(to)g
(use)h(Euler)g(to)f(sim)o(ulate)h(the)g(easier)g(hand)g(calculation)i(that)c
(uses)i(the)g(complex)189 1972 y(exp)q(onen)o(tial:)189 2091
y Fj(f[x_])20 b(:=)i(x^3)f(Exp[I)g(a)g(x])189 2140 y(ans)g(=)g
(Integrate[f[x],)e(x])799 2190 y(2)130 b(3)298 2240 y(I)21
b(a)h(x)43 b(-6)65 b(6)22 b(I)f(x)65 b(3)22 b(x)87 b(I)22 b(x)276
2290 y(E)130 b(\(--)22 b(+)f(-----)g(+)g(----)g(-)h(----\))472
2340 y(4)109 b(3)152 b(2)109 b(a)450 2389 y(a)g(a)152 b(a)189
2489 y(cosint)20 b(=)i(Re[ans])e(//ComplexExpand)189 2539 y(sinint)g(=)i
(Im[ans])e(//ComplexExpand)p eop
%%Page: 77 77
77 76 bop 75 -103 a Fm(In)n(tegration)23 b(in)f(Mathematica)p
75 -85 834 2 v 920 w Fq(77)472 49 y Fj(2)479 b(3)298 99 y(-6)65
b(3)21 b(x)327 b(-6)21 b(x)65 b(x)276 149 y(\(--)21 b(+)h(----\))e(Cos[a)h
(x])g(+)h(\(----)f(+)g(--\))h(Sin[a)e(x])319 199 y(4)109 b(2)370
b(3)87 b(a)298 249 y(a)108 b(a)371 b(a)450 348 y(3)479 b(2)298
398 y(6)21 b(x)65 b(x)327 b(-6)65 b(3)22 b(x)276 448 y(\(---)f(-)g(--\))h
(Cos[a)e(x])i(+)f(\(--)g(+)h(----\))f(Sin[a)g(x])319 498 y(3)87
b(a)349 b(4)109 b(2)298 547 y(a)457 b(a)109 b(a)75 718 y Fn(Exercise)22
b(3.)31 b Fq(The)19 b(plot)g(is)h(in)g(Figure)f(46.)31 b(Near)18
b(the)h(endp)q(oin)o(ts,)i(the)e(sup)q(erarcsine)i(function)e(is)75
767 y(closer)d(to)e(the)h Fh(x)p Fq(-axis.)75 875 y Fj(Plot[{SuperArcSin)o
([x],)j(ArcSin[x]},)i({x,)h(-0.9,)g(0.9},)162 925 y(PlotStyle)f(->)h
({GrayLevel[0],)e(GrayLevel[0.5]})75 975 y(])571 1584 y @beginspecial
0 @llx 0 @lly 282 @urx 174 @ury 1937 @rwi @setspecial
%%BeginDocument: IntMma.exercise4.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.529101 0.309017 0.262824 [
[(-0.75)] 0.10317 0.30902 0 2 Msboxa
[(-0.5)] 0.23545 0.30902 0 2 Msboxa
[(-0.25)] 0.36772 0.30902 0 2 Msboxa
[(0.25)] 0.63228 0.30902 0 2 Msboxa
[(0.5)] 0.76455 0.30902 0 2 Msboxa
[(0.75)] 0.89683 0.30902 0 2 Msboxa
[(-1)] 0.4875 0.04619 1 0 Msboxa
[(-0.5)] 0.4875 0.17761 1 0 Msboxa
[(0.5)] 0.4875 0.44043 1 0 Msboxa
[(1)] 0.4875 0.57184 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.10317 0.30902 moveto
0.10317 0.31527 lineto
stroke
grestore
[(-0.75)] 0.10317 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.23545 0.30902 moveto
0.23545 0.31527 lineto
stroke
grestore
[(-0.5)] 0.23545 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.36772 0.30902 moveto
0.36772 0.31527 lineto
stroke
grestore
[(-0.25)] 0.36772 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.63228 0.30902 moveto
0.63228 0.31527 lineto
stroke
grestore
[(0.25)] 0.63228 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.76455 0.30902 moveto
0.76455 0.31527 lineto
stroke
grestore
[(0.5)] 0.76455 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.89683 0.30902 moveto
0.89683 0.31527 lineto
stroke
grestore
[(0.75)] 0.89683 0.30902 0 2 Mshowa
gsave
0.001 setlinewidth
0.12963 0.30902 moveto
0.12963 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.15608 0.30902 moveto
0.15608 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18254 0.30902 moveto
0.18254 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.20899 0.30902 moveto
0.20899 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2619 0.30902 moveto
0.2619 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.28836 0.30902 moveto
0.28836 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31481 0.30902 moveto
0.31481 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.34127 0.30902 moveto
0.34127 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.39418 0.30902 moveto
0.39418 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.42063 0.30902 moveto
0.42063 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44709 0.30902 moveto
0.44709 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.47354 0.30902 moveto
0.47354 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.52646 0.30902 moveto
0.52646 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.55291 0.30902 moveto
0.55291 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.57937 0.30902 moveto
0.57937 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.60582 0.30902 moveto
0.60582 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.65873 0.30902 moveto
0.65873 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.68519 0.30902 moveto
0.68519 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.71164 0.30902 moveto
0.71164 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.7381 0.30902 moveto
0.7381 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.79101 0.30902 moveto
0.79101 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81746 0.30902 moveto
0.81746 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84392 0.30902 moveto
0.84392 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.87037 0.30902 moveto
0.87037 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.07672 0.30902 moveto
0.07672 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.05026 0.30902 moveto
0.05026 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.30902 moveto
0.02381 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92328 0.30902 moveto
0.92328 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.94974 0.30902 moveto
0.94974 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.30902 moveto
0.97619 0.31277 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.30902 moveto
1 0.30902 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.04619 moveto
0.50625 0.04619 lineto
stroke
grestore
[(-1)] 0.4875 0.04619 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.17761 moveto
0.50625 0.17761 lineto
stroke
grestore
[(-0.5)] 0.4875 0.17761 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.44043 moveto
0.50625 0.44043 lineto
stroke
grestore
[(0.5)] 0.4875 0.44043 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.57184 moveto
0.50625 0.57184 lineto
stroke
grestore
[(1)] 0.4875 0.57184 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.07248 moveto
0.50375 0.07248 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.09876 moveto
0.50375 0.09876 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.12504 moveto
0.50375 0.12504 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.15132 moveto
0.50375 0.15132 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.20389 moveto
0.50375 0.20389 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.23017 moveto
0.50375 0.23017 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.25645 moveto
0.50375 0.25645 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.28273 moveto
0.50375 0.28273 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.3353 moveto
0.50375 0.3353 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36158 moveto
0.50375 0.36158 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.38786 moveto
0.50375 0.38786 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.41415 moveto
0.50375 0.41415 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.46671 moveto
0.50375 0.46671 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.49299 moveto
0.50375 0.49299 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.51928 moveto
0.50375 0.51928 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54556 moveto
0.50375 0.54556 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.01991 moveto
0.50375 0.01991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59812 moveto
0.50375 0.59812 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.0497 moveto
0.06349 0.07944 lineto
0.10317 0.10465 lineto
0.14286 0.12757 lineto
0.18254 0.14916 lineto
0.22222 0.16995 lineto
0.2619 0.19025 lineto
0.30159 0.21026 lineto
0.34127 0.23011 lineto
0.38095 0.24987 lineto
0.42063 0.26959 lineto
0.46032 0.28931 lineto
0.5 0.30902 lineto
0.53968 0.32873 lineto
0.57937 0.34844 lineto
0.61905 0.36817 lineto
0.65873 0.38793 lineto
0.69841 0.40777 lineto
0.7381 0.42778 lineto
0.77778 0.44808 lineto
0.81746 0.46887 lineto
0.85714 0.49047 lineto
0.89683 0.51339 lineto
0.93651 0.53859 lineto
0.97619 0.56834 lineto
stroke
grestore
grestore
gsave
0.5 setgray
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.06349 0.05402 lineto
0.10317 0.08613 lineto
0.14286 0.11427 lineto
0.18254 0.13989 lineto
0.22222 0.16375 lineto
0.2619 0.18634 lineto
0.30159 0.20799 lineto
0.34127 0.22894 lineto
0.38095 0.24937 lineto
0.42063 0.26944 lineto
0.46032 0.28929 lineto
0.5 0.30902 lineto
0.53968 0.32875 lineto
0.57937 0.34859 lineto
0.61905 0.36866 lineto
0.65873 0.3891 lineto
0.69841 0.41005 lineto
0.7381 0.43169 lineto
0.77778 0.45428 lineto
0.81746 0.47814 lineto
0.85714 0.50376 lineto
0.89683 0.53191 lineto
0.93651 0.56401 lineto
0.97619 0.60332 lineto
stroke
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 597 1671 a Fi(Fig)p Fq(.)c(46.)20 b(The)15 b(\\sup)q(erarcsine")
h(function.)75 1783 y Fn(Exercise)h(4.)j Fq(See)c(Exercise)g(2.)75
1853 y Fn(Exercise)h(5.)75 1961 y Fj(F[x_])k(:=)g(SuperSin[x])f(-)h(1)75
2011 y(xn)g(=)h(2;)75 2061 y(Do[)162 2111 y(xn)g(=)f(xn)h(-)f(F[xn]/F'[xn];)
162 2161 y(Print[N[xn,16]],)75 2210 y({5}])162 2310 y(1.686903158808807)162
2360 y(1.697880562552439)162 2410 y(1.69788526087536)162 2459
y(1.697885260876274)162 2509 y(1.697885260876274)p eop
%%Page: 78 78
78 77 bop 75 -105 a Fq(78)667 b Fm(T)-6 b(ec)n(hniques)22 b(of)h(In)n
(tegration)g(\(optional\))p 788 -84 1087 2 v 606 49 a Fn(PURPOSE)18
b(OF)g(THE)g(PR)o(OJECT)146 155 y Fq(This)11 b(pro)s(ject)g(in)o(tro)q(duces)
h(a)f(n)o(um)o(b)q(er)g(of)g(subtle)h(concepts)g(that)f(are)f(sp)q(eci\014c)k
(to)c(doing)i(in)o(tegration)75 211 y(with)g Fl(Mathematic)n(a)s
Fq(,)h(so)f(in)h(that)e(sense)h(it)h(is)f(optional.)19 b(Ho)o(w)o(ev)o(er,)12
b(these)g(are)f(just)h(the)g(kinds)h(of)f(things)75 268 y(that)17
b(y)o(ou)g(need)i(to)e(kno)o(w)g(to)g(get)h(tractable)f(results,)i(so)e
(consider)i(assigning)f(at)f(least)h(part)f(of)h(this)75 324
y(pro)s(ject.)75 403 y Fn(Shorter)23 b(Pro)s(ject)p Fq(:)29
b(Omit)21 b(the)f(secan)o(t)f(to)h(tangen)o(t)f(con)o(v)o(ersion)h(and)h
(consequen)o(tly)g(Exercise)g(4.)75 459 y(Y)l(ou)15 b(could)i(also)e
(jettison)g(the)g(\\After)g(the)g(Lab")g(questions.)75 538
y Fn(Instructor)h(Note)p Fq(:)35 b(It)14 b(is)h(p)q(ossible)h(to)e(sim)o
(ulate)h(c)o(hange)g(of)f(v)m(ariables)i(in)f Fl(Mathematic)n(a)k
Fq(using)c(the)75 594 y Fk(Dt[])h Fq(command.)23 b(This)17
b(isn't)f(in)h(the)g(pro)s(ject,)e(but)i(the)f(Instructor's)g(Noteb)q(o)q(ok)
g(sho)o(ws)g(ho)o(w)f(to)h(do)75 651 y(it.)577 785 y Fn(ANSWERS)h(F)o(OR)h
(INSTR)o(UCTORS)75 890 y(Exercise)i(1.)26 b Fq(I'd)18 b(recommend)g(giving)g
(substan)o(tial)g(or)f(full)i(credit)f(for)f(a)g(clear)h(road)e(map)i(ev)o
(en)f(if)75 947 y(all)e(steps)g(are)f(not)g(carried)g(out.)20
b(I)14 b(sho)o(w)g(the)h Fl(Mathematic)n(a)j Fq(approac)o(h)c(along)g(with)h
(an)f(indication)i(of)75 1003 y(the)f(hand)h(approac)o(h.)126
1131 y(a\))22 b(The)13 b(in)o(tegral)g(can)g(b)q(e)g(written)g(as)793
1096 y Fd(R)828 1131 y Fq(sin)c Fh(x)p Fq(\(1)c Fg(\000)g Fq(cos)1064
1114 y Fe(2)1092 1131 y Fh(x)p Fq(\))j(cos)1204 1114 y Fe(2)1231
1131 y Fh(x)g(dx)p Fq(.)18 b(Expanding)c(and)f(in)o(tegrating)189
1181 y(term)h(b)o(y)h(term)g(giv)o(es)h(the)f(p)q(o)o(w)o(er)g(form)f(sho)o
(wn)h(b)q(elo)o(w.)189 1293 y Fj(Integrate[Sin[x])o(^3)k(Cos[x]^2,)h(x])h
(//TrigReduce)e(//Expand)428 1343 y(3)196 b(5)276 1393 y(-Cos[x])86
b(Cos[x])276 1443 y(--------)20 b(+)i(-------)341 1493 y(3)218
b(5)123 1627 y Fq(b\))23 b(The)12 b(in)o(tegral)h(can)g(b)q(e)g(written)f(as)
791 1593 y Fd(R)826 1627 y Fq(cos)c Fh(x)p Fq(\(1)d Fg(\000)g
Fq(sin)1061 1610 y Fe(2)1089 1627 y Fh(x)p Fq(\))1133 1611
y Fe(4)1160 1627 y Fh(dx)p Fq(.)18 b(Expanding)13 b(and)g(in)o(tegrating)f
(term)189 1677 y(b)o(y)j(term)f(giv)o(es)i(the)f(p)q(o)o(w)o(er)g(form)f(sho)
o(wn)h(b)q(elo)o(w.)189 1790 y Fj(f[x_])20 b(:=)i(Cos[x]^9)189
1840 y(Integrate[f[x],)c(x])276 1939 y(63)j(Sin[x])64 b(7)22
b(Sin[3)f(x])65 b(9)21 b(Sin[5)g(x])65 b(9)22 b(Sin[7)e(x])276
1989 y(---------)g(+)h(----------)f(+)i(----------)d(+)j(----------)e(+)341
2039 y(128)217 b(64)h(320)f(1792)319 2139 y(Sin[9)21 b(x])319
2188 y(--------)363 2238 y(2304)189 2338 y(Integrate[f[x],)d(x])k
(//TrigReduce)d(//Expand)646 2438 y(3)240 b(5)f(7)196 b(9)472
2487 y(4)22 b(Sin[x])85 b(6)22 b(Sin[x])86 b(4)22 b(Sin[x])85
b(Sin[x])276 2537 y(Sin[x])20 b(-)i(---------)e(+)h(---------)f(-)i
(---------)e(+)h(-------)559 2587 y(3)240 b(5)f(7)218 b(9)p
eop
%%Page: 79 79
79 78 bop 75 -105 a Fm(T)-6 b(ec)n(hniques)22 b(of)h(In)n(tegration)g
(\(optional\))p 75 -84 1087 2 v 667 w Fq(79)128 49 y(c\))g(The)16
b(easiest)g(w)o(a)o(y)f(b)o(y)g(hand)i(is)f(to)f(recognize)1004
31 y Fe(1)p 1004 38 18 2 v 1004 65 a(4)1034 49 y Fq(sin)1090
32 y Fe(2)1110 49 y Fq(\(2)p Fh(x)p Fq(\))g(and)h(use)g(the)g(double)h(angle)
f(form)o(ula)189 108 y(to)e(get)h(the)g(in)o(tegrand)607 90
y Fe(1)p 607 97 V 607 124 a(8)629 108 y Fq(\(1)10 b Fg(\000)g
Fq(cos)e(4)p Fh(x)p Fq(\):)189 214 y Fj(Integrate[Sin[x])o(^2)19
b(Cos[x]^2,)h(x])276 264 y(x)65 b(Sin[4)21 b(x])276 314 y(-)g(-)h(--------)
276 364 y(8)130 b(32)123 500 y Fq(d\))23 b(The)16 b(standard)g(approac)o(h)g
(giv)o(es)784 465 y Fd(R)819 452 y(\020)849 482 y Fe(1)p 849
489 V 849 515 a(2)871 500 y Fq(\(1)10 b Fg(\000)g Fq(cos)e(2)p
Fh(x)p Fq(\))1103 452 y Fd(\021)1127 464 y Fe(3)1162 500 y
Fh(dx:)15 b Fq(Then)i(y)o(ou)f(ha)o(v)o(e)g(to)g(deal)h(with)g(the)189
561 y(square)f(and)h(cubic)h(terms.)23 b(Sigh.)i(T)l(o)16 b(tell)i(the)e
(truth,)g(it)h(to)q(ok)f(me)h(3)f(tries)g(to)g(line)j(things)d(up)189
611 y(with)f(the)g Fl(Mathematic)n(a)20 b Fq(answ)o(er)14 b(\(some)h(wrong)f
(signs,)i(etc.\).)189 717 y Fj(f[x_])k(:=)i(Sin[x]^6)189 767
y(Integrate[f[x],)c(x])276 866 y(5)j(x)66 b(15)21 b(Sin[2)g(x])65
b(3)21 b(Sin[4)g(x])65 b(Sin[6)21 b(x])276 916 y(---)g(-)h(-----------)d(+)j
(----------)d(-)j(--------)276 966 y(16)174 b(64)261 b(64)196
b(192)189 1066 y(handanswer)19 b(=)j(1/8)f(\(5x/2)g(-)g(2)h(Sin[2x])e(+)i(3)g
(Sin[4x]/8)d(+)j(\(Sin[2x]^3\)/6\);)189 1115 y(Expand[handanswe)o(r,)d(Trig)i
(->)g(True])276 1215 y(5)g(x)66 b(15)21 b(Sin[2)g(x])65 b(3)21
b(Sin[4)g(x])65 b(Sin[6)21 b(x])276 1265 y(---)g(-)h(-----------)d(+)j
(----------)d(-)j(--------)276 1315 y(16)174 b(64)261 b(64)196
b(192)75 1472 y Fn(Exercise)16 b(2.)j Fl(Mathematic)n(a)f Fq(v)o(ersion)c
(2.0)f(can't)g(do)h(the)f(original)i(in)o(tegral,)f(but)g(after)f(the)h
(indicated)75 1522 y(ob)o(vious)j(substitution,)h(it)g(can.)26
b(I)17 b(also)g(sho)o(w)g(a)g(sim)o(ulation)h(of)f(the)g(hand)g(calculations)
i(needed)g(for)75 1572 y(the)c(later)g(exercises.)75 1680 y
Fj(Integrate[Sqrt[1)j(-)k(Cos[t]]/Cos[t],)d(t])162 1730 y(Integrate[Sqrt[1)g
(-)i(Cos[t]])g(Sec[t],)f(t])43 b(\(*)21 b(can't)g(do)h(it)f(*\))75
1829 y(\(*)g(After)g(the)g(substitution)f(u)h(=)h(cos)f(t)h(*\))75
1879 y(Integrate[-1/\(u)d(Sqrt[1)h(+)i(u]\),)f(u])162 1929
y(2)h(ArcTanh[Sqrt[1)d(+)i(u]])43 b(\(*)22 b(can)f(do)g(it)h(*\))75
2029 y(\(*)f(After)g(v)h(=)f(sqrt\(1)g(+)g(u\),)h(Mma)f(gets)g(the)g(partial)
f(fraction)g(form)h(*\))75 2078 y(Integrate[2/\(1)e(-)i(v^2\),)g(v])162
2128 y(-Log[-1)g(+)g(v])g(+)h(Log[1)f(+)g(v])75 2228 y(\(*)g(Do)h(the)f(back)
g(substitutions)e(*\))75 2278 y(\045)j(/.)f(v)h(->)f(Sqrt[1)f(+)i(u])f(/.)h
(u)f(->)h(Cos[t])162 2328 y(-Log[-1)f(+)g(Sqrt[1)g(+)g(Cos[t]]])f(+)i(Log[1)f
(+)g(Sqrt[1)g(+)g(Cos[t]]])75 2463 y Fn(Exercise)c(3.)j Fq(See)c(Answ)o(er)f
(1.)p eop
%%Page: 80 80
80 79 bop 75 -105 a Fq(80)667 b Fm(T)-6 b(ec)n(hniques)22 b(of)h(In)n
(tegration)g(\(optional\))p 788 -84 1087 2 v 75 49 a Fn(Exercise)17
b(4.)75 170 y Fj(Integrate[Tan[x]^)o(3)i(Sec[x]^3,)h(x])315
220 y(3)196 b(5)162 270 y(-Sec[x])86 b(Sec[x])162 320 y(--------)20
b(+)i(-------)228 370 y(3)217 b(5)75 469 y(Integrate[Tan[x]^)o(3)19
b(Sec[x]^3,)h(x])h(/.)h(sectotan)e(//)h(Expand)707 519 y(2)348
b(4)162 569 y(-2)22 b(Sec[x])64 b(Sec[x])20 b(Tan[x])86 b(Sec[x])21
b(Tan[x])162 619 y(---------)f(-)i(--------------)d(+)i(--------------)228
669 y(15)282 b(15)327 b(5)75 768 y(Integrate[Tan[x]^)o(6,)19
b(x])729 818 y(2)348 b(4)271 868 y(23)22 b(Tan[x])64 b(11)21
b(Sec[x])42 b(Tan[x])65 b(Sec[x])42 b(Tan[x])162 918 y(-x)22
b(+)f(---------)f(-)i(----------------)o(-)d(+)j(--------------)337
967 y(15)304 b(15)370 b(5)75 1067 y(Integrate[Tan[x]^)o(6,)19
b(x])i(/.)h(sectotan)e(//)h(Expand)598 1117 y(3)196 b(5)467
1167 y(Tan[x])86 b(Tan[x])162 1216 y(-x)22 b(+)f(Tan[x])g(+)g(-------)g(+)g
(-------)533 1266 y(3)196 b(5)75 1412 y Fn(Exercise)17 b(5.)75
1533 y Fj(Integrate[x^2/Sqr)o(t[a^2)o(-x^2])o(,)i(x])i(//PowerExpand)642
1632 y(2)174 b(x)380 1682 y(2)87 b(2)109 b(a)43 b(ArcSin[-])162
1732 y(-\(x)21 b(Sqrt[a)43 b(-)21 b(x)h(]\))283 b(a)162 1782
y(------------------)18 b(+)k(------------)337 1832 y(2)370
b(2)75 1931 y(Integrate[x^4/Sqr)o(t[a^2)o(-x^2])o(,)19 b(x])i(//PowerExpand)
903 2031 y(4)174 b(x)576 2081 y(2)131 b(3)87 b(3)21 b(a)44
b(ArcSin[-])293 2130 y(2)87 b(2)65 b(-3)21 b(a)44 b(x)65 b(x)370
b(a)162 2180 y(Sqrt[a)43 b(-)21 b(x)h(])f(\(-------)f(-)i(--\))f(+)h
(--------------)554 2230 y(8)131 b(4)240 b(8)75 2330 y(Integrate[x^6/Sqr)o
(t[a^2)o(-x^2])o(,)19 b(x])i(//PowerExpand)1121 2429 y(6)174
b(x)576 2479 y(4)g(2)44 b(3)87 b(5)g(5)21 b(a)44 b(ArcSin[-])293
2529 y(2)87 b(2)65 b(-5)21 b(a)44 b(x)65 b(5)22 b(a)43 b(x)87
b(x)370 b(a)162 2579 y(Sqrt[a)43 b(-)21 b(x)h(])f(\(-------)f(-)i(-------)e
(-)i(--\))f(+)h(--------------)533 2629 y(16)174 b(24)130 b(6)239
b(16)p eop
%%Page: 81 81
81 80 bop 75 -105 a Fm(T)-6 b(ec)n(hniques)22 b(of)h(In)n(tegration)g
(\(optional\))p 75 -84 1087 2 v 667 w Fq(81)75 49 y Fn(Exercise)17
b(6.)j Fq(See)c(Answ)o(er)f(2.)75 126 y Fn(Exercise)i(7.)j
Fq(W)l(e)15 b(could)i(all)f(learn)f(something)h(here!)75 204
y Fn(Exercise)h(8.)j Fq(See)c(Answ)o(er)f(2.)p eop
%%Page: 82 82
82 81 bop 75 -105 a Fq(82)697 b Fm(The)23 b(Probabilit)n(y)e(In)n(tegral)i
(\(optional\))p 818 -84 1057 2 v 606 49 a Fn(PURPOSE)18 b(OF)g(THE)g(PR)o
(OJECT)146 157 y Fq(The)11 b(main)h(themes)g(of)f(this)h(pro)s(ject)e(are)h
(the)h(metho)q(d)g(of)f(substitution)h(and)g(the)f(normal)h(probabil-)75
213 y(it)o(y)j(distribution.)22 b(Secondary)16 b(themes)f(are)g(the)g(in)o
(tro)q(duction)h(of)f(some)g(sp)q(ecial)i(functions)f(\(Erf)f(and)75
270 y Fh(J)100 277 y Fe(0)120 270 y Fq(\),)d(ev)o(en)h(and)f(o)q(dd)h
(functions,)h(in)o(v)o(erse)e(functions,)i(an)e(application)i(of)e(the)h(F)l
(undamen)o(tal)f(Theorem,)75 326 y(and)j(an)h(application)g(of)f(Newton's)g
(metho)q(d.)75 406 y Fn(Shorter)k(Pro)s(ject)p Fq(:)24 b(Omit)17
b(the)h(discussion)h(\\Metho)q(d)d(of)h(Substitution)h(with)g
Fl(Mathematic)n(a)s Fq(")g(and)75 463 y(ha)o(v)o(e)i(the)h(studen)o(ts)g(do)g
(a)g(hand)g(substitution)h(in)f(Exercise)h(10.)36 b(And/or)21
b(omit)g(Exercise)h(9)e(\(the)75 519 y(application)d(of)e(Newton's)f(metho)q
(d\).)75 599 y Fn(Instructor)i(Note)p Fq(:)35 b(It)14 b(is)h(p)q(ossible)h
(to)e(sim)o(ulate)h(c)o(hange)g(of)f(v)m(ariables)i(in)f Fl(Mathematic)n(a)k
Fq(using)c(the)75 655 y Fk(Dt[])h Fq(command.)23 b(This)17
b(isn't)f(in)h(the)g(pro)s(ject,)e(but)i(the)f(Instructor's)g(Noteb)q(o)q(ok)
g(sho)o(ws)g(ho)o(w)f(to)h(do)75 712 y(it.)75 785 y Fn(Instructor)h(Note)p
Fq(:)35 b(Our)16 b(v)o(ersion)f(of)g Fl(Mathematic)n(a)k Fq(had)d(the)f
(follo)o(wing)h(bug:)75 903 y Fj($Version)162 953 y(NeXT)21
b(2.0)g(\(July)g(15,)g(1991\))75 1053 y(n[x_])g(:=)g(1/Sqrt[2Pi)f(sigma^2])g
(Exp[-\(x)g(-)i(mu\)^2/\(2)e(sigma^2\)])75 1102 y(Integrate[n[x],)f({x,)i
(-Infinity,)f(Infinity}])162 1152 y(0)75 1277 y Fq(Of)c(course,)f(the)g(in)o
(tegral)h(should)g(b)q(e)g(one.)21 b(W)l(e)15 b(a)o(v)o(oided)h(this)g(in)g
(the)f(pro)s(ject,)g(but)g(it)h(is)g(conceiv)m(able)75 1334
y(that)d(some)g(studen)o(t)h(will)h(try)e(it.)20 b(Most)12
b(lik)o(ely)l(,)k(the)e(bug)f(will)j(not)d(b)q(e)h(presen)o(t)g(in)g(y)o(our)
f Fl(Mathematic)n(a)s Fq(,)75 1390 y(but)i(w)o(e)g(though)o(t)g(w)o(e)g(b)q
(etter)g(w)o(arn)f(y)o(ou.)577 1531 y Fn(ANSWERS)j(F)o(OR)h(INSTR)o(UCTORS)75
1639 y(Exercise)f(1.)j Fq(All)d(are)d(zero,)h(b)q(ecause)h(\(cf.)k(Exercise)c
(2\))e(the)i(functions)g(are)f Fl(o)n(dd)5 b Fq(.)75 1719 y
Fn(Exercise)22 b(2.)31 b Fq(Y)l(ou)19 b(migh)o(t)g(wish)h(to)e(p)q(oin)o(t)i
(out)e(that)h(the)g(substitution)h(metho)q(d)f(is)h(used)f(here)h(to)75
1775 y(pro)o(v)o(e)15 b(a)f(theorem)h(instead)h(of)f(to)g(ev)m(aluate)h(a)e
(sp)q(eci\014c)k(in)o(tegral.)i(The)15 b(same)g(is)h(true)f(for)f(Exercise)i
(3.)75 1855 y Fn(Exercise)h(4.)j Fq(Nothing)c(is)f(wrong,)f(an)o(tideriv)m
(ativ)o(es)j(ma)o(y)d(di\013er)i(b)o(y)f(a)g(constan)o(t.)k(Here,)c(w)o(e)g
(ha)o(v)o(e)354 1981 y(\()377 1951 y(1)p 377 1971 23 2 v 377
2012 a(2)412 1981 y(sin)468 1963 y Fe(2)495 1981 y Fh(x)10
b Fq(+)g(constan)o(t\))f Fg(\000)i Fq(\()p Fg(\000)876 1951
y Fq(1)p 876 1971 V 876 2012 a(2)911 1981 y(cos)972 1963 y
Fe(2)999 1981 y Fh(x)f Fq(+)h(constan)o(t)o(\))h(=)1332 1951
y(1)p 1332 1971 V 1332 2012 a(2)1370 1981 y(+)e(constan)o(t)p
Fh(:)75 2102 y Fq(See)16 b(also)f(the)g(answ)o(er)g(to)f(Exercise)i(6.)75
2181 y Fn(Exercise)k(7.)26 b Fq(See)18 b(Figure)f(47)g(whic)o(h)h(sho)o(ws)f
(that)f(the)i(t)o(w)o(o)d(an)o(tideriv)m(ativ)o(es)k(di\013er)f(b)o(y)f(a)g
(constan)o(t)75 2238 y(\(1/2\).)75 2311 y Fn(Exercise)g(8.)75
2429 y Fj(P[k_])k(:=)g(Sqrt[2/Pi])f(Integrate[Exp[-z^)o(2/2],)e({z,)j(0,)h
(k}])75 2479 y(Table[{k,)e(N@P[k]},)g({k,)h(3}])g(//TableForm)162
2529 y(1)65 b(0.682689)162 2579 y(2)g(0.9545)162 2629 y(3)g(0.9973)p
eop
%%Page: 83 83
83 82 bop 75 -105 a Fm(The)22 b(Probabilit)n(y)g(In)n(tegral)h(\(optional\))p
75 -84 1057 2 v 697 w Fq(83)571 502 y @beginspecial 0 @llx
0 @lly 282 @urx 174 @ury 1937 @rwi @setspecial
%%BeginDocument: Prob.Const.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.02381 0.151576 0.309017 0.588604 [
[(1)] 0.17539 0.30902 0 2 Msboxa
[(2)] 0.32696 0.30902 0 2 Msboxa
[(3)] 0.47854 0.30902 0 2 Msboxa
[(4)] 0.63011 0.30902 0 2 Msboxa
[(5)] 0.78169 0.30902 0 2 Msboxa
[(6)] 0.93327 0.30902 0 2 Msboxa
[(-0.4)] 0.01131 0.07358 1 0 Msboxa
[(-0.2)] 0.01131 0.1913 1 0 Msboxa
[(0.2)] 0.01131 0.42674 1 0 Msboxa
[(0.4)] 0.01131 0.54446 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.17539 0.30902 moveto
0.17539 0.31527 lineto
stroke
grestore
[(1)] 0.17539 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.32696 0.30902 moveto
0.32696 0.31527 lineto
stroke
grestore
[(2)] 0.32696 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.47854 0.30902 moveto
0.47854 0.31527 lineto
stroke
grestore
[(3)] 0.47854 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.63011 0.30902 moveto
0.63011 0.31527 lineto
stroke
grestore
[(4)] 0.63011 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.78169 0.30902 moveto
0.78169 0.31527 lineto
stroke
grestore
[(5)] 0.78169 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.93327 0.30902 moveto
0.93327 0.31527 lineto
stroke
grestore
[(6)] 0.93327 0.30902 0 2 Mshowa
gsave
0.001 setlinewidth
0.05412 0.30902 moveto
0.05412 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.08444 0.30902 moveto
0.08444 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11476 0.30902 moveto
0.11476 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.14507 0.30902 moveto
0.14507 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2057 0.30902 moveto
0.2057 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.23602 0.30902 moveto
0.23602 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.26633 0.30902 moveto
0.26633 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29665 0.30902 moveto
0.29665 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35728 0.30902 moveto
0.35728 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38759 0.30902 moveto
0.38759 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.41791 0.30902 moveto
0.41791 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44822 0.30902 moveto
0.44822 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.50885 0.30902 moveto
0.50885 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53917 0.30902 moveto
0.53917 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56948 0.30902 moveto
0.56948 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5998 0.30902 moveto
0.5998 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.66043 0.30902 moveto
0.66043 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69074 0.30902 moveto
0.69074 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72106 0.30902 moveto
0.72106 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.75137 0.30902 moveto
0.75137 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81201 0.30902 moveto
0.81201 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84232 0.30902 moveto
0.84232 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.87264 0.30902 moveto
0.87264 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90295 0.30902 moveto
0.90295 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.96358 0.30902 moveto
0.96358 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9939 0.30902 moveto
0.9939 0.31277 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.30902 moveto
1 0.30902 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0.07358 moveto
0.03006 0.07358 lineto
stroke
grestore
[(-0.4)] 0.01131 0.07358 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.1913 moveto
0.03006 0.1913 lineto
stroke
grestore
[(-0.2)] 0.01131 0.1913 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.42674 moveto
0.03006 0.42674 lineto
stroke
grestore
[(0.2)] 0.01131 0.42674 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.54446 moveto
0.03006 0.54446 lineto
stroke
grestore
[(0.4)] 0.01131 0.54446 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.09712 moveto
0.02756 0.09712 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.12066 moveto
0.02756 0.12066 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.14421 moveto
0.02756 0.14421 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.16775 moveto
0.02756 0.16775 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.21484 moveto
0.02756 0.21484 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.23838 moveto
0.02756 0.23838 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.26193 moveto
0.02756 0.26193 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.28547 moveto
0.02756 0.28547 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.33256 moveto
0.02756 0.33256 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.35611 moveto
0.02756 0.35611 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.37965 moveto
0.02756 0.37965 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.40319 moveto
0.02756 0.40319 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.45028 moveto
0.02756 0.45028 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.47383 moveto
0.02756 0.47383 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.49737 moveto
0.02756 0.49737 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.52091 moveto
0.02756 0.52091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.05003 moveto
0.02756 0.05003 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.02649 moveto
0.02756 0.02649 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.00294 moveto
0.02756 0.00294 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.568 moveto
0.02756 0.568 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.59155 moveto
0.02756 0.59155 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.61509 moveto
0.02756 0.61509 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.30902 moveto
0.02505 0.30904 lineto
0.02629 0.3091 lineto
0.02753 0.30919 lineto
0.02877 0.30933 lineto
0.03001 0.30951 lineto
0.03125 0.30973 lineto
0.03373 0.31028 lineto
0.03621 0.31098 lineto
0.03869 0.31184 lineto
0.04365 0.31403 lineto
0.05357 0.32022 lineto
0.06349 0.32873 lineto
0.08333 0.35212 lineto
0.10317 0.38259 lineto
0.14286 0.45617 lineto
0.18254 0.52974 lineto
0.20238 0.56022 lineto
0.22222 0.5836 lineto
0.23214 0.59212 lineto
0.2371 0.59551 lineto
0.24206 0.5983 lineto
0.24702 0.60049 lineto
0.2495 0.60135 lineto
0.25198 0.60206 lineto
0.25446 0.60261 lineto
0.2557 0.60283 lineto
0.25694 0.603 lineto
0.25818 0.60314 lineto
0.25942 0.60324 lineto
0.26066 0.6033 lineto
0.2619 0.60332 lineto
0.26314 0.6033 lineto
0.26438 0.60324 lineto
0.26562 0.60314 lineto
0.26687 0.603 lineto
0.26935 0.60261 lineto
0.27183 0.60206 lineto
0.27431 0.60135 lineto
0.27679 0.60049 lineto
0.28175 0.5983 lineto
0.29167 0.59212 lineto
0.30159 0.5836 lineto
0.32143 0.56022 lineto
0.34127 0.52974 lineto
0.38095 0.45617 lineto
0.42063 0.38259 lineto
0.44048 0.35212 lineto
0.4504 0.33943 lineto
0.46032 0.32873 lineto
Mistroke
0.47024 0.32022 lineto
0.4752 0.31683 lineto
0.48016 0.31403 lineto
0.48512 0.31184 lineto
0.4876 0.31098 lineto
0.49008 0.31028 lineto
0.49256 0.30973 lineto
0.4938 0.30951 lineto
0.49504 0.30933 lineto
0.49628 0.30919 lineto
0.49752 0.3091 lineto
0.49876 0.30904 lineto
0.5 0.30902 lineto
0.50124 0.30904 lineto
0.50248 0.3091 lineto
0.50372 0.30919 lineto
0.50496 0.30933 lineto
0.50744 0.30973 lineto
0.50992 0.31028 lineto
0.5124 0.31098 lineto
0.51488 0.31184 lineto
0.51984 0.31403 lineto
0.52976 0.32022 lineto
0.53968 0.32873 lineto
0.55952 0.35212 lineto
0.57937 0.38259 lineto
0.61905 0.45617 lineto
0.65873 0.52974 lineto
0.67857 0.56022 lineto
0.68849 0.57291 lineto
0.69841 0.5836 lineto
0.70833 0.59212 lineto
0.71329 0.59551 lineto
0.71825 0.5983 lineto
0.72321 0.60049 lineto
0.72569 0.60135 lineto
0.72817 0.60206 lineto
0.73065 0.60261 lineto
0.73189 0.60283 lineto
0.73313 0.603 lineto
0.73437 0.60314 lineto
0.73562 0.60324 lineto
0.73686 0.6033 lineto
0.7381 0.60332 lineto
0.73934 0.6033 lineto
0.74058 0.60324 lineto
0.74182 0.60314 lineto
0.74306 0.603 lineto
0.74554 0.60261 lineto
0.74802 0.60206 lineto
Mistroke
0.7505 0.60135 lineto
0.75298 0.60049 lineto
0.75794 0.5983 lineto
0.76786 0.59212 lineto
0.77778 0.5836 lineto
0.79762 0.56022 lineto
0.81746 0.52974 lineto
0.85714 0.45617 lineto
0.89683 0.38259 lineto
0.91667 0.35212 lineto
0.92659 0.33943 lineto
0.93651 0.32873 lineto
0.94643 0.32022 lineto
0.95139 0.31683 lineto
0.95635 0.31403 lineto
0.96131 0.31184 lineto
0.96379 0.31098 lineto
0.96627 0.31028 lineto
0.96875 0.30973 lineto
0.96999 0.30951 lineto
0.97123 0.30933 lineto
0.97247 0.30919 lineto
0.97371 0.3091 lineto
0.97495 0.30904 lineto
0.97619 0.30902 lineto
Mfstroke
grestore
grestore
gsave
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.02505 0.01473 lineto
0.02629 0.01479 lineto
0.02753 0.01489 lineto
0.02877 0.01503 lineto
0.03001 0.01521 lineto
0.03125 0.01542 lineto
0.03373 0.01597 lineto
0.03621 0.01668 lineto
0.03869 0.01754 lineto
0.04365 0.01973 lineto
0.05357 0.02592 lineto
0.06349 0.03443 lineto
0.08333 0.05781 lineto
0.10317 0.08829 lineto
0.14286 0.16187 lineto
0.18254 0.23544 lineto
0.20238 0.26592 lineto
0.22222 0.2893 lineto
0.23214 0.29782 lineto
0.2371 0.30121 lineto
0.24206 0.304 lineto
0.24702 0.30619 lineto
0.2495 0.30705 lineto
0.25198 0.30776 lineto
0.25446 0.30831 lineto
0.2557 0.30852 lineto
0.25694 0.3087 lineto
0.25818 0.30884 lineto
0.25942 0.30894 lineto
0.26066 0.309 lineto
0.2619 0.30902 lineto
0.26314 0.309 lineto
0.26438 0.30894 lineto
0.26562 0.30884 lineto
0.26687 0.3087 lineto
0.26935 0.30831 lineto
0.27183 0.30776 lineto
0.27431 0.30705 lineto
0.27679 0.30619 lineto
0.28175 0.304 lineto
0.29167 0.29782 lineto
0.30159 0.2893 lineto
0.32143 0.26592 lineto
0.34127 0.23544 lineto
0.38095 0.16187 lineto
0.42063 0.08829 lineto
0.44048 0.05781 lineto
0.4504 0.04512 lineto
0.46032 0.03443 lineto
Mistroke
0.47024 0.02592 lineto
0.4752 0.02252 lineto
0.48016 0.01973 lineto
0.48512 0.01754 lineto
0.4876 0.01668 lineto
0.49008 0.01597 lineto
0.49256 0.01542 lineto
0.4938 0.01521 lineto
0.49504 0.01503 lineto
0.49628 0.01489 lineto
0.49752 0.01479 lineto
0.49876 0.01473 lineto
0.5 0.01472 lineto
0.50124 0.01473 lineto
0.50248 0.01479 lineto
0.50372 0.01489 lineto
0.50496 0.01503 lineto
0.50744 0.01542 lineto
0.50992 0.01597 lineto
0.5124 0.01668 lineto
0.51488 0.01754 lineto
0.51984 0.01973 lineto
0.52976 0.02592 lineto
0.53968 0.03443 lineto
0.55952 0.05781 lineto
0.57937 0.08829 lineto
0.61905 0.16187 lineto
0.65873 0.23544 lineto
0.67857 0.26592 lineto
0.68849 0.27861 lineto
0.69841 0.2893 lineto
0.70833 0.29782 lineto
0.71329 0.30121 lineto
0.71825 0.304 lineto
0.72321 0.30619 lineto
0.72569 0.30705 lineto
0.72817 0.30776 lineto
0.73065 0.30831 lineto
0.73189 0.30852 lineto
0.73313 0.3087 lineto
0.73437 0.30884 lineto
0.73562 0.30894 lineto
0.73686 0.309 lineto
0.7381 0.30902 lineto
0.73934 0.309 lineto
0.74058 0.30894 lineto
0.74182 0.30884 lineto
0.74306 0.3087 lineto
0.74554 0.30831 lineto
0.74802 0.30776 lineto
Mistroke
0.7505 0.30705 lineto
0.75298 0.30619 lineto
0.75794 0.304 lineto
0.76786 0.29782 lineto
0.77778 0.2893 lineto
0.79762 0.26592 lineto
0.81746 0.23544 lineto
0.85714 0.16187 lineto
0.89683 0.08829 lineto
0.91667 0.05781 lineto
0.92659 0.04512 lineto
0.93651 0.03443 lineto
0.94643 0.02592 lineto
0.95139 0.02252 lineto
0.95635 0.01973 lineto
0.96131 0.01754 lineto
0.96379 0.01668 lineto
0.96627 0.01597 lineto
0.96875 0.01542 lineto
0.96999 0.01521 lineto
0.97123 0.01503 lineto
0.97247 0.01489 lineto
0.97371 0.01479 lineto
0.97495 0.01473 lineto
0.97619 0.01472 lineto
Mfstroke
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 216 588 a Fi(Fig)p Fq(.)15 b(47.)k(Plot)c(sho)o(wing)g(that)g
(the)g(t)o(w)o(o)f(an)o(tideriv)m(ativ)o(es)i(only)g(di\013er)g(b)o(y)f(a)g
(constan)o(t.)75 726 y(These)e(are)f(resp)q(ectiv)o(ely)j(the)d
(probabilities)j(of)d(b)q(eing)i(within)g(1,)e(2,)h(and)g(3)f(standard)g
(deviations)i(from)75 782 y(the)h(mean)g(and)h(resp)q(ectiv)o(ely)h(corresp)q
(ond)e(to)g(the)g(rule)h(of)f(th)o(um)o(b)g(v)m(alues,)h(66.7\045,)d(95\045)i
(and)g(99\045.)75 853 y Fn(Exercise)i(9.)75 961 y Fj(v)22 b(=)f(.9;)75
1011 y(kn)g(=)h(1.5;)75 1060 y(Do[)162 1110 y(kn)g(=)f(N[kn)g(-)h(\(P[kn])e
(-)i(v\)/P'[kn]];)162 1160 y(Print[kn],)75 1210 y({6}])162
1260 y(1.62977)162 1310 y(1.64467)162 1359 y(1.64485)162 1409
y(1.64485)162 1459 y(1.64485)162 1509 y(1.64485)75 1608 y(P[1.64485]//N)41
b(\(*)21 b(a)h(check)f(*\))162 1658 y(0.899999)75 1758 y(v)h(=)f(.95;)75
1808 y(kn)g(=)h(2.0;)75 1858 y(Do[)162 1907 y(kn)g(=)f(N[kn)g(-)h(\(P[kn])e
(-)i(v\)/P'[kn]];)162 1957 y(Print[kn],)75 2007 y({6}])162
2057 y(1.95833)162 2107 y(1.95996)162 2156 y(1.95996)162 2206
y(1.95996)162 2256 y(1.95996)162 2306 y(1.95996)75 2405 y(P[1.95996]//N)d
(\(*)i(check)g(*\))162 2455 y(0.95)p eop
%%Page: 84 84
84 83 bop 75 -105 a Fq(84)697 b Fm(The)23 b(Probabilit)n(y)e(In)n(tegral)i
(\(optional\))p 818 -84 1057 2 v 75 49 a Fj(v)f(=)f(.99;)75
99 y(kn)g(=)h(3.0;)75 149 y(Do[)162 199 y(kn)g(=)f(N[kn)g(-)h(\(P[kn])e(-)i
(v\)/P'[kn]];)162 249 y(Print[kn],)75 298 y({6}])162 348 y(2.17639)162
398 y(2.43775)162 448 y(2.55465)162 498 y(2.57527)162 547 y(2.57583)162
597 y(2.57583)75 697 y(P[2.57583]//N)d(\(*)i(check)g(*\))162
747 y(0.99)571 1392 y @beginspecial 0 @llx 0 @lly 282 @urx
174 @ury 1937 @rwi @setspecial
%%BeginDocument: Prob.h.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.039683 0.434328 0.267134 [
[(-10)] 0.10317 0.43433 0 2 Msboxa
[(-5)] 0.30159 0.43433 0 2 Msboxa
[(5)] 0.69841 0.43433 0 2 Msboxa
[(10)] 0.89683 0.43433 0 2 Msboxa
[(-1.5)] 0.4875 0.03363 1 0 Msboxa
[(-1)] 0.4875 0.16719 1 0 Msboxa
[(-0.5)] 0.4875 0.30076 1 0 Msboxa
[(0.5)] 0.4875 0.5679 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.10317 0.43433 moveto
0.10317 0.44058 lineto
stroke
grestore
[(-10)] 0.10317 0.43433 0 2 Mshowa
gsave
0.002 setlinewidth
0.30159 0.43433 moveto
0.30159 0.44058 lineto
stroke
grestore
[(-5)] 0.30159 0.43433 0 2 Mshowa
gsave
0.002 setlinewidth
0.69841 0.43433 moveto
0.69841 0.44058 lineto
stroke
grestore
[(5)] 0.69841 0.43433 0 2 Mshowa
gsave
0.002 setlinewidth
0.89683 0.43433 moveto
0.89683 0.44058 lineto
stroke
grestore
[(10)] 0.89683 0.43433 0 2 Mshowa
gsave
0.001 setlinewidth
0.14286 0.43433 moveto
0.14286 0.43808 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18254 0.43433 moveto
0.18254 0.43808 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22222 0.43433 moveto
0.22222 0.43808 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2619 0.43433 moveto
0.2619 0.43808 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.34127 0.43433 moveto
0.34127 0.43808 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38095 0.43433 moveto
0.38095 0.43808 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.42063 0.43433 moveto
0.42063 0.43808 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46032 0.43433 moveto
0.46032 0.43808 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53968 0.43433 moveto
0.53968 0.43808 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.57937 0.43433 moveto
0.57937 0.43808 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.61905 0.43433 moveto
0.61905 0.43808 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.65873 0.43433 moveto
0.65873 0.43808 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.7381 0.43433 moveto
0.7381 0.43808 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77778 0.43433 moveto
0.77778 0.43808 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81746 0.43433 moveto
0.81746 0.43808 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85714 0.43433 moveto
0.85714 0.43808 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.06349 0.43433 moveto
0.06349 0.43808 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.43433 moveto
0.02381 0.43808 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.93651 0.43433 moveto
0.93651 0.43808 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97619 0.43433 moveto
0.97619 0.43808 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.43433 moveto
1 0.43433 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.03363 moveto
0.50625 0.03363 lineto
stroke
grestore
[(-1.5)] 0.4875 0.03363 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.16719 moveto
0.50625 0.16719 lineto
stroke
grestore
[(-1)] 0.4875 0.16719 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.30076 moveto
0.50625 0.30076 lineto
stroke
grestore
[(-0.5)] 0.4875 0.30076 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.5679 moveto
0.50625 0.5679 lineto
stroke
grestore
[(0.5)] 0.4875 0.5679 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.06034 moveto
0.50375 0.06034 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.08705 moveto
0.50375 0.08705 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.11377 moveto
0.50375 0.11377 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.14048 moveto
0.50375 0.14048 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.19391 moveto
0.50375 0.19391 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22062 moveto
0.50375 0.22062 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.24733 moveto
0.50375 0.24733 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.27405 moveto
0.50375 0.27405 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.32747 moveto
0.50375 0.32747 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.35419 moveto
0.50375 0.35419 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.3809 moveto
0.50375 0.3809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40761 moveto
0.50375 0.40761 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.46104 moveto
0.50375 0.46104 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.48775 moveto
0.50375 0.48775 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.51447 moveto
0.50375 0.51447 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54118 moveto
0.50375 0.54118 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.00691 moveto
0.50375 0.00691 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59461 moveto
0.50375 0.59461 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.41432 moveto
0.04365 0.46272 lineto
0.05357 0.4858 lineto
0.06349 0.50616 lineto
0.06845 0.5149 lineto
0.07341 0.52248 lineto
0.07837 0.52876 lineto
0.08085 0.53137 lineto
0.08333 0.53363 lineto
0.08581 0.53551 lineto
0.08829 0.537 lineto
0.08953 0.5376 lineto
0.09077 0.5381 lineto
0.09201 0.5385 lineto
0.09325 0.5388 lineto
0.09449 0.539 lineto
0.09573 0.5391 lineto
0.09697 0.53909 lineto
0.09821 0.53898 lineto
0.09945 0.53877 lineto
0.10069 0.53846 lineto
0.10193 0.53804 lineto
0.10317 0.53753 lineto
0.10565 0.53618 lineto
0.10813 0.53443 lineto
0.1131 0.52972 lineto
0.11806 0.52345 lineto
0.12302 0.5157 lineto
0.14286 0.47223 lineto
0.1627 0.41673 lineto
0.18254 0.3623 lineto
0.19246 0.33982 lineto
0.19742 0.33045 lineto
0.20238 0.32257 lineto
0.20734 0.31631 lineto
0.20982 0.31383 lineto
0.2123 0.3118 lineto
0.21354 0.31096 lineto
0.21478 0.31024 lineto
0.21602 0.30963 lineto
0.21726 0.30914 lineto
0.2185 0.30878 lineto
0.21974 0.30853 lineto
0.22098 0.30841 lineto
0.22222 0.30841 lineto
0.22346 0.30853 lineto
0.2247 0.30878 lineto
0.22594 0.30915 lineto
0.22718 0.30965 lineto
0.22966 0.31101 lineto
Mistroke
0.23214 0.31287 lineto
0.2371 0.31806 lineto
0.24206 0.32519 lineto
0.25198 0.34491 lineto
0.2619 0.37112 lineto
0.28175 0.4372 lineto
0.30159 0.50885 lineto
0.31151 0.54138 lineto
0.32143 0.56883 lineto
0.32639 0.58003 lineto
0.33135 0.58925 lineto
0.33383 0.59305 lineto
0.33631 0.59629 lineto
0.33879 0.59894 lineto
0.34003 0.60003 lineto
0.34127 0.60098 lineto
0.34251 0.60176 lineto
0.34375 0.60239 lineto
0.34499 0.60286 lineto
0.34623 0.60317 lineto
0.34747 0.60332 lineto
0.34871 0.6033 lineto
0.34995 0.60312 lineto
0.35119 0.60276 lineto
0.35243 0.60224 lineto
0.35367 0.60155 lineto
0.35615 0.59967 lineto
0.35863 0.59709 lineto
0.36111 0.59383 lineto
0.36607 0.58526 lineto
0.37103 0.57395 lineto
0.38095 0.54345 lineto
0.39087 0.5032 lineto
0.40079 0.45463 lineto
0.42063 0.34038 lineto
0.44048 0.21956 lineto
0.4504 0.1633 lineto
0.46032 0.11324 lineto
0.47024 0.07168 lineto
0.4752 0.0547 lineto
0.48016 0.04053 lineto
0.48512 0.02934 lineto
0.4876 0.0249 lineto
0.49008 0.02125 lineto
0.49256 0.0184 lineto
0.4938 0.01727 lineto
0.49504 0.01635 lineto
0.49628 0.01564 lineto
0.49752 0.01512 lineto
0.49876 0.01482 lineto
Mistroke
0.5 0.01472 lineto
0.50124 0.01482 lineto
0.50248 0.01512 lineto
0.50372 0.01564 lineto
0.50496 0.01635 lineto
0.50744 0.0184 lineto
0.50992 0.02125 lineto
0.51488 0.02934 lineto
0.51984 0.04053 lineto
0.52976 0.07168 lineto
0.53968 0.11324 lineto
0.57937 0.34038 lineto
0.59921 0.45463 lineto
0.60913 0.5032 lineto
0.61905 0.54345 lineto
0.62401 0.55999 lineto
0.62897 0.57395 lineto
0.63393 0.58526 lineto
0.63641 0.58989 lineto
0.63889 0.59383 lineto
0.64137 0.59709 lineto
0.64385 0.59967 lineto
0.64509 0.6007 lineto
0.64633 0.60155 lineto
0.64757 0.60224 lineto
0.64881 0.60276 lineto
0.65005 0.60312 lineto
0.65129 0.6033 lineto
0.65253 0.60332 lineto
0.65377 0.60317 lineto
0.65501 0.60286 lineto
0.65625 0.60239 lineto
0.65749 0.60176 lineto
0.65873 0.60098 lineto
0.66121 0.59894 lineto
0.66369 0.59629 lineto
0.66865 0.58925 lineto
0.67361 0.58003 lineto
0.67857 0.56883 lineto
0.69841 0.50885 lineto
0.71825 0.4372 lineto
0.72817 0.40245 lineto
0.7381 0.37112 lineto
0.74802 0.34491 lineto
0.75298 0.33417 lineto
0.75794 0.32519 lineto
0.7629 0.31806 lineto
0.76538 0.31522 lineto
0.76786 0.31287 lineto
0.77034 0.31101 lineto
Mistroke
0.77158 0.31027 lineto
0.77282 0.30965 lineto
0.77406 0.30915 lineto
0.7753 0.30878 lineto
0.77654 0.30853 lineto
0.77778 0.30841 lineto
0.77902 0.30841 lineto
0.78026 0.30853 lineto
0.7815 0.30878 lineto
0.78274 0.30914 lineto
0.78398 0.30963 lineto
0.78522 0.31024 lineto
0.7877 0.3118 lineto
0.79018 0.31383 lineto
0.79266 0.31631 lineto
0.79762 0.32257 lineto
0.80754 0.33982 lineto
0.81746 0.3623 lineto
0.8373 0.41673 lineto
0.85714 0.47223 lineto
0.86706 0.49619 lineto
0.87698 0.5157 lineto
0.88194 0.52345 lineto
0.8869 0.52972 lineto
0.88938 0.53227 lineto
0.89187 0.53443 lineto
0.89435 0.53618 lineto
0.89559 0.5369 lineto
0.89683 0.53753 lineto
0.89807 0.53804 lineto
0.89931 0.53846 lineto
0.90055 0.53877 lineto
0.90179 0.53898 lineto
0.90303 0.53909 lineto
0.90427 0.5391 lineto
0.90551 0.539 lineto
0.90675 0.5388 lineto
0.90799 0.5385 lineto
0.90923 0.5381 lineto
0.91171 0.537 lineto
0.91419 0.53551 lineto
0.91667 0.53363 lineto
0.92163 0.52876 lineto
0.92659 0.52248 lineto
0.93651 0.50616 lineto
0.97619 0.41432 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 377 1479 a Fi(Fig)p Fq(.)15 b(48.)k(Plot)c(sho)o(wing)g(that)g
Fh(h)p Fq(\()p Fh(z)r Fq(\))g(has)g(eigh)o(t)g(zeros)g(in)h([)p
Fg(\000)p Fq(12)p Fh(;)8 b Fq(12].)75 1601 y Fn(Exercise)17
b(10.)j Fq(The)c(easiest)f(w)o(a)o(y)f(to)h(coun)o(t)g(the)g(zeros)g(is)h
(mak)o(e)e(a)h(plot,)g(see)h(Figure)f(48.)75 1692 y Fj(f[x_])21
b(:=)g(Cos[z)g(Cos[x]])42 b(\(*)21 b(integrand)f(*\))75 1741
y(g[u_])h(:=)g(ArcCos[u])129 b(\(*)21 b(substitution:)f(x)h(=)h(g[u])f(*\))75
1791 y(ginverse[x_])e(:=)j(Cos[x])42 b(\(*)21 b(inverse)g(--)g(for)g(limits)g
(*\))75 1841 y(integrand[u_])e(=)j(f[g[u]])e(g'[u])43 b(\(*)21
b(as)g(in)h(theory)e(*\))249 1891 y(Cos[u)h(z])162 1941 y(-\(------------\))
424 1991 y(2)206 2040 y(Sqrt[1)f(-)i(u)f(])75 2140 y(a)h(=)f(0;)h(b)f(=)h
(Pi/2;)75 2190 y(A)g(=)f(ginverse[a])162 2240 y(1)75 2289 y(B)h(=)f
(ginverse[b])162 2339 y(0)75 2439 y(h[z_])g(=)g(Integrate[integrand)o([u],)d
({u,)k(A,)f(B}])162 2489 y(-\(Pi)g(BesselJ[0,)f(Abs[z]]\))162
2538 y(------------------)o(-----)o(-)402 2588 y(2)p eop
%%Page: 85 85
85 84 bop 75 -103 a Fm(Appro)n(ximation)23 b(b)n(y)g(T)-6 b(a)n(ylor)24
b(P)n(olynomials)p 75 -85 1150 2 v 603 w Fq(85)606 49 y Fn(PURPOSE)18
b(OF)g(THE)g(PR)o(OJECT)146 152 y Fq(Do)g(T)l(a)o(ylor)h(Series)h(with)g
Fl(Mathematic)n(a)s Fq(.)33 b(Application)21 b(to)d(simple)j(di\013eren)o
(tial)g(equation)e(\(but)75 208 y(with)d(non-elemen)o(tary)f(answ)o(er\).)75
279 y Fn(Instructor)k(Note)p Fq(:)40 b(Here)17 b(is)g(a)f(lo)q(op)h(y)o(ou)g
(can)g(animate)f(to)g(do)h(a)f(demonstration)h(of)f(ho)o(w)g(T)l(a)o(ylor)75
329 y(Series)e(t)o(ypically)g(con)o(v)o(erges.)k(Or)13 b(y)o(ou)f(could)h
(mak)o(e)g(this)g(co)q(de)g(a)o(v)m(ailable)h(to)e(the)h(studen)o(ts)f(to)g
(do)g(their)75 379 y(o)o(wn)j(demonstrations)g(\(the)f(co)q(de)i(is)g(also)f
(in)h(the)f(Instructor's)g(noteb)q(o)q(ok\):)75 486 y Fj(n)22
b(=)f(10;)75 536 y(f[x_])g(:=)g(Cos[x])75 586 y(Do[)162 636
y(fn)h(=)f(Series[f[x],)e({x,)j(0,)f(k}])g(//Normal;)162 686
y(Plot[{fn,)f(f[x]},)h({x,)g(-Pi,)g(Pi},)249 736 y(PlotRange)f(->)i({-1,)f
(1},)249 785 y(PlotStyle)f(->)i({GrayLevel[0],)d(GrayLevel[.5]},)249
835 y(PlotLabel)h(->)i(FontForm[k,)d({"Times-Bold",)g(16}])162
885 y(],)75 935 y({k,)i(0,)h(n,)f(2}])577 1098 y Fn(ANSWERS)c(F)o(OR)h(INSTR)
o(UCTORS)75 1194 y(Exercise)f(1.)j Fq(This)c(is)g(what)e(the)h(hand)h
(calculations)h(should)f(pro)q(duce:)75 1302 y Fj(f[x_])21
b(:=)g(E^x)g(Sin[x])75 1352 y(Table[{n,)f(D[f[x],)g({x,)h(n}]},)g({n,)g
(4}]//TableForm)271 1402 y(x)240 b(x)162 1452 y(1)65 b(E)44
b(Cos[x])20 b(+)i(E)43 b(Sin[x])315 1501 y(x)162 1551 y(2)65
b(2)22 b(E)43 b(Cos[x])315 1601 y(x)283 b(x)162 1651 y(3)65
b(2)22 b(E)43 b(Cos[x])21 b(-)g(2)h(E)43 b(Sin[x])337 1701
y(x)162 1751 y(4)65 b(-4)22 b(E)43 b(Sin[x])75 1865 y Fq(Since)18
b(the)e(exp)q(onen)o(tial)i(is)e(biggest)h(at)e Fh(x)f Fq(=)h(1)h(and)g(the)h
(sin)g(can)f(b)q(e)h(b)q(ounded)g(b)o(y)f(1,)g(a)g(crude)h(upp)q(er)75
1922 y(b)q(ound)f(is)g(giv)o(en)g(b)o(y)600 1935 y Fd(\014)600
1960 y(\014)600 1985 y(\014)600 2010 y(\014)619 1965 y Fg(\000)p
Fq(4)p Fh(e)698 1949 y Ff(z)726 1965 y Fq(sin)8 b Fh(z)p 619
1986 194 2 v 698 2027 a Fq(4!)817 1996 y Fh(x)843 1977 y Fe(4)863
1935 y Fd(\014)863 1960 y(\014)863 1985 y(\014)863 2010 y(\014)890
1996 y Fh(<)p Fq(=)973 1935 y Fd(\014)973 1960 y(\014)973 1985
y(\014)973 2010 y(\014)992 1965 y Fg(\000)p Fq(4)p Fh(e)p 992
1986 80 2 v 1009 2027 a Fq(24)1076 1935 y Fd(\014)1076 1960
y(\014)1076 1985 y(\014)1076 2010 y(\014)1102 1996 y Fq(=)1156
1965 y Fh(e)p 1155 1986 23 2 v 1155 2027 a Fq(6)1196 1996 y
Fh(<)p Fq(=)13 b(0)p Fh(:)p Fq(5)p Fh(:)75 2097 y Fn(Exercise)19
b(2.)26 b Fq(Again)17 b(w)o(e)g(use)h(a)e(bit)i(of)f(wizardry)g(to)f(sim)o
(ulate)i(the)f(hand)h(calculation.)27 b(Note)17 b(that)75 2147
y(adding)f(on)f(an)g(explicit)j(order)d(sym)o(b)q(ol)g(is)h(equiv)m(alen)o(t)
h(to)d(a)h Fk(Series)f Fq(command:)75 2255 y Fj(u)22 b(=)f(Sin[x])g(+)g
(O[x]^4)271 2305 y(3)249 2355 y(x)174 b(4)162 2404 y(x)22 b(-)f(--)h(+)f
(O[x])249 2454 y(6)p eop
%%Page: 86 86
86 85 bop 75 -103 a Fq(86)604 b Fm(Appro)n(ximation)23 b(b)n(y)g(T)-6
b(a)n(ylor)24 b(P)n(olynomials)p 725 -85 1150 2 v 75 49 a Fj(Sin[u])42
b(\(*)22 b(Mathematica)d(knows)i(that)g(u)h(is)f(an)g(approximate)f(quantity)
g(*\))271 99 y(3)249 149 y(x)174 b(4)162 199 y(x)22 b(-)f(--)h(+)f(O[x])249
249 y(3)571 852 y @beginspecial 0 @llx 0 @lly 282 @urx 174
@ury 1937 @rwi @setspecial
%%BeginDocument: Tay.ex3a.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.47619 0.309017 0.707207 [
[(-1)] 0.02381 0.30902 0 2 Msboxa
[(-0.5)] 0.2619 0.30902 0 2 Msboxa
[(0.5)] 0.7381 0.30902 0 2 Msboxa
[(1)] 0.97619 0.30902 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(9)] 0.5 0.61803 0 -2 Msboxa
grestore
[(-0.4)] 0.4875 0.02613 1 0 Msboxa
[(-0.2)] 0.4875 0.16758 1 0 Msboxa
[(0.2)] 0.4875 0.45046 1 0 Msboxa
[(0.4)] 0.4875 0.5919 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.30902 moveto
0.02381 0.31527 lineto
stroke
grestore
[(-1)] 0.02381 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.30902 moveto
0.2619 0.31527 lineto
stroke
grestore
[(-0.5)] 0.2619 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.30902 moveto
0.7381 0.31527 lineto
stroke
grestore
[(0.5)] 0.7381 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.30902 moveto
0.97619 0.31527 lineto
stroke
grestore
[(1)] 0.97619 0.30902 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.30902 moveto
0.07143 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.30902 moveto
0.11905 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.30902 moveto
0.16667 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.30902 moveto
0.21429 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.30902 moveto
0.30952 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.30902 moveto
0.35714 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.30902 moveto
0.40476 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.30902 moveto
0.45238 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.30902 moveto
0.54762 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.30902 moveto
0.59524 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.30902 moveto
0.64286 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.30902 moveto
0.69048 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.30902 moveto
0.78571 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.30902 moveto
0.83333 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.30902 moveto
0.88095 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.30902 moveto
0.92857 0.31277 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.30902 moveto
1 0.30902 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(9)] 0.5 0.61803 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.02613 moveto
0.50625 0.02613 lineto
stroke
grestore
[(-0.4)] 0.4875 0.02613 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.16758 moveto
0.50625 0.16758 lineto
stroke
grestore
[(-0.2)] 0.4875 0.16758 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.45046 moveto
0.50625 0.45046 lineto
stroke
grestore
[(0.2)] 0.4875 0.45046 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.5919 moveto
0.50625 0.5919 lineto
stroke
grestore
[(0.4)] 0.4875 0.5919 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.05442 moveto
0.50375 0.05442 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.08271 moveto
0.50375 0.08271 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.111 moveto
0.50375 0.111 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13929 moveto
0.50375 0.13929 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.19586 moveto
0.50375 0.19586 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22415 moveto
0.50375 0.22415 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.25244 moveto
0.50375 0.25244 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.28073 moveto
0.50375 0.28073 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.33731 moveto
0.50375 0.33731 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36559 moveto
0.50375 0.36559 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.39388 moveto
0.50375 0.39388 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.42217 moveto
0.50375 0.42217 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.47875 moveto
0.50375 0.47875 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.50703 moveto
0.50375 0.50703 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.53532 moveto
0.50375 0.53532 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.56361 moveto
0.50375 0.56361 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.60332 moveto
0.06349 0.47726 lineto
0.10317 0.36543 lineto
0.14286 0.2715 lineto
0.18254 0.19811 lineto
0.20238 0.16964 lineto
0.22222 0.1468 lineto
0.24206 0.12959 lineto
0.25198 0.12309 lineto
0.2619 0.11796 lineto
0.26687 0.11592 lineto
0.27183 0.11421 lineto
0.27679 0.11283 lineto
0.28175 0.11179 lineto
0.28423 0.11139 lineto
0.28671 0.11108 lineto
0.28919 0.11084 lineto
0.29043 0.11076 lineto
0.29167 0.11069 lineto
0.29291 0.11064 lineto
0.29415 0.11062 lineto
0.29539 0.11061 lineto
0.29663 0.11063 lineto
0.29787 0.11066 lineto
0.29911 0.11071 lineto
0.30035 0.11079 lineto
0.30159 0.11088 lineto
0.30407 0.11112 lineto
0.30655 0.11144 lineto
0.31151 0.11232 lineto
0.31647 0.11349 lineto
0.32143 0.11497 lineto
0.33135 0.1188 lineto
0.34127 0.12376 lineto
0.36111 0.13686 lineto
0.38095 0.15386 lineto
0.42063 0.19764 lineto
0.46032 0.2509 lineto
0.5 0.30902 lineto
0.53968 0.36713 lineto
0.57937 0.4204 lineto
0.59921 0.44375 lineto
0.61905 0.46418 lineto
0.63889 0.48118 lineto
0.64881 0.48824 lineto
0.65873 0.49428 lineto
0.66865 0.49924 lineto
0.67857 0.50306 lineto
0.68353 0.50454 lineto
0.68849 0.50572 lineto
Mistroke
0.69345 0.50659 lineto
0.69593 0.50691 lineto
0.69717 0.50704 lineto
0.69841 0.50716 lineto
0.69965 0.50725 lineto
0.70089 0.50732 lineto
0.70213 0.50738 lineto
0.70337 0.50741 lineto
0.70461 0.50742 lineto
0.70585 0.50742 lineto
0.70709 0.50739 lineto
0.70833 0.50734 lineto
0.70957 0.50728 lineto
0.71081 0.50719 lineto
0.71329 0.50696 lineto
0.71577 0.50664 lineto
0.71825 0.50624 lineto
0.72321 0.5052 lineto
0.72817 0.50383 lineto
0.7381 0.50007 lineto
0.74802 0.49495 lineto
0.75794 0.48844 lineto
0.77778 0.47123 lineto
0.79762 0.44839 lineto
0.81746 0.41992 lineto
0.85714 0.34654 lineto
0.89683 0.2526 lineto
0.93651 0.14077 lineto
0.97619 0.01472 lineto
Mfstroke
grestore
grestore
gsave
0.5 setgray
gsave
0.004 setlinewidth
0.02381 0.60313 moveto
0.06349 0.47719 lineto
0.10317 0.3654 lineto
0.14286 0.27149 lineto
0.18254 0.19811 lineto
0.20238 0.16964 lineto
0.22222 0.1468 lineto
0.24206 0.12959 lineto
0.25198 0.12309 lineto
0.2619 0.11796 lineto
0.26687 0.11592 lineto
0.27183 0.11421 lineto
0.27679 0.11283 lineto
0.28175 0.11179 lineto
0.28423 0.11139 lineto
0.28671 0.11108 lineto
0.28919 0.11084 lineto
0.29043 0.11076 lineto
0.29167 0.11069 lineto
0.29291 0.11064 lineto
0.29415 0.11062 lineto
0.29539 0.11061 lineto
0.29663 0.11063 lineto
0.29787 0.11066 lineto
0.29911 0.11071 lineto
0.30035 0.11078 lineto
0.30159 0.11088 lineto
0.30407 0.11112 lineto
0.30655 0.11144 lineto
0.31151 0.11232 lineto
0.31647 0.11349 lineto
0.32143 0.11497 lineto
0.33135 0.1188 lineto
0.34127 0.12376 lineto
0.36111 0.13686 lineto
0.38095 0.15386 lineto
0.42063 0.19764 lineto
0.46032 0.2509 lineto
0.5 0.30902 lineto
0.53968 0.36713 lineto
0.57937 0.4204 lineto
0.59921 0.44375 lineto
0.61905 0.46418 lineto
0.63889 0.48118 lineto
0.64881 0.48824 lineto
0.65873 0.49428 lineto
0.66865 0.49924 lineto
0.67857 0.50306 lineto
0.68353 0.50454 lineto
0.68849 0.50572 lineto
Mistroke
0.69345 0.50659 lineto
0.69593 0.50691 lineto
0.69717 0.50704 lineto
0.69841 0.50716 lineto
0.69965 0.50725 lineto
0.70089 0.50732 lineto
0.70213 0.50738 lineto
0.70337 0.50741 lineto
0.70461 0.50742 lineto
0.70585 0.50742 lineto
0.70709 0.50739 lineto
0.70833 0.50734 lineto
0.70957 0.50728 lineto
0.71081 0.50719 lineto
0.71329 0.50696 lineto
0.71577 0.50664 lineto
0.71825 0.50624 lineto
0.72321 0.5052 lineto
0.72817 0.50383 lineto
0.7381 0.50007 lineto
0.74802 0.49495 lineto
0.75794 0.48844 lineto
0.77778 0.47123 lineto
0.79762 0.44839 lineto
0.81746 0.41993 lineto
0.85714 0.34654 lineto
0.89683 0.25263 lineto
0.93651 0.14084 lineto
0.97619 0.01491 lineto
Mfstroke
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 81 939 a Fi(Fig)p Fq(.)15 b(49.)k(Graph)c(of)g(nine)h(terms)f
(of)g(series)g(\(gra)o(y\))f(o)o(v)o(erla)o(ying)h(graph)g(of)g(function)h
Fh(x)8 b Fq(cos)f(2)p Fh(x)15 b Fq(\(dark\).)75 1053 y Fn(Exercise)22
b(3.)33 b Fh(n)20 b Fq(=)g(7)g(or)f(9)g(is)h(adequate)f(for)g(visual)i
(agreemen)o(t)e(of)g(the)h(function)g(and)g(its)f(series)75
1110 y(on)e([)p Fg(\000)p Fq(1)p Fh(;)8 b Fq(1].)24 b(Figure)17
b(49)g(sho)o(ws)f(the)h Fh(n)f Fq(=)g(9)h(result.)26 b(Nine)18
b(terms)f(is)h(also)f(enough)g(to)g(get)f(b)q(elo)o(w)i(the)75
1166 y(prescrib)q(ed)f(error)d(b)q(ound,)i(see)g(Figure)f(50.)571
1720 y @beginspecial 0 @llx 0 @lly 282 @urx 174 @ury 1937 @rwi
@setspecial
%%BeginDocument: Tay.ex3b.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.47619 0.309017 1074.797951 [
[(-1)] 0.02381 0.30902 0 2 Msboxa
[(-0.5)] 0.2619 0.30902 0 2 Msboxa
[(0.5)] 0.7381 0.30902 0 2 Msboxa
[(1)] 0.97619 0.30902 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(9)] 0.5 0.61803 0 -2 Msboxa
grestore
[(-0.0002)] 0.4875 0.09406 1 0 Msboxa
[(-0.0001)] 0.4875 0.20154 1 0 Msboxa
[(0.0001)] 0.4875 0.4165 1 0 Msboxa
[(0.0002)] 0.4875 0.52398 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.30902 moveto
0.02381 0.31527 lineto
stroke
grestore
[(-1)] 0.02381 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.30902 moveto
0.2619 0.31527 lineto
stroke
grestore
[(-0.5)] 0.2619 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.30902 moveto
0.7381 0.31527 lineto
stroke
grestore
[(0.5)] 0.7381 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.30902 moveto
0.97619 0.31527 lineto
stroke
grestore
[(1)] 0.97619 0.30902 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.30902 moveto
0.07143 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.30902 moveto
0.11905 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.30902 moveto
0.16667 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.30902 moveto
0.21429 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.30902 moveto
0.30952 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.30902 moveto
0.35714 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.30902 moveto
0.40476 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.30902 moveto
0.45238 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.30902 moveto
0.54762 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.30902 moveto
0.59524 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.30902 moveto
0.64286 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.30902 moveto
0.69048 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.30902 moveto
0.78571 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.30902 moveto
0.83333 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.30902 moveto
0.88095 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.30902 moveto
0.92857 0.31277 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.30902 moveto
1 0.30902 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(9)] 0.5 0.61803 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.09406 moveto
0.50625 0.09406 lineto
stroke
grestore
[(-0.0002)] 0.4875 0.09406 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.20154 moveto
0.50625 0.20154 lineto
stroke
grestore
[(-0.0001)] 0.4875 0.20154 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.4165 moveto
0.50625 0.4165 lineto
stroke
grestore
[(0.0001)] 0.4875 0.4165 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.52398 moveto
0.50625 0.52398 lineto
stroke
grestore
[(0.0002)] 0.4875 0.52398 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.11555 moveto
0.50375 0.11555 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13705 moveto
0.50375 0.13705 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.15855 moveto
0.50375 0.15855 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18004 moveto
0.50375 0.18004 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22303 moveto
0.50375 0.22303 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.24453 moveto
0.50375 0.24453 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.26603 moveto
0.50375 0.26603 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.28752 moveto
0.50375 0.28752 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.33051 moveto
0.50375 0.33051 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.35201 moveto
0.50375 0.35201 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.3735 moveto
0.50375 0.3735 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.395 moveto
0.50375 0.395 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.43799 moveto
0.50375 0.43799 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45949 moveto
0.50375 0.45949 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.48098 moveto
0.50375 0.48098 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.50248 moveto
0.50375 0.50248 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.07256 moveto
0.50375 0.07256 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.05107 moveto
0.50375 0.05107 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.02957 moveto
0.50375 0.02957 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.00807 moveto
0.50375 0.00807 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54547 moveto
0.50375 0.54547 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.56697 moveto
0.50375 0.56697 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.58846 moveto
0.50375 0.58846 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.60996 moveto
0.50375 0.60996 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
gsave
gsave
0.004 setlinewidth
0.02381 0.60332 moveto
0.03373 0.54277 lineto
0.04365 0.49375 lineto
0.05357 0.45424 lineto
0.06349 0.42257 lineto
0.07341 0.3973 lineto
0.08333 0.37724 lineto
0.09325 0.36141 lineto
0.10317 0.34899 lineto
0.1131 0.33931 lineto
0.12302 0.3318 lineto
0.13294 0.32602 lineto
0.14286 0.32161 lineto
0.15278 0.31826 lineto
0.1627 0.31575 lineto
0.17262 0.31387 lineto
0.18254 0.31248 lineto
0.19246 0.31146 lineto
0.20238 0.31072 lineto
0.2123 0.31019 lineto
0.21726 0.30999 lineto
0.22222 0.30982 lineto
0.22718 0.30967 lineto
0.23214 0.30955 lineto
0.24206 0.30937 lineto
0.24702 0.3093 lineto
0.25198 0.30925 lineto
0.25694 0.3092 lineto
0.2619 0.30916 lineto
0.26687 0.30913 lineto
0.27183 0.30911 lineto
0.28175 0.30907 lineto
0.28671 0.30906 lineto
0.29167 0.30905 lineto
0.29663 0.30904 lineto
0.30159 0.30904 lineto
0.30655 0.30903 lineto
0.31151 0.30903 lineto
0.31647 0.30903 lineto
0.32143 0.30902 lineto
0.32639 0.30902 lineto
0.33135 0.30902 lineto
0.33631 0.30902 lineto
0.34127 0.30902 lineto
0.34623 0.30902 lineto
0.35119 0.30902 lineto
0.35615 0.30902 lineto
0.36111 0.30902 lineto
0.36359 0.30902 lineto
0.36607 0.30902 lineto
Mistroke
0.36855 0.30902 lineto
0.37103 0.30902 lineto
0.37599 0.30902 lineto
0.37847 0.30902 lineto
0.38095 0.30902 lineto
0.38343 0.30902 lineto
0.38591 0.30902 lineto
0.38839 0.30902 lineto
0.39087 0.30902 lineto
0.39335 0.30902 lineto
0.39583 0.30902 lineto
0.39831 0.30902 lineto
0.40079 0.30902 lineto
0.40327 0.30902 lineto
0.40575 0.30902 lineto
0.40823 0.30902 lineto
0.41071 0.30902 lineto
0.41319 0.30902 lineto
0.41567 0.30902 lineto
0.41815 0.30902 lineto
0.42063 0.30902 lineto
0.42312 0.30902 lineto
0.4256 0.30902 lineto
0.42808 0.30902 lineto
0.42932 0.30902 lineto
0.43056 0.30902 lineto
0.43304 0.30902 lineto
0.43428 0.30902 lineto
0.43552 0.30902 lineto
0.43676 0.30902 lineto
0.438 0.30902 lineto
0.44048 0.30902 lineto
0.44172 0.30902 lineto
0.44296 0.30902 lineto
0.4442 0.30902 lineto
0.44544 0.30902 lineto
0.44792 0.30902 lineto
0.44916 0.30902 lineto
0.4504 0.30902 lineto
0.45164 0.30902 lineto
0.45288 0.30902 lineto
0.45412 0.30902 lineto
0.45536 0.30902 lineto
0.4566 0.30902 lineto
0.45784 0.30902 lineto
0.45908 0.30902 lineto
0.46032 0.30902 lineto
0.46156 0.30902 lineto
0.4628 0.30902 lineto
0.46404 0.30902 lineto
Mistroke
0.46528 0.30902 lineto
0.47024 0.30902 lineto
0.47148 0.30902 lineto
0.47272 0.30902 lineto
0.47396 0.30902 lineto
0.4752 0.30902 lineto
0.47644 0.30902 lineto
0.47768 0.30902 lineto
0.47892 0.30902 lineto
0.48016 0.30902 lineto
0.5 0.30902 lineto
0.50124 0.30902 lineto
0.50248 0.30902 lineto
0.50372 0.30902 lineto
0.50496 0.30902 lineto
0.5062 0.30902 lineto
0.50744 0.30902 lineto
0.50868 0.30902 lineto
0.50992 0.30902 lineto
0.51116 0.30902 lineto
0.5124 0.30902 lineto
0.51364 0.30902 lineto
0.51488 0.30902 lineto
0.51984 0.30902 lineto
0.52108 0.30902 lineto
0.52232 0.30902 lineto
0.52356 0.30902 lineto
0.5248 0.30902 lineto
0.52604 0.30902 lineto
0.52728 0.30902 lineto
0.52852 0.30902 lineto
0.52976 0.30902 lineto
0.531 0.30902 lineto
0.53224 0.30902 lineto
0.53348 0.30902 lineto
0.53472 0.30902 lineto
0.53596 0.30902 lineto
0.5372 0.30902 lineto
0.53844 0.30902 lineto
0.53968 0.30902 lineto
0.54092 0.30902 lineto
0.54216 0.30902 lineto
0.5434 0.30902 lineto
0.54464 0.30902 lineto
0.54588 0.30902 lineto
0.54712 0.30902 lineto
0.54836 0.30902 lineto
0.5496 0.30902 lineto
0.55084 0.30902 lineto
0.55208 0.30902 lineto
Mistroke
0.55332 0.30902 lineto
0.55456 0.30902 lineto
0.55704 0.30902 lineto
0.55828 0.30902 lineto
0.55952 0.30902 lineto
0.562 0.30902 lineto
0.56324 0.30902 lineto
0.56448 0.30902 lineto
0.56572 0.30902 lineto
0.56696 0.30902 lineto
0.56944 0.30902 lineto
0.57068 0.30902 lineto
0.57192 0.30902 lineto
0.5744 0.30902 lineto
0.57688 0.30902 lineto
0.57937 0.30902 lineto
0.58185 0.30902 lineto
0.58433 0.30902 lineto
0.58681 0.30902 lineto
0.58929 0.30902 lineto
0.59177 0.30902 lineto
0.59425 0.30902 lineto
0.59673 0.30902 lineto
0.59921 0.30902 lineto
0.60169 0.30902 lineto
0.60417 0.30902 lineto
0.60665 0.30902 lineto
0.60913 0.30902 lineto
0.61409 0.30902 lineto
0.61657 0.30902 lineto
0.61905 0.30902 lineto
0.62153 0.30902 lineto
0.62401 0.30902 lineto
0.62897 0.30902 lineto
0.63145 0.30902 lineto
0.63393 0.30902 lineto
0.63641 0.30902 lineto
0.63889 0.30902 lineto
0.64385 0.30902 lineto
0.64881 0.30902 lineto
0.65377 0.30902 lineto
0.65873 0.30902 lineto
0.66369 0.30901 lineto
0.66865 0.30901 lineto
0.67361 0.30901 lineto
0.67857 0.30901 lineto
0.68353 0.30901 lineto
0.68849 0.30901 lineto
0.69345 0.309 lineto
0.69841 0.309 lineto
Mistroke
0.70337 0.30899 lineto
0.70833 0.30898 lineto
0.71329 0.30897 lineto
0.71825 0.30896 lineto
0.72321 0.30894 lineto
0.72817 0.30892 lineto
0.7381 0.30887 lineto
0.74306 0.30883 lineto
0.74802 0.30879 lineto
0.75794 0.30866 lineto
0.7629 0.30858 lineto
0.76786 0.30848 lineto
0.77282 0.30836 lineto
0.77778 0.30822 lineto
0.7877 0.30784 lineto
0.79762 0.30731 lineto
0.80754 0.30658 lineto
0.81746 0.30556 lineto
0.82738 0.30417 lineto
0.8373 0.30229 lineto
0.84722 0.29977 lineto
0.85714 0.29642 lineto
0.86706 0.29201 lineto
0.87698 0.28623 lineto
0.8869 0.27873 lineto
0.89683 0.26904 lineto
0.90675 0.25662 lineto
0.91667 0.24079 lineto
0.92659 0.22074 lineto
0.93651 0.19547 lineto
0.94643 0.16379 lineto
0.95635 0.12429 lineto
0.97619 0.01472 lineto
Mfstroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 267 1807 a Fi(Fig)p Fq(.)g(50.)k(Di\013erence)d(of)f(the)g
(function)h Fh(x)8 b Fq(cos)f(2)p Fh(x)15 b Fq(and)g(nine)i(terms)e(of)f(its)
i(series.)75 1920 y Fn(Exercise)h(4.)126 2019 y Fq(a\))22 b(Figure)16
b(51)f(sho)o(ws)h(that)f(the)h(actual)g(error)f(is)i(m)o(uc)o(h)f(smaller)h
(than)e(the)h(b)q(ound,)h(it)g(app)q(ears)f(to)189 2069 y(b)q(e)g(ab)q(out)f
(one-ten)o(th)g(as)g(m)o(uc)o(h,)f(0.05.)19 b(The)d(follo)o(wing)f
Fk(Table)g Fq(command)g(b)q(ears)g(this)h(out:)189 2166 y Fj
(Max@Abs@N@Table[)o(f[x])i(-)k(Pn,)f({x,)g(-1,)g(1,)h(.05}])276
2216 y(0.045978)123 2330 y Fq(b\))h Fj(f[x_])d(:=)i(Sin[Sin[x]])189
2380 y(a)f(=)h(0;)f(n)h(=)f(3;)189 2429 y(Pn)g(=)h(Series[f[x],)d({x,)i(a,)g
(n}])h(//Normal)385 2479 y(3)363 2529 y(x)276 2579 y(x)f(-)h(--)363
2629 y(3)p eop
%%Page: 87 87
87 86 bop 75 -103 a Fm(Appro)n(ximation)23 b(b)n(y)g(T)-6 b(a)n(ylor)24
b(P)n(olynomials)p 75 -85 1150 2 v 603 w Fq(87)128 49 y(c\))f(See)d(Figures)g
(52)f(and)h(53.)33 b(On)20 b(the)g(smaller)g(in)o(terv)m(al)h(the)f(\014t)g
(is)g(excellen)o(t;)j(it)d(degrades)g(on)189 106 y([)p Fg(\000)p
Fq(1)p Fh(;)8 b Fq(1].)571 695 y @beginspecial 0 @llx 0 @lly
282 @urx 174 @ury 1937 @rwi @setspecial
%%BeginDocument: Tay.ex4a.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.47619 0.402705 8.438582 [
[(-1)] 0.02381 0.4027 0 2 Msboxa
[(-0.5)] 0.2619 0.4027 0 2 Msboxa
[(0.5)] 0.7381 0.4027 0 2 Msboxa
[(1)] 0.97619 0.4027 0 2 Msboxa
[(-0.04)] 0.4875 0.06516 1 0 Msboxa
[(-0.03)] 0.4875 0.14955 1 0 Msboxa
[(-0.02)] 0.4875 0.23393 1 0 Msboxa
[(-0.01)] 0.4875 0.31832 1 0 Msboxa
[(0.01)] 0.4875 0.48709 1 0 Msboxa
[(0.02)] 0.4875 0.57148 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.4027 moveto
0.02381 0.40895 lineto
stroke
grestore
[(-1)] 0.02381 0.4027 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.4027 moveto
0.2619 0.40895 lineto
stroke
grestore
[(-0.5)] 0.2619 0.4027 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.4027 moveto
0.7381 0.40895 lineto
stroke
grestore
[(0.5)] 0.7381 0.4027 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.4027 moveto
0.97619 0.40895 lineto
stroke
grestore
[(1)] 0.97619 0.4027 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.4027 moveto
0.07143 0.40645 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.4027 moveto
0.11905 0.40645 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.4027 moveto
0.16667 0.40645 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.4027 moveto
0.21429 0.40645 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.4027 moveto
0.30952 0.40645 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.4027 moveto
0.35714 0.40645 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.4027 moveto
0.40476 0.40645 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.4027 moveto
0.45238 0.40645 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.4027 moveto
0.54762 0.40645 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.4027 moveto
0.59524 0.40645 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.4027 moveto
0.64286 0.40645 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.4027 moveto
0.69048 0.40645 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.4027 moveto
0.78571 0.40645 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.4027 moveto
0.83333 0.40645 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.4027 moveto
0.88095 0.40645 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.4027 moveto
0.92857 0.40645 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.4027 moveto
1 0.4027 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.06516 moveto
0.50625 0.06516 lineto
stroke
grestore
[(-0.04)] 0.4875 0.06516 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.14955 moveto
0.50625 0.14955 lineto
stroke
grestore
[(-0.03)] 0.4875 0.14955 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.23393 moveto
0.50625 0.23393 lineto
stroke
grestore
[(-0.02)] 0.4875 0.23393 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.31832 moveto
0.50625 0.31832 lineto
stroke
grestore
[(-0.01)] 0.4875 0.31832 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.48709 moveto
0.50625 0.48709 lineto
stroke
grestore
[(0.01)] 0.4875 0.48709 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.57148 moveto
0.50625 0.57148 lineto
stroke
grestore
[(0.02)] 0.4875 0.57148 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.08204 moveto
0.50375 0.08204 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.09892 moveto
0.50375 0.09892 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.11579 moveto
0.50375 0.11579 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13267 moveto
0.50375 0.13267 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.16642 moveto
0.50375 0.16642 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1833 moveto
0.50375 0.1833 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.20018 moveto
0.50375 0.20018 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.21706 moveto
0.50375 0.21706 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.25081 moveto
0.50375 0.25081 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.26769 moveto
0.50375 0.26769 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.28456 moveto
0.50375 0.28456 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.30144 moveto
0.50375 0.30144 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.3352 moveto
0.50375 0.3352 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.35207 moveto
0.50375 0.35207 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36895 moveto
0.50375 0.36895 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.38583 moveto
0.50375 0.38583 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.41958 moveto
0.50375 0.41958 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.43646 moveto
0.50375 0.43646 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45334 moveto
0.50375 0.45334 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.47021 moveto
0.50375 0.47021 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.50397 moveto
0.50375 0.50397 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.52084 moveto
0.50375 0.52084 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.53772 moveto
0.50375 0.53772 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.5546 moveto
0.50375 0.5546 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.04828 moveto
0.50375 0.04828 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.03141 moveto
0.50375 0.03141 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.01453 moveto
0.50375 0.01453 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.58835 moveto
0.50375 0.58835 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.60523 moveto
0.50375 0.60523 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
gsave
gsave
0.004 setlinewidth
0.02381 0.60332 moveto
0.06349 0.53628 lineto
0.10317 0.48802 lineto
0.12302 0.46966 lineto
0.14286 0.45453 lineto
0.18254 0.43229 lineto
0.20238 0.42444 lineto
0.22222 0.41831 lineto
0.24206 0.41363 lineto
0.2619 0.41013 lineto
0.28175 0.40758 lineto
0.29167 0.4066 lineto
0.30159 0.40578 lineto
0.31151 0.4051 lineto
0.32143 0.40454 lineto
0.33135 0.4041 lineto
0.34127 0.40374 lineto
0.35119 0.40346 lineto
0.36111 0.40324 lineto
0.37103 0.40308 lineto
0.38095 0.40296 lineto
0.38591 0.40291 lineto
0.39087 0.40287 lineto
0.39583 0.40284 lineto
0.40079 0.40281 lineto
0.41071 0.40277 lineto
0.41567 0.40275 lineto
0.42063 0.40274 lineto
0.4256 0.40273 lineto
0.43056 0.40272 lineto
0.43552 0.40272 lineto
0.44048 0.40271 lineto
0.44296 0.40271 lineto
0.44544 0.40271 lineto
0.44792 0.40271 lineto
0.4504 0.40271 lineto
0.45536 0.40271 lineto
0.45784 0.40271 lineto
0.46032 0.40271 lineto
0.4628 0.40271 lineto
0.46528 0.40271 lineto
0.46776 0.40271 lineto
0.47024 0.4027 lineto
0.47148 0.4027 lineto
0.47272 0.4027 lineto
0.47396 0.4027 lineto
0.4752 0.4027 lineto
0.47768 0.4027 lineto
0.47892 0.4027 lineto
0.48016 0.4027 lineto
Mistroke
0.5 0.4027 lineto
0.50124 0.4027 lineto
0.50248 0.4027 lineto
0.50372 0.4027 lineto
0.50496 0.4027 lineto
0.5062 0.4027 lineto
0.50744 0.4027 lineto
0.50868 0.4027 lineto
0.50992 0.4027 lineto
0.51116 0.4027 lineto
0.5124 0.4027 lineto
0.51364 0.4027 lineto
0.51488 0.4027 lineto
0.51612 0.4027 lineto
0.51736 0.4027 lineto
0.5186 0.4027 lineto
0.51984 0.4027 lineto
0.52108 0.4027 lineto
0.52232 0.4027 lineto
0.5248 0.4027 lineto
0.52604 0.4027 lineto
0.52728 0.4027 lineto
0.52976 0.4027 lineto
0.53224 0.4027 lineto
0.53472 0.4027 lineto
0.5372 0.4027 lineto
0.53968 0.4027 lineto
0.54216 0.4027 lineto
0.54464 0.4027 lineto
0.5496 0.4027 lineto
0.55208 0.4027 lineto
0.55456 0.4027 lineto
0.55952 0.4027 lineto
0.56448 0.40269 lineto
0.56944 0.40269 lineto
0.5744 0.40268 lineto
0.57937 0.40267 lineto
0.58433 0.40265 lineto
0.58929 0.40264 lineto
0.59921 0.40259 lineto
0.60417 0.40255 lineto
0.60913 0.40251 lineto
0.61905 0.40241 lineto
0.62897 0.40226 lineto
0.63889 0.40205 lineto
0.64881 0.40178 lineto
0.65873 0.40141 lineto
0.66865 0.40094 lineto
0.67857 0.40034 lineto
0.68849 0.39959 lineto
Mistroke
0.69841 0.39865 lineto
0.70833 0.3975 lineto
0.71825 0.39609 lineto
0.7381 0.39235 lineto
0.75794 0.38704 lineto
0.77778 0.37971 lineto
0.79762 0.3698 lineto
0.81746 0.35666 lineto
0.8373 0.33953 lineto
0.85714 0.31751 lineto
0.87698 0.28959 lineto
0.89683 0.25461 lineto
0.93651 0.15794 lineto
0.95635 0.09307 lineto
0.97619 0.01472 lineto
Mfstroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 348 782 a Fi(Fig)p Fq(.)15 b(51.)k(The)d(error)e(in)i(the)g
(three)f(term)g(appro)o(ximation)g(to)f Fh(e)1470 765 y Ff(x)1500
782 y Fq(sin)8 b Fh(x)p Fq(.)571 1365 y @beginspecial 0 @llx
0 @lly 282 @urx 174 @ury 1937 @rwi @setspecial
%%BeginDocument: Tay.ex4c1.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.952381 0.309017 0.638026 [
[(-0.4)] 0.11905 0.30902 0 2 Msboxa
[(-0.2)] 0.30952 0.30902 0 2 Msboxa
[(0.2)] 0.69048 0.30902 0 2 Msboxa
[(0.4)] 0.88095 0.30902 0 2 Msboxa
[(-0.4)] 0.4875 0.05381 1 0 Msboxa
[(-0.2)] 0.4875 0.18141 1 0 Msboxa
[(0.2)] 0.4875 0.43662 1 0 Msboxa
[(0.4)] 0.4875 0.56423 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.11905 0.30902 moveto
0.11905 0.31527 lineto
stroke
grestore
[(-0.4)] 0.11905 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.30952 0.30902 moveto
0.30952 0.31527 lineto
stroke
grestore
[(-0.2)] 0.30952 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.69048 0.30902 moveto
0.69048 0.31527 lineto
stroke
grestore
[(0.2)] 0.69048 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.88095 0.30902 moveto
0.88095 0.31527 lineto
stroke
grestore
[(0.4)] 0.88095 0.30902 0 2 Mshowa
gsave
0.001 setlinewidth
0.15714 0.30902 moveto
0.15714 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.19524 0.30902 moveto
0.19524 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.23333 0.30902 moveto
0.23333 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.27143 0.30902 moveto
0.27143 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.34762 0.30902 moveto
0.34762 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38571 0.30902 moveto
0.38571 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.42381 0.30902 moveto
0.42381 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.4619 0.30902 moveto
0.4619 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5381 0.30902 moveto
0.5381 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.57619 0.30902 moveto
0.57619 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.61429 0.30902 moveto
0.61429 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.65238 0.30902 moveto
0.65238 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72857 0.30902 moveto
0.72857 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.76667 0.30902 moveto
0.76667 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.80476 0.30902 moveto
0.80476 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84286 0.30902 moveto
0.84286 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.08095 0.30902 moveto
0.08095 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.04286 0.30902 moveto
0.04286 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.00476 0.30902 moveto
0.00476 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.91905 0.30902 moveto
0.91905 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.95714 0.30902 moveto
0.95714 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.99524 0.30902 moveto
0.99524 0.31277 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.30902 moveto
1 0.30902 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.05381 moveto
0.50625 0.05381 lineto
stroke
grestore
[(-0.4)] 0.4875 0.05381 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.18141 moveto
0.50625 0.18141 lineto
stroke
grestore
[(-0.2)] 0.4875 0.18141 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.43662 moveto
0.50625 0.43662 lineto
stroke
grestore
[(0.2)] 0.4875 0.43662 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.56423 moveto
0.50625 0.56423 lineto
stroke
grestore
[(0.4)] 0.4875 0.56423 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.07933 moveto
0.50375 0.07933 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.10485 moveto
0.50375 0.10485 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13037 moveto
0.50375 0.13037 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.15589 moveto
0.50375 0.15589 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.20693 moveto
0.50375 0.20693 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.23245 moveto
0.50375 0.23245 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.25797 moveto
0.50375 0.25797 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.2835 moveto
0.50375 0.2835 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.33454 moveto
0.50375 0.33454 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36006 moveto
0.50375 0.36006 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.38558 moveto
0.50375 0.38558 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.4111 moveto
0.50375 0.4111 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.46214 moveto
0.50375 0.46214 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.48766 moveto
0.50375 0.48766 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.51319 moveto
0.50375 0.51319 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.53871 moveto
0.50375 0.53871 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.02829 moveto
0.50375 0.02829 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.00276 moveto
0.50375 0.00276 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.58975 moveto
0.50375 0.58975 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.61527 moveto
0.50375 0.61527 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.06349 0.03584 lineto
0.10317 0.05779 lineto
0.14286 0.08052 lineto
0.18254 0.10396 lineto
0.22222 0.12807 lineto
0.2619 0.15277 lineto
0.30159 0.17799 lineto
0.34127 0.20366 lineto
0.38095 0.22968 lineto
0.42063 0.25597 lineto
0.46032 0.28245 lineto
0.5 0.30902 lineto
0.53968 0.33559 lineto
0.57937 0.36206 lineto
0.61905 0.38836 lineto
0.65873 0.41438 lineto
0.69841 0.44004 lineto
0.7381 0.46526 lineto
0.77778 0.48996 lineto
0.81746 0.51407 lineto
0.85714 0.53752 lineto
0.89683 0.56024 lineto
0.93651 0.58219 lineto
0.97619 0.60332 lineto
stroke
grestore
grestore
gsave
0.5 setgray
gsave
0.004 setlinewidth
0.02381 0.01659 moveto
0.06349 0.03707 lineto
0.10317 0.05856 lineto
0.14286 0.08097 lineto
0.18254 0.10422 lineto
0.22222 0.1282 lineto
0.2619 0.15283 lineto
0.30159 0.17802 lineto
0.34127 0.20366 lineto
0.38095 0.22968 lineto
0.42063 0.25597 lineto
0.46032 0.28245 lineto
0.5 0.30902 lineto
0.53968 0.33559 lineto
0.57937 0.36206 lineto
0.61905 0.38835 lineto
0.65873 0.41437 lineto
0.69841 0.44002 lineto
0.7381 0.4652 lineto
0.77778 0.48983 lineto
0.81746 0.51382 lineto
0.85714 0.53706 lineto
0.89683 0.55948 lineto
0.93651 0.58097 lineto
0.97619 0.60145 lineto
stroke
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 310 1451 a Fi(Fig)p Fq(.)15 b(52.)k(sin)q(\(sin)8
b Fh(x)p Fq(\))15 b(and)h(its)f(three)g(term)g(appro)o(ximation)g(on)g([)p
Fg(\000)p Fq(0)p Fh(:)p Fq(5)p Fh(;)8 b Fq(0)p Fh(:)p Fq(5].)571
2037 y @beginspecial 0 @llx 0 @lly 282 @urx 174 @ury 1937 @rwi
@setspecial
%%BeginDocument: Tay.ex4c2.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.47619 0.309017 0.394705 [
[(-1)] 0.02381 0.30902 0 2 Msboxa
[(-0.5)] 0.2619 0.30902 0 2 Msboxa
[(0.5)] 0.7381 0.30902 0 2 Msboxa
[(1)] 0.97619 0.30902 0 2 Msboxa
[(-0.6)] 0.4875 0.07219 1 0 Msboxa
[(-0.4)] 0.4875 0.15113 1 0 Msboxa
[(-0.2)] 0.4875 0.23008 1 0 Msboxa
[(0.2)] 0.4875 0.38796 1 0 Msboxa
[(0.4)] 0.4875 0.4669 1 0 Msboxa
[(0.6)] 0.4875 0.54584 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.30902 moveto
0.02381 0.31527 lineto
stroke
grestore
[(-1)] 0.02381 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.30902 moveto
0.2619 0.31527 lineto
stroke
grestore
[(-0.5)] 0.2619 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.30902 moveto
0.7381 0.31527 lineto
stroke
grestore
[(0.5)] 0.7381 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.30902 moveto
0.97619 0.31527 lineto
stroke
grestore
[(1)] 0.97619 0.30902 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.30902 moveto
0.07143 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.30902 moveto
0.11905 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.30902 moveto
0.16667 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.30902 moveto
0.21429 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.30902 moveto
0.30952 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.30902 moveto
0.35714 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.30902 moveto
0.40476 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.30902 moveto
0.45238 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.30902 moveto
0.54762 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.30902 moveto
0.59524 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.30902 moveto
0.64286 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.30902 moveto
0.69048 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.30902 moveto
0.78571 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.30902 moveto
0.83333 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.30902 moveto
0.88095 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.30902 moveto
0.92857 0.31277 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.30902 moveto
1 0.30902 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.07219 moveto
0.50625 0.07219 lineto
stroke
grestore
[(-0.6)] 0.4875 0.07219 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.15113 moveto
0.50625 0.15113 lineto
stroke
grestore
[(-0.4)] 0.4875 0.15113 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.23008 moveto
0.50625 0.23008 lineto
stroke
grestore
[(-0.2)] 0.4875 0.23008 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.38796 moveto
0.50625 0.38796 lineto
stroke
grestore
[(0.2)] 0.4875 0.38796 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.4669 moveto
0.50625 0.4669 lineto
stroke
grestore
[(0.4)] 0.4875 0.4669 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.54584 moveto
0.50625 0.54584 lineto
stroke
grestore
[(0.6)] 0.4875 0.54584 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.08798 moveto
0.50375 0.08798 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.10377 moveto
0.50375 0.10377 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.11956 moveto
0.50375 0.11956 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13535 moveto
0.50375 0.13535 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.16692 moveto
0.50375 0.16692 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18271 moveto
0.50375 0.18271 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1985 moveto
0.50375 0.1985 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.21429 moveto
0.50375 0.21429 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.24586 moveto
0.50375 0.24586 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.26165 moveto
0.50375 0.26165 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.27744 moveto
0.50375 0.27744 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.29323 moveto
0.50375 0.29323 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.32481 moveto
0.50375 0.32481 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.34059 moveto
0.50375 0.34059 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.35638 moveto
0.50375 0.35638 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.37217 moveto
0.50375 0.37217 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40375 moveto
0.50375 0.40375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.41953 moveto
0.50375 0.41953 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.43532 moveto
0.50375 0.43532 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45111 moveto
0.50375 0.45111 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.48269 moveto
0.50375 0.48269 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.49848 moveto
0.50375 0.49848 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.51426 moveto
0.50375 0.51426 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.53005 moveto
0.50375 0.53005 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.05641 moveto
0.50375 0.05641 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.04062 moveto
0.50375 0.04062 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.02483 moveto
0.50375 0.02483 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.00904 moveto
0.50375 0.00904 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.56163 moveto
0.50375 0.56163 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.57742 moveto
0.50375 0.57742 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.5932 moveto
0.50375 0.5932 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.60899 moveto
0.50375 0.60899 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.06349 0.02764 lineto
0.10317 0.04282 lineto
0.14286 0.06033 lineto
0.18254 0.0802 lineto
0.22222 0.10244 lineto
0.2619 0.12695 lineto
0.30159 0.1536 lineto
0.34127 0.18216 lineto
0.38095 0.21236 lineto
0.42063 0.24384 lineto
0.46032 0.2762 lineto
0.5 0.30902 lineto
0.53968 0.34183 lineto
0.57937 0.3742 lineto
0.61905 0.40568 lineto
0.65873 0.43587 lineto
0.69841 0.46443 lineto
0.7381 0.49108 lineto
0.77778 0.5156 lineto
0.81746 0.53783 lineto
0.85714 0.55771 lineto
0.89683 0.57521 lineto
0.93651 0.59039 lineto
0.97619 0.60332 lineto
stroke
grestore
grestore
gsave
0.5 setgray
gsave
0.004 setlinewidth
0.02381 0.04588 moveto
0.02505 0.04588 lineto
0.02629 0.04589 lineto
0.02753 0.0459 lineto
0.02877 0.04592 lineto
0.03125 0.04598 lineto
0.03373 0.04605 lineto
0.03621 0.04615 lineto
0.03869 0.04626 lineto
0.04365 0.04656 lineto
0.05357 0.04739 lineto
0.06349 0.04854 lineto
0.08333 0.05179 lineto
0.10317 0.05623 lineto
0.14286 0.06849 lineto
0.18254 0.08486 lineto
0.22222 0.10489 lineto
0.2619 0.12811 lineto
0.30159 0.15407 lineto
0.34127 0.18232 lineto
0.38095 0.2124 lineto
0.42063 0.24384 lineto
0.46032 0.2762 lineto
0.5 0.30902 lineto
0.53968 0.34183 lineto
0.57937 0.37419 lineto
0.61905 0.40564 lineto
0.65873 0.43571 lineto
0.69841 0.46396 lineto
0.7381 0.48992 lineto
0.77778 0.51315 lineto
0.81746 0.53317 lineto
0.85714 0.54954 lineto
0.87698 0.55621 lineto
0.89683 0.5618 lineto
0.91667 0.56624 lineto
0.93651 0.56949 lineto
0.94643 0.57064 lineto
0.95139 0.5711 lineto
0.95635 0.57148 lineto
0.96131 0.57177 lineto
0.96379 0.57189 lineto
0.96627 0.57198 lineto
0.96875 0.57206 lineto
0.96999 0.57209 lineto
0.97123 0.57211 lineto
0.97247 0.57213 lineto
0.97371 0.57214 lineto
0.97495 0.57215 lineto
0.97619 0.57215 lineto
Mistroke
Mfstroke
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 346 2123 a Fi(Fig)p Fq(.)15 b(53.)k(sin)q(\(sin)8
b Fh(x)p Fq(\))15 b(and)g(its)g(three)h(term)e(appro)o(ximation)h(on)h([)p
Fg(\000)p Fq(1)p Fh(;)8 b Fq(1].)75 2228 y Fn(Exercise)17 b(5.)126
2330 y Fq(a\))22 b(They)15 b(di\013er)h(only)f(at)g(the)g(7)680
2313 y Fe(th)730 2330 y Fq(p)q(o)o(w)o(er!)189 2429 y Fj(Series[Sin[Tan[x)o
(]],)j({x,)k(0,)f(7}])385 2479 y(3)87 b(5)152 b(7)363 2529
y(x)87 b(x)g(55)21 b(x)174 b(8)276 2579 y(x)21 b(+)h(--)f(-)h(--)f(-)h(-----)
f(+)g(O[x])363 2629 y(6)87 b(40)65 b(1008)p eop
%%Page: 88 88
88 87 bop 75 -103 a Fq(88)604 b Fm(Appro)n(ximation)23 b(b)n(y)g(T)-6
b(a)n(ylor)24 b(P)n(olynomials)p 725 -85 1150 2 v 189 99 a
Fj(Series[Tan[Sin[x)o(]],)18 b({x,)k(0,)f(7}])385 149 y(3)87
b(5)174 b(7)363 199 y(x)87 b(x)g(107)21 b(x)174 b(8)276 249
y(x)21 b(+)h(--)f(-)h(--)f(-)h(------)e(+)i(O[x])363 298 y(6)87
b(40)g(5040)123 429 y Fq(b\))23 b(See)17 b(Figures)g(54)f(and)h(55.)24
b(They)17 b(agree)g(w)o(ell)g(on)g(the)g(small)h(in)o(terv)m(al,)g(b)o(y)e
(din)o(t)i(of)e(the)h(similar)189 486 y(series)e(at)g Fh(x)e
Fq(=)g(0,)h(but)h(they)h(di\013er)f(drastically)i(a)o(w)o(a)o(y)c(from)i(the)
g(origin.)128 580 y(c\))23 b(Since)15 b(the)f(absolute)g(v)m(alue)h(of)f(sin)
g(is)h(alw)o(a)o(ys)e(less)h(than)g Fh(\031)r(=)p Fq(2,)f(the)h(graph)f(of)h
(tan\(sin)8 b Fh(x)p Fq(\))13 b(do)q(esn't)189 636 y(sho)o(w)e(an)o(y)h
(anomalies)h(\(b)o(y)e(the)i(w)o(a)o(y)l(,)e(despite)i(the)g(smo)q(oth)e
(graph)h(this)g(function)h(is)g Fl(not)j Fq(en)o(tire\).)571
1233 y @beginspecial 0 @llx 0 @lly 282 @urx 174 @ury 1937 @rwi
@setspecial
%%BeginDocument: Tay.ex5b1.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.02381 1.212609 0.014715 0.68882 [
[(0.2)] 0.26633 0.01472 0 2 Msboxa
[(0.4)] 0.50885 0.01472 0 2 Msboxa
[(0.6)] 0.75137 0.01472 0 2 Msboxa
[(0.8)] 0.9939 0.01472 0 2 Msboxa
[(0.2)] 0.01131 0.15248 1 0 Msboxa
[(0.4)] 0.01131 0.29024 1 0 Msboxa
[(0.6)] 0.01131 0.42801 1 0 Msboxa
[(0.8)] 0.01131 0.56577 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.26633 0.01472 moveto
0.26633 0.02097 lineto
stroke
grestore
[(0.2)] 0.26633 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.50885 0.01472 moveto
0.50885 0.02097 lineto
stroke
grestore
[(0.4)] 0.50885 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.75137 0.01472 moveto
0.75137 0.02097 lineto
stroke
grestore
[(0.6)] 0.75137 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.9939 0.01472 moveto
0.9939 0.02097 lineto
stroke
grestore
[(0.8)] 0.9939 0.01472 0 2 Mshowa
gsave
0.001 setlinewidth
0.07231 0.01472 moveto
0.07231 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.12082 0.01472 moveto
0.12082 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16932 0.01472 moveto
0.16932 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21783 0.01472 moveto
0.21783 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31484 0.01472 moveto
0.31484 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36334 0.01472 moveto
0.36334 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.41184 0.01472 moveto
0.41184 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46035 0.01472 moveto
0.46035 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.55736 0.01472 moveto
0.55736 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.60586 0.01472 moveto
0.60586 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.65437 0.01472 moveto
0.65437 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.70287 0.01472 moveto
0.70287 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.79988 0.01472 moveto
0.79988 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84838 0.01472 moveto
0.84838 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.89689 0.01472 moveto
0.89689 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.94539 0.01472 moveto
0.94539 0.01847 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.01472 moveto
1 0.01472 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0.15248 moveto
0.03006 0.15248 lineto
stroke
grestore
[(0.2)] 0.01131 0.15248 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.29024 moveto
0.03006 0.29024 lineto
stroke
grestore
[(0.4)] 0.01131 0.29024 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.42801 moveto
0.03006 0.42801 lineto
stroke
grestore
[(0.6)] 0.01131 0.42801 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.56577 moveto
0.03006 0.56577 lineto
stroke
grestore
[(0.8)] 0.01131 0.56577 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.04227 moveto
0.02756 0.04227 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.06982 moveto
0.02756 0.06982 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.09737 moveto
0.02756 0.09737 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.12493 moveto
0.02756 0.12493 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.18003 moveto
0.02756 0.18003 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.20758 moveto
0.02756 0.20758 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.23514 moveto
0.02756 0.23514 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.26269 moveto
0.02756 0.26269 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.3178 moveto
0.02756 0.3178 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.34535 moveto
0.02756 0.34535 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.3729 moveto
0.02756 0.3729 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.40045 moveto
0.02756 0.40045 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.45556 moveto
0.02756 0.45556 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.48311 moveto
0.02756 0.48311 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.51067 moveto
0.02756 0.51067 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.53822 moveto
0.02756 0.53822 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.59332 moveto
0.02756 0.59332 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.06349 0.03726 lineto
0.10317 0.05983 lineto
0.14286 0.08245 lineto
0.18254 0.10514 lineto
0.22222 0.12792 lineto
0.2619 0.15083 lineto
0.30159 0.17387 lineto
0.34127 0.19708 lineto
0.38095 0.22048 lineto
0.42063 0.24407 lineto
0.46032 0.26789 lineto
0.5 0.29194 lineto
0.53968 0.31625 lineto
0.57937 0.3408 lineto
0.61905 0.36561 lineto
0.65873 0.39068 lineto
0.69841 0.41597 lineto
0.7381 0.44148 lineto
0.77778 0.46714 lineto
0.81746 0.4929 lineto
0.85714 0.51866 lineto
0.89683 0.54429 lineto
0.93651 0.56959 lineto
0.97619 0.59434 lineto
stroke
grestore
grestore
gsave
0.5 setgray
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.06349 0.03726 lineto
0.10317 0.05983 lineto
0.14286 0.08245 lineto
0.18254 0.10514 lineto
0.22222 0.12792 lineto
0.2619 0.15083 lineto
0.30159 0.17387 lineto
0.34127 0.19709 lineto
0.38095 0.22048 lineto
0.42063 0.24408 lineto
0.46032 0.26791 lineto
0.5 0.29198 lineto
0.53968 0.31632 lineto
0.57937 0.34093 lineto
0.61905 0.36582 lineto
0.65873 0.39102 lineto
0.69841 0.41652 lineto
0.7381 0.44233 lineto
0.77778 0.46845 lineto
0.81746 0.49488 lineto
0.85714 0.52159 lineto
0.89683 0.54859 lineto
0.93651 0.57584 lineto
0.97619 0.60332 lineto
stroke
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 386 1320 a Fi(Fig)p Fq(.)f(54.)k(sin)q(\(tan)7
b Fh(x)p Fq(\))15 b(\(dark\))f(and)h(tan\(sin)8 b Fh(x)p Fq(\))15
b(\(ligh)o(t\))g(on)g([0)p Fh(;)8 b(\031)r(=)p Fq(4].)571 1908
y @beginspecial 0 @llx 0 @lly 282 @urx 174 @ury 1937 @rwi @setspecial
%%BeginDocument: Tay.ex5b2.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.02381 0.303152 0.244869 0.230158 [
[(0.5)] 0.17539 0.24487 0 2 Msboxa
[(1)] 0.32696 0.24487 0 2 Msboxa
[(1.5)] 0.47854 0.24487 0 2 Msboxa
[(2)] 0.63011 0.24487 0 2 Msboxa
[(2.5)] 0.78169 0.24487 0 2 Msboxa
[(3)] 0.93327 0.24487 0 2 Msboxa
[(-1)] 0.01131 0.01471 1 0 Msboxa
[(-0.5)] 0.01131 0.12979 1 0 Msboxa
[(0.5)] 0.01131 0.35995 1 0 Msboxa
[(1)] 0.01131 0.47503 1 0 Msboxa
[(1.5)] 0.01131 0.59011 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.17539 0.24487 moveto
0.17539 0.25112 lineto
stroke
grestore
[(0.5)] 0.17539 0.24487 0 2 Mshowa
gsave
0.002 setlinewidth
0.32696 0.24487 moveto
0.32696 0.25112 lineto
stroke
grestore
[(1)] 0.32696 0.24487 0 2 Mshowa
gsave
0.002 setlinewidth
0.47854 0.24487 moveto
0.47854 0.25112 lineto
stroke
grestore
[(1.5)] 0.47854 0.24487 0 2 Mshowa
gsave
0.002 setlinewidth
0.63011 0.24487 moveto
0.63011 0.25112 lineto
stroke
grestore
[(2)] 0.63011 0.24487 0 2 Mshowa
gsave
0.002 setlinewidth
0.78169 0.24487 moveto
0.78169 0.25112 lineto
stroke
grestore
[(2.5)] 0.78169 0.24487 0 2 Mshowa
gsave
0.002 setlinewidth
0.93327 0.24487 moveto
0.93327 0.25112 lineto
stroke
grestore
[(3)] 0.93327 0.24487 0 2 Mshowa
gsave
0.001 setlinewidth
0.05412 0.24487 moveto
0.05412 0.24862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.08444 0.24487 moveto
0.08444 0.24862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11476 0.24487 moveto
0.11476 0.24862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.14507 0.24487 moveto
0.14507 0.24862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2057 0.24487 moveto
0.2057 0.24862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.23602 0.24487 moveto
0.23602 0.24862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.26633 0.24487 moveto
0.26633 0.24862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29665 0.24487 moveto
0.29665 0.24862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35728 0.24487 moveto
0.35728 0.24862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38759 0.24487 moveto
0.38759 0.24862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.41791 0.24487 moveto
0.41791 0.24862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44822 0.24487 moveto
0.44822 0.24862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.50885 0.24487 moveto
0.50885 0.24862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53917 0.24487 moveto
0.53917 0.24862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56948 0.24487 moveto
0.56948 0.24862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5998 0.24487 moveto
0.5998 0.24862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.66043 0.24487 moveto
0.66043 0.24862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69074 0.24487 moveto
0.69074 0.24862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72106 0.24487 moveto
0.72106 0.24862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.75137 0.24487 moveto
0.75137 0.24862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81201 0.24487 moveto
0.81201 0.24862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84232 0.24487 moveto
0.84232 0.24862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.87264 0.24487 moveto
0.87264 0.24862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90295 0.24487 moveto
0.90295 0.24862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.96358 0.24487 moveto
0.96358 0.24862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9939 0.24487 moveto
0.9939 0.24862 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.24487 moveto
1 0.24487 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0.01471 moveto
0.03006 0.01471 lineto
stroke
grestore
[(-1)] 0.01131 0.01471 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.12979 moveto
0.03006 0.12979 lineto
stroke
grestore
[(-0.5)] 0.01131 0.12979 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.35995 moveto
0.03006 0.35995 lineto
stroke
grestore
[(0.5)] 0.01131 0.35995 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.47503 moveto
0.03006 0.47503 lineto
stroke
grestore
[(1)] 0.01131 0.47503 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.59011 moveto
0.03006 0.59011 lineto
stroke
grestore
[(1.5)] 0.01131 0.59011 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.03773 moveto
0.02756 0.03773 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.06074 moveto
0.02756 0.06074 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.08376 moveto
0.02756 0.08376 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.10677 moveto
0.02756 0.10677 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.15281 moveto
0.02756 0.15281 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.17582 moveto
0.02756 0.17582 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.19884 moveto
0.02756 0.19884 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.22185 moveto
0.02756 0.22185 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.26788 moveto
0.02756 0.26788 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.2909 moveto
0.02756 0.2909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.31392 moveto
0.02756 0.31392 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.33693 moveto
0.02756 0.33693 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.38296 moveto
0.02756 0.38296 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.40598 moveto
0.02756 0.40598 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.429 moveto
0.02756 0.429 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.45201 moveto
0.02756 0.45201 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.49804 moveto
0.02756 0.49804 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.52106 moveto
0.02756 0.52106 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.54407 moveto
0.02756 0.54407 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.56709 moveto
0.02756 0.56709 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.61312 moveto
0.02756 0.61312 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.24487 moveto
0.06349 0.27508 lineto
0.10317 0.3058 lineto
0.14286 0.3375 lineto
0.18254 0.37049 lineto
0.22222 0.40465 lineto
0.2619 0.43854 lineto
0.28175 0.45403 lineto
0.29167 0.46089 lineto
0.30159 0.46684 lineto
0.30655 0.46936 lineto
0.31151 0.4715 lineto
0.31399 0.47241 lineto
0.31647 0.4732 lineto
0.31895 0.47387 lineto
0.32143 0.47439 lineto
0.32267 0.4746 lineto
0.32391 0.47477 lineto
0.32515 0.4749 lineto
0.32639 0.47498 lineto
0.32763 0.47502 lineto
0.32887 0.47502 lineto
0.33011 0.47497 lineto
0.33135 0.47487 lineto
0.33259 0.47471 lineto
0.33383 0.47451 lineto
0.33631 0.47393 lineto
0.33879 0.47312 lineto
0.34127 0.47204 lineto
0.34623 0.46904 lineto
0.34871 0.46706 lineto
0.35119 0.46474 lineto
0.35615 0.45895 lineto
0.36111 0.45141 lineto
0.36607 0.44186 lineto
0.37103 0.42999 lineto
0.37599 0.41546 lineto
0.38095 0.3979 lineto
0.39087 0.3521 lineto
0.40079 0.28962 lineto
0.41071 0.20935 lineto
0.42063 0.11673 lineto
0.4256 0.07186 lineto
0.42808 0.05196 lineto
0.43056 0.03506 lineto
0.4318 0.02811 lineto
0.43304 0.0224 lineto
0.43428 0.01812 lineto
0.43552 0.01549 lineto
0.43676 0.01473 lineto
Mistroke
0.438 0.01606 lineto
0.43924 0.01975 lineto
0.44048 0.02603 lineto
0.44172 0.03516 lineto
0.44296 0.04736 lineto
0.44544 0.0818 lineto
0.44792 0.1305 lineto
0.4504 0.19323 lineto
0.45536 0.34669 lineto
0.45784 0.41936 lineto
0.45908 0.44783 lineto
0.46032 0.4674 lineto
0.46156 0.47501 lineto
0.4628 0.46765 lineto
0.46404 0.44273 lineto
0.46528 0.39873 lineto
0.46652 0.33608 lineto
0.46776 0.25818 lineto
0.469 0.17256 lineto
0.47024 0.09166 lineto
0.47148 0.03272 lineto
0.47272 0.01557 lineto
0.47396 0.05712 lineto
0.4752 0.16152 lineto
0.47644 0.30718 lineto
0.47768 0.43732 lineto
0.48016 0.34517 lineto
0.4814 0.12085 lineto
0.48264 0.01779 lineto
0.48388 0.23049 lineto
0.48512 0.47454 lineto
0.48636 0.19517 lineto
0.4876 0.09657 lineto
0.48884 0.45245 lineto
0.49008 0.06909 lineto
0.49132 0.16464 lineto
0.49256 0.26904 lineto
0.4938 0.01889 lineto
0.49504 0.01733 lineto
0.49628 0.19956 lineto
0.49752 0.31153 lineto
0.49876 0.11805 lineto
0.5 0.29664 lineto
0.50124 0.37169 lineto
0.50248 0.17821 lineto
0.50372 0.29018 lineto
0.50496 0.47241 lineto
0.5062 0.47085 lineto
0.50744 0.2207 lineto
0.50868 0.3251 lineto
Mistroke
0.50992 0.42065 lineto
0.51116 0.03729 lineto
0.5124 0.39317 lineto
0.51364 0.29457 lineto
0.51488 0.0152 lineto
0.51612 0.25925 lineto
0.51736 0.47195 lineto
0.5186 0.36888 lineto
0.51984 0.14457 lineto
0.52108 0.02025 lineto
0.52232 0.05241 lineto
0.52356 0.18256 lineto
0.5248 0.32822 lineto
0.52604 0.43261 lineto
0.52728 0.47417 lineto
0.52852 0.45702 lineto
0.52976 0.39808 lineto
0.53224 0.23156 lineto
0.53348 0.15366 lineto
0.53472 0.09101 lineto
0.53596 0.04701 lineto
0.5372 0.02208 lineto
0.53844 0.01472 lineto
0.53968 0.02234 lineto
0.54092 0.04191 lineto
0.54216 0.07038 lineto
0.54464 0.14305 lineto
0.5496 0.2965 lineto
0.55208 0.35924 lineto
0.55456 0.40793 lineto
0.5558 0.42689 lineto
0.55704 0.44238 lineto
0.55828 0.45458 lineto
0.55952 0.46371 lineto
0.56076 0.46999 lineto
0.562 0.47367 lineto
0.56324 0.47501 lineto
0.56448 0.47425 lineto
0.56572 0.47162 lineto
0.56696 0.46734 lineto
0.56944 0.45468 lineto
0.57192 0.43778 lineto
0.5744 0.41788 lineto
0.57937 0.37301 lineto
0.58929 0.28039 lineto
0.59921 0.20012 lineto
0.60913 0.13764 lineto
0.61409 0.11282 lineto
0.61905 0.09183 lineto
0.62897 0.05975 lineto
Mistroke
0.63393 0.04788 lineto
0.63889 0.03833 lineto
0.64385 0.03079 lineto
0.64881 0.025 lineto
0.65377 0.0207 lineto
0.65625 0.01905 lineto
0.65873 0.0177 lineto
0.66121 0.01662 lineto
0.66369 0.01581 lineto
0.66493 0.01549 lineto
0.66617 0.01523 lineto
0.66741 0.01502 lineto
0.66865 0.01487 lineto
0.66989 0.01477 lineto
0.67113 0.01472 lineto
0.67237 0.01472 lineto
0.67361 0.01476 lineto
0.67485 0.01484 lineto
0.67609 0.01497 lineto
0.67733 0.01514 lineto
0.67857 0.01534 lineto
0.68105 0.01587 lineto
0.68353 0.01653 lineto
0.68849 0.01824 lineto
0.69841 0.0229 lineto
0.71825 0.03571 lineto
0.7381 0.0512 lineto
0.77778 0.08509 lineto
0.81746 0.11925 lineto
0.85714 0.15224 lineto
0.89683 0.18393 lineto
0.93651 0.21466 lineto
0.97619 0.24487 lineto
Mfstroke
grestore
grestore
gsave
0.5 setgray
gsave
0.004 setlinewidth
0.02381 0.24487 moveto
0.06349 0.27508 lineto
0.10317 0.30581 lineto
0.14286 0.33751 lineto
0.18254 0.3706 lineto
0.22222 0.40531 lineto
0.2619 0.44154 lineto
0.30159 0.47872 lineto
0.34127 0.51549 lineto
0.38095 0.54957 lineto
0.42063 0.5778 lineto
0.44048 0.58861 lineto
0.4504 0.593 lineto
0.46032 0.59666 lineto
0.47024 0.59955 lineto
0.4752 0.6007 lineto
0.48016 0.60164 lineto
0.48512 0.60237 lineto
0.4876 0.60266 lineto
0.49008 0.6029 lineto
0.49256 0.60308 lineto
0.4938 0.60315 lineto
0.49504 0.60321 lineto
0.49628 0.60326 lineto
0.49752 0.60329 lineto
0.49876 0.60331 lineto
0.5 0.60332 lineto
0.50124 0.60331 lineto
0.50248 0.60329 lineto
0.50372 0.60326 lineto
0.50496 0.60321 lineto
0.50744 0.60308 lineto
0.50992 0.6029 lineto
0.5124 0.60266 lineto
0.51488 0.60237 lineto
0.51984 0.60164 lineto
0.52976 0.59955 lineto
0.53968 0.59666 lineto
0.55952 0.58861 lineto
0.57937 0.5778 lineto
0.61905 0.54957 lineto
0.65873 0.51549 lineto
0.69841 0.47872 lineto
0.7381 0.44154 lineto
0.77778 0.40531 lineto
0.81746 0.3706 lineto
0.85714 0.33751 lineto
0.89683 0.30581 lineto
0.93651 0.27508 lineto
0.97619 0.24487 lineto
Mistroke
Mfstroke
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 386 1995 a Fi(Fig)p Fq(.)15 b(55.)k(sin)q(\(tan)7
b Fh(x)p Fq(\))15 b(\(dark\))f(and)h(tan\(sin)8 b Fh(x)p Fq(\))15
b(\(ligh)o(t\))g(on)g([0)p Fh(;)8 b(\031)r(=)p Fq(2].)75 2101
y Fn(Exercise)17 b(6.)126 2215 y Fq(a\))22 b Fl(Mathematic)n(a)d
Fq(cannot)c(do)g(this)h(in)o(tegral.)123 2309 y(b\))23 b Fh(n)13
b Fq(=)g(11)h(pro)o(vides)i(a)f(go)q(o)q(d)g(lo)q(oking)h(\014t.)128
2403 y(c\))23 b(Here's)15 b(ho)o(w)f(to)h(do)g(the)g(in)o(tegration,)g
(taking)g(accoun)o(t)g(of)g(the)g(initial)j(conditions:)p eop
%%Page: 89 89
89 88 bop 75 -103 a Fm(Appro)n(ximation)23 b(b)n(y)g(T)-6 b(a)n(ylor)24
b(P)n(olynomials)p 75 -85 1150 2 v 603 w Fq(89)189 49 y Fj(gn)d(=)h
(Series[g[x],)d({x,)i(0,)g(11}])g(//Normal;)189 99 y(y0)g(=)h(0.3;)f(yp0)g(=)
g(-0.1;)189 149 y(yp)g(=)h(Integrate[gn,)d(x])i(+)h(yp0)450
199 y(2)131 b(4)f(6)196 b(8)g(10)428 249 y(x)87 b(7)22 b(x)87
b(9)21 b(x)87 b(1303)21 b(x)87 b(5357)21 b(x)276 298 y(-0.1)g(+)g(--)h(-)f
(----)g(+)h(----)f(-)g(-------)g(+)g(--------)f(-)428 348 y(2)109
b(24)g(80)f(40320)g(725760)494 448 y(12)319 498 y(223117)21
b(x)319 547 y(----------)319 597 y(159667200)189 697 y(y)g(=)h(Integrate[yp,)
d(x])i(+)h(y0)603 747 y(3)130 b(5)h(7)196 b(9)174 b(11)581
796 y(x)87 b(7)21 b(x)87 b(9)22 b(x)87 b(1303)21 b(x)87 b(487)21
b(x)276 846 y(0.3)g(-)h(0.1)f(x)g(+)h(--)f(-)h(----)f(+)g(----)g(-)h(-------)
e(+)i(-------)e(-)581 896 y(6)87 b(120)f(560)h(362880)f(725760)494
996 y(13)319 1046 y(223117)21 b(x)319 1095 y(----------)319
1145 y(2075673600)189 1270 y Fq(See)15 b(Figure)h(56)e(for)h(the)g(plot)h(of)
f Fh(y)r Fq(.)571 1827 y @beginspecial 0 @llx 0 @lly 282 @urx
174 @ury 1937 @rwi @setspecial
%%BeginDocument: Tay.ex5c.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.47619 -2.542197 9.504047 [
[(-1)] 0.02381 0.30902 0 2 Msboxa
[(-0.5)] 0.2619 0.30902 0 2 Msboxa
[(0.5)] 0.7381 0.30902 0 2 Msboxa
[(1)] 0.97619 0.30902 0 2 Msboxa
[(0.27)] 0.4875 0.0239 1 0 Msboxa
[(0.28)] 0.4875 0.11894 1 0 Msboxa
[(0.29)] 0.4875 0.21398 1 0 Msboxa
[(0.31)] 0.4875 0.40406 1 0 Msboxa
[(0.32)] 0.4875 0.4991 1 0 Msboxa
[(0.33)] 0.4875 0.59414 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.30902 moveto
0.02381 0.31527 lineto
stroke
grestore
[(-1)] 0.02381 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.30902 moveto
0.2619 0.31527 lineto
stroke
grestore
[(-0.5)] 0.2619 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.30902 moveto
0.7381 0.31527 lineto
stroke
grestore
[(0.5)] 0.7381 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.30902 moveto
0.97619 0.31527 lineto
stroke
grestore
[(1)] 0.97619 0.30902 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.30902 moveto
0.07143 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.30902 moveto
0.11905 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.30902 moveto
0.16667 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.30902 moveto
0.21429 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.30902 moveto
0.30952 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.30902 moveto
0.35714 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.30902 moveto
0.40476 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.30902 moveto
0.45238 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.30902 moveto
0.54762 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.30902 moveto
0.59524 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.30902 moveto
0.64286 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.30902 moveto
0.69048 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.30902 moveto
0.78571 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.30902 moveto
0.83333 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.30902 moveto
0.88095 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.30902 moveto
0.92857 0.31277 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.30902 moveto
1 0.30902 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.0239 moveto
0.50625 0.0239 lineto
stroke
grestore
[(0.27)] 0.4875 0.0239 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.11894 moveto
0.50625 0.11894 lineto
stroke
grestore
[(0.28)] 0.4875 0.11894 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.21398 moveto
0.50625 0.21398 lineto
stroke
grestore
[(0.29)] 0.4875 0.21398 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.40406 moveto
0.50625 0.40406 lineto
stroke
grestore
[(0.31)] 0.4875 0.40406 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.4991 moveto
0.50625 0.4991 lineto
stroke
grestore
[(0.32)] 0.4875 0.4991 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.59414 moveto
0.50625 0.59414 lineto
stroke
grestore
[(0.33)] 0.4875 0.59414 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.0429 moveto
0.50375 0.0429 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.06191 moveto
0.50375 0.06191 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.08092 moveto
0.50375 0.08092 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.09993 moveto
0.50375 0.09993 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13794 moveto
0.50375 0.13794 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.15695 moveto
0.50375 0.15695 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.17596 moveto
0.50375 0.17596 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.19497 moveto
0.50375 0.19497 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.23298 moveto
0.50375 0.23298 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.25199 moveto
0.50375 0.25199 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.271 moveto
0.50375 0.271 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.29001 moveto
0.50375 0.29001 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.32803 moveto
0.50375 0.32803 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.34703 moveto
0.50375 0.34703 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36604 moveto
0.50375 0.36604 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.38505 moveto
0.50375 0.38505 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.42307 moveto
0.50375 0.42307 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.44207 moveto
0.50375 0.44207 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.46108 moveto
0.50375 0.46108 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.48009 moveto
0.50375 0.48009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.51811 moveto
0.50375 0.51811 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.53711 moveto
0.50375 0.53711 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55612 moveto
0.50375 0.55612 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.57513 moveto
0.50375 0.57513 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.00489 moveto
0.50375 0.00489 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.61315 moveto
0.50375 0.61315 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.10584 moveto
0.06349 0.24936 lineto
0.10317 0.37037 lineto
0.14286 0.46706 lineto
0.18254 0.53817 lineto
0.20238 0.56394 lineto
0.2123 0.57438 lineto
0.22222 0.58319 lineto
0.23214 0.59038 lineto
0.24206 0.59597 lineto
0.24702 0.59817 lineto
0.25198 0.59997 lineto
0.25694 0.60139 lineto
0.25942 0.60195 lineto
0.2619 0.60241 lineto
0.26438 0.60278 lineto
0.26687 0.60305 lineto
0.26811 0.60315 lineto
0.26935 0.60323 lineto
0.27059 0.60328 lineto
0.27183 0.60331 lineto
0.27307 0.60332 lineto
0.27431 0.6033 lineto
0.27555 0.60326 lineto
0.27679 0.60319 lineto
0.27803 0.60311 lineto
0.27927 0.60299 lineto
0.28175 0.6027 lineto
0.28423 0.60232 lineto
0.28671 0.60184 lineto
0.29167 0.60061 lineto
0.29663 0.59902 lineto
0.30159 0.59708 lineto
0.31151 0.59214 lineto
0.32143 0.58584 lineto
0.34127 0.56936 lineto
0.36111 0.54806 lineto
0.38095 0.5224 lineto
0.42063 0.46016 lineto
0.46032 0.3873 lineto
0.5 0.30902 lineto
0.53968 0.23073 lineto
0.57937 0.15788 lineto
0.61905 0.09563 lineto
0.63889 0.06997 lineto
0.65873 0.04867 lineto
0.67857 0.03219 lineto
0.68849 0.02589 lineto
0.69841 0.02096 lineto
0.70337 0.01901 lineto
Mistroke
0.70833 0.01742 lineto
0.71081 0.01676 lineto
0.71329 0.0162 lineto
0.71577 0.01572 lineto
0.71825 0.01533 lineto
0.71949 0.01517 lineto
0.72073 0.01504 lineto
0.72197 0.01493 lineto
0.72321 0.01484 lineto
0.72445 0.01477 lineto
0.72569 0.01473 lineto
0.72693 0.01472 lineto
0.72817 0.01472 lineto
0.72941 0.01475 lineto
0.73065 0.0148 lineto
0.73189 0.01488 lineto
0.73313 0.01498 lineto
0.73562 0.01525 lineto
0.7381 0.01562 lineto
0.74306 0.01665 lineto
0.74802 0.01806 lineto
0.75794 0.02206 lineto
0.76786 0.02765 lineto
0.77778 0.03485 lineto
0.79762 0.05409 lineto
0.81746 0.07986 lineto
0.85714 0.15098 lineto
0.89683 0.24766 lineto
0.93651 0.36867 lineto
0.97619 0.51219 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 481 1914 a Fi(Fig)p Fq(.)g(56.)20 b(The)15 b(solution)h(of)f
(the)g(di\013eren)o(tial)i(equation.)p eop
%%Page: 90 90
90 89 bop 75 -103 a Fq(90)798 b Fm(T)-6 b(a)n(ylor)24 b(Series|Adv)l(anced)e
(Usage)p 919 -85 956 2 v 606 49 a Fn(PURPOSE)c(OF)g(THE)g(PR)o(OJECT)577
152 y(ANSWERS)f(F)o(OR)h(INSTR)o(UCTORS)75 248 y(Exercise)f(1.)j
Fq(They)15 b(di\013er)h(at)f(degree)g(7:)75 355 y Fj(ArcSin[ArcTan[x]])j(+)k
(O[x]^9)271 405 y(3)152 b(5)175 b(7)249 454 y(x)87 b(13)22
b(x)87 b(341)21 b(x)174 b(9)162 504 y(x)22 b(-)f(--)h(+)f(-----)g(-)h(------)
e(+)i(O[x])249 554 y(6)109 b(120)f(5040)75 654 y(ArcTan[ArcSin[x]])18
b(+)k(O[x]^9)271 703 y(3)152 b(5)175 b(7)249 753 y(x)87 b(13)22
b(x)87 b(173)21 b(x)174 b(9)162 803 y(x)22 b(-)f(--)h(+)f(-----)g(-)h(------)
e(+)i(O[x])249 853 y(6)109 b(120)f(5040)75 987 y Fn(Exercise)22
b(2.)31 b Fq(F)l(or)18 b(a)h(\(general\))g Fh(n)709 971 y Fe(th)764
987 y Fq(degree)g(p)q(olynomial,)i(computing)f(in)g(the)f(\\dum)o(b")g(w)o(a)
o(y)f(and)75 1044 y(coun)o(ting)12 b(up)f(from)g(the)g(linear)i(term)e(to)f
(the)i(quadratic)f(term,)h(etc.,)f(giv)o(es)g(1)r(+)r(2)r(+)r
Fh(:)d(:)g(:)r Fq(+)r Fh(n)14 b Fq(=)f Fh(n)p Fq(\()p Fh(n)r
Fq(+)r(1\))p Fh(=)p Fq(2)75 1100 y(m)o(ultiplications.)44 b(Doing)22
b(it)h(the)f(Horner)g(w)o(a)o(y)f(giv)o(es)i Fh(n)f Fq(m)o(ultiplications)j
(\(one)d(for)g(eac)o(h)g Fh(x)p Fq(\),)i(for)75 1157 y(a)c(sa)o(vings)h(of)f
Fh(n)p Fq(\()p Fh(n)14 b Fg(\000)g Fq(1\))p Fh(=)p Fq(2)19
b(m)o(ultiplications.)38 b(Th)o(us)21 b(for)f(the)h(stated)f(4)1367
1140 y Fe(th)1422 1157 y Fq(degree)h(p)q(olynomial,)i(w)o(e)75
1213 y(sa)o(v)o(e)18 b(6)g(m)o(ultiplications)j(and)e(for)f(a)g(similar)i
(general)f(6)1072 1197 y Fe(th)1126 1213 y Fq(degree)g(p)q(olynomial,)h(w)o
(e)f(w)o(ould)g(sa)o(v)o(e)f(15)75 1270 y(m)o(ultiplications.)75
1340 y Fn(Exercise)j(3.)31 b Fq(If)19 b(y)o(ou)f(lik)o(e,)j(p)q(oin)o(t)e
(out)f(to)g(the)h(studen)o(ts)g(that)f(for)g(these)h Fl(sp)n(e)n(cial)j
Fq(p)q(olynomials,)f(it)75 1390 y(w)o(ould)15 b(b)q(e)g(an)g(imp)q(ortan)o(t)
f(additional)i(econom)o(y)e(to)g(de\014ne)i(an)e(auxiliary)i(v)m(ariable)g
Fk(xsq=x*x)d Fq(instead)75 1440 y(of)i(making)g(3)g(calls)h(to)f(the)g(p)q(o)
o(w)o(er)g(function.)75 1547 y Fj(p)22 b(=)f(ArcSin[ArcTan[x]])d(+)k(O[x]^9)f
(//Normal;)75 1597 y(Horner[p,)f(x])h(//N//FortranForm)75 1646
y(x*\(1.)g(+)g(x**2*\(-0.166667)e(+)184 1696 y(-)152 b(x**2*\(0.108333)19
b(-)j(0.0676587*x**2\)\))o(\))75 1796 y(p)g(=)f(ArcSin[ArcTan[x]])d(+)k
(O[x]^9)f(//Normal;)75 1846 y(Horner[p,)f(x])h(//N//CForm)75
1896 y(x*\(1.)g(+)g(Power\(x,2\)*\(-0.1666)o(67)e(+)249 1945
y(Power\(x,2\)*\(0.10833)o(3)g(-)j(0.0676587*Power)o(\(x,2\))o(\)\)\))75
2073 y Fn(Exercise)17 b(4.)75 2180 y Fj(\(Cos[x])j(-)i(1)g(+)f(x^2/2\)/x^4)f
(+)h(O[x]^4)293 2230 y(2)162 2280 y(1)87 b(x)196 b(4)162 2330
y(--)22 b(-)f(---)g(+)h(O[x])162 2380 y(24)65 b(720)75 2429
y(Limit[\(Cos[x])19 b(-)j(1)f(+)h(x^2/2\)/x^4,)d(x)j(->)f(0])162
2479 y(1)162 2529 y(--)162 2579 y(24)p eop
%%Page: 91 91
91 90 bop 75 -103 a Fm(T)-6 b(a)n(ylor)24 b(Series|Adv)l(anced)d(Usage)p
75 -85 956 2 v 800 w Fq(91)75 49 y Fj(\(Sin[x^3])f(-)i(Sin[x]^3\)/x^5)d(+)i
(O[x]^4)337 99 y(2)162 149 y(1)65 b(13)22 b(x)174 b(4)162 199
y(-)22 b(-)f(-----)g(+)h(O[x])162 249 y(2)87 b(120)75 298 y(Limit[\(Sin[x^3])
19 b(-)i(Sin[x]^3\)/x^5,)e(x)j(->)f(0])162 348 y(1)162 398
y(-)162 448 y(2)75 547 y(\(Sin[Tan[x]])e(-)j(Tan[Sin[x]]\)/x^7)c(+)k(O[x]^4)
424 597 y(2)206 647 y(1)109 b(29)21 b(x)174 b(4)162 697 y(-\(--\))21
b(-)h(-----)e(+)i(O[x])206 747 y(30)108 b(756)75 846 y(Limit[\(Sin[Tan[x])o
(])19 b(-)j(Tan[Sin[x]]\)/x^7)o(,)d(x)j(->)f(0])206 896 y(1)162
946 y(-\(--\))206 996 y(30)75 1124 y Fn(Exercise)e(5.)26 b
Fq(W)l(e)17 b(include)i(calls)f(to)f Fk(DSolve)f Fq(whic)o(h,)i(as)f(exp)q
(ected,)h(sho)o(w)f(that)f(only)i(the)f(\014rst)f(DE)75 1174
y(has)f(an)g(elemen)o(tary)h(explicit)h(solution.)162 1282
y Fj(Clear[y,)j(a])162 1332 y(order)h(=)h(3;)162 1382 y(y)g(=)f(1)h(+)g
(Sum[a[k])e(x^k,)h({k,)g(1,)g(order}])g(+)g(O[x]^\(order+1\);)162
1432 y(y)h(/.)f(Solve[D[y,)f(x])h(==)h(y)f(+)h(x])489 1481
y(3)380 1531 y(2)65 b(x)174 b(4)162 1581 y({1)22 b(+)f(x)h(+)f(x)44
b(+)21 b(--)h(+)f(O[x])g(})467 1631 y(3)162 1681 y(Clear[y];)162
1730 y(DSolve[{y'[x])e(==)j(y[x])f(+)g(x,)h(y[0])f(==)g(1},)g(y[x],)g(x])554
1780 y(x)162 1830 y({{y[x])g(->)g(-1)g(+)h(2)g(E)43 b(-)22
b(x}})162 1930 y(Clear[y,)e(a])162 1980 y(order)h(=)h(3;)162
2029 y(y)g(=)f(1)h(+)g(Sum[a[k])e(x^k,)h({k,)g(1,)g(order}])g(+)g
(O[x]^\(order+1\);)162 2079 y(y)h(/.)f(Solve[D[y,)f(x])h(==)h(y^2)f(+)g(x^2])
533 2129 y(3)380 2179 y(2)65 b(4)22 b(x)174 b(4)162 2229 y({1)22
b(+)f(x)h(+)f(x)44 b(+)21 b(----)g(+)h(O[x])f(})489 2278 y(3)162
2328 y(Clear[y];)162 2378 y(DSolve[{y'[x])e(==)j(y[x]^2)e(+)i(x^2,)f(y[0])g
(==)g(1},)g(y[x],)g(x])554 2428 y(2)153 b(2)162 2478 y(DSolve[{y'[x])19
b(==)j(x)43 b(+)22 b(y[x])f(,)g(y[0])g(==)h(1},)f(y[x],)f(x])p
eop
%%Page: 92 92
92 91 bop 75 -103 a Fq(92)830 b Fm(F)-6 b(unctions)22 b(De\014ned)h(b)n(y)g
(In)n(tegrals)p 951 -85 925 2 v 606 49 a Fn(PURPOSE)18 b(OF)g(THE)g(PR)o
(OJECT)146 151 y Fq(Exercise)c(most)f(of)h(the)g(k)o(ey)f Fl(Mathematic)n(a)
18 b Fq(commands)c(\()p Fk(Plot)p Fq(,)e Fk(Table)p Fq(,)h
Fk(Series)p Fq(,)g Fk(D)p Fq(,)h Fk(Integrate)p Fq(\))75 208
y(in)22 b(the)f(con)o(text)g(of)g(exploring)h(sp)q(ecial)i(functions)e
(\(here)f(the)g(erf\).)38 b(There)21 b(is)h(a)f(little)i(digression)75
264 y(on)17 b(the)g(imp)q(ortan)o(t)f(reference)h(w)o(ork)f(of)g(Milton)i
(Abramo)o(witz)e(and)h(Irene)g(A.)g(Stegun|w)o(e)f(think)i(it)75
321 y(imp)q(ortan)o(t)d(that)f(studen)o(ts)h(appreciate)h(that)f(calculus)i
(is)e(the)h(do)q(orw)o(a)o(y)e(to)g(a)h(v)m(ast)g(amoun)o(t)g(of)f(math)75
377 y(and)h(science)i(and)f(not)e(the)i(whole)f(story)g(in)h(itself.)577
503 y Fn(ANSWERS)h(F)o(OR)h(INSTR)o(UCTORS)75 605 y(Exercise)f(1.)j
Fh(f)5 b Fq(\()p Fh(x)p Fq(\))12 b(=)h(1)p Fh(=x)p Fq(,)h Fh(F)6
b Fq(\()p Fh(z)r Fq(\))13 b(=)g(ln)8 b Fh(z)r Fq(,)15 b Fh(a)e
Fq(=)g(1,)h(and)i Fh(c)c Fq(=)h(1.)75 681 y Fn(Exercise)19
b(2.)24 b Fq(The)17 b(F)l(undamen)o(tal)g(Theorem)f(giv)o(es)h
Fh(D)9 b Fq(ln)f Fh(z)17 b Fq(=)f(1)p Fh(=z)r Fq(.)23 b(ln)9
b(1)14 b(=)i(0)g(b)o(y)h(a)f(basic)h(prop)q(ert)o(y)75 738
y(of)e(the)g(de\014nite)i(in)o(tegral.)75 815 y Fn(Exercise)g(3.)j
Fh(f)5 b Fq(\()p Fh(t)p Fq(\))13 b(=)g(exp\()p Fg(\000)p Fh(t)621
798 y Fe(2)641 815 y Fq(\),)i Fh(F)6 b Fq(\()p Fh(z)r Fq(\))12
b(=)h(erf\()p Fh(z)r Fq(\),)h Fh(a)f Fq(=)g(0,)i(and)g Fh(c)d
Fq(=)h(2)p Fh(=)1329 782 y Fg(p)p 1367 782 28 2 v 33 x Fh(\031)q
Fq(.)75 891 y Fn(Exercise)k(4.)j Fq(Set)15 b Fh(t)437 875 y
Fe(2)470 891 y Fq(=)e Fh(x)544 875 y Fe(2)564 891 y Fh(=)p
Fq(2)h(or)h Fh(x)e Fq(=)g Fh(t)783 854 y Fg(p)p 821 854 23
2 v 37 x Fq(2)i(to)f(obtain)670 1025 y Fh(P)6 b Fq(\()p Fh(z)r
Fq(\))13 b(=)825 958 y Fd(r)p 866 958 38 2 v 874 994 a Fq(2)p
871 1014 28 2 v 871 1056 a Fh(\031)914 1025 y Fg(\001)937 985
y(p)p 975 985 23 2 v 40 x Fq(2)1005 967 y Fd(Z)1046 980 y Ff(z)q(=)1081
953 y Fb(p)p 1111 953 18 2 v 1111 980 a Fe(2)1028 1062 y(0)1139
1025 y Fh(e)1160 1006 y Fb(\000)p Ff(t)1200 994 y Fc(2)1227
1025 y Fh(dt;)75 1150 y Fq(whic)o(h)j(immediately)h(giv)o(es)e
Fh(P)6 b Fq(\()p Fh(z)r Fq(\))13 b(=)g(erf\()p Fh(z)r(=)846
1112 y Fg(p)p 883 1112 23 2 v 883 1150 a Fq(2\).)75 1226 y
Fn(Exercise)k(5.)j Fq(erf\(0\))12 b(=)h(0)h(and)i(erf)699 1210
y Fb(0)711 1226 y Fq(\()p Fh(z)r Fq(\))c(=)h(2)p Fh(=)876 1194
y Fg(p)p 913 1194 28 2 v 913 1226 a Fh(\031)d Fq(exp\()p Fg(\000)p
Fh(z)1094 1210 y Fe(2)1114 1226 y Fq(\).)75 1297 y Fn(Exercise)17
b(6.)75 1402 y Fj(Log[1])162 1452 y(0)75 1501 y(D[Log[z],)j(z])162
1551 y(1)162 1601 y(-)162 1651 y(z)75 1701 y(Log'[z])162 1750
y(1)162 1800 y(-)162 1850 y(z)75 1975 y Fn(Exercise)d(7.)75
2081 y Fj(Table[{z,)j(ln[z],)g(Log[z]},)h({z,)g(1.0,)g(2.0,)g(0.1}])f
(//TableForm)162 2130 y(1.)87 b(0)239 b(0.)162 2180 y(1.1)65
b(0.0953102)e(0.0953102)162 2230 y(1.2)i(0.182322)85 b(0.182322)162
2280 y(1.3)65 b(0.262364)85 b(0.262364)162 2330 y(1.4)65 b(0.336472)85
b(0.336472)162 2380 y(1.5)65 b(0.405465)85 b(0.405465)162 2429
y(1.6)65 b(0.470004)85 b(0.470004)162 2479 y(1.7)65 b(0.530628)85
b(0.530628)162 2529 y(1.8)65 b(0.587787)85 b(0.587787)162 2579
y(1.9)65 b(0.641854)85 b(0.641854)162 2629 y(2.)i(0.693147)e(0.693147)p
eop
%%Page: 93 93
93 92 bop 75 -103 a Fm(F)-6 b(unctions)23 b(De\014ned)f(b)n(y)i(In)n(tegrals)
p 75 -85 925 2 v 830 w Fq(93)75 49 y Fn(Exercise)17 b(8.)75
157 y Fj(Erf[z])k(+)g(O[z]^7)533 207 y(3)239 b(5)206 257 y(2)21
b(z)196 b(2)22 b(z)239 b(z)262 b(7)162 307 y(--------)20 b(-)i(----------)e
(+)h(----------)f(+)i(O[z])162 356 y(Sqrt[Pi])64 b(3)21 b(Sqrt[Pi])64
b(5)22 b(Sqrt[Pi])75 485 y Fn(Exercise)17 b(9.)75 593 y Fj(p[z_])k(=)g
(Erf[z])g(+)g(O[z]^7)g(//Normal//N;)75 643 y(Table[{z,)f(erf[z],)g(Erf[z],)h
(p[z]},)f({z,)h(0.0,)g(2.0,)g(0.25}])g(//TableForm)162 693
y(0.)109 b(0.)195 b(0.)h(0.)162 742 y(0.25)65 b(0.276326)e(0.276326)h
(0.276328)162 792 y(0.5)87 b(0.5205)107 b(0.5205)h(0.5207)162
842 y(0.75)65 b(0.711156)e(0.711156)h(0.714383)162 892 y(1.)109
b(0.842701)63 b(0.842701)h(0.865091)162 942 y(1.25)h(0.9229)107
b(0.9229)h(1.02021)162 992 y(1.5)87 b(0.966105)63 b(0.966105)h(1.28001)162
1041 y(1.75)h(0.986672)e(0.986672)h(1.81088)162 1091 y(2.)109
b(0.995322)63 b(0.995322)h(2.85856)75 1220 y Fn(Exercise)17
b(10.)75 1328 y Fj(erf[Infinity])162 1378 y(1)75 1427 y(Erf[Infinity])162
1477 y(1)75 1613 y Fn(Exercise)i(11.)k Fq(See)18 b(Figure)e(57.)23
b(A)o(t)16 b(the)h(minim)o(um,)g(w)o(e)g(can)f(v)o(erify)h(that)f(the)g(v)m
(alues)i(at)e(0)g(and)h Fg(1)75 1669 y Fq(are)h(correct.)27
b(The)18 b(industrious)h(could)g(use)f(the)g(tic)o(k)g(v)m(alues)h(to)f
(estimate)f(the)h(slop)q(e)h(at)e(the)h(origin)75 1725 y(\(or)c(use)i(the)f
Fk(AspectRatio)f Fq(option\).)571 2285 y @beginspecial 0 @llx
0 @lly 282 @urx 174 @ury 1937 @rwi @setspecial
%%BeginDocument: LL.erf.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.095238 0.309017 0.294302 [
[(-4)] 0.11905 0.30902 0 2 Msboxa
[(-2)] 0.30952 0.30902 0 2 Msboxa
[(2)] 0.69048 0.30902 0 2 Msboxa
[(4)] 0.88095 0.30902 0 2 Msboxa
[(-1)] 0.4875 0.01472 1 0 Msboxa
[(-0.5)] 0.4875 0.16187 1 0 Msboxa
[(0.5)] 0.4875 0.45617 1 0 Msboxa
[(1)] 0.4875 0.60332 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.11905 0.30902 moveto
0.11905 0.31527 lineto
stroke
grestore
[(-4)] 0.11905 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.30952 0.30902 moveto
0.30952 0.31527 lineto
stroke
grestore
[(-2)] 0.30952 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.69048 0.30902 moveto
0.69048 0.31527 lineto
stroke
grestore
[(2)] 0.69048 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.88095 0.30902 moveto
0.88095 0.31527 lineto
stroke
grestore
[(4)] 0.88095 0.30902 0 2 Mshowa
gsave
0.001 setlinewidth
0.15714 0.30902 moveto
0.15714 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.19524 0.30902 moveto
0.19524 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.23333 0.30902 moveto
0.23333 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.27143 0.30902 moveto
0.27143 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.34762 0.30902 moveto
0.34762 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38571 0.30902 moveto
0.38571 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.42381 0.30902 moveto
0.42381 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.4619 0.30902 moveto
0.4619 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5381 0.30902 moveto
0.5381 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.57619 0.30902 moveto
0.57619 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.61429 0.30902 moveto
0.61429 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.65238 0.30902 moveto
0.65238 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72857 0.30902 moveto
0.72857 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.76667 0.30902 moveto
0.76667 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.80476 0.30902 moveto
0.80476 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84286 0.30902 moveto
0.84286 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.08095 0.30902 moveto
0.08095 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.04286 0.30902 moveto
0.04286 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.00476 0.30902 moveto
0.00476 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.91905 0.30902 moveto
0.91905 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.95714 0.30902 moveto
0.95714 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.99524 0.30902 moveto
0.99524 0.31277 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.30902 moveto
1 0.30902 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.01472 moveto
0.50625 0.01472 lineto
stroke
grestore
[(-1)] 0.4875 0.01472 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.16187 moveto
0.50625 0.16187 lineto
stroke
grestore
[(-0.5)] 0.4875 0.16187 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.45617 moveto
0.50625 0.45617 lineto
stroke
grestore
[(0.5)] 0.4875 0.45617 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.60332 moveto
0.50625 0.60332 lineto
stroke
grestore
[(1)] 0.4875 0.60332 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.04415 moveto
0.50375 0.04415 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.07358 moveto
0.50375 0.07358 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.10301 moveto
0.50375 0.10301 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13244 moveto
0.50375 0.13244 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1913 moveto
0.50375 0.1913 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22073 moveto
0.50375 0.22073 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.25016 moveto
0.50375 0.25016 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.27959 moveto
0.50375 0.27959 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.33845 moveto
0.50375 0.33845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36788 moveto
0.50375 0.36788 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.39731 moveto
0.50375 0.39731 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.42674 moveto
0.50375 0.42674 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.4856 moveto
0.50375 0.4856 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.51503 moveto
0.50375 0.51503 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54446 moveto
0.50375 0.54446 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.57389 moveto
0.50375 0.57389 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.02629 0.01472 lineto
0.02877 0.01472 lineto
0.03125 0.01472 lineto
0.03373 0.01472 lineto
0.03621 0.01472 lineto
0.03869 0.01472 lineto
0.04117 0.01472 lineto
0.04365 0.01472 lineto
0.04613 0.01472 lineto
0.04861 0.01472 lineto
0.05109 0.01472 lineto
0.05357 0.01472 lineto
0.05605 0.01472 lineto
0.05853 0.01472 lineto
0.06101 0.01472 lineto
0.06349 0.01472 lineto
0.06597 0.01472 lineto
0.06845 0.01472 lineto
0.07093 0.01472 lineto
0.07341 0.01472 lineto
0.07589 0.01472 lineto
0.07837 0.01472 lineto
0.08085 0.01472 lineto
0.08333 0.01472 lineto
0.08581 0.01472 lineto
0.08829 0.01472 lineto
0.09325 0.01472 lineto
0.09573 0.01472 lineto
0.09821 0.01472 lineto
0.10069 0.01472 lineto
0.10317 0.01472 lineto
0.10813 0.01472 lineto
0.11062 0.01472 lineto
0.1131 0.01472 lineto
0.11806 0.01472 lineto
0.12054 0.01472 lineto
0.12302 0.01472 lineto
0.1255 0.01472 lineto
0.12798 0.01472 lineto
0.13294 0.01472 lineto
0.13542 0.01472 lineto
0.1379 0.01472 lineto
0.14038 0.01472 lineto
0.14286 0.01472 lineto
0.14534 0.01472 lineto
0.14782 0.01472 lineto
0.1503 0.01472 lineto
0.15278 0.01472 lineto
0.15774 0.01472 lineto
Mistroke
0.16022 0.01472 lineto
0.1627 0.01472 lineto
0.16518 0.01472 lineto
0.16766 0.01472 lineto
0.17262 0.01472 lineto
0.1751 0.01472 lineto
0.17758 0.01472 lineto
0.18254 0.01472 lineto
0.1875 0.01472 lineto
0.19246 0.01472 lineto
0.19742 0.01472 lineto
0.20238 0.01472 lineto
0.20734 0.01472 lineto
0.2123 0.01472 lineto
0.21726 0.01472 lineto
0.22222 0.01473 lineto
0.22718 0.01473 lineto
0.23214 0.01474 lineto
0.2371 0.01474 lineto
0.24206 0.01475 lineto
0.24702 0.01477 lineto
0.25198 0.01478 lineto
0.25694 0.01481 lineto
0.2619 0.01483 lineto
0.26687 0.01487 lineto
0.27183 0.01492 lineto
0.27679 0.01499 lineto
0.28175 0.01507 lineto
0.28671 0.01517 lineto
0.29167 0.0153 lineto
0.29663 0.01546 lineto
0.30159 0.01566 lineto
0.31151 0.01622 lineto
0.31647 0.01661 lineto
0.32143 0.01707 lineto
0.32639 0.01764 lineto
0.33135 0.01833 lineto
0.34127 0.02014 lineto
0.35119 0.0227 lineto
0.36111 0.02624 lineto
0.37103 0.03104 lineto
0.38095 0.03741 lineto
0.39087 0.04566 lineto
0.40079 0.05613 lineto
0.42063 0.08493 lineto
0.44048 0.1256 lineto
0.46032 0.17826 lineto
0.5 0.30902 lineto
0.53968 0.43978 lineto
0.55952 0.49244 lineto
Mistroke
0.57937 0.5331 lineto
0.58929 0.5489 lineto
0.59921 0.56191 lineto
0.60913 0.57238 lineto
0.61905 0.58063 lineto
0.62897 0.58699 lineto
0.63889 0.59179 lineto
0.64881 0.59534 lineto
0.65873 0.5979 lineto
0.66865 0.59971 lineto
0.67361 0.60039 lineto
0.67857 0.60096 lineto
0.68353 0.60143 lineto
0.68849 0.60181 lineto
0.69345 0.60212 lineto
0.69841 0.60237 lineto
0.70833 0.60274 lineto
0.71329 0.60287 lineto
0.71825 0.60297 lineto
0.72321 0.60305 lineto
0.72817 0.60311 lineto
0.73313 0.60316 lineto
0.7381 0.6032 lineto
0.74306 0.60323 lineto
0.74802 0.60325 lineto
0.75298 0.60327 lineto
0.75794 0.60328 lineto
0.7629 0.60329 lineto
0.76786 0.6033 lineto
0.77282 0.6033 lineto
0.77778 0.60331 lineto
0.78274 0.60331 lineto
0.7877 0.60331 lineto
0.79266 0.60331 lineto
0.79762 0.60332 lineto
0.80258 0.60332 lineto
0.80754 0.60332 lineto
0.8125 0.60332 lineto
0.81746 0.60332 lineto
0.82242 0.60332 lineto
0.8249 0.60332 lineto
0.82738 0.60332 lineto
0.82986 0.60332 lineto
0.83234 0.60332 lineto
0.8373 0.60332 lineto
0.83978 0.60332 lineto
0.84226 0.60332 lineto
0.84474 0.60332 lineto
0.84722 0.60332 lineto
0.85218 0.60332 lineto
Mistroke
0.85466 0.60332 lineto
0.85714 0.60332 lineto
0.85962 0.60332 lineto
0.8621 0.60332 lineto
0.86706 0.60332 lineto
0.86954 0.60332 lineto
0.87202 0.60332 lineto
0.8745 0.60332 lineto
0.87698 0.60332 lineto
0.87946 0.60332 lineto
0.88194 0.60332 lineto
0.8869 0.60332 lineto
0.88938 0.60332 lineto
0.89187 0.60332 lineto
0.89435 0.60332 lineto
0.89683 0.60332 lineto
0.90179 0.60332 lineto
0.90427 0.60332 lineto
0.90675 0.60332 lineto
0.90923 0.60332 lineto
0.91171 0.60332 lineto
0.91667 0.60332 lineto
0.91915 0.60332 lineto
0.92163 0.60332 lineto
0.92411 0.60332 lineto
0.92659 0.60332 lineto
0.92907 0.60332 lineto
0.93155 0.60332 lineto
0.93403 0.60332 lineto
0.93651 0.60332 lineto
0.93899 0.60332 lineto
0.94147 0.60332 lineto
0.94395 0.60332 lineto
0.94643 0.60332 lineto
0.94891 0.60332 lineto
0.95139 0.60332 lineto
0.95387 0.60332 lineto
0.95635 0.60332 lineto
0.95883 0.60332 lineto
0.96131 0.60332 lineto
0.96379 0.60332 lineto
0.96627 0.60332 lineto
0.96875 0.60332 lineto
0.97123 0.60332 lineto
0.97371 0.60332 lineto
0.97619 0.60332 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 458 2371 a Fi(Fig)p Fq(.)h(57.)20 b(Output)15
b(from)g Fk(Plot[Erf[x],)22 b Fg(f)p Fk(x,)h(-5,)h(5)p Fg(g)p
Fk(])p Fq(.)p eop
%%Page: 94 94
94 93 bop 75 -103 a Fq(94)859 b Fm(Plotting)22 b(in)g(P)n(olar)h(Co)r
(ordinates)p 980 -85 895 2 v 606 49 a Fn(PURPOSE)18 b(OF)g(THE)g(PR)o(OJECT)
146 150 y Fq(Ha)o(v)o(e)12 b(fun)h(with)g(p)q(olar)g(plotting)h(and)f(do)g
(some)f(in)o(v)o(estigativ)o(e)h(science)i(along)e(the)f(w)o(a)o(y)l(.)19
b(W)l(e)13 b(found)75 206 y(it)21 b(instructiv)o(e)i(to)d(observ)o(e)h(the)g
(complexit)o(y)h(that)f(arises)g(from)g(suc)o(h)g(simple)i(functions)f(\(see)
f(the)75 263 y(\014gures)d(b)q(elo)o(w\).)29 b(It)18 b(is)h(a)e(t)o(ypical)i
(instance)g(of)f(go)q(o)q(d)g(mathematics)f(residing)j(in)f(the)f(most)f(h)o
(um)o(ble)75 319 y(problems.)75 388 y Fn(Instructor)g(Note)p
Fq(:)36 b(The)16 b(Instructor's)e(noteb)q(o)q(ok)i(con)o(tains)f(a)g(mo)q
(dule)i(for)e(pro)q(ducing)h(p)q(olar)g(ani-)75 438 y(mations)f(suitable)h
(for)f(classro)q(om)g(demonstrations.)k(Here)d(is)g(a)e(t)o(ypical)i(usage:)
75 533 y Fj(k)22 b(=)f(2;)75 583 y(r[t_])g(:=)g(Sin[k)g(t])75
633 y(PolarAnimation[r,)d({Pi/4,)j(2Pi,)g(Pi/4},)249 683 y(PlotRange)f(->)i
({{-1.1,)e(1.1},)h({-1.1,)f(1.1}})75 732 y(])75 835 y Fq(The)14
b(\014rst)f(four)h(frames)f(are)g(sho)o(wn)h(in)g(Figure)g(58.)19
b(The)14 b(blac)o(k)g(dot)f(and)h(the)g(title)h(indicate)g(the)f(v)m(alue)75
891 y(of)h Fh(\022)i Fq(at)d(the)h(upp)q(er)i(end)e(of)g(the)g(in)o(terv)m
(al)i(for)d(that)h(frame.)484 1942 y @beginspecial 0 @llx 0
@lly 570 @urx 578 @ury 2357 @rwi @setspecial
%%BeginDocument: Pol.animation.eps


/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /TDeps_dict 20 dict def TDeps_dict begin /showpage {
    
} def /copypage {
    
} def /grestoreall {
    
} def /erasepage {
    
} def /nulldevice {
    
} def /exitserver {
    
} def /initgraphics {
    
} def /renderbands {
    
} def /initmatrix {
    
} def /banddevice {
    
} def /setpageparams {
    
} def /framedevice {
    
} def /note {
    
} def end end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
gsave
0 0 570 578 rectclip
-19 -141 translate
19 141 570 578 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
gsave clpmt currentmatrix pop newpath
1 0 0 1.010638 -146 176.287262 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -146 179] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.454545 0.5 0.454545 [
[(-1)] 0.04545 0.5 0 2 Msboxa
[(-0.5)] 0.27273 0.5 0 2 Msboxa
[(0.5)] 0.72727 0.5 0 2 Msboxa
[(1)] 0.95455 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(0.25 Pi)] 0.5 1 0 -2 Msboxa
grestore
[(-1)] 0.4875 0.04545 1 0 Msboxa
[(-0.5)] 0.4875 0.27273 1 0 Msboxa
[(0.5)] 0.4875 0.72727 1 0 Msboxa
[(1)] 0.4875 0.95455 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.04545 0.5 moveto
0.04545 0.50625 lineto
stroke
grestore
[(-1)] 0.04545 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.27273 0.5 moveto
0.27273 0.50625 lineto
stroke
grestore
[(-0.5)] 0.27273 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.72727 0.5 moveto
0.72727 0.50625 lineto
stroke
grestore
[(0.5)] 0.72727 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.95455 0.5 moveto
0.95455 0.50625 lineto
stroke
grestore
[(1)] 0.95455 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.09091 0.5 moveto
0.09091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.13636 0.5 moveto
0.13636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18182 0.5 moveto
0.18182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22727 0.5 moveto
0.22727 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31818 0.5 moveto
0.31818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36364 0.5 moveto
0.36364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40909 0.5 moveto
0.40909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45455 0.5 moveto
0.45455 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54545 0.5 moveto
0.54545 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59091 0.5 moveto
0.59091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63636 0.5 moveto
0.63636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.68182 0.5 moveto
0.68182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77273 0.5 moveto
0.77273 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81818 0.5 moveto
0.81818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.86364 0.5 moveto
0.86364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90909 0.5 moveto
0.90909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.5 moveto
0 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
1 0.5 moveto
1 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(0.25 Pi)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.04545 moveto
0.50625 0.04545 lineto
stroke
grestore
[(-1)] 0.4875 0.04545 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.27273 moveto
0.50625 0.27273 lineto
stroke
grestore
[(-0.5)] 0.4875 0.27273 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.72727 moveto
0.50625 0.72727 lineto
stroke
grestore
[(0.5)] 0.4875 0.72727 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.95455 moveto
0.50625 0.95455 lineto
stroke
grestore
[(1)] 0.4875 0.95455 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.09091 moveto
0.50375 0.09091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13636 moveto
0.50375 0.13636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18182 moveto
0.50375 0.18182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22727 moveto
0.50375 0.22727 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31818 moveto
0.50375 0.31818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36364 moveto
0.50375 0.36364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40909 moveto
0.50375 0.40909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45455 moveto
0.50375 0.45455 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54545 moveto
0.50375 0.54545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59091 moveto
0.50375 0.59091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.63636 moveto
0.50375 0.63636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.68182 moveto
0.50375 0.68182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.77273 moveto
0.50375 0.77273 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.81818 moveto
0.50375 0.81818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.86364 moveto
0.50375 0.86364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90909 moveto
0.50375 0.90909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0 moveto
0.50375 0 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1 moveto
0.50375 1 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.5 0.5 moveto
0.50093 0.5 lineto
0.50186 0.5 lineto
0.50279 0.50001 lineto
0.50372 0.50002 lineto
0.50465 0.50002 lineto
0.50558 0.50003 lineto
0.50744 0.50006 lineto
0.5093 0.5001 lineto
0.51115 0.50014 lineto
0.51487 0.50024 lineto
0.51858 0.50038 lineto
0.5223 0.50055 lineto
0.52971 0.50097 lineto
0.53711 0.50152 lineto
0.5445 0.50219 lineto
0.5592 0.50388 lineto
0.5738 0.50605 lineto
0.58825 0.50869 lineto
0.61664 0.51536 lineto
0.64416 0.5238 lineto
0.6706 0.53394 lineto
0.69579 0.54565 lineto
0.71953 0.55882 lineto
0.74166 0.57331 lineto
0.76202 0.58895 lineto
0.78049 0.60557 lineto
0.79695 0.623 lineto
0.81128 0.64104 lineto
0.82343 0.6595 lineto
0.83331 0.67816 lineto
0.8374 0.68751 lineto
0.84091 0.69682 lineto
0.84384 0.70609 lineto
0.84619 0.71528 lineto
0.84797 0.72436 lineto
0.84864 0.72885 lineto
0.84917 0.73331 lineto
0.84938 0.73552 lineto
0.84956 0.73773 lineto
0.8497 0.73992 lineto
0.84975 0.74101 lineto
0.8498 0.7421 lineto
0.84984 0.74319 lineto
0.84987 0.74427 lineto
0.84988 0.74481 lineto
0.84989 0.74535 lineto
0.8499 0.74589 lineto
0.84991 0.74643 lineto
0.84991 0.74697 lineto
Mistroke
0.84991 0.74751 lineto
0.84991 0.74804 lineto
0.8499 0.74858 lineto
0.8499 0.74911 lineto
0.84989 0.74965 lineto
0.84988 0.75018 lineto
0.84987 0.75071 lineto
0.84984 0.75177 lineto
0.8498 0.75283 lineto
0.84969 0.75494 lineto
0.84955 0.75703 lineto
0.84937 0.75911 lineto
0.84892 0.76323 lineto
0.84833 0.76728 lineto
0.84674 0.77519 lineto
0.84462 0.78282 lineto
0.84197 0.79014 lineto
0.83882 0.79714 lineto
0.83105 0.81006 lineto
0.82141 0.82141 lineto
Mfstroke
grestore
grestore
0.03 setlinewidth
0.82141 0.82141 Mdot
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1.010638 -146 176.287262 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.010638 141 176.287155 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 141 179] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.454545 0.5 0.454545 [
[(-1)] 0.04545 0.5 0 2 Msboxa
[(-0.5)] 0.27273 0.5 0 2 Msboxa
[(0.5)] 0.72727 0.5 0 2 Msboxa
[(1)] 0.95455 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(0.5 Pi)] 0.5 1 0 -2 Msboxa
grestore
[(-1)] 0.4875 0.04545 1 0 Msboxa
[(-0.5)] 0.4875 0.27273 1 0 Msboxa
[(0.5)] 0.4875 0.72727 1 0 Msboxa
[(1)] 0.4875 0.95455 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.04545 0.5 moveto
0.04545 0.50625 lineto
stroke
grestore
[(-1)] 0.04545 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.27273 0.5 moveto
0.27273 0.50625 lineto
stroke
grestore
[(-0.5)] 0.27273 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.72727 0.5 moveto
0.72727 0.50625 lineto
stroke
grestore
[(0.5)] 0.72727 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.95455 0.5 moveto
0.95455 0.50625 lineto
stroke
grestore
[(1)] 0.95455 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.09091 0.5 moveto
0.09091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.13636 0.5 moveto
0.13636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18182 0.5 moveto
0.18182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22727 0.5 moveto
0.22727 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31818 0.5 moveto
0.31818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36364 0.5 moveto
0.36364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40909 0.5 moveto
0.40909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45455 0.5 moveto
0.45455 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54545 0.5 moveto
0.54545 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59091 0.5 moveto
0.59091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63636 0.5 moveto
0.63636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.68182 0.5 moveto
0.68182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77273 0.5 moveto
0.77273 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81818 0.5 moveto
0.81818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.86364 0.5 moveto
0.86364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90909 0.5 moveto
0.90909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.5 moveto
0 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
1 0.5 moveto
1 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(0.5 Pi)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.04545 moveto
0.50625 0.04545 lineto
stroke
grestore
[(-1)] 0.4875 0.04545 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.27273 moveto
0.50625 0.27273 lineto
stroke
grestore
[(-0.5)] 0.4875 0.27273 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.72727 moveto
0.50625 0.72727 lineto
stroke
grestore
[(0.5)] 0.4875 0.72727 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.95455 moveto
0.50625 0.95455 lineto
stroke
grestore
[(1)] 0.4875 0.95455 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.09091 moveto
0.50375 0.09091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13636 moveto
0.50375 0.13636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18182 moveto
0.50375 0.18182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22727 moveto
0.50375 0.22727 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31818 moveto
0.50375 0.31818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36364 moveto
0.50375 0.36364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40909 moveto
0.50375 0.40909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45455 moveto
0.50375 0.45455 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54545 moveto
0.50375 0.54545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59091 moveto
0.50375 0.59091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.63636 moveto
0.50375 0.63636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.68182 moveto
0.50375 0.68182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.77273 moveto
0.50375 0.77273 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.81818 moveto
0.50375 0.81818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.86364 moveto
0.50375 0.86364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90909 moveto
0.50375 0.90909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0 moveto
0.50375 0 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1 moveto
0.50375 1 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.5 0.5 moveto
0.50186 0.5 lineto
0.50372 0.50002 lineto
0.50558 0.50003 lineto
0.50744 0.50006 lineto
0.5093 0.5001 lineto
0.51115 0.50014 lineto
0.51487 0.50024 lineto
0.51858 0.50038 lineto
0.5223 0.50055 lineto
0.52971 0.50097 lineto
0.53711 0.50152 lineto
0.5445 0.50219 lineto
0.5592 0.50388 lineto
0.5738 0.50605 lineto
0.58825 0.50869 lineto
0.61664 0.51536 lineto
0.64416 0.5238 lineto
0.6706 0.53394 lineto
0.71953 0.55882 lineto
0.76202 0.58895 lineto
0.79695 0.623 lineto
0.81128 0.64104 lineto
0.82343 0.6595 lineto
0.83331 0.67816 lineto
0.84091 0.69682 lineto
0.84384 0.70609 lineto
0.84619 0.71528 lineto
0.84715 0.71983 lineto
0.84797 0.72436 lineto
0.84864 0.72885 lineto
0.84917 0.73331 lineto
0.84938 0.73552 lineto
0.84956 0.73773 lineto
0.8497 0.73992 lineto
0.84975 0.74101 lineto
0.8498 0.7421 lineto
0.84984 0.74319 lineto
0.84987 0.74427 lineto
0.84989 0.74535 lineto
0.84991 0.74643 lineto
0.84991 0.74751 lineto
0.8499 0.74858 lineto
0.84989 0.74965 lineto
0.84987 0.75071 lineto
0.84984 0.75177 lineto
0.8498 0.75283 lineto
0.84969 0.75494 lineto
0.84955 0.75703 lineto
0.84937 0.75911 lineto
Mistroke
0.84892 0.76323 lineto
0.84833 0.76728 lineto
0.84674 0.77519 lineto
0.84462 0.78282 lineto
0.84197 0.79014 lineto
0.83882 0.79714 lineto
0.83105 0.81006 lineto
0.82141 0.82141 lineto
0.81006 0.83105 lineto
0.80378 0.83517 lineto
0.79714 0.83882 lineto
0.79014 0.84197 lineto
0.78282 0.84462 lineto
0.77519 0.84674 lineto
0.77127 0.8476 lineto
0.76728 0.84833 lineto
0.76323 0.84892 lineto
0.76118 0.84916 lineto
0.75911 0.84937 lineto
0.75703 0.84955 lineto
0.75494 0.84969 lineto
0.75283 0.8498 lineto
0.75177 0.84984 lineto
0.75071 0.84987 lineto
0.74965 0.84989 lineto
0.74858 0.8499 lineto
0.74751 0.84991 lineto
0.74643 0.84991 lineto
0.74535 0.84989 lineto
0.74427 0.84987 lineto
0.74319 0.84984 lineto
0.7421 0.8498 lineto
0.73992 0.8497 lineto
0.73773 0.84956 lineto
0.73331 0.84917 lineto
0.72885 0.84864 lineto
0.72436 0.84797 lineto
0.71528 0.84619 lineto
0.70609 0.84384 lineto
0.69682 0.84091 lineto
0.67816 0.83331 lineto
0.6595 0.82343 lineto
0.623 0.79695 lineto
0.58895 0.76202 lineto
0.55882 0.71953 lineto
0.54565 0.69579 lineto
0.53394 0.6706 lineto
0.5238 0.64416 lineto
0.51536 0.61664 lineto
0.50869 0.58825 lineto
Mistroke
0.50605 0.5738 lineto
0.50388 0.5592 lineto
0.50219 0.5445 lineto
0.50152 0.53711 lineto
0.50097 0.52971 lineto
0.50055 0.5223 lineto
0.50038 0.51858 lineto
0.50024 0.51487 lineto
0.50014 0.51115 lineto
0.5001 0.5093 lineto
0.50006 0.50744 lineto
0.50003 0.50558 lineto
0.50002 0.50372 lineto
0.5 0.50186 lineto
0.5 0.5 lineto
Mfstroke
grestore
grestore
0.03 setlinewidth
0.5 0.95455 Mdot
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1.010638 141 176.287155 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.010638 -146 -115.712738 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -146 -113] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.454545 0.5 0.454545 [
[(-1)] 0.04545 0.5 0 2 Msboxa
[(-0.5)] 0.27273 0.5 0 2 Msboxa
[(0.5)] 0.72727 0.5 0 2 Msboxa
[(1)] 0.95455 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(0.75 Pi)] 0.5 1 0 -2 Msboxa
grestore
[(-1)] 0.4875 0.04545 1 0 Msboxa
[(-0.5)] 0.4875 0.27273 1 0 Msboxa
[(0.5)] 0.4875 0.72727 1 0 Msboxa
[(1)] 0.4875 0.95455 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.04545 0.5 moveto
0.04545 0.50625 lineto
stroke
grestore
[(-1)] 0.04545 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.27273 0.5 moveto
0.27273 0.50625 lineto
stroke
grestore
[(-0.5)] 0.27273 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.72727 0.5 moveto
0.72727 0.50625 lineto
stroke
grestore
[(0.5)] 0.72727 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.95455 0.5 moveto
0.95455 0.50625 lineto
stroke
grestore
[(1)] 0.95455 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.09091 0.5 moveto
0.09091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.13636 0.5 moveto
0.13636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18182 0.5 moveto
0.18182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22727 0.5 moveto
0.22727 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31818 0.5 moveto
0.31818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36364 0.5 moveto
0.36364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40909 0.5 moveto
0.40909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45455 0.5 moveto
0.45455 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54545 0.5 moveto
0.54545 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59091 0.5 moveto
0.59091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63636 0.5 moveto
0.63636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.68182 0.5 moveto
0.68182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77273 0.5 moveto
0.77273 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81818 0.5 moveto
0.81818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.86364 0.5 moveto
0.86364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90909 0.5 moveto
0.90909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.5 moveto
0 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
1 0.5 moveto
1 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(0.75 Pi)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.04545 moveto
0.50625 0.04545 lineto
stroke
grestore
[(-1)] 0.4875 0.04545 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.27273 moveto
0.50625 0.27273 lineto
stroke
grestore
[(-0.5)] 0.4875 0.27273 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.72727 moveto
0.50625 0.72727 lineto
stroke
grestore
[(0.5)] 0.4875 0.72727 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.95455 moveto
0.50625 0.95455 lineto
stroke
grestore
[(1)] 0.4875 0.95455 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.09091 moveto
0.50375 0.09091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13636 moveto
0.50375 0.13636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18182 moveto
0.50375 0.18182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22727 moveto
0.50375 0.22727 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31818 moveto
0.50375 0.31818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36364 moveto
0.50375 0.36364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40909 moveto
0.50375 0.40909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45455 moveto
0.50375 0.45455 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54545 moveto
0.50375 0.54545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59091 moveto
0.50375 0.59091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.63636 moveto
0.50375 0.63636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.68182 moveto
0.50375 0.68182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.77273 moveto
0.50375 0.77273 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.81818 moveto
0.50375 0.81818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.86364 moveto
0.50375 0.86364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90909 moveto
0.50375 0.90909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0 moveto
0.50375 0 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1 moveto
0.50375 1 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.5 0.5 moveto
0.50279 0.50001 lineto
0.50558 0.50003 lineto
0.50837 0.50008 lineto
0.51115 0.50014 lineto
0.51673 0.50031 lineto
0.5223 0.50055 lineto
0.52786 0.50086 lineto
0.53342 0.50123 lineto
0.5445 0.50219 lineto
0.55554 0.50341 lineto
0.56651 0.50491 lineto
0.58825 0.50869 lineto
0.60961 0.51352 lineto
0.63052 0.51936 lineto
0.6706 0.53394 lineto
0.70785 0.55206 lineto
0.74166 0.57331 lineto
0.7715 0.59715 lineto
0.79695 0.623 lineto
0.81763 0.65023 lineto
0.82611 0.66415 lineto
0.83331 0.67816 lineto
0.83923 0.69217 lineto
0.84384 0.70609 lineto
0.84566 0.71299 lineto
0.84715 0.71983 lineto
0.84832 0.72661 lineto
0.84879 0.72997 lineto
0.84917 0.73331 lineto
0.84947 0.73663 lineto
0.8496 0.73828 lineto
0.8497 0.73992 lineto
0.84978 0.74156 lineto
0.84984 0.74319 lineto
0.84988 0.74481 lineto
0.84991 0.74643 lineto
0.84991 0.74804 lineto
0.84989 0.74965 lineto
0.84985 0.75124 lineto
0.8498 0.75283 lineto
0.84972 0.75441 lineto
0.84962 0.75599 lineto
0.84937 0.75911 lineto
0.84905 0.7622 lineto
0.84864 0.76526 lineto
0.8476 0.77127 lineto
0.84626 0.77713 lineto
0.84462 0.78282 lineto
0.84046 0.79368 lineto
Mistroke
0.83517 0.80378 lineto
0.82881 0.81305 lineto
0.82141 0.82141 lineto
0.81305 0.82881 lineto
0.80378 0.83517 lineto
0.79368 0.84046 lineto
0.78834 0.84268 lineto
0.78282 0.84462 lineto
0.77713 0.84626 lineto
0.77127 0.8476 lineto
0.76828 0.84816 lineto
0.76526 0.84864 lineto
0.7622 0.84905 lineto
0.75911 0.84937 lineto
0.75755 0.84951 lineto
0.75599 0.84962 lineto
0.75441 0.84972 lineto
0.75283 0.8498 lineto
0.75124 0.84985 lineto
0.74965 0.84989 lineto
0.74804 0.84991 lineto
0.74643 0.84991 lineto
0.74481 0.84988 lineto
0.74319 0.84984 lineto
0.74156 0.84978 lineto
0.73992 0.8497 lineto
0.73663 0.84947 lineto
0.73331 0.84917 lineto
0.72661 0.84832 lineto
0.71983 0.84715 lineto
0.70609 0.84384 lineto
0.69217 0.83923 lineto
0.67816 0.83331 lineto
0.65023 0.81763 lineto
0.623 0.79695 lineto
0.59715 0.7715 lineto
0.57331 0.74166 lineto
0.55206 0.70785 lineto
0.53394 0.6706 lineto
0.52618 0.65088 lineto
0.51936 0.63052 lineto
0.51352 0.60961 lineto
0.50869 0.58825 lineto
0.50491 0.56651 lineto
0.50341 0.55554 lineto
0.50219 0.5445 lineto
0.50123 0.53342 lineto
0.50086 0.52786 lineto
0.50055 0.5223 lineto
0.50031 0.51673 lineto
Mistroke
0.50021 0.51394 lineto
0.50014 0.51115 lineto
0.50008 0.50837 lineto
0.50003 0.50558 lineto
0.50001 0.50279 lineto
0.5 0.5 lineto
0.50001 0.49721 lineto
0.50003 0.49442 lineto
0.50008 0.49163 lineto
0.50014 0.48885 lineto
0.50031 0.48327 lineto
0.50055 0.4777 lineto
0.50086 0.47214 lineto
0.50123 0.46658 lineto
0.50219 0.4555 lineto
0.50341 0.44446 lineto
0.50491 0.43349 lineto
0.50869 0.41175 lineto
0.51352 0.39039 lineto
0.51936 0.36948 lineto
0.53394 0.3294 lineto
0.55206 0.29215 lineto
0.57331 0.25834 lineto
0.59715 0.2285 lineto
0.623 0.20305 lineto
0.65023 0.18237 lineto
0.66415 0.17389 lineto
0.67816 0.16669 lineto
0.69217 0.16077 lineto
0.70609 0.15616 lineto
0.71299 0.15434 lineto
0.71983 0.15285 lineto
0.72661 0.15168 lineto
0.72997 0.15121 lineto
0.73331 0.15083 lineto
0.73663 0.15053 lineto
0.73828 0.1504 lineto
0.73992 0.1503 lineto
0.74156 0.15022 lineto
0.74319 0.15016 lineto
0.74481 0.15012 lineto
0.74643 0.15009 lineto
0.74804 0.15009 lineto
0.74965 0.15011 lineto
0.75124 0.15015 lineto
0.75283 0.1502 lineto
0.75441 0.15028 lineto
0.75599 0.15038 lineto
0.75911 0.15063 lineto
0.7622 0.15095 lineto
Mistroke
0.76526 0.15136 lineto
0.77127 0.1524 lineto
0.77713 0.15374 lineto
0.78282 0.15538 lineto
0.79368 0.15954 lineto
0.80378 0.16483 lineto
0.81305 0.17119 lineto
0.82141 0.17859 lineto
Mfstroke
grestore
grestore
0.03 setlinewidth
0.17859 0.82141 Mdot
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1.010638 -146 -115.712738 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.010638 141 -115.712738 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 141 -113] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.454545 0.5 0.454545 [
[(-1)] 0.04545 0.5 0 2 Msboxa
[(-0.5)] 0.27273 0.5 0 2 Msboxa
[(0.5)] 0.72727 0.5 0 2 Msboxa
[(1)] 0.95455 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(1. Pi)] 0.5 1 0 -2 Msboxa
grestore
[(-1)] 0.4875 0.04545 1 0 Msboxa
[(-0.5)] 0.4875 0.27273 1 0 Msboxa
[(0.5)] 0.4875 0.72727 1 0 Msboxa
[(1)] 0.4875 0.95455 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.04545 0.5 moveto
0.04545 0.50625 lineto
stroke
grestore
[(-1)] 0.04545 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.27273 0.5 moveto
0.27273 0.50625 lineto
stroke
grestore
[(-0.5)] 0.27273 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.72727 0.5 moveto
0.72727 0.50625 lineto
stroke
grestore
[(0.5)] 0.72727 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.95455 0.5 moveto
0.95455 0.50625 lineto
stroke
grestore
[(1)] 0.95455 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.09091 0.5 moveto
0.09091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.13636 0.5 moveto
0.13636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18182 0.5 moveto
0.18182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22727 0.5 moveto
0.22727 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31818 0.5 moveto
0.31818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36364 0.5 moveto
0.36364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40909 0.5 moveto
0.40909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45455 0.5 moveto
0.45455 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54545 0.5 moveto
0.54545 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59091 0.5 moveto
0.59091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63636 0.5 moveto
0.63636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.68182 0.5 moveto
0.68182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77273 0.5 moveto
0.77273 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81818 0.5 moveto
0.81818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.86364 0.5 moveto
0.86364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90909 0.5 moveto
0.90909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.5 moveto
0 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
1 0.5 moveto
1 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(1. Pi)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.04545 moveto
0.50625 0.04545 lineto
stroke
grestore
[(-1)] 0.4875 0.04545 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.27273 moveto
0.50625 0.27273 lineto
stroke
grestore
[(-0.5)] 0.4875 0.27273 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.72727 moveto
0.50625 0.72727 lineto
stroke
grestore
[(0.5)] 0.4875 0.72727 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.95455 moveto
0.50625 0.95455 lineto
stroke
grestore
[(1)] 0.4875 0.95455 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.09091 moveto
0.50375 0.09091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13636 moveto
0.50375 0.13636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18182 moveto
0.50375 0.18182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22727 moveto
0.50375 0.22727 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31818 moveto
0.50375 0.31818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36364 moveto
0.50375 0.36364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40909 moveto
0.50375 0.40909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45455 moveto
0.50375 0.45455 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54545 moveto
0.50375 0.54545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59091 moveto
0.50375 0.59091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.63636 moveto
0.50375 0.63636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.68182 moveto
0.50375 0.68182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.77273 moveto
0.50375 0.77273 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.81818 moveto
0.50375 0.81818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.86364 moveto
0.50375 0.86364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90909 moveto
0.50375 0.90909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0 moveto
0.50375 0 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1 moveto
0.50375 1 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.5 0.5 moveto
0.50372 0.50002 lineto
0.50744 0.50006 lineto
0.51115 0.50014 lineto
0.51487 0.50024 lineto
0.51858 0.50038 lineto
0.5223 0.50055 lineto
0.52971 0.50097 lineto
0.53711 0.50152 lineto
0.5445 0.50219 lineto
0.5592 0.50388 lineto
0.5738 0.50605 lineto
0.58825 0.50869 lineto
0.61664 0.51536 lineto
0.64416 0.5238 lineto
0.6706 0.53394 lineto
0.71953 0.55882 lineto
0.76202 0.58895 lineto
0.79695 0.623 lineto
0.81128 0.64104 lineto
0.82343 0.6595 lineto
0.83331 0.67816 lineto
0.84091 0.69682 lineto
0.84384 0.70609 lineto
0.84619 0.71528 lineto
0.84715 0.71983 lineto
0.84797 0.72436 lineto
0.84864 0.72885 lineto
0.84917 0.73331 lineto
0.84938 0.73552 lineto
0.84956 0.73773 lineto
0.8497 0.73992 lineto
0.8498 0.7421 lineto
0.84987 0.74427 lineto
0.84991 0.74643 lineto
0.8499 0.74858 lineto
0.84987 0.75071 lineto
0.8498 0.75283 lineto
0.84969 0.75494 lineto
0.84955 0.75703 lineto
0.84937 0.75911 lineto
0.84892 0.76323 lineto
0.84833 0.76728 lineto
0.84674 0.77519 lineto
0.84462 0.78282 lineto
0.84197 0.79014 lineto
0.83882 0.79714 lineto
0.83105 0.81006 lineto
0.82141 0.82141 lineto
0.81006 0.83105 lineto
Mistroke
0.80378 0.83517 lineto
0.79714 0.83882 lineto
0.79014 0.84197 lineto
0.78282 0.84462 lineto
0.77519 0.84674 lineto
0.77127 0.8476 lineto
0.76728 0.84833 lineto
0.76323 0.84892 lineto
0.76118 0.84916 lineto
0.75911 0.84937 lineto
0.75703 0.84955 lineto
0.75494 0.84969 lineto
0.75283 0.8498 lineto
0.75071 0.84987 lineto
0.74858 0.8499 lineto
0.74643 0.84991 lineto
0.74427 0.84987 lineto
0.7421 0.8498 lineto
0.73992 0.8497 lineto
0.73773 0.84956 lineto
0.73552 0.84938 lineto
0.73331 0.84917 lineto
0.72885 0.84864 lineto
0.72436 0.84797 lineto
0.71528 0.84619 lineto
0.70609 0.84384 lineto
0.69682 0.84091 lineto
0.67816 0.83331 lineto
0.6595 0.82343 lineto
0.623 0.79695 lineto
0.58895 0.76202 lineto
0.55882 0.71953 lineto
0.53394 0.6706 lineto
0.5238 0.64416 lineto
0.51536 0.61664 lineto
0.50869 0.58825 lineto
0.50605 0.5738 lineto
0.50388 0.5592 lineto
0.50219 0.5445 lineto
0.50152 0.53711 lineto
0.50097 0.52971 lineto
0.50055 0.5223 lineto
0.50038 0.51858 lineto
0.50024 0.51487 lineto
0.50014 0.51115 lineto
0.50006 0.50744 lineto
0.50002 0.50372 lineto
0.5 0.5 lineto
0.50002 0.49628 lineto
0.50006 0.49256 lineto
Mistroke
0.50014 0.48885 lineto
0.50024 0.48513 lineto
0.50055 0.4777 lineto
0.50097 0.47029 lineto
0.50152 0.46289 lineto
0.50219 0.4555 lineto
0.50388 0.4408 lineto
0.50605 0.4262 lineto
0.50869 0.41175 lineto
0.51536 0.38336 lineto
0.5238 0.35584 lineto
0.53394 0.3294 lineto
0.55882 0.28047 lineto
0.58895 0.23798 lineto
0.623 0.20305 lineto
0.64104 0.18872 lineto
0.6595 0.17657 lineto
0.67816 0.16669 lineto
0.68751 0.1626 lineto
0.69682 0.15909 lineto
0.70609 0.15616 lineto
0.71528 0.15381 lineto
0.71983 0.15285 lineto
0.72436 0.15203 lineto
0.72885 0.15136 lineto
0.73331 0.15083 lineto
0.73552 0.15062 lineto
0.73773 0.15044 lineto
0.73992 0.1503 lineto
0.7421 0.1502 lineto
0.74427 0.15013 lineto
0.74643 0.15009 lineto
0.74858 0.1501 lineto
0.75071 0.15013 lineto
0.75283 0.1502 lineto
0.75494 0.15031 lineto
0.75911 0.15063 lineto
0.76118 0.15084 lineto
0.76323 0.15108 lineto
0.76728 0.15167 lineto
0.77519 0.15326 lineto
0.78282 0.15538 lineto
0.79014 0.15803 lineto
0.79714 0.16118 lineto
0.81006 0.16895 lineto
0.82141 0.17859 lineto
0.83105 0.18994 lineto
0.83517 0.19622 lineto
0.83882 0.20286 lineto
0.84197 0.20986 lineto
Mistroke
0.84462 0.21718 lineto
0.84674 0.22481 lineto
0.8476 0.22873 lineto
0.84833 0.23272 lineto
0.84892 0.23677 lineto
0.84916 0.23882 lineto
0.84937 0.24089 lineto
0.84955 0.24297 lineto
0.84969 0.24506 lineto
0.8498 0.24717 lineto
0.84987 0.24929 lineto
0.8499 0.25142 lineto
0.84991 0.25357 lineto
0.84987 0.25573 lineto
0.8498 0.2579 lineto
0.8497 0.26008 lineto
0.84956 0.26227 lineto
0.84917 0.26669 lineto
0.84864 0.27115 lineto
0.84797 0.27564 lineto
0.84619 0.28472 lineto
0.84384 0.29391 lineto
0.84091 0.30318 lineto
0.83331 0.32184 lineto
0.82343 0.3405 lineto
0.79695 0.377 lineto
0.76202 0.41105 lineto
0.71953 0.44118 lineto
0.69579 0.45435 lineto
0.6706 0.46606 lineto
0.64416 0.4762 lineto
0.61664 0.48464 lineto
0.58825 0.49131 lineto
0.5738 0.49395 lineto
0.5592 0.49612 lineto
0.5445 0.49781 lineto
0.53711 0.49848 lineto
0.52971 0.49903 lineto
0.5223 0.49945 lineto
0.51858 0.49962 lineto
0.51487 0.49976 lineto
0.51115 0.49986 lineto
0.50744 0.49994 lineto
0.50372 0.49998 lineto
0.5 0.5 lineto
Mfstroke
grestore
grestore
0.03 setlinewidth
0.04545 0.5 Mdot
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1.010638 141 -115.712738 sc6mt astore rstroke
end
grestore
grestore
%%EndDocument
 @endspecial 538 2028 a Fi(Fig)p Fq(.)g(58.)k(First)c(four)g(frames)f(of)h
(the)g(animation.)577 2187 y Fn(ANSWERS)i(F)o(OR)h(INSTR)o(UCTORS)75
2288 y(Exercise)g(1.)23 b Fq(The)16 b(p)q(erio)q(d)i(of)d(the)h(sine)h
(function)g(is)g(a)f(red)g(herring!)23 b(F)l(or)16 b Fh(k)h
Fq(o)q(dd,)f(y)o(ou)g(get)g Fh(k)h Fq(lea)o(v)o(es)75 2345
y(and)g(the)g(in)o(terv)m(al)g([0)p Fh(;)8 b(\031)r Fq(])15
b(giv)o(es)i(the)f(en)o(tire)i(plot.)24 b(F)l(or)16 b Fh(k)i
Fq(ev)o(en,)f(y)o(ou)f(get)h(2)p Fh(k)g Fq(lea)o(v)o(es)g(in)g(the)g
(complete)75 2401 y(in)o(terv)m(al)f([0)p Fh(;)8 b Fq(2)p Fh(\031)r
Fq(].)75 2476 y Fn(Exercise)18 b(2.)23 b Fq(F)l(or)15 b(the)i(parameter)e(1)p
Fh(=k)q Fq(,)h(if)g(the)g(complete)h(graph)f(requires)h(the)f(in)o(terv)m(al)
h(from)f(0)g(to)75 2533 y Fh(T)6 b Fq(,)15 b(then)769 2607
y Fh(T)k Fq(=)863 2547 y Fd(\032)901 2579 y Fh(k)q(\031)r(;)68
b(k)16 b Fq(o)q(dd)901 2635 y(2)p Fh(k)q(\031)r(;)45 b(k)16
b Fq(ev)o(en.)p eop
%%Page: 95 95
95 94 bop 75 -103 a Fm(Plotting)21 b(in)i(P)n(olar)g(Co)r(ordinates)p
75 -85 895 2 v 860 w Fq(95)75 49 y(The)14 b(cases)g Fh(k)f
Fq(=)g(6)h(\()p Fh(T)k Fq(=)13 b(12)p Fh(\031)r Fq(\))f(and)i
Fh(k)g Fq(=)f(7)g(\()p Fh(T)19 b Fq(=)13 b(7)p Fh(\031)r Fq(\))f(are)i(sho)o
(wn)f(resp)q(ectiv)o(ely)j(on)d(the)h(left)g(and)g(righ)o(t)75
106 y(of)h(Figure)g(59.)463 661 y @beginspecial 0 @llx 0 @lly
574 @urx 279 @ury 2459 @rwi @setspecial
%%BeginDocument: Pol.recip.eps


/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /TDeps_dict 20 dict def TDeps_dict begin /showpage {
    
} def /copypage {
    
} def /grestoreall {
    
} def /erasepage {
    
} def /nulldevice {
    
} def /exitserver {
    
} def /initgraphics {
    
} def /renderbands {
    
} def /initmatrix {
    
} def /banddevice {
    
} def /setpageparams {
    
} def /framedevice {
    
} def /note {
    
} def end end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
gsave
0 0 573.603821 278.097839 rectclip
-19 -441 translate
19 441 573.603821 278.097839 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
gsave clpmt currentmatrix pop newpath
1 0 0 1 -143 184 sc5mt astore pop false {
    sc5mt dodrawctm 162.5 257.5 287 277 0 rfpath unpagectm
} {
    287 277 162.5 257.5 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -143 184] dodrawctm
162.5 257.5 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	277.000000 def
/Mwidth		287.000000 def
/Mheight	277.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.47619 0.483422 0.47619 [
[(-1)] 0.02381 0.48342 0 2 Msboxa
[(-0.5)] 0.2619 0.48342 0 2 Msboxa
[(0.5)] 0.7381 0.48342 0 2 Msboxa
[(1)] 0.97619 0.48342 0 2 Msboxa
[(-1)] 0.4875 0.00723 1 0 Msboxa
[(-0.5)] 0.4875 0.24533 1 0 Msboxa
[(0.5)] 0.4875 0.72152 1 0 Msboxa
[(1)] 0.4875 0.95961 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.96784 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.48342 moveto
0.02381 0.48967 lineto
stroke
grestore
[(-1)] 0.02381 0.48342 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.48342 moveto
0.2619 0.48967 lineto
stroke
grestore
[(-0.5)] 0.2619 0.48342 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.48342 moveto
0.7381 0.48967 lineto
stroke
grestore
[(0.5)] 0.7381 0.48342 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.48342 moveto
0.97619 0.48967 lineto
stroke
grestore
[(1)] 0.97619 0.48342 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.48342 moveto
0.07143 0.48717 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.48342 moveto
0.11905 0.48717 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.48342 moveto
0.16667 0.48717 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.48342 moveto
0.21429 0.48717 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.48342 moveto
0.30952 0.48717 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.48342 moveto
0.35714 0.48717 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.48342 moveto
0.40476 0.48717 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.48342 moveto
0.45238 0.48717 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.48342 moveto
0.54762 0.48717 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.48342 moveto
0.59524 0.48717 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.48342 moveto
0.64286 0.48717 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.48342 moveto
0.69048 0.48717 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.48342 moveto
0.78571 0.48717 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.48342 moveto
0.83333 0.48717 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.48342 moveto
0.88095 0.48717 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.48342 moveto
0.92857 0.48717 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.48342 moveto
1 0.48342 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.00723 moveto
0.50625 0.00723 lineto
stroke
grestore
[(-1)] 0.4875 0.00723 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.24533 moveto
0.50625 0.24533 lineto
stroke
grestore
[(-0.5)] 0.4875 0.24533 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.72152 moveto
0.50625 0.72152 lineto
stroke
grestore
[(0.5)] 0.4875 0.72152 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.95961 moveto
0.50625 0.95961 lineto
stroke
grestore
[(1)] 0.4875 0.95961 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.05485 moveto
0.50375 0.05485 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.10247 moveto
0.50375 0.10247 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.15009 moveto
0.50375 0.15009 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.19771 moveto
0.50375 0.19771 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.29295 moveto
0.50375 0.29295 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.34057 moveto
0.50375 0.34057 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.38818 moveto
0.50375 0.38818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.4358 moveto
0.50375 0.4358 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.53104 moveto
0.50375 0.53104 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.57866 moveto
0.50375 0.57866 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.62628 moveto
0.50375 0.62628 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.6739 moveto
0.50375 0.6739 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.76914 moveto
0.50375 0.76914 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.81676 moveto
0.50375 0.81676 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.86437 moveto
0.50375 0.86437 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.91199 moveto
0.50375 0.91199 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.96684 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.96684 lineto
0 0.96684 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.5 0.48342 moveto
0.50389 0.48361 lineto
0.50775 0.48419 lineto
0.51156 0.48514 lineto
0.51528 0.48646 lineto
0.51889 0.48815 lineto
0.52236 0.49021 lineto
0.52566 0.4926 lineto
0.52877 0.49534 lineto
0.53167 0.4984 lineto
0.53432 0.50177 lineto
0.53671 0.50542 lineto
0.53881 0.50935 lineto
0.5406 0.51354 lineto
0.54207 0.51795 lineto
0.54319 0.52257 lineto
0.54395 0.52737 lineto
0.54433 0.53234 lineto
0.54433 0.53743 lineto
0.54392 0.54264 lineto
0.5431 0.54792 lineto
0.54185 0.55325 lineto
0.54018 0.5586 lineto
0.53808 0.56395 lineto
0.53555 0.56925 lineto
0.52918 0.57962 lineto
0.5211 0.58948 lineto
0.51134 0.59857 lineto
0.5 0.60667 lineto
0.48718 0.61355 lineto
0.48027 0.61646 lineto
0.47303 0.619 lineto
0.46551 0.62112 lineto
0.45771 0.62282 lineto
0.44968 0.62406 lineto
0.44142 0.62484 lineto
0.43298 0.62512 lineto
0.42438 0.6249 lineto
0.41564 0.62416 lineto
0.40681 0.62289 lineto
0.39791 0.62108 lineto
0.38898 0.61871 lineto
0.37114 0.61228 lineto
0.35359 0.60358 lineto
0.33659 0.59261 lineto
0.32044 0.5794 lineto
0.30542 0.56402 lineto
0.2918 0.54658 lineto
0.27984 0.52722 lineto
0.2698 0.5061 lineto
Mistroke
0.26557 0.49494 lineto
0.2619 0.48342 lineto
0.25883 0.47157 lineto
0.25637 0.45943 lineto
0.25454 0.44701 lineto
0.25337 0.43436 lineto
0.25287 0.42152 lineto
0.25307 0.40852 lineto
0.25397 0.39539 lineto
0.25558 0.38218 lineto
0.25792 0.36893 lineto
0.261 0.35567 lineto
0.26937 0.32932 lineto
0.28072 0.30347 lineto
0.29502 0.27844 lineto
0.3122 0.25459 lineto
0.33217 0.23224 lineto
0.37985 0.19335 lineto
0.40717 0.1774 lineto
0.43649 0.16416 lineto
0.45182 0.15862 lineto
0.46754 0.15385 lineto
0.48361 0.14987 lineto
0.5 0.1467 lineto
0.51666 0.14437 lineto
0.53354 0.14289 lineto
0.5506 0.14228 lineto
0.5678 0.14255 lineto
0.58509 0.14371 lineto
0.60242 0.14578 lineto
0.61974 0.14876 lineto
0.63701 0.15266 lineto
0.67117 0.16319 lineto
0.70451 0.17736 lineto
0.73662 0.19509 lineto
0.76714 0.21629 lineto
0.79566 0.24078 lineto
0.82184 0.26838 lineto
0.84532 0.29884 lineto
0.8658 0.3319 lineto
0.88298 0.36725 lineto
0.89025 0.38567 lineto
0.89661 0.40453 lineto
0.90203 0.42379 lineto
0.90648 0.44339 lineto
0.90994 0.46328 lineto
0.91239 0.48342 lineto
0.91383 0.50375 lineto
0.91423 0.52422 lineto
0.91359 0.54477 lineto
Mistroke
0.91189 0.56535 lineto
0.90914 0.58591 lineto
0.90534 0.60638 lineto
0.90048 0.62672 lineto
0.89457 0.64686 lineto
0.87964 0.68635 lineto
0.86065 0.7244 lineto
0.83773 0.76059 lineto
0.81109 0.79451 lineto
0.78095 0.82576 lineto
0.7476 0.85398 lineto
0.71135 0.87884 lineto
0.67256 0.90002 lineto
0.6316 0.91726 lineto
0.61044 0.92434 lineto
0.5889 0.93035 lineto
0.56703 0.93528 lineto
0.54488 0.9391 lineto
0.52252 0.94181 lineto
0.5 0.94339 lineto
0.47738 0.94382 lineto
0.45472 0.94312 lineto
0.43209 0.94126 lineto
0.40953 0.93826 lineto
0.38711 0.93412 lineto
0.36488 0.92884 lineto
0.32127 0.91491 lineto
0.27915 0.8966 lineto
0.23898 0.87407 lineto
0.20118 0.84754 lineto
0.16616 0.81726 lineto
0.10597 0.74671 lineto
0.08144 0.70715 lineto
0.061 0.66526 lineto
0.05238 0.64358 lineto
0.04486 0.62149 lineto
0.03847 0.59903 lineto
0.03321 0.57627 lineto
0.02911 0.55327 lineto
0.02617 0.53009 lineto
0.0244 0.50679 lineto
0.02381 0.48342 lineto
0.0244 0.46006 lineto
0.02617 0.43675 lineto
0.02911 0.41357 lineto
0.03321 0.39057 lineto
0.04486 0.34536 lineto
0.05238 0.32326 lineto
0.061 0.30158 lineto
0.08144 0.2597 lineto
Mistroke
0.10597 0.22014 lineto
0.13431 0.18331 lineto
0.16616 0.14959 lineto
0.20118 0.11931 lineto
0.23898 0.09277 lineto
0.27915 0.07024 lineto
0.32127 0.05193 lineto
0.34292 0.04441 lineto
0.36488 0.03801 lineto
0.38711 0.03273 lineto
0.40953 0.02858 lineto
0.43209 0.02558 lineto
0.45472 0.02373 lineto
0.47738 0.02302 lineto
0.5 0.02346 lineto
0.52252 0.02503 lineto
0.54488 0.02774 lineto
0.56703 0.03157 lineto
0.5889 0.03649 lineto
0.6316 0.04958 lineto
0.67256 0.06683 lineto
0.71135 0.08801 lineto
0.7476 0.11286 lineto
0.78095 0.14108 lineto
0.81109 0.17234 lineto
0.86065 0.24245 lineto
0.87964 0.2805 lineto
0.88762 0.30009 lineto
0.89457 0.31999 lineto
0.90048 0.34013 lineto
0.90534 0.36046 lineto
0.90914 0.38094 lineto
0.91189 0.40149 lineto
0.91359 0.42207 lineto
0.91423 0.44262 lineto
0.91383 0.46309 lineto
0.91239 0.48342 lineto
0.90994 0.50356 lineto
0.90648 0.52346 lineto
0.90203 0.54306 lineto
0.89661 0.56231 lineto
0.88298 0.5996 lineto
0.8658 0.63494 lineto
0.84532 0.668 lineto
0.82184 0.69847 lineto
0.79566 0.72607 lineto
0.76714 0.75056 lineto
0.73662 0.77175 lineto
0.70451 0.78949 lineto
0.67117 0.80366 lineto
Mistroke
0.65417 0.80938 lineto
0.63701 0.81419 lineto
0.61974 0.81808 lineto
0.60242 0.82106 lineto
0.58509 0.82313 lineto
0.5678 0.8243 lineto
0.5506 0.82457 lineto
0.53354 0.82396 lineto
0.51666 0.82247 lineto
0.5 0.82014 lineto
0.48361 0.81697 lineto
0.46754 0.81299 lineto
0.43649 0.80269 lineto
0.40717 0.78944 lineto
0.37985 0.7735 lineto
0.35477 0.75512 lineto
0.33217 0.7346 lineto
0.3122 0.71226 lineto
0.29502 0.6884 lineto
0.28072 0.66338 lineto
0.26937 0.63752 lineto
0.261 0.61117 lineto
0.25792 0.59792 lineto
0.25558 0.58466 lineto
0.25397 0.57145 lineto
0.25307 0.55833 lineto
0.25287 0.54532 lineto
0.25337 0.53248 lineto
0.25454 0.51983 lineto
0.25637 0.50742 lineto
0.25883 0.49527 lineto
0.2619 0.48342 lineto
0.2698 0.46075 lineto
0.27984 0.43963 lineto
0.2918 0.42026 lineto
0.30542 0.40282 lineto
0.32044 0.38745 lineto
0.33659 0.37424 lineto
0.35359 0.36327 lineto
0.37114 0.35457 lineto
0.38004 0.35107 lineto
0.38898 0.34814 lineto
0.39791 0.34577 lineto
0.40681 0.34395 lineto
0.41564 0.34268 lineto
0.42438 0.34194 lineto
0.43298 0.34172 lineto
0.44142 0.34201 lineto
0.44968 0.34278 lineto
0.45771 0.34403 lineto
Mistroke
0.46551 0.34572 lineto
0.47303 0.34785 lineto
0.48718 0.3533 lineto
0.5 0.36018 lineto
0.51134 0.36827 lineto
0.5211 0.37737 lineto
0.52918 0.38722 lineto
0.53555 0.39759 lineto
0.53808 0.4029 lineto
0.54018 0.40824 lineto
0.54185 0.41359 lineto
0.5431 0.41893 lineto
0.54392 0.42421 lineto
0.54433 0.42941 lineto
0.54433 0.43451 lineto
0.54395 0.43947 lineto
0.54319 0.44428 lineto
0.54207 0.4489 lineto
0.5406 0.45331 lineto
0.53881 0.45749 lineto
0.53671 0.46142 lineto
0.53432 0.46508 lineto
0.53167 0.46844 lineto
0.52877 0.4715 lineto
0.52566 0.47424 lineto
0.52236 0.47664 lineto
0.51889 0.47869 lineto
0.51528 0.48038 lineto
0.51156 0.48171 lineto
0.50775 0.48266 lineto
0.50389 0.48323 lineto
0.5 0.48342 lineto
0.49611 0.48323 lineto
0.49225 0.48266 lineto
0.48844 0.48171 lineto
0.48472 0.48038 lineto
0.48111 0.47869 lineto
0.47764 0.47664 lineto
0.47434 0.47424 lineto
0.47123 0.4715 lineto
0.46833 0.46844 lineto
0.46568 0.46508 lineto
0.46119 0.45749 lineto
0.4594 0.45331 lineto
0.45793 0.4489 lineto
0.45681 0.44428 lineto
0.45605 0.43947 lineto
0.45567 0.43451 lineto
0.45567 0.42941 lineto
0.45608 0.42421 lineto
Mistroke
0.4569 0.41893 lineto
0.45815 0.41359 lineto
0.45982 0.40824 lineto
0.46445 0.39759 lineto
0.47082 0.38722 lineto
0.4789 0.37737 lineto
0.48866 0.36827 lineto
0.5 0.36018 lineto
0.51282 0.3533 lineto
0.51973 0.35038 lineto
0.52697 0.34785 lineto
0.53449 0.34572 lineto
0.54229 0.34403 lineto
0.55032 0.34278 lineto
0.55858 0.34201 lineto
0.56702 0.34172 lineto
0.57562 0.34194 lineto
0.58436 0.34268 lineto
0.59319 0.34395 lineto
0.60209 0.34577 lineto
0.61102 0.34814 lineto
0.62886 0.35457 lineto
0.64641 0.36327 lineto
0.66341 0.37424 lineto
0.67956 0.38745 lineto
0.69458 0.40282 lineto
0.7082 0.42026 lineto
0.72016 0.43963 lineto
0.7302 0.46075 lineto
0.73443 0.47191 lineto
0.7381 0.48342 lineto
0.74117 0.49527 lineto
0.74363 0.50742 lineto
0.74546 0.51983 lineto
0.74663 0.53248 lineto
0.74713 0.54532 lineto
0.74693 0.55833 lineto
0.74603 0.57145 lineto
0.74442 0.58466 lineto
0.74208 0.59792 lineto
0.739 0.61117 lineto
0.73063 0.63752 lineto
0.71928 0.66338 lineto
0.70498 0.6884 lineto
0.6878 0.71226 lineto
0.66783 0.7346 lineto
0.64523 0.75512 lineto
0.62015 0.7735 lineto
0.59283 0.78944 lineto
0.56351 0.80269 lineto
Mistroke
0.54818 0.80822 lineto
0.53246 0.81299 lineto
0.51639 0.81697 lineto
0.5 0.82014 lineto
0.48334 0.82247 lineto
0.46646 0.82396 lineto
0.4494 0.82457 lineto
0.4322 0.8243 lineto
0.41491 0.82313 lineto
0.39758 0.82106 lineto
0.38026 0.81808 lineto
0.36299 0.81419 lineto
0.32883 0.80366 lineto
0.29549 0.78949 lineto
0.26338 0.77175 lineto
0.23286 0.75056 lineto
0.20434 0.72607 lineto
0.17816 0.69847 lineto
0.15468 0.668 lineto
0.1342 0.63494 lineto
0.11702 0.5996 lineto
0.10975 0.58118 lineto
0.10339 0.56231 lineto
0.09797 0.54306 lineto
0.09352 0.52346 lineto
0.09006 0.50356 lineto
0.08761 0.48342 lineto
0.08617 0.46309 lineto
0.08577 0.44262 lineto
0.08641 0.42207 lineto
0.08811 0.40149 lineto
0.09086 0.38094 lineto
0.09466 0.36046 lineto
0.09952 0.34013 lineto
0.10543 0.31999 lineto
0.12036 0.2805 lineto
0.13935 0.24245 lineto
0.16227 0.20625 lineto
0.18891 0.17234 lineto
0.21905 0.14108 lineto
0.2524 0.11286 lineto
0.28865 0.08801 lineto
0.32744 0.06683 lineto
0.3684 0.04958 lineto
0.38956 0.0425 lineto
0.4111 0.03649 lineto
0.43297 0.03157 lineto
0.45512 0.02774 lineto
0.47748 0.02503 lineto
0.5 0.02346 lineto
Mistroke
0.52262 0.02302 lineto
0.54528 0.02373 lineto
0.56791 0.02558 lineto
0.59047 0.02858 lineto
0.61289 0.03273 lineto
0.63512 0.03801 lineto
0.67873 0.05193 lineto
0.72085 0.07024 lineto
0.76102 0.09277 lineto
0.79882 0.11931 lineto
0.83384 0.14959 lineto
0.86569 0.18331 lineto
0.89403 0.22014 lineto
0.91856 0.2597 lineto
0.939 0.30158 lineto
0.94762 0.32326 lineto
0.95514 0.34536 lineto
0.96153 0.36781 lineto
0.96679 0.39057 lineto
0.97089 0.41357 lineto
0.97383 0.43675 lineto
0.9756 0.46006 lineto
0.97619 0.48342 lineto
0.9756 0.50679 lineto
0.97383 0.53009 lineto
0.97089 0.55327 lineto
0.96679 0.57627 lineto
0.96153 0.59903 lineto
0.95514 0.62149 lineto
0.939 0.66526 lineto
0.91856 0.70715 lineto
0.89403 0.74671 lineto
0.86569 0.78354 lineto
0.83384 0.81726 lineto
0.79882 0.84754 lineto
0.76102 0.87407 lineto
0.72085 0.8966 lineto
0.67873 0.91491 lineto
0.65708 0.92243 lineto
0.63512 0.92884 lineto
0.61289 0.93412 lineto
0.59047 0.93826 lineto
0.56791 0.94126 lineto
0.54528 0.94312 lineto
0.52262 0.94382 lineto
0.5 0.94339 lineto
0.47748 0.94181 lineto
0.45512 0.9391 lineto
0.43297 0.93528 lineto
0.4111 0.93035 lineto
Mistroke
0.3684 0.91726 lineto
0.32744 0.90002 lineto
0.28865 0.87884 lineto
0.2524 0.85398 lineto
0.21905 0.82576 lineto
0.18891 0.79451 lineto
0.16227 0.76059 lineto
0.13935 0.7244 lineto
0.12036 0.68635 lineto
0.11238 0.66675 lineto
0.10543 0.64686 lineto
0.09952 0.62672 lineto
0.09466 0.60638 lineto
0.09086 0.58591 lineto
0.08811 0.56535 lineto
0.08641 0.54477 lineto
0.08577 0.52422 lineto
0.08617 0.50375 lineto
0.08761 0.48342 lineto
0.09006 0.46328 lineto
0.09352 0.44339 lineto
0.10339 0.40453 lineto
0.10975 0.38567 lineto
0.11702 0.36725 lineto
0.1342 0.3319 lineto
0.15468 0.29884 lineto
0.17816 0.26838 lineto
0.20434 0.24078 lineto
0.23286 0.21629 lineto
0.26338 0.19509 lineto
0.29549 0.17736 lineto
0.32883 0.16319 lineto
0.34583 0.15747 lineto
0.36299 0.15266 lineto
0.38026 0.14876 lineto
0.39758 0.14578 lineto
0.41491 0.14371 lineto
0.4322 0.14255 lineto
0.4494 0.14228 lineto
0.46646 0.14289 lineto
0.48334 0.14437 lineto
0.5 0.1467 lineto
0.53246 0.15385 lineto
0.54818 0.15862 lineto
0.56351 0.16416 lineto
0.59283 0.1774 lineto
0.62015 0.19335 lineto
0.64523 0.21173 lineto
0.66783 0.23224 lineto
0.6878 0.25459 lineto
Mistroke
0.70498 0.27844 lineto
0.71928 0.30347 lineto
0.73063 0.32932 lineto
0.73518 0.34246 lineto
0.739 0.35567 lineto
0.74208 0.36893 lineto
0.74442 0.38218 lineto
0.74603 0.39539 lineto
0.74693 0.40852 lineto
0.74713 0.42152 lineto
0.74663 0.43436 lineto
0.74546 0.44701 lineto
0.74363 0.45943 lineto
0.74117 0.47157 lineto
0.7381 0.48342 lineto
0.7302 0.5061 lineto
0.72016 0.52722 lineto
0.7082 0.54658 lineto
0.69458 0.56402 lineto
0.67956 0.5794 lineto
0.66341 0.59261 lineto
0.64641 0.60358 lineto
0.62886 0.61228 lineto
0.61102 0.61871 lineto
0.60209 0.62108 lineto
0.59319 0.62289 lineto
0.58436 0.62416 lineto
0.57562 0.6249 lineto
0.56702 0.62512 lineto
0.55858 0.62484 lineto
0.55032 0.62406 lineto
0.54229 0.62282 lineto
0.53449 0.62112 lineto
0.52697 0.619 lineto
0.51282 0.61355 lineto
0.5 0.60667 lineto
0.48866 0.59857 lineto
0.4789 0.58948 lineto
0.47082 0.57962 lineto
0.46445 0.56925 lineto
0.45982 0.5586 lineto
0.45815 0.55325 lineto
0.4569 0.54792 lineto
0.45608 0.54264 lineto
0.45567 0.53743 lineto
0.45567 0.53234 lineto
0.45605 0.52737 lineto
0.45681 0.52257 lineto
0.45793 0.51795 lineto
0.4594 0.51354 lineto
Mistroke
0.46119 0.50935 lineto
0.46329 0.50542 lineto
0.46568 0.50177 lineto
0.46833 0.4984 lineto
0.47123 0.49534 lineto
0.47764 0.49021 lineto
0.48111 0.48815 lineto
0.48472 0.48646 lineto
0.48844 0.48514 lineto
0.49225 0.48419 lineto
0.49611 0.48361 lineto
0.5 0.48342 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 162.5 257.5 287 277 1 0 0 1 -143 184 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1 145 185 sc5mt astore pop false {
    sc5mt dodrawctm 165 258.5 282 275 0 rfpath unpagectm
} {
    282 275 165 258.5 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 145 185] dodrawctm
165 258.5 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	275.000000 def
/Mwidth		282.000000 def
/Mheight	275.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.488196 0.511422 0.488196 [
[(-1)] 0.0118 0.51142 0 2 Msboxa
[(-0.5)] 0.2559 0.51142 0 2 Msboxa
[(0.5)] 0.7441 0.51142 0 2 Msboxa
[(1)] 0.9882 0.51142 0 2 Msboxa
[(-1)] 0.4875 0.02323 1 0 Msboxa
[(-0.75)] 0.4875 0.14527 1 0 Msboxa
[(-0.5)] 0.4875 0.26732 1 0 Msboxa
[(-0.25)] 0.4875 0.38937 1 0 Msboxa
[(0.25)] 0.4875 0.63347 1 0 Msboxa
[(0.5)] 0.4875 0.75552 1 0 Msboxa
[(0.75)] 0.4875 0.87757 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.97649 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.0118 0.51142 moveto
0.0118 0.51767 lineto
stroke
grestore
[(-1)] 0.0118 0.51142 0 2 Mshowa
gsave
0.002 setlinewidth
0.2559 0.51142 moveto
0.2559 0.51767 lineto
stroke
grestore
[(-0.5)] 0.2559 0.51142 0 2 Mshowa
gsave
0.002 setlinewidth
0.7441 0.51142 moveto
0.7441 0.51767 lineto
stroke
grestore
[(0.5)] 0.7441 0.51142 0 2 Mshowa
gsave
0.002 setlinewidth
0.9882 0.51142 moveto
0.9882 0.51767 lineto
stroke
grestore
[(1)] 0.9882 0.51142 0 2 Mshowa
gsave
0.001 setlinewidth
0.06062 0.51142 moveto
0.06062 0.51517 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.10944 0.51142 moveto
0.10944 0.51517 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.15826 0.51142 moveto
0.15826 0.51517 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.20708 0.51142 moveto
0.20708 0.51517 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30472 0.51142 moveto
0.30472 0.51517 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35354 0.51142 moveto
0.35354 0.51517 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40236 0.51142 moveto
0.40236 0.51517 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45118 0.51142 moveto
0.45118 0.51517 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54882 0.51142 moveto
0.54882 0.51517 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59764 0.51142 moveto
0.59764 0.51517 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64646 0.51142 moveto
0.64646 0.51517 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69528 0.51142 moveto
0.69528 0.51517 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.79292 0.51142 moveto
0.79292 0.51517 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84174 0.51142 moveto
0.84174 0.51517 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.89056 0.51142 moveto
0.89056 0.51517 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.93938 0.51142 moveto
0.93938 0.51517 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.51142 moveto
1 0.51142 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.02323 moveto
0.50625 0.02323 lineto
stroke
grestore
[(-1)] 0.4875 0.02323 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.14527 moveto
0.50625 0.14527 lineto
stroke
grestore
[(-0.75)] 0.4875 0.14527 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.26732 moveto
0.50625 0.26732 lineto
stroke
grestore
[(-0.5)] 0.4875 0.26732 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.38937 moveto
0.50625 0.38937 lineto
stroke
grestore
[(-0.25)] 0.4875 0.38937 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.63347 moveto
0.50625 0.63347 lineto
stroke
grestore
[(0.25)] 0.4875 0.63347 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.75552 moveto
0.50625 0.75552 lineto
stroke
grestore
[(0.5)] 0.4875 0.75552 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.87757 moveto
0.50625 0.87757 lineto
stroke
grestore
[(0.75)] 0.4875 0.87757 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.04764 moveto
0.50375 0.04764 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.07205 moveto
0.50375 0.07205 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.09646 moveto
0.50375 0.09646 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.12087 moveto
0.50375 0.12087 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.16968 moveto
0.50375 0.16968 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.19409 moveto
0.50375 0.19409 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.2185 moveto
0.50375 0.2185 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.24291 moveto
0.50375 0.24291 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.29173 moveto
0.50375 0.29173 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31614 moveto
0.50375 0.31614 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.34055 moveto
0.50375 0.34055 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36496 moveto
0.50375 0.36496 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.41378 moveto
0.50375 0.41378 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.43819 moveto
0.50375 0.43819 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.4626 moveto
0.50375 0.4626 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.48701 moveto
0.50375 0.48701 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.53583 moveto
0.50375 0.53583 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.56024 moveto
0.50375 0.56024 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.58465 moveto
0.50375 0.58465 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.60906 moveto
0.50375 0.60906 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.65788 moveto
0.50375 0.65788 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.68229 moveto
0.50375 0.68229 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.7067 moveto
0.50375 0.7067 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.73111 moveto
0.50375 0.73111 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.77993 moveto
0.50375 0.77993 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.80434 moveto
0.50375 0.80434 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.82875 moveto
0.50375 0.82875 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.85316 moveto
0.50375 0.85316 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90198 moveto
0.50375 0.90198 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.92639 moveto
0.50375 0.92639 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.9508 moveto
0.50375 0.9508 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.97521 moveto
0.50375 0.97521 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.97549 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.97549 lineto
0 0.97549 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.5 0.51142 moveto
0.502 0.51148 lineto
0.50399 0.51165 lineto
0.50597 0.51194 lineto
0.50794 0.51233 lineto
0.50988 0.51285 lineto
0.5118 0.51347 lineto
0.51556 0.51505 lineto
0.51915 0.51706 lineto
0.52255 0.51949 lineto
0.52864 0.52554 lineto
0.53125 0.52912 lineto
0.53353 0.53304 lineto
0.53545 0.53727 lineto
0.53627 0.53949 lineto
0.53699 0.54178 lineto
0.5376 0.54413 lineto
0.53811 0.54654 lineto
0.53851 0.549 lineto
0.5388 0.55151 lineto
0.53898 0.55407 lineto
0.53903 0.55667 lineto
0.53897 0.55931 lineto
0.53879 0.56198 lineto
0.53849 0.56467 lineto
0.53806 0.56739 lineto
0.53751 0.57012 lineto
0.53683 0.57286 lineto
0.53508 0.57837 lineto
0.53282 0.58386 lineto
0.52673 0.59463 lineto
0.51858 0.60483 lineto
0.50842 0.61414 lineto
0.49637 0.62222 lineto
0.48969 0.6257 lineto
0.48259 0.62876 lineto
0.47512 0.63136 lineto
0.4673 0.63347 lineto
0.45916 0.63506 lineto
0.45498 0.63565 lineto
0.45073 0.63609 lineto
0.44643 0.6364 lineto
0.44207 0.63655 lineto
0.43765 0.63655 lineto
0.4332 0.6364 lineto
0.4287 0.6361 lineto
0.42416 0.63563 lineto
0.4196 0.63501 lineto
0.41501 0.63422 lineto
0.40578 0.63215 lineto
Mistroke
0.39653 0.6294 lineto
0.37814 0.62187 lineto
0.36022 0.61159 lineto
0.34317 0.59858 lineto
0.3274 0.58292 lineto
0.31328 0.56474 lineto
0.30121 0.54424 lineto
0.29605 0.5332 lineto
0.29152 0.52166 lineto
0.28767 0.50968 lineto
0.28454 0.4973 lineto
0.28215 0.48455 lineto
0.28125 0.47806 lineto
0.28054 0.47149 lineto
0.28004 0.46486 lineto
0.27974 0.45816 lineto
0.27965 0.45141 lineto
0.27978 0.44462 lineto
0.28011 0.43778 lineto
0.28066 0.43091 lineto
0.28143 0.42401 lineto
0.28242 0.4171 lineto
0.28506 0.40323 lineto
0.2886 0.38937 lineto
0.29841 0.36191 lineto
0.31184 0.33519 lineto
0.32885 0.3097 lineto
0.34931 0.2859 lineto
0.37306 0.26429 lineto
0.39983 0.24528 lineto
0.42934 0.22932 lineto
0.445 0.2226 lineto
0.46121 0.21677 lineto
0.4779 0.21188 lineto
0.49503 0.20797 lineto
0.50374 0.20639 lineto
0.51254 0.20507 lineto
0.52141 0.204 lineto
0.53036 0.2032 lineto
0.53936 0.20267 lineto
0.54842 0.20241 lineto
0.55753 0.20242 lineto
0.56668 0.2027 lineto
0.57585 0.20326 lineto
0.58505 0.2041 lineto
0.59426 0.20521 lineto
0.60347 0.20661 lineto
0.62187 0.21026 lineto
0.64017 0.21505 lineto
0.67623 0.22802 lineto
Mistroke
0.71106 0.24549 lineto
0.7441 0.26732 lineto
0.77478 0.29334 lineto
0.80258 0.32326 lineto
0.827 0.35676 lineto
0.84757 0.39344 lineto
0.85628 0.41283 lineto
0.86387 0.43283 lineto
0.87031 0.45339 lineto
0.87556 0.47443 lineto
0.87773 0.48511 lineto
0.87958 0.49589 lineto
0.88112 0.50674 lineto
0.88235 0.51768 lineto
0.88325 0.52868 lineto
0.88382 0.53973 lineto
0.88408 0.55084 lineto
0.884 0.56198 lineto
0.88359 0.57314 lineto
0.88285 0.58432 lineto
0.88178 0.59551 lineto
0.88037 0.6067 lineto
0.87655 0.62902 lineto
0.87139 0.6512 lineto
0.85708 0.69484 lineto
0.83751 0.73694 lineto
0.81287 0.77687 lineto
0.7834 0.81401 lineto
0.74944 0.84776 lineto
0.7114 0.87757 lineto
0.66973 0.90294 lineto
0.62498 0.92343 lineto
0.60163 0.93173 lineto
0.57774 0.93867 lineto
0.55338 0.94421 lineto
0.54105 0.94645 lineto
0.52864 0.94833 lineto
0.51615 0.94985 lineto
0.5036 0.95101 lineto
0.49099 0.9518 lineto
0.47835 0.95221 lineto
0.46567 0.95226 lineto
0.45297 0.95194 lineto
0.44027 0.95124 lineto
0.42756 0.95016 lineto
0.41488 0.94871 lineto
0.40221 0.94689 lineto
0.37701 0.94212 lineto
0.35204 0.93586 lineto
0.3274 0.92812 lineto
Mistroke
0.27945 0.90829 lineto
0.23386 0.88282 lineto
0.19131 0.85201 lineto
0.15243 0.81623 lineto
0.11782 0.77594 lineto
0.08799 0.73165 lineto
0.06342 0.68395 lineto
0.05324 0.65901 lineto
0.04451 0.63347 lineto
0.03727 0.60741 lineto
0.03156 0.58091 lineto
0.02928 0.56753 lineto
0.0274 0.55407 lineto
0.02591 0.54055 lineto
0.02481 0.52698 lineto
0.02411 0.51337 lineto
0.02381 0.49973 lineto
0.02391 0.48608 lineto
0.0244 0.47243 lineto
0.0253 0.45878 lineto
0.0266 0.44515 lineto
0.02829 0.43156 lineto
0.03038 0.41801 lineto
0.03576 0.39109 lineto
0.04272 0.36449 lineto
0.06126 0.31263 lineto
0.08579 0.26316 lineto
0.116 0.21677 lineto
0.15149 0.17413 lineto
0.19178 0.13586 lineto
0.23634 0.10249 lineto
0.28454 0.07451 lineto
0.3098 0.06267 lineto
0.33573 0.05232 lineto
0.36223 0.0435 lineto
0.3892 0.03623 lineto
0.41656 0.03056 lineto
0.43036 0.02832 lineto
0.44421 0.02649 lineto
0.45812 0.02506 lineto
0.47206 0.02404 lineto
0.48602 0.02343 lineto
0.5 0.02323 lineto
0.51398 0.02343 lineto
0.52794 0.02404 lineto
0.54188 0.02506 lineto
0.55579 0.02649 lineto
0.58344 0.03056 lineto
0.6108 0.03623 lineto
0.63777 0.0435 lineto
Mistroke
0.66427 0.05232 lineto
0.71546 0.07451 lineto
0.76366 0.10249 lineto
0.80822 0.13586 lineto
0.84851 0.17413 lineto
0.884 0.21677 lineto
0.91421 0.26316 lineto
0.93874 0.31263 lineto
0.94878 0.33831 lineto
0.95728 0.36449 lineto
0.96424 0.39109 lineto
0.96712 0.40452 lineto
0.96962 0.41801 lineto
0.97171 0.43156 lineto
0.9734 0.44515 lineto
0.9747 0.45878 lineto
0.9756 0.47243 lineto
0.97609 0.48608 lineto
0.97619 0.49973 lineto
0.97589 0.51337 lineto
0.97519 0.52698 lineto
0.97409 0.54055 lineto
0.9726 0.55407 lineto
0.96844 0.58091 lineto
0.96273 0.60741 lineto
0.95549 0.63347 lineto
0.93658 0.68395 lineto
0.91201 0.73165 lineto
0.88218 0.77594 lineto
0.84757 0.81623 lineto
0.80869 0.85201 lineto
0.76614 0.88282 lineto
0.72055 0.90829 lineto
0.69683 0.91892 lineto
0.6726 0.92812 lineto
0.64796 0.93586 lineto
0.62299 0.94212 lineto
0.61041 0.94469 lineto
0.59779 0.94689 lineto
0.58512 0.94871 lineto
0.57244 0.95016 lineto
0.55973 0.95124 lineto
0.54703 0.95194 lineto
0.53433 0.95226 lineto
0.52165 0.95221 lineto
0.50901 0.9518 lineto
0.4964 0.95101 lineto
0.48385 0.94985 lineto
0.47136 0.94833 lineto
0.44662 0.94421 lineto
Mistroke
0.42226 0.93867 lineto
0.37502 0.92343 lineto
0.33027 0.90294 lineto
0.2886 0.87757 lineto
0.25056 0.84776 lineto
0.2166 0.81401 lineto
0.18713 0.77687 lineto
0.16249 0.73694 lineto
0.14292 0.69484 lineto
0.1351 0.67317 lineto
0.12861 0.6512 lineto
0.12345 0.62902 lineto
0.12137 0.61787 lineto
0.11963 0.6067 lineto
0.11822 0.59551 lineto
0.11715 0.58432 lineto
0.11641 0.57314 lineto
0.116 0.56198 lineto
0.11592 0.55084 lineto
0.11618 0.53973 lineto
0.11675 0.52868 lineto
0.11765 0.51768 lineto
0.11888 0.50674 lineto
0.12042 0.49589 lineto
0.12444 0.47443 lineto
0.12969 0.45339 lineto
0.13613 0.43283 lineto
0.15243 0.39344 lineto
0.173 0.35676 lineto
0.19742 0.32326 lineto
0.22522 0.29334 lineto
0.2559 0.26732 lineto
0.28894 0.24549 lineto
0.32377 0.22802 lineto
0.34168 0.22097 lineto
0.35983 0.21505 lineto
0.37813 0.21026 lineto
0.38733 0.2083 lineto
0.39653 0.20661 lineto
0.40574 0.20521 lineto
0.41495 0.2041 lineto
0.42415 0.20326 lineto
0.43332 0.2027 lineto
0.44247 0.20242 lineto
0.45158 0.20241 lineto
0.46064 0.20267 lineto
0.46964 0.2032 lineto
0.47859 0.204 lineto
0.48746 0.20507 lineto
0.50497 0.20797 lineto
Mistroke
0.5221 0.21188 lineto
0.53879 0.21677 lineto
0.57066 0.22932 lineto
0.60017 0.24528 lineto
0.62694 0.26429 lineto
0.65069 0.2859 lineto
0.67115 0.3097 lineto
0.68816 0.33519 lineto
0.70159 0.36191 lineto
0.70695 0.37558 lineto
0.7114 0.38937 lineto
0.71494 0.40323 lineto
0.71758 0.4171 lineto
0.71857 0.42401 lineto
0.71934 0.43091 lineto
0.71989 0.43778 lineto
0.72022 0.44462 lineto
0.72035 0.45141 lineto
0.72026 0.45816 lineto
0.71996 0.46486 lineto
0.71946 0.47149 lineto
0.71875 0.47806 lineto
0.71785 0.48455 lineto
0.71546 0.4973 lineto
0.71233 0.50968 lineto
0.70848 0.52166 lineto
0.69879 0.54424 lineto
0.68672 0.56474 lineto
0.6726 0.58292 lineto
0.65683 0.59858 lineto
0.63978 0.61159 lineto
0.62186 0.62187 lineto
0.6127 0.62598 lineto
0.60347 0.6294 lineto
0.59422 0.63215 lineto
0.5896 0.63327 lineto
0.58499 0.63422 lineto
0.5804 0.63501 lineto
0.57584 0.63563 lineto
0.5713 0.6361 lineto
0.5668 0.6364 lineto
0.56235 0.63655 lineto
0.55793 0.63655 lineto
0.55357 0.6364 lineto
0.54927 0.63609 lineto
0.54502 0.63565 lineto
0.54084 0.63506 lineto
0.5327 0.63347 lineto
0.52488 0.63136 lineto
0.51741 0.62876 lineto
Mistroke
0.50363 0.62222 lineto
0.49158 0.61414 lineto
0.48142 0.60483 lineto
0.47327 0.59463 lineto
0.46996 0.58929 lineto
0.46718 0.58386 lineto
0.46492 0.57837 lineto
0.46317 0.57286 lineto
0.46249 0.57012 lineto
0.46194 0.56739 lineto
0.46151 0.56467 lineto
0.46121 0.56198 lineto
0.46103 0.55931 lineto
0.46097 0.55667 lineto
0.46102 0.55407 lineto
0.4612 0.55151 lineto
0.46149 0.549 lineto
0.46189 0.54654 lineto
0.4624 0.54413 lineto
0.46301 0.54178 lineto
0.46455 0.53727 lineto
0.46647 0.53304 lineto
0.46875 0.52912 lineto
0.47136 0.52554 lineto
0.47427 0.52233 lineto
0.47745 0.51949 lineto
0.48085 0.51706 lineto
0.48444 0.51505 lineto
0.4863 0.5142 lineto
0.4882 0.51347 lineto
0.49012 0.51285 lineto
0.49206 0.51233 lineto
0.49403 0.51194 lineto
0.49601 0.51165 lineto
0.498 0.51148 lineto
0.5 0.51142 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 258.5 282 275 1 0 0 1 145 185 sc6mt astore rstroke
end
grestore
grestore
%%EndDocument
 @endspecial 497 748 a Fi(Fig)p Fq(.)g(59.)k(1)p Fh(=k)13 b
Fq(=)g(1)p Fh(=)p Fq(6)i(\(left\))g(and)g(1)p Fh(=k)e Fq(=)g(1)p
Fh(=)p Fq(7)h(\(righ)o(t\).)75 875 y Fn(Exercise)21 b(3.)29
b Fq(F)l(or)17 b(the)i(parameter)e Fh(m=n)h Fq(in)h(lo)o(w)o(est)f(terms)g
(\(actually)g(only)h(factors)e(of)h(2)g(need)h(b)q(e)75 932
y(cancelled\),)e(if)e(the)h(complete)g(graph)f(requires)g(the)h(in)o(terv)m
(al)g(from)e(0)h(to)g Fh(T)6 b Fq(,)15 b(then)380 1050 y Fh(T)j
Fq(=)473 991 y Fd(\032)512 1026 y Fh(n\031)70 b Fq(if)16 b(b)q(oth)f
Fh(m)g Fq(and)g Fh(n)h Fq(are)f(o)q(dd)512 1083 y(2)p Fh(n\031)47
b Fq(if)16 b(one)f(of)g Fh(m)g Fq(and)g Fh(n)h Fq(is)f(ev)o(en)h(and)f(the)h
(other)e(is)i(o)q(dd.)75 1169 y(The)h(cases)g Fh(m=n)e Fq(=)g(5)p
Fh(=)p Fq(7)h(\()p Fh(T)21 b Fq(=)15 b(7)p Fh(\031)r Fq(\))h(and)h
Fh(m=n)e Fq(=)h(6)p Fh(=)p Fq(7)f(\()p Fh(T)21 b Fq(=)16 b(14)p
Fh(\031)r Fq(\))f(are)h(sho)o(wn)h(resp)q(ectiv)o(ely)h(on)f(the)75
1225 y(left)f(and)f(righ)o(t)g(of)g(Figure)g(60.)469 1781 y
@beginspecial 0 @llx 0 @lly 565 @urx 278 @ury 2429 @rwi @setspecial
%%BeginDocument: Pol.frac.eps


/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /TDeps_dict 20 dict def TDeps_dict begin /showpage {
    
} def /copypage {
    
} def /grestoreall {
    
} def /erasepage {
    
} def /nulldevice {
    
} def /exitserver {
    
} def /initgraphics {
    
} def /renderbands {
    
} def /initmatrix {
    
} def /banddevice {
    
} def /setpageparams {
    
} def /framedevice {
    
} def /note {
    
} def end end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
gsave
0 0 565 278 rectclip
-19 -442 translate
19 442 565 278 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
gsave clpmt currentmatrix pop newpath
1 0 0 1 -146 185 sc5mt astore pop false {
    sc5mt dodrawctm 165 257.5 282 277 0 rfpath unpagectm
} {
    282 277 165 257.5 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -146 185] dodrawctm
165 257.5 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	277.000000 def
/Mwidth		282.000000 def
/Mheight	277.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.484227 0.507647 0.484227 [
[(-1)] 0.01577 0.50765 0 2 Msboxa
[(-0.5)] 0.25789 0.50765 0 2 Msboxa
[(0.5)] 0.74211 0.50765 0 2 Msboxa
[(1)] 0.98423 0.50765 0 2 Msboxa
[(-1)] 0.4875 0.02342 1 0 Msboxa
[(-0.5)] 0.4875 0.26553 1 0 Msboxa
[(0.5)] 0.4875 0.74976 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.98464 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.01577 0.50765 moveto
0.01577 0.5139 lineto
stroke
grestore
[(-1)] 0.01577 0.50765 0 2 Mshowa
gsave
0.002 setlinewidth
0.25789 0.50765 moveto
0.25789 0.5139 lineto
stroke
grestore
[(-0.5)] 0.25789 0.50765 0 2 Mshowa
gsave
0.002 setlinewidth
0.74211 0.50765 moveto
0.74211 0.5139 lineto
stroke
grestore
[(0.5)] 0.74211 0.50765 0 2 Mshowa
gsave
0.002 setlinewidth
0.98423 0.50765 moveto
0.98423 0.5139 lineto
stroke
grestore
[(1)] 0.98423 0.50765 0 2 Mshowa
gsave
0.001 setlinewidth
0.0642 0.50765 moveto
0.0642 0.5114 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11262 0.50765 moveto
0.11262 0.5114 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16104 0.50765 moveto
0.16104 0.5114 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.20946 0.50765 moveto
0.20946 0.5114 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30631 0.50765 moveto
0.30631 0.5114 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35473 0.50765 moveto
0.35473 0.5114 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40315 0.50765 moveto
0.40315 0.5114 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45158 0.50765 moveto
0.45158 0.5114 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54842 0.50765 moveto
0.54842 0.5114 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59685 0.50765 moveto
0.59685 0.5114 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64527 0.50765 moveto
0.64527 0.5114 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69369 0.50765 moveto
0.69369 0.5114 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.79054 0.50765 moveto
0.79054 0.5114 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83896 0.50765 moveto
0.83896 0.5114 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88738 0.50765 moveto
0.88738 0.5114 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9358 0.50765 moveto
0.9358 0.5114 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.50765 moveto
1 0.50765 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.02342 moveto
0.50625 0.02342 lineto
stroke
grestore
[(-1)] 0.4875 0.02342 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.26553 moveto
0.50625 0.26553 lineto
stroke
grestore
[(-0.5)] 0.4875 0.26553 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.74976 moveto
0.50625 0.74976 lineto
stroke
grestore
[(0.5)] 0.4875 0.74976 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.07184 moveto
0.50375 0.07184 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.12027 moveto
0.50375 0.12027 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.16869 moveto
0.50375 0.16869 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.21711 moveto
0.50375 0.21711 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31396 moveto
0.50375 0.31396 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36238 moveto
0.50375 0.36238 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.4108 moveto
0.50375 0.4108 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45922 moveto
0.50375 0.45922 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55607 moveto
0.50375 0.55607 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.60449 moveto
0.50375 0.60449 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.65292 moveto
0.50375 0.65292 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.70134 moveto
0.50375 0.70134 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.79818 moveto
0.50375 0.79818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.84661 moveto
0.50375 0.84661 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.89503 moveto
0.50375 0.89503 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.94345 moveto
0.50375 0.94345 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.98364 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.98364 lineto
0 0.98364 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.5 0.50765 moveto
0.5099 0.50793 lineto
0.51977 0.50878 lineto
0.52958 0.51019 lineto
0.53931 0.51217 lineto
0.54893 0.5147 lineto
0.5584 0.51778 lineto
0.57682 0.52556 lineto
0.59435 0.53543 lineto
0.61078 0.54728 lineto
0.6396 0.57649 lineto
0.65163 0.59355 lineto
0.66187 0.61202 lineto
0.67018 0.63172 lineto
0.67358 0.64197 lineto
0.67645 0.65246 lineto
0.67879 0.66315 lineto
0.68058 0.67402 lineto
0.68181 0.68505 lineto
0.68248 0.6962 lineto
0.68259 0.70745 lineto
0.68212 0.71877 lineto
0.68107 0.73014 lineto
0.67945 0.74151 lineto
0.67447 0.76419 lineto
0.67111 0.77543 lineto
0.66718 0.78657 lineto
0.65762 0.80844 lineto
0.64586 0.82956 lineto
0.63196 0.84974 lineto
0.61603 0.86875 lineto
0.59818 0.88641 lineto
0.57855 0.90253 lineto
0.55729 0.91694 lineto
0.53459 0.92949 lineto
0.51061 0.94004 lineto
0.48557 0.94848 lineto
0.45966 0.9547 lineto
0.44645 0.95696 lineto
0.4331 0.95863 lineto
0.41965 0.95972 lineto
0.40612 0.96022 lineto
0.39254 0.96013 lineto
0.37894 0.95944 lineto
0.36535 0.95815 lineto
0.3518 0.95626 lineto
0.33831 0.95378 lineto
0.32491 0.95071 lineto
0.29852 0.94282 lineto
0.27284 0.93264 lineto
Mistroke
0.24808 0.92025 lineto
0.22446 0.90576 lineto
0.18141 0.87093 lineto
0.14509 0.82931 lineto
0.12984 0.8064 lineto
0.11668 0.78233 lineto
0.10572 0.75732 lineto
0.09703 0.73159 lineto
0.09356 0.71852 lineto
0.09068 0.70536 lineto
0.08838 0.69212 lineto
0.08669 0.67885 lineto
0.08558 0.66556 lineto
0.08507 0.65229 lineto
0.08516 0.63907 lineto
0.08583 0.62592 lineto
0.08708 0.61287 lineto
0.08892 0.59996 lineto
0.09132 0.5872 lineto
0.09429 0.57463 lineto
0.10186 0.55015 lineto
0.11153 0.52673 lineto
0.1232 0.50456 lineto
0.13672 0.48384 lineto
0.16869 0.44736 lineto
0.18679 0.43191 lineto
0.20604 0.41847 lineto
0.22623 0.40716 lineto
0.24716 0.39804 lineto
0.25783 0.39432 lineto
0.2686 0.39117 lineto
0.27944 0.38859 lineto
0.29032 0.38659 lineto
0.30122 0.38516 lineto
0.3121 0.38431 lineto
0.32294 0.38403 lineto
0.33371 0.38432 lineto
0.34438 0.38517 lineto
0.35492 0.38658 lineto
0.3653 0.38854 lineto
0.37551 0.39105 lineto
0.39526 0.39764 lineto
0.41398 0.40626 lineto
0.43146 0.41679 lineto
0.44752 0.4291 lineto
0.46199 0.44303 lineto
0.47471 0.45842 lineto
0.48556 0.47508 lineto
0.49442 0.49282 lineto
0.49807 0.50203 lineto
Mistroke
0.50118 0.51143 lineto
0.50375 0.52099 lineto
0.50577 0.5307 lineto
0.50724 0.54051 lineto
0.50814 0.5504 lineto
0.50848 0.56034 lineto
0.50825 0.57031 lineto
0.50745 0.58028 lineto
0.50609 0.59021 lineto
0.50416 0.60008 lineto
0.50167 0.60986 lineto
0.49503 0.62904 lineto
0.48622 0.64753 lineto
0.47532 0.66512 lineto
0.46243 0.6816 lineto
0.44766 0.69677 lineto
0.43116 0.71045 lineto
0.41307 0.72247 lineto
0.39356 0.73269 lineto
0.37283 0.74096 lineto
0.36206 0.74433 lineto
0.35106 0.74717 lineto
0.33985 0.74947 lineto
0.32846 0.75122 lineto
0.31692 0.75241 lineto
0.30525 0.75303 lineto
0.29348 0.75308 lineto
0.28165 0.75256 lineto
0.26977 0.75145 lineto
0.25789 0.74976 lineto
0.23419 0.74463 lineto
0.22243 0.7412 lineto
0.21078 0.73719 lineto
0.1879 0.72746 lineto
0.16575 0.7155 lineto
0.14456 0.70139 lineto
0.12454 0.68523 lineto
0.10588 0.66713 lineto
0.08876 0.64725 lineto
0.07335 0.62572 lineto
0.05981 0.60272 lineto
0.04827 0.57844 lineto
0.03885 0.55307 lineto
0.03497 0.54004 lineto
0.03165 0.52682 lineto
0.02891 0.51343 lineto
0.02675 0.4999 lineto
0.02518 0.48627 lineto
0.02419 0.47255 lineto
0.02381 0.45878 lineto
Mistroke
0.02402 0.44498 lineto
0.02483 0.43119 lineto
0.02625 0.41743 lineto
0.02825 0.40374 lineto
0.03085 0.39013 lineto
0.0378 0.3633 lineto
0.04705 0.33717 lineto
0.05851 0.31195 lineto
0.07209 0.28785 lineto
0.08767 0.26507 lineto
0.10512 0.24379 lineto
0.12427 0.22419 lineto
0.14496 0.20642 lineto
0.167 0.19061 lineto
0.1902 0.17688 lineto
0.21435 0.16534 lineto
0.23924 0.15605 lineto
0.25189 0.15228 lineto
0.26464 0.14909 lineto
0.27746 0.14649 lineto
0.29032 0.14448 lineto
0.3032 0.14306 lineto
0.31606 0.14223 lineto
0.32888 0.14199 lineto
0.34163 0.14233 lineto
0.35428 0.14326 lineto
0.3668 0.14476 lineto
0.37916 0.14683 lineto
0.39134 0.14945 lineto
0.41505 0.15634 lineto
0.43771 0.16531 lineto
0.45913 0.17626 lineto
0.47912 0.18906 lineto
0.49751 0.20354 lineto
0.51415 0.21954 lineto
0.52891 0.23688 lineto
0.54165 0.25536 lineto
0.55229 0.27477 lineto
0.56075 0.29491 lineto
0.56414 0.30517 lineto
0.56697 0.31554 lineto
0.56923 0.32597 lineto
0.57091 0.33645 lineto
0.57203 0.34693 lineto
0.57257 0.3574 lineto
0.57255 0.36782 lineto
0.57195 0.37817 lineto
0.5708 0.38842 lineto
0.56909 0.39853 lineto
0.56684 0.40849 lineto
Mistroke
0.56405 0.41827 lineto
0.55689 0.43716 lineto
0.54771 0.455 lineto
0.53664 0.4716 lineto
0.52381 0.48677 lineto
0.50937 0.50034 lineto
0.49349 0.51216 lineto
0.47634 0.52209 lineto
0.46736 0.52631 lineto
0.45814 0.53002 lineto
0.44871 0.5332 lineto
0.43908 0.53585 lineto
0.4293 0.53795 lineto
0.41938 0.53951 lineto
0.40936 0.5405 lineto
0.39926 0.54093 lineto
0.38911 0.54079 lineto
0.37894 0.54008 lineto
0.36878 0.53881 lineto
0.35866 0.53697 lineto
0.3486 0.53456 lineto
0.33863 0.53158 lineto
0.3191 0.52397 lineto
0.30026 0.51419 lineto
0.28235 0.5023 lineto
0.26557 0.48842 lineto
0.2501 0.47267 lineto
0.23615 0.45516 lineto
0.22386 0.43607 lineto
0.21341 0.41556 lineto
0.20491 0.39382 lineto
0.20143 0.38254 lineto
0.19849 0.37104 lineto
0.19609 0.35932 lineto
0.19425 0.34742 lineto
0.19297 0.33537 lineto
0.19226 0.32319 lineto
0.19212 0.31092 lineto
0.19257 0.29857 lineto
0.1936 0.28618 lineto
0.19522 0.27378 lineto
0.19743 0.2614 lineto
0.20022 0.24906 lineto
0.20756 0.22462 lineto
0.2172 0.20071 lineto
0.22908 0.17753 lineto
0.24313 0.15531 lineto
0.25925 0.13426 lineto
0.27732 0.11456 lineto
0.2972 0.0964 lineto
Mistroke
0.31873 0.07996 lineto
0.34176 0.06539 lineto
0.36608 0.05282 lineto
0.39151 0.04237 lineto
0.40458 0.03797 lineto
0.41784 0.03414 lineto
0.43127 0.03088 lineto
0.44484 0.0282 lineto
0.45853 0.02611 lineto
0.47231 0.02462 lineto
0.48614 0.02372 lineto
0.5 0.02342 lineto
0.51386 0.02372 lineto
0.52769 0.02462 lineto
0.54147 0.02611 lineto
0.55516 0.0282 lineto
0.56873 0.03088 lineto
0.58216 0.03414 lineto
0.60849 0.04237 lineto
0.63392 0.05282 lineto
0.65824 0.06539 lineto
0.68127 0.07996 lineto
0.7028 0.0964 lineto
0.72268 0.11456 lineto
0.74075 0.13426 lineto
0.75687 0.15531 lineto
0.77092 0.17753 lineto
0.7828 0.20071 lineto
0.79244 0.22462 lineto
0.7964 0.23679 lineto
0.79978 0.24906 lineto
0.80257 0.2614 lineto
0.80478 0.27378 lineto
0.8064 0.28618 lineto
0.80743 0.29857 lineto
0.80788 0.31092 lineto
0.80774 0.32319 lineto
0.80703 0.33537 lineto
0.80575 0.34742 lineto
0.80391 0.35932 lineto
0.80151 0.37104 lineto
0.79509 0.39382 lineto
0.78659 0.41556 lineto
0.77614 0.43607 lineto
0.76385 0.45516 lineto
0.7499 0.47267 lineto
0.73443 0.48842 lineto
0.71765 0.5023 lineto
0.69974 0.51419 lineto
0.6809 0.52397 lineto
Mistroke
0.67121 0.52805 lineto
0.66137 0.53158 lineto
0.6514 0.53456 lineto
0.64134 0.53697 lineto
0.63122 0.53881 lineto
0.62106 0.54008 lineto
0.61089 0.54079 lineto
0.60074 0.54093 lineto
0.59064 0.5405 lineto
0.58062 0.53951 lineto
0.5707 0.53795 lineto
0.56092 0.53585 lineto
0.55129 0.5332 lineto
0.54186 0.53002 lineto
0.52366 0.52209 lineto
0.50651 0.51216 lineto
0.49063 0.50034 lineto
0.47619 0.48677 lineto
0.46336 0.4716 lineto
0.45229 0.455 lineto
0.44311 0.43716 lineto
0.43927 0.42783 lineto
0.43595 0.41827 lineto
0.43316 0.40849 lineto
0.43091 0.39853 lineto
0.4292 0.38842 lineto
0.42805 0.37817 lineto
0.42745 0.36782 lineto
0.42743 0.3574 lineto
0.42797 0.34693 lineto
0.42909 0.33645 lineto
0.43077 0.32597 lineto
0.43303 0.31554 lineto
0.43925 0.29491 lineto
0.44771 0.27477 lineto
0.45835 0.25536 lineto
0.47109 0.23688 lineto
0.48585 0.21954 lineto
0.50249 0.20354 lineto
0.52088 0.18906 lineto
0.54087 0.17626 lineto
0.56229 0.16531 lineto
0.58495 0.15634 lineto
0.59669 0.15263 lineto
0.60866 0.14945 lineto
0.62084 0.14683 lineto
0.6332 0.14476 lineto
0.64572 0.14326 lineto
0.65837 0.14233 lineto
0.67112 0.14199 lineto
Mistroke
0.68394 0.14223 lineto
0.6968 0.14306 lineto
0.70968 0.14448 lineto
0.73536 0.14909 lineto
0.74811 0.15228 lineto
0.76076 0.15605 lineto
0.78565 0.16534 lineto
0.8098 0.17688 lineto
0.833 0.19061 lineto
0.85504 0.20642 lineto
0.87573 0.22419 lineto
0.89488 0.24379 lineto
0.91233 0.26507 lineto
0.92791 0.28785 lineto
0.94149 0.31195 lineto
0.95295 0.33717 lineto
0.9622 0.3633 lineto
0.96596 0.37664 lineto
0.96915 0.39013 lineto
0.97175 0.40374 lineto
0.97375 0.41743 lineto
0.97517 0.43119 lineto
0.97598 0.44498 lineto
0.97619 0.45878 lineto
0.97581 0.47255 lineto
0.97482 0.48627 lineto
0.97325 0.4999 lineto
0.97109 0.51343 lineto
0.96835 0.52682 lineto
0.96115 0.55307 lineto
0.95173 0.57844 lineto
0.94019 0.60272 lineto
0.92665 0.62572 lineto
0.91124 0.64725 lineto
0.89412 0.66713 lineto
0.87546 0.68523 lineto
0.85544 0.70139 lineto
0.83425 0.7155 lineto
0.8121 0.72746 lineto
0.78922 0.73719 lineto
0.77757 0.7412 lineto
0.76581 0.74463 lineto
0.75399 0.74749 lineto
0.74211 0.74976 lineto
0.73023 0.75145 lineto
0.71835 0.75256 lineto
0.70652 0.75308 lineto
0.69475 0.75303 lineto
0.68308 0.75241 lineto
0.67154 0.75122 lineto
Mistroke
0.66015 0.74947 lineto
0.64894 0.74717 lineto
0.62717 0.74096 lineto
0.60644 0.73269 lineto
0.58693 0.72247 lineto
0.56884 0.71045 lineto
0.55234 0.69677 lineto
0.53757 0.6816 lineto
0.52468 0.66512 lineto
0.51378 0.64753 lineto
0.50497 0.62904 lineto
0.50137 0.61952 lineto
0.49833 0.60986 lineto
0.49584 0.60008 lineto
0.49391 0.59021 lineto
0.49255 0.58028 lineto
0.49175 0.57031 lineto
0.49152 0.56034 lineto
0.49186 0.5504 lineto
0.49276 0.54051 lineto
0.49423 0.5307 lineto
0.49625 0.52099 lineto
0.49882 0.51143 lineto
0.50558 0.49282 lineto
0.51444 0.47508 lineto
0.52529 0.45842 lineto
0.53801 0.44303 lineto
0.55248 0.4291 lineto
0.56854 0.41679 lineto
0.58602 0.40626 lineto
0.60474 0.39764 lineto
0.6145 0.39408 lineto
0.62449 0.39105 lineto
0.6347 0.38854 lineto
0.64508 0.38658 lineto
0.65562 0.38517 lineto
0.66629 0.38432 lineto
0.67706 0.38403 lineto
0.6879 0.38431 lineto
0.69878 0.38516 lineto
0.70968 0.38659 lineto
0.72056 0.38859 lineto
0.7314 0.39117 lineto
0.75284 0.39804 lineto
0.77377 0.40716 lineto
0.79396 0.41847 lineto
0.81321 0.43191 lineto
0.83131 0.44736 lineto
0.84806 0.46472 lineto
0.86328 0.48384 lineto
Mistroke
0.8768 0.50456 lineto
0.88847 0.52673 lineto
0.89814 0.55015 lineto
0.9022 0.56227 lineto
0.90571 0.57463 lineto
0.90868 0.5872 lineto
0.91108 0.59996 lineto
0.91292 0.61287 lineto
0.91417 0.62592 lineto
0.91484 0.63907 lineto
0.91493 0.65229 lineto
0.91442 0.66556 lineto
0.91331 0.67885 lineto
0.91162 0.69212 lineto
0.90932 0.70536 lineto
0.90297 0.73159 lineto
0.89428 0.75732 lineto
0.88332 0.78233 lineto
0.87016 0.8064 lineto
0.85491 0.82931 lineto
0.81859 0.87093 lineto
0.79782 0.88927 lineto
0.77554 0.90576 lineto
0.75192 0.92025 lineto
0.72716 0.93264 lineto
0.70148 0.94282 lineto
0.68836 0.94706 lineto
0.67509 0.95071 lineto
0.66169 0.95378 lineto
0.6482 0.95626 lineto
0.63465 0.95815 lineto
0.62106 0.95944 lineto
0.60746 0.96013 lineto
0.59388 0.96022 lineto
0.58035 0.95972 lineto
0.5669 0.95863 lineto
0.55355 0.95696 lineto
0.54034 0.9547 lineto
0.51443 0.94848 lineto
0.48939 0.94004 lineto
0.46541 0.92949 lineto
0.44271 0.91694 lineto
0.42145 0.90253 lineto
0.40182 0.88641 lineto
0.38397 0.86875 lineto
0.36804 0.84974 lineto
0.35414 0.82956 lineto
0.34238 0.80844 lineto
0.33282 0.78657 lineto
0.32553 0.76419 lineto
Mistroke
0.32275 0.75287 lineto
0.32055 0.74151 lineto
0.31893 0.73014 lineto
0.31788 0.71877 lineto
0.31741 0.70745 lineto
0.31752 0.6962 lineto
0.31819 0.68505 lineto
0.31942 0.67402 lineto
0.32121 0.66315 lineto
0.32355 0.65246 lineto
0.32982 0.63172 lineto
0.33813 0.61202 lineto
0.34837 0.59355 lineto
0.3604 0.57649 lineto
0.37408 0.56102 lineto
0.38922 0.54728 lineto
0.40565 0.53543 lineto
0.42318 0.52556 lineto
0.43229 0.5214 lineto
0.4416 0.51778 lineto
0.45107 0.5147 lineto
0.46069 0.51217 lineto
0.47042 0.51019 lineto
0.48023 0.50878 lineto
0.4901 0.50793 lineto
0.5 0.50765 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 257.5 282 277 1 0 0 1 -146 185 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1.127721 0 0 1.127721 100.916473 134.422668 sc5mt astore pop false {
    sc5mt dodrawctm 184 274 244 244 0 rfpath unpagectm
} {
    244 244 184 274 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1.127721 0 0 1.127721 100.916473 134.422668] dodrawctm
184 274 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	244.242645 def
/Mwidth		244.242645 def
/Mheight	244.242645 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.483357 0.5 0.483357 [
[(-1)] 0.01664 0.5 0 2 Msboxa
[(-0.5)] 0.25832 0.5 0 2 Msboxa
[(0.5)] 0.74168 0.5 0 2 Msboxa
[(1)] 0.98336 0.5 0 2 Msboxa
[(-1)] 0.4875 0.01664 1 0 Msboxa
[(-0.5)] 0.4875 0.25832 1 0 Msboxa
[(0.5)] 0.4875 0.74168 1 0 Msboxa
[(1)] 0.4875 0.98336 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.01664 0.5 moveto
0.01664 0.50625 lineto
stroke
grestore
[(-1)] 0.01664 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.25832 0.5 moveto
0.25832 0.50625 lineto
stroke
grestore
[(-0.5)] 0.25832 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.74168 0.5 moveto
0.74168 0.50625 lineto
stroke
grestore
[(0.5)] 0.74168 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.98336 0.5 moveto
0.98336 0.50625 lineto
stroke
grestore
[(1)] 0.98336 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.06498 0.5 moveto
0.06498 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11331 0.5 moveto
0.11331 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16165 0.5 moveto
0.16165 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.20999 0.5 moveto
0.20999 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30666 0.5 moveto
0.30666 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35499 0.5 moveto
0.35499 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40333 0.5 moveto
0.40333 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45166 0.5 moveto
0.45166 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54834 0.5 moveto
0.54834 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59667 0.5 moveto
0.59667 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64501 0.5 moveto
0.64501 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69334 0.5 moveto
0.69334 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.79001 0.5 moveto
0.79001 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83835 0.5 moveto
0.83835 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88669 0.5 moveto
0.88669 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.93502 0.5 moveto
0.93502 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.01664 moveto
0.50625 0.01664 lineto
stroke
grestore
[(-1)] 0.4875 0.01664 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.25832 moveto
0.50625 0.25832 lineto
stroke
grestore
[(-0.5)] 0.4875 0.25832 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.74168 moveto
0.50625 0.74168 lineto
stroke
grestore
[(0.5)] 0.4875 0.74168 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.98336 moveto
0.50625 0.98336 lineto
stroke
grestore
[(1)] 0.4875 0.98336 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.06498 moveto
0.50375 0.06498 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.11331 moveto
0.50375 0.11331 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.16165 moveto
0.50375 0.16165 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.20999 moveto
0.50375 0.20999 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.30666 moveto
0.50375 0.30666 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.35499 moveto
0.50375 0.35499 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40333 moveto
0.50375 0.40333 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45166 moveto
0.50375 0.45166 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54834 moveto
0.50375 0.54834 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59667 moveto
0.50375 0.59667 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.64501 moveto
0.50375 0.64501 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.69334 moveto
0.50375 0.69334 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.79001 moveto
0.50375 0.79001 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.83835 moveto
0.50375 0.83835 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.88669 moveto
0.50375 0.88669 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.93502 moveto
0.50375 0.93502 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.5 0.5 moveto
0.52368 0.50136 lineto
0.54707 0.50541 lineto
0.56988 0.51213 lineto
0.59183 0.52141 lineto
0.61266 0.53317 lineto
0.63211 0.54727 lineto
0.6659 0.58181 lineto
0.67981 0.60186 lineto
0.6915 0.62347 lineto
0.7008 0.64639 lineto
0.70758 0.67036 lineto
0.71176 0.6951 lineto
0.71325 0.72034 lineto
0.71202 0.74579 lineto
0.70807 0.77116 lineto
0.7014 0.79615 lineto
0.69209 0.82048 lineto
0.68021 0.84388 lineto
0.66587 0.86607 lineto
0.64921 0.88681 lineto
0.6304 0.90585 lineto
0.60963 0.92297 lineto
0.58712 0.93798 lineto
0.56309 0.95071 lineto
0.5378 0.961 lineto
0.51151 0.96873 lineto
0.48449 0.97382 lineto
0.45703 0.97619 lineto
0.42942 0.97582 lineto
0.40194 0.97271 lineto
0.3749 0.96689 lineto
0.34856 0.95841 lineto
0.32321 0.94737 lineto
0.29912 0.93388 lineto
0.27653 0.91809 lineto
0.25567 0.90018 lineto
0.23677 0.88034 lineto
0.22001 0.85878 lineto
0.20556 0.83574 lineto
0.19357 0.81149 lineto
0.18415 0.78627 lineto
0.17738 0.76038 lineto
0.17332 0.7341 lineto
0.172 0.70771 lineto
0.1734 0.6815 lineto
0.17751 0.65577 lineto
0.18423 0.6308 lineto
0.19349 0.60685 lineto
0.20515 0.5842 lineto
Mistroke
0.21906 0.56309 lineto
0.23505 0.54374 lineto
0.25291 0.52638 lineto
0.27242 0.51118 lineto
0.29335 0.49831 lineto
0.31542 0.4879 lineto
0.33839 0.48007 lineto
0.36196 0.47488 lineto
0.38584 0.4724 lineto
0.40976 0.47263 lineto
0.43342 0.47556 lineto
0.45653 0.48116 lineto
0.47882 0.48934 lineto
0.5 0.5 lineto
0.53805 0.52822 lineto
0.55445 0.54544 lineto
0.56882 0.56446 lineto
0.58098 0.58506 lineto
0.59078 0.60699 lineto
0.59807 0.62999 lineto
0.60277 0.6538 lineto
0.60479 0.67812 lineto
0.60411 0.70268 lineto
0.6007 0.72718 lineto
0.59459 0.75133 lineto
0.58583 0.77484 lineto
0.57451 0.79745 lineto
0.56072 0.81887 lineto
0.54461 0.83886 lineto
0.50611 0.87359 lineto
0.48412 0.88791 lineto
0.46061 0.89996 lineto
0.43581 0.90959 lineto
0.41001 0.91668 lineto
0.38346 0.92112 lineto
0.35646 0.92286 lineto
0.32929 0.92187 lineto
0.30224 0.91813 lineto
0.2756 0.91169 lineto
0.24966 0.90258 lineto
0.22469 0.89091 lineto
0.20096 0.87678 lineto
0.17873 0.86035 lineto
0.15822 0.84178 lineto
0.12322 0.79904 lineto
0.10909 0.77531 lineto
0.09742 0.75034 lineto
0.08831 0.7244 lineto
0.08187 0.69776 lineto
0.07813 0.67071 lineto
Mistroke
0.07714 0.64354 lineto
0.07888 0.61654 lineto
0.08332 0.58999 lineto
0.09041 0.56419 lineto
0.10004 0.53939 lineto
0.11209 0.51588 lineto
0.12641 0.49389 lineto
0.14283 0.47365 lineto
0.16114 0.45539 lineto
0.18113 0.43928 lineto
0.20255 0.42549 lineto
0.22516 0.41417 lineto
0.24867 0.40541 lineto
0.27282 0.3993 lineto
0.29732 0.39589 lineto
0.32188 0.39521 lineto
0.3462 0.39723 lineto
0.37001 0.40193 lineto
0.39301 0.40922 lineto
0.41494 0.41902 lineto
0.43554 0.43118 lineto
0.45456 0.44555 lineto
0.47178 0.46195 lineto
0.48699 0.48017 lineto
0.5 0.5 lineto
0.51066 0.52118 lineto
0.51884 0.54347 lineto
0.52444 0.56658 lineto
0.52737 0.59024 lineto
0.5276 0.61416 lineto
0.52512 0.63804 lineto
0.51993 0.66161 lineto
0.5121 0.68458 lineto
0.50169 0.70665 lineto
0.48882 0.72758 lineto
0.47362 0.74709 lineto
0.45626 0.76495 lineto
0.43691 0.78094 lineto
0.4158 0.79485 lineto
0.39315 0.80651 lineto
0.3692 0.81577 lineto
0.34423 0.82249 lineto
0.3185 0.8266 lineto
0.29229 0.828 lineto
0.2659 0.82668 lineto
0.23962 0.82262 lineto
0.21373 0.81585 lineto
0.18851 0.80643 lineto
0.16426 0.79444 lineto
0.14122 0.77999 lineto
Mistroke
0.11966 0.76323 lineto
0.09982 0.74433 lineto
0.08191 0.72347 lineto
0.06612 0.70088 lineto
0.05263 0.67679 lineto
0.04159 0.65144 lineto
0.03311 0.6251 lineto
0.02729 0.59806 lineto
0.02418 0.57058 lineto
0.02381 0.54297 lineto
0.02618 0.51551 lineto
0.03127 0.48849 lineto
0.039 0.4622 lineto
0.04929 0.43691 lineto
0.06202 0.41288 lineto
0.07703 0.39037 lineto
0.09415 0.3696 lineto
0.11319 0.35079 lineto
0.13393 0.33413 lineto
0.15612 0.31979 lineto
0.17952 0.30791 lineto
0.20385 0.2986 lineto
0.22884 0.29193 lineto
0.25421 0.28798 lineto
0.27966 0.28675 lineto
0.3049 0.28824 lineto
0.32964 0.29242 lineto
0.35361 0.2992 lineto
0.37653 0.3085 lineto
0.39814 0.32019 lineto
0.41819 0.3341 lineto
0.43646 0.35007 lineto
0.45273 0.36789 lineto
0.46683 0.38734 lineto
0.47859 0.40817 lineto
0.48787 0.43012 lineto
0.49459 0.45293 lineto
0.49864 0.47632 lineto
0.5 0.5 lineto
0.49864 0.52368 lineto
0.49459 0.54707 lineto
0.48787 0.56988 lineto
0.47859 0.59183 lineto
0.46683 0.61266 lineto
0.45273 0.63211 lineto
0.43646 0.64993 lineto
0.41819 0.6659 lineto
0.39814 0.67981 lineto
0.37653 0.6915 lineto
0.35361 0.7008 lineto
Mistroke
0.32964 0.70758 lineto
0.3049 0.71176 lineto
0.27966 0.71325 lineto
0.25421 0.71202 lineto
0.22884 0.70807 lineto
0.20385 0.7014 lineto
0.17952 0.69209 lineto
0.15612 0.68021 lineto
0.13393 0.66587 lineto
0.11319 0.64921 lineto
0.09415 0.6304 lineto
0.07703 0.60963 lineto
0.06202 0.58712 lineto
0.04929 0.56309 lineto
0.039 0.5378 lineto
0.03127 0.51151 lineto
0.02618 0.48449 lineto
0.02381 0.45703 lineto
0.02418 0.42942 lineto
0.02729 0.40194 lineto
0.03311 0.3749 lineto
0.04159 0.34856 lineto
0.05263 0.32321 lineto
0.06612 0.29912 lineto
0.08191 0.27653 lineto
0.09982 0.25567 lineto
0.11966 0.23677 lineto
0.14122 0.22001 lineto
0.16426 0.20556 lineto
0.18851 0.19357 lineto
0.21373 0.18415 lineto
0.23962 0.17738 lineto
0.2659 0.17332 lineto
0.29229 0.172 lineto
0.3185 0.1734 lineto
0.34423 0.17751 lineto
0.3692 0.18423 lineto
0.39315 0.19349 lineto
0.4158 0.20515 lineto
0.43691 0.21906 lineto
0.45626 0.23505 lineto
0.47362 0.25291 lineto
0.48882 0.27242 lineto
0.50169 0.29335 lineto
0.5121 0.31542 lineto
0.51993 0.33839 lineto
0.52512 0.36196 lineto
0.5276 0.38584 lineto
0.52737 0.40976 lineto
0.52444 0.43342 lineto
Mistroke
0.51884 0.45653 lineto
0.51066 0.47882 lineto
0.5 0.5 lineto
0.47178 0.53805 lineto
0.45456 0.55445 lineto
0.43554 0.56882 lineto
0.41494 0.58098 lineto
0.39301 0.59078 lineto
0.37001 0.59807 lineto
0.3462 0.60277 lineto
0.32188 0.60479 lineto
0.29732 0.60411 lineto
0.27282 0.6007 lineto
0.24867 0.59459 lineto
0.22516 0.58583 lineto
0.20255 0.57451 lineto
0.18113 0.56072 lineto
0.16114 0.54461 lineto
0.14283 0.52635 lineto
0.12641 0.50611 lineto
0.11209 0.48412 lineto
0.10004 0.46061 lineto
0.09041 0.43581 lineto
0.08332 0.41001 lineto
0.07888 0.38346 lineto
0.07714 0.35646 lineto
0.07813 0.32929 lineto
0.08187 0.30224 lineto
0.08831 0.2756 lineto
0.09742 0.24966 lineto
0.10909 0.22469 lineto
0.12322 0.20096 lineto
0.13965 0.17873 lineto
0.15822 0.15822 lineto
0.17873 0.13965 lineto
0.20096 0.12322 lineto
0.22469 0.10909 lineto
0.24966 0.09742 lineto
0.2756 0.08831 lineto
0.30224 0.08187 lineto
0.32929 0.07813 lineto
0.35646 0.07714 lineto
0.38346 0.07888 lineto
0.41001 0.08332 lineto
0.43581 0.09041 lineto
0.46061 0.10004 lineto
0.48412 0.11209 lineto
0.50611 0.12641 lineto
0.52635 0.14283 lineto
0.54461 0.16114 lineto
Mistroke
0.56072 0.18113 lineto
0.57451 0.20255 lineto
0.58583 0.22516 lineto
0.59459 0.24867 lineto
0.6007 0.27282 lineto
0.60411 0.29732 lineto
0.60479 0.32188 lineto
0.60277 0.3462 lineto
0.59807 0.37001 lineto
0.59078 0.39301 lineto
0.58098 0.41494 lineto
0.56882 0.43554 lineto
0.55445 0.45456 lineto
0.53805 0.47178 lineto
0.51983 0.48699 lineto
0.5 0.5 lineto
0.47882 0.51066 lineto
0.45653 0.51884 lineto
0.43342 0.52444 lineto
0.40976 0.52737 lineto
0.38584 0.5276 lineto
0.36196 0.52512 lineto
0.33839 0.51993 lineto
0.31542 0.5121 lineto
0.29335 0.50169 lineto
0.27242 0.48882 lineto
0.25291 0.47362 lineto
0.23505 0.45626 lineto
0.21906 0.43691 lineto
0.20515 0.4158 lineto
0.19349 0.39315 lineto
0.18423 0.3692 lineto
0.17751 0.34423 lineto
0.1734 0.3185 lineto
0.172 0.29229 lineto
0.17332 0.2659 lineto
0.17738 0.23962 lineto
0.18415 0.21373 lineto
0.19357 0.18851 lineto
0.20556 0.16426 lineto
0.22001 0.14122 lineto
0.23677 0.11966 lineto
0.25567 0.09982 lineto
0.27653 0.08191 lineto
0.29912 0.06612 lineto
0.32321 0.05263 lineto
0.34856 0.04159 lineto
0.3749 0.03311 lineto
0.40194 0.02729 lineto
0.42942 0.02418 lineto
Mistroke
0.45703 0.02381 lineto
0.48449 0.02618 lineto
0.51151 0.03127 lineto
0.5378 0.039 lineto
0.56309 0.04929 lineto
0.58712 0.06202 lineto
0.60963 0.07703 lineto
0.6304 0.09415 lineto
0.64921 0.11319 lineto
0.66587 0.13393 lineto
0.68021 0.15612 lineto
0.69209 0.17952 lineto
0.7014 0.20385 lineto
0.70807 0.22884 lineto
0.71202 0.25421 lineto
0.71325 0.27966 lineto
0.71176 0.3049 lineto
0.70758 0.32964 lineto
0.7008 0.35361 lineto
0.6915 0.37653 lineto
0.67981 0.39814 lineto
0.6659 0.41819 lineto
0.64993 0.43646 lineto
0.63211 0.45273 lineto
0.61266 0.46683 lineto
0.59183 0.47859 lineto
0.56988 0.48787 lineto
0.54707 0.49459 lineto
0.52368 0.49864 lineto
0.5 0.5 lineto
0.47632 0.49864 lineto
0.45293 0.49459 lineto
0.43012 0.48787 lineto
0.40817 0.47859 lineto
0.38734 0.46683 lineto
0.36789 0.45273 lineto
0.35007 0.43646 lineto
0.3341 0.41819 lineto
0.32019 0.39814 lineto
0.3085 0.37653 lineto
0.2992 0.35361 lineto
0.29242 0.32964 lineto
0.28824 0.3049 lineto
0.28675 0.27966 lineto
0.28798 0.25421 lineto
0.29193 0.22884 lineto
0.2986 0.20385 lineto
0.30791 0.17952 lineto
0.31979 0.15612 lineto
0.33413 0.13393 lineto
Mistroke
0.35079 0.11319 lineto
0.3696 0.09415 lineto
0.39037 0.07703 lineto
0.41288 0.06202 lineto
0.43691 0.04929 lineto
0.4622 0.039 lineto
0.48849 0.03127 lineto
0.51551 0.02618 lineto
0.54297 0.02381 lineto
0.57058 0.02418 lineto
0.59806 0.02729 lineto
0.6251 0.03311 lineto
0.65144 0.04159 lineto
0.67679 0.05263 lineto
0.70088 0.06612 lineto
0.72347 0.08191 lineto
0.74433 0.09982 lineto
0.76323 0.11966 lineto
0.77999 0.14122 lineto
0.79444 0.16426 lineto
0.80643 0.18851 lineto
0.81585 0.21373 lineto
0.82262 0.23962 lineto
0.82668 0.2659 lineto
0.828 0.29229 lineto
0.8266 0.3185 lineto
0.82249 0.34423 lineto
0.81577 0.3692 lineto
0.80651 0.39315 lineto
0.79485 0.4158 lineto
0.78094 0.43691 lineto
0.76495 0.45626 lineto
0.74709 0.47362 lineto
0.72758 0.48882 lineto
0.70665 0.50169 lineto
0.68458 0.5121 lineto
0.66161 0.51993 lineto
0.63804 0.52512 lineto
0.61416 0.5276 lineto
0.59024 0.52737 lineto
0.56658 0.52444 lineto
0.54347 0.51884 lineto
0.52118 0.51066 lineto
0.5 0.5 lineto
0.46195 0.47178 lineto
0.44555 0.45456 lineto
0.43118 0.43554 lineto
0.41902 0.41494 lineto
0.40922 0.39301 lineto
0.40193 0.37001 lineto
Mistroke
0.39723 0.3462 lineto
0.39521 0.32188 lineto
0.39589 0.29732 lineto
0.3993 0.27282 lineto
0.40541 0.24867 lineto
0.41417 0.22516 lineto
0.42549 0.20255 lineto
0.43928 0.18113 lineto
0.45539 0.16114 lineto
0.47365 0.14283 lineto
0.49389 0.12641 lineto
0.51588 0.11209 lineto
0.53939 0.10004 lineto
0.56419 0.09041 lineto
0.58999 0.08332 lineto
0.61654 0.07888 lineto
0.64354 0.07714 lineto
0.67071 0.07813 lineto
0.69776 0.08187 lineto
0.7244 0.08831 lineto
0.75034 0.09742 lineto
0.77531 0.10909 lineto
0.79904 0.12322 lineto
0.82127 0.13965 lineto
0.84178 0.15822 lineto
0.86035 0.17873 lineto
0.87678 0.20096 lineto
0.89091 0.22469 lineto
0.90258 0.24966 lineto
0.91169 0.2756 lineto
0.91813 0.30224 lineto
0.92187 0.32929 lineto
0.92286 0.35646 lineto
0.92112 0.38346 lineto
0.91668 0.41001 lineto
0.90959 0.43581 lineto
0.89996 0.46061 lineto
0.88791 0.48412 lineto
0.87359 0.50611 lineto
0.85717 0.52635 lineto
0.83886 0.54461 lineto
0.81887 0.56072 lineto
0.79745 0.57451 lineto
0.77484 0.58583 lineto
0.75133 0.59459 lineto
0.72718 0.6007 lineto
0.70268 0.60411 lineto
0.67812 0.60479 lineto
0.6538 0.60277 lineto
0.62999 0.59807 lineto
Mistroke
0.60699 0.59078 lineto
0.58506 0.58098 lineto
0.56446 0.56882 lineto
0.54544 0.55445 lineto
0.52822 0.53805 lineto
0.51301 0.51983 lineto
0.5 0.5 lineto
0.48934 0.47882 lineto
0.48116 0.45653 lineto
0.47556 0.43342 lineto
0.47263 0.40976 lineto
0.4724 0.38584 lineto
0.47488 0.36196 lineto
0.48007 0.33839 lineto
0.4879 0.31542 lineto
0.49831 0.29335 lineto
0.51118 0.27242 lineto
0.52638 0.25291 lineto
0.54374 0.23505 lineto
0.56309 0.21906 lineto
0.5842 0.20515 lineto
0.60685 0.19349 lineto
0.6308 0.18423 lineto
0.65577 0.17751 lineto
0.6815 0.1734 lineto
0.70771 0.172 lineto
0.7341 0.17332 lineto
0.76038 0.17738 lineto
0.78627 0.18415 lineto
0.81149 0.19357 lineto
0.83574 0.20556 lineto
0.85878 0.22001 lineto
0.88034 0.23677 lineto
0.90018 0.25567 lineto
0.91809 0.27653 lineto
0.93388 0.29912 lineto
0.94737 0.32321 lineto
0.95841 0.34856 lineto
0.96689 0.3749 lineto
0.97271 0.40194 lineto
0.97582 0.42942 lineto
0.97619 0.45703 lineto
0.97382 0.48449 lineto
0.96873 0.51151 lineto
0.961 0.5378 lineto
0.95071 0.56309 lineto
0.93798 0.58712 lineto
0.92297 0.60963 lineto
0.90585 0.6304 lineto
0.88681 0.64921 lineto
Mistroke
0.86607 0.66587 lineto
0.84388 0.68021 lineto
0.82048 0.69209 lineto
0.79615 0.7014 lineto
0.77116 0.70807 lineto
0.74579 0.71202 lineto
0.72034 0.71325 lineto
0.6951 0.71176 lineto
0.67036 0.70758 lineto
0.64639 0.7008 lineto
0.62347 0.6915 lineto
0.60186 0.67981 lineto
0.58181 0.6659 lineto
0.56354 0.64993 lineto
0.54727 0.63211 lineto
0.53317 0.61266 lineto
0.52141 0.59183 lineto
0.51213 0.56988 lineto
0.50541 0.54707 lineto
0.50136 0.52368 lineto
0.5 0.5 lineto
0.50136 0.47632 lineto
0.50541 0.45293 lineto
0.51213 0.43012 lineto
0.52141 0.40817 lineto
0.53317 0.38734 lineto
0.54727 0.36789 lineto
0.56354 0.35007 lineto
0.58181 0.3341 lineto
0.60186 0.32019 lineto
0.62347 0.3085 lineto
0.64639 0.2992 lineto
0.67036 0.29242 lineto
0.6951 0.28824 lineto
0.72034 0.28675 lineto
0.74579 0.28798 lineto
0.77116 0.29193 lineto
0.79615 0.2986 lineto
0.82048 0.30791 lineto
0.84388 0.31979 lineto
0.86607 0.33413 lineto
0.88681 0.35079 lineto
0.90585 0.3696 lineto
0.92297 0.39037 lineto
0.93798 0.41288 lineto
0.95071 0.43691 lineto
0.961 0.4622 lineto
0.96873 0.48849 lineto
0.97382 0.51551 lineto
0.97619 0.54297 lineto
Mistroke
0.97582 0.57058 lineto
0.97271 0.59806 lineto
0.96689 0.6251 lineto
0.95841 0.65144 lineto
0.94737 0.67679 lineto
0.93388 0.70088 lineto
0.91809 0.72347 lineto
0.90018 0.74433 lineto
0.88034 0.76323 lineto
0.85878 0.77999 lineto
0.83574 0.79444 lineto
0.81149 0.80643 lineto
0.78627 0.81585 lineto
0.76038 0.82262 lineto
0.7341 0.82668 lineto
0.70771 0.828 lineto
0.6815 0.8266 lineto
0.65577 0.82249 lineto
0.6308 0.81577 lineto
0.60685 0.80651 lineto
0.5842 0.79485 lineto
0.56309 0.78094 lineto
0.54374 0.76495 lineto
0.52638 0.74709 lineto
0.51118 0.72758 lineto
0.49831 0.70665 lineto
0.4879 0.68458 lineto
0.48007 0.66161 lineto
0.47488 0.63804 lineto
0.4724 0.61416 lineto
0.47263 0.59024 lineto
0.47556 0.56658 lineto
0.48116 0.54347 lineto
0.48934 0.52118 lineto
0.5 0.5 lineto
0.51301 0.48017 lineto
0.52822 0.46195 lineto
0.54544 0.44555 lineto
0.56446 0.43118 lineto
0.58506 0.41902 lineto
0.60699 0.40922 lineto
0.62999 0.40193 lineto
0.6538 0.39723 lineto
0.67812 0.39521 lineto
0.70268 0.39589 lineto
0.72718 0.3993 lineto
0.75133 0.40541 lineto
0.77484 0.41417 lineto
0.79745 0.42549 lineto
0.81887 0.43928 lineto
Mistroke
0.83886 0.45539 lineto
0.85717 0.47365 lineto
0.87359 0.49389 lineto
0.88791 0.51588 lineto
0.89996 0.53939 lineto
0.90959 0.56419 lineto
0.91668 0.58999 lineto
0.92112 0.61654 lineto
0.92286 0.64354 lineto
0.92187 0.67071 lineto
0.91813 0.69776 lineto
0.91169 0.7244 lineto
0.90258 0.75034 lineto
0.89091 0.77531 lineto
0.87678 0.79904 lineto
0.86035 0.82127 lineto
0.84178 0.84178 lineto
0.82127 0.86035 lineto
0.79904 0.87678 lineto
0.77531 0.89091 lineto
0.75034 0.90258 lineto
0.7244 0.91169 lineto
0.69776 0.91813 lineto
0.67071 0.92187 lineto
0.64354 0.92286 lineto
0.61654 0.92112 lineto
0.58999 0.91668 lineto
0.56419 0.90959 lineto
0.53939 0.89996 lineto
0.51588 0.88791 lineto
0.49389 0.87359 lineto
0.47365 0.85717 lineto
0.45539 0.83886 lineto
0.43928 0.81887 lineto
0.42549 0.79745 lineto
0.41417 0.77484 lineto
0.40541 0.75133 lineto
0.3993 0.72718 lineto
0.39589 0.70268 lineto
0.39521 0.67812 lineto
0.39723 0.6538 lineto
0.40193 0.62999 lineto
0.40922 0.60699 lineto
0.41902 0.58506 lineto
0.43118 0.56446 lineto
0.44555 0.54544 lineto
0.46195 0.52822 lineto
0.48017 0.51301 lineto
0.5 0.5 lineto
0.52118 0.48934 lineto
Mistroke
0.54347 0.48116 lineto
0.56658 0.47556 lineto
0.59024 0.47263 lineto
0.61416 0.4724 lineto
0.63804 0.47488 lineto
0.66161 0.48007 lineto
0.68458 0.4879 lineto
0.70665 0.49831 lineto
0.72758 0.51118 lineto
0.74709 0.52638 lineto
0.76495 0.54374 lineto
0.78094 0.56309 lineto
0.79485 0.5842 lineto
0.80651 0.60685 lineto
0.81577 0.6308 lineto
0.82249 0.65577 lineto
0.8266 0.6815 lineto
0.828 0.70771 lineto
0.82668 0.7341 lineto
0.82262 0.76038 lineto
0.81585 0.78627 lineto
0.80643 0.81149 lineto
0.79444 0.83574 lineto
0.77999 0.85878 lineto
0.76323 0.88034 lineto
0.74433 0.90018 lineto
0.72347 0.91809 lineto
0.70088 0.93388 lineto
0.67679 0.94737 lineto
0.65144 0.95841 lineto
0.6251 0.96689 lineto
0.59806 0.97271 lineto
0.57058 0.97582 lineto
0.54297 0.97619 lineto
0.51551 0.97382 lineto
0.48849 0.96873 lineto
0.4622 0.961 lineto
0.43691 0.95071 lineto
0.41288 0.93798 lineto
0.39037 0.92297 lineto
0.3696 0.90585 lineto
0.35079 0.88681 lineto
0.33413 0.86607 lineto
0.31979 0.84388 lineto
0.30791 0.82048 lineto
0.2986 0.79615 lineto
0.29193 0.77116 lineto
0.28798 0.74579 lineto
0.28675 0.72034 lineto
0.28824 0.6951 lineto
Mistroke
0.29242 0.67036 lineto
0.2992 0.64639 lineto
0.3085 0.62347 lineto
0.32019 0.60186 lineto
0.3341 0.58181 lineto
0.35007 0.56354 lineto
0.36789 0.54727 lineto
0.38734 0.53317 lineto
0.40817 0.52141 lineto
0.43012 0.51213 lineto
0.45293 0.50541 lineto
0.47632 0.50136 lineto
0.5 0.5 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1.127721 0 0 1.127721 -57.327568 -74.072914 sc4mt astore 1.127721 0 0 1.127721 -57.327568 -74.072914 sc5mt astore 184 274 244 244 1.127721 0 0 1.127721 100.916473 134.422668 sc6mt astore rstroke
end
grestore
grestore
%%EndDocument
 @endspecial 477 1867 a Fi(Fig)p Fq(.)g(60.)20 b Fh(m=n)12
b Fq(=)h(5)p Fh(=)p Fq(7)i(\(left\))g(and)g Fh(m=n)d Fq(=)h(6)p
Fh(=)p Fq(7)i(\(righ)o(t\).)75 1995 y Fn(Exercise)f(4.)19 b
Fq(The)12 b(curv)o(e)g(nev)o(er)h(rep)q(eats)f(for)f Fh(b)h
Fq(irrational.)20 b(The)12 b(case)g Fh(b)g Fq(=)1399 1957 y
Fg(p)p 1437 1957 23 2 v 38 x Fq(2)g(with)h(in)o(terv)m(al)g([0)p
Fh(;)8 b Fq(24)p Fh(\031)r Fq(])75 2051 y(and)15 b(with)h(in)o(terv)m(al)g
([0)p Fh(;)8 b Fq(48)p Fh(\031)r Fq(])13 b(are)h(sho)o(wn)h(resp)q(ectiv)o
(ely)i(on)e(the)h(left)f(and)g(righ)o(t)g(of)g(Figure)h(61.)75
2128 y Fn(Exercise)h(5.)i Fq(T)o(ypical)d(v)m(alues)f(less)h(than)e(1)h(are)f
(sho)o(wn)g(in)i(Figure)e(62,)g(t)o(ypical)i(v)m(alues)f(greater)f(than)75
2184 y(1)j(are)h(sho)o(wn)f(in)i(Figure)f(63)34 b(As)18 b Fh(p)f
Fg(!)g Fq(0,)h(w)o(e)f(get)g(the)h(unit)h(circle)g(cen)o(tered)f(at)f(the)h
(origin)g(and)g(as)75 2241 y Fh(p)e Fg(!)g Fq(+)p Fg(1)p Fq(,)j(w)o(e)e(get)f
(the)i(familar)f(one-leafed)i(\(circle\))f(rose)f(of)g(Exercise)h(1)f(\(but)g
(doubly)h(co)o(v)o(ered)f(as)75 2297 y(the)e(inner)i(lo)q(op)f(mo)o(v)o(es)e
(up)i(to)f(the)h(outer)f(lo)q(op\).)20 b(The)c(case)f Fh(p)e
Fq(=)g(1)i(is)h(the)g(cardioid)g(\(with)g(the)f(heart)75 2354
y(upside)i(do)o(wn)e(here\).)75 2430 y Fn(Exercise)20 b(6.)28
b Fq(The)19 b(curv)o(es)f(are)f(called)j(lima\030)-20 b(cons.)29
b(The)18 b(sp)q(ecial)i(case)e Fh(p)f Fq(=)h(1)f(is)i(called)g(a)f(cardioid)
75 2487 y(and)d(the)h(limiting)h(cases)e Fh(p)d Fg(!)i Fq(1)g(and)i
Fh(p)c Fg(!)h Fq(+)p Fg(1)j Fq(are)f(the)h(circles)g(describ)q(ed)h(ab)q(o)o
(v)o(e.)75 2563 y Fn(Exercise)f(7.)j Fq(Divide)d(out)d(the)h
Fh(a)g Fq(and)g(w)o(e)g(are)g(bac)o(k)f(to)h(the)g(previous)g(case)g(except)h
(that)e(all)i(pictures)75 2620 y(are)g(scaled)h(b)o(y)f Fh(a)p
Fq(.)p eop
%%Page: 96 96
96 95 bop 75 -103 a Fq(96)859 b Fm(Plotting)22 b(in)g(P)n(olar)h(Co)r
(ordinates)p 980 -85 895 2 v 472 630 a @beginspecial 0 @llx
0 @lly 572 @urx 283 @ury 2416 @rwi @setspecial
%%BeginDocument: Pol.irrat.eps


/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /TDeps_dict 20 dict def TDeps_dict begin /showpage {
    
} def /copypage {
    
} def /grestoreall {
    
} def /erasepage {
    
} def /nulldevice {
    
} def /exitserver {
    
} def /initgraphics {
    
} def /renderbands {
    
} def /initmatrix {
    
} def /banddevice {
    
} def /setpageparams {
    
} def /framedevice {
    
} def /note {
    
} def end end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
gsave
0 0 572 283 rectclip
-18 -437 translate
18 437 572 283 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
gsave clpmt currentmatrix pop newpath
1 0 0 1 -147 182 sc5mt astore pop false {
    sc5mt dodrawctm 165 255.5 282 281 0 rfpath unpagectm
} {
    282 281 165 255.5 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -147 182] dodrawctm
165 255.5 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	281.000000 def
/Mwidth		282.000000 def
/Mheight	281.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.499835 0.476598 0.49941 0.476598 [
[(-1)] 0.02324 0.49941 0 2 Msboxa
[(-0.5)] 0.26154 0.49941 0 2 Msboxa
[(0.5)] 0.73813 0.49941 0 2 Msboxa
[(1)] 0.97643 0.49941 0 2 Msboxa
[(-1)] 0.48733 0.02281 1 0 Msboxa
[(-0.5)] 0.48733 0.26111 1 0 Msboxa
[(0.5)] 0.48733 0.73771 1 0 Msboxa
[(1)] 0.48733 0.97601 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.00067 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02324 0.49941 moveto
0.02324 0.50566 lineto
stroke
grestore
[(-1)] 0.02324 0.49941 0 2 Mshowa
gsave
0.002 setlinewidth
0.26154 0.49941 moveto
0.26154 0.50566 lineto
stroke
grestore
[(-0.5)] 0.26154 0.49941 0 2 Mshowa
gsave
0.002 setlinewidth
0.73813 0.49941 moveto
0.73813 0.50566 lineto
stroke
grestore
[(0.5)] 0.73813 0.49941 0 2 Mshowa
gsave
0.002 setlinewidth
0.97643 0.49941 moveto
0.97643 0.50566 lineto
stroke
grestore
[(1)] 0.97643 0.49941 0 2 Mshowa
gsave
0.001 setlinewidth
0.0709 0.49941 moveto
0.0709 0.50316 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11856 0.49941 moveto
0.11856 0.50316 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16622 0.49941 moveto
0.16622 0.50316 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21388 0.49941 moveto
0.21388 0.50316 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.3092 0.49941 moveto
0.3092 0.50316 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35686 0.49941 moveto
0.35686 0.50316 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40452 0.49941 moveto
0.40452 0.50316 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45217 0.49941 moveto
0.45217 0.50316 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54749 0.49941 moveto
0.54749 0.50316 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59515 0.49941 moveto
0.59515 0.50316 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64281 0.49941 moveto
0.64281 0.50316 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69047 0.49941 moveto
0.69047 0.50316 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78579 0.49941 moveto
0.78579 0.50316 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83345 0.49941 moveto
0.83345 0.50316 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88111 0.49941 moveto
0.88111 0.50316 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92877 0.49941 moveto
0.92877 0.50316 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.49941 moveto
1 0.49941 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.49983 0.02281 moveto
0.50608 0.02281 lineto
stroke
grestore
[(-1)] 0.48733 0.02281 1 0 Mshowa
gsave
0.002 setlinewidth
0.49983 0.26111 moveto
0.50608 0.26111 lineto
stroke
grestore
[(-0.5)] 0.48733 0.26111 1 0 Mshowa
gsave
0.002 setlinewidth
0.49983 0.73771 moveto
0.50608 0.73771 lineto
stroke
grestore
[(0.5)] 0.48733 0.73771 1 0 Mshowa
gsave
0.002 setlinewidth
0.49983 0.97601 moveto
0.50608 0.97601 lineto
stroke
grestore
[(1)] 0.48733 0.97601 1 0 Mshowa
gsave
0.001 setlinewidth
0.49983 0.07047 moveto
0.50358 0.07047 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.11813 moveto
0.50358 0.11813 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.16579 moveto
0.50358 0.16579 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.21345 moveto
0.50358 0.21345 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.30877 moveto
0.50358 0.30877 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.35643 moveto
0.50358 0.35643 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.40409 moveto
0.50358 0.40409 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.45175 moveto
0.50358 0.45175 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.54707 moveto
0.50358 0.54707 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.59473 moveto
0.50358 0.59473 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.64239 moveto
0.50358 0.64239 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.69005 moveto
0.50358 0.69005 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.78537 moveto
0.50358 0.78537 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.83303 moveto
0.50358 0.83303 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.88069 moveto
0.50358 0.88069 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.92835 moveto
0.50358 0.92835 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.49983 0 moveto
0.49983 0.99967 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.99967 lineto
0 0.99967 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.49983 0.49941 moveto
0.52128 0.50009 lineto
0.54261 0.50214 lineto
0.56373 0.50553 lineto
0.58452 0.51025 lineto
0.60489 0.51628 lineto
0.62472 0.52356 lineto
0.66241 0.54174 lineto
0.69684 0.56435 lineto
0.72733 0.59083 lineto
0.75332 0.62054 lineto
0.77434 0.65276 lineto
0.78286 0.66956 lineto
0.79001 0.68669 lineto
0.79578 0.70404 lineto
0.80013 0.72151 lineto
0.80307 0.73898 lineto
0.80459 0.75635 lineto
0.8047 0.77352 lineto
0.80341 0.79037 lineto
0.80076 0.8068 lineto
0.79678 0.8227 lineto
0.78497 0.85255 lineto
0.77726 0.8663 lineto
0.76841 0.87915 lineto
0.74761 0.90183 lineto
0.73582 0.91151 lineto
0.72321 0.91999 lineto
0.70987 0.92722 lineto
0.6959 0.93315 lineto
0.68139 0.93773 lineto
0.66646 0.94093 lineto
0.65119 0.94272 lineto
0.63571 0.94308 lineto
0.62011 0.942 lineto
0.6045 0.93947 lineto
0.58899 0.93551 lineto
0.57369 0.93013 lineto
0.5587 0.92334 lineto
0.54413 0.91519 lineto
0.51664 0.89492 lineto
0.49197 0.86972 lineto
0.47084 0.84009 lineto
0.46179 0.82381 lineto
0.45384 0.80665 lineto
0.44706 0.78872 lineto
0.4415 0.7701 lineto
0.4372 0.75089 lineto
0.4342 0.73119 lineto
0.43254 0.71111 lineto
Mistroke
0.43223 0.69075 lineto
0.43329 0.67022 lineto
0.43573 0.64963 lineto
0.43955 0.62909 lineto
0.44473 0.6087 lineto
0.45126 0.58857 lineto
0.45911 0.56882 lineto
0.47861 0.53081 lineto
0.50288 0.49547 lineto
0.53143 0.46351 lineto
0.56367 0.43558 lineto
0.59892 0.4122 lineto
0.61745 0.40237 lineto
0.63643 0.39382 lineto
0.65579 0.38661 lineto
0.6754 0.38075 lineto
0.69516 0.37627 lineto
0.71497 0.37317 lineto
0.73471 0.37145 lineto
0.75428 0.37112 lineto
0.77356 0.37216 lineto
0.79246 0.37454 lineto
0.81087 0.37824 lineto
0.82869 0.38322 lineto
0.84582 0.38942 lineto
0.86217 0.39681 lineto
0.89215 0.41486 lineto
0.91799 0.43681 lineto
0.92918 0.44906 lineto
0.93913 0.46202 lineto
0.95511 0.48974 lineto
0.96106 0.50431 lineto
0.96559 0.5192 lineto
0.96871 0.53431 lineto
0.97038 0.54954 lineto
0.9706 0.56478 lineto
0.96937 0.57992 lineto
0.96672 0.59486 lineto
0.96264 0.60948 lineto
0.95718 0.62369 lineto
0.95037 0.63739 lineto
0.93287 0.66283 lineto
0.92229 0.6744 lineto
0.91057 0.68507 lineto
0.89778 0.69478 lineto
0.88401 0.70345 lineto
0.86933 0.711 lineto
0.85383 0.71737 lineto
0.8376 0.72252 lineto
0.82075 0.72638 lineto
Mistroke
0.80337 0.72892 lineto
0.78556 0.73011 lineto
0.76742 0.72993 lineto
0.74908 0.72834 lineto
0.73062 0.72535 lineto
0.71217 0.72096 lineto
0.69383 0.71517 lineto
0.6757 0.708 lineto
0.64051 0.68962 lineto
0.60743 0.66612 lineto
0.5772 0.6379 lineto
0.55053 0.6055 lineto
0.52801 0.56952 lineto
0.51847 0.55041 lineto
0.51014 0.53069 lineto
0.50308 0.51044 lineto
0.49732 0.48977 lineto
0.49289 0.46879 lineto
0.48981 0.44759 lineto
0.4881 0.4263 lineto
0.48775 0.40502 lineto
0.48876 0.38385 lineto
0.49113 0.36291 lineto
0.49483 0.3423 lineto
0.49983 0.32213 lineto
0.50611 0.30249 lineto
0.5136 0.2835 lineto
0.53206 0.2478 lineto
0.5547 0.21574 lineto
0.58093 0.18795 lineto
0.61008 0.16495 lineto
0.62551 0.15539 lineto
0.64138 0.14717 lineto
0.65758 0.14033 lineto
0.67401 0.1349 lineto
0.69057 0.13088 lineto
0.70715 0.1283 lineto
0.72364 0.12714 lineto
0.73992 0.12741 lineto
0.75591 0.12908 lineto
0.77148 0.13213 lineto
0.78654 0.13652 lineto
0.80098 0.14223 lineto
0.82766 0.15737 lineto
0.8397 0.16668 lineto
0.85078 0.17707 lineto
0.8608 0.18846 lineto
0.86971 0.20076 lineto
0.87743 0.2139 lineto
0.8839 0.22778 lineto
Mistroke
0.88908 0.2423 lineto
0.89293 0.25737 lineto
0.8954 0.27289 lineto
0.89647 0.28876 lineto
0.89612 0.30486 lineto
0.89434 0.32108 lineto
0.89112 0.33733 lineto
0.88647 0.3535 lineto
0.88041 0.36947 lineto
0.87296 0.38514 lineto
0.854 0.41518 lineto
0.82992 0.44281 lineto
0.80117 0.46731 lineto
0.76833 0.488 lineto
0.75056 0.49675 lineto
0.73203 0.50434 lineto
0.71281 0.51072 lineto
0.69301 0.51585 lineto
0.67273 0.51969 lineto
0.65207 0.5222 lineto
0.63114 0.52336 lineto
0.61005 0.52316 lineto
0.5889 0.52159 lineto
0.5678 0.51866 lineto
0.54686 0.51436 lineto
0.5262 0.50872 lineto
0.48609 0.49355 lineto
0.44829 0.47342 lineto
0.41355 0.44878 lineto
0.38257 0.42015 lineto
0.35592 0.38817 lineto
0.3341 0.35355 lineto
0.32513 0.33549 lineto
0.31749 0.31707 lineto
0.31122 0.29839 lineto
0.30634 0.27956 lineto
0.30285 0.26068 lineto
0.30077 0.24187 lineto
0.30008 0.22324 lineto
0.30077 0.20488 lineto
0.30282 0.18691 lineto
0.30619 0.16943 lineto
0.31086 0.15254 lineto
0.31678 0.13634 lineto
0.32388 0.12092 lineto
0.33212 0.10637 lineto
0.34143 0.09278 lineto
0.35173 0.08023 lineto
0.37499 0.05853 lineto
0.38777 0.0495 lineto
Mistroke
0.40121 0.04177 lineto
0.41519 0.03537 lineto
0.42962 0.03035 lineto
0.4444 0.02673 lineto
0.45942 0.02455 lineto
0.47457 0.0238 lineto
0.48975 0.02451 lineto
0.50485 0.02666 lineto
0.51976 0.03024 lineto
0.53438 0.03524 lineto
0.5486 0.04163 lineto
0.56232 0.04938 lineto
0.57545 0.05844 lineto
0.59952 0.08027 lineto
0.61029 0.09293 lineto
0.62011 0.10666 lineto
0.6289 0.12138 lineto
0.6366 0.13701 lineto
0.64313 0.15346 lineto
0.64845 0.17063 lineto
0.6525 0.18844 lineto
0.65525 0.20678 lineto
0.65666 0.22555 lineto
0.6567 0.24465 lineto
0.65536 0.26396 lineto
0.65263 0.28338 lineto
0.6485 0.3028 lineto
0.64299 0.32211 lineto
0.6279 0.35999 lineto
0.60756 0.39617 lineto
0.58232 0.42986 lineto
0.55266 0.46034 lineto
0.51915 0.48695 lineto
0.48244 0.50913 lineto
0.46312 0.51841 lineto
0.44329 0.52643 lineto
0.42305 0.53314 lineto
0.4025 0.53852 lineto
0.38174 0.54255 lineto
0.3609 0.54521 lineto
0.34007 0.54649 lineto
0.31936 0.5464 lineto
0.29888 0.54496 lineto
0.27875 0.54217 lineto
0.25906 0.53807 lineto
0.23991 0.53269 lineto
0.22141 0.52609 lineto
0.20365 0.5183 lineto
0.17071 0.49941 lineto
0.14177 0.47658 lineto
Mistroke
0.11741 0.45044 lineto
0.09809 0.42171 lineto
0.09045 0.40662 lineto
0.08419 0.39118 lineto
0.07934 0.3755 lineto
0.07593 0.35968 lineto
0.07395 0.34383 lineto
0.07341 0.32806 lineto
0.0743 0.31247 lineto
0.07661 0.29718 lineto
0.08031 0.28228 lineto
0.08537 0.26788 lineto
0.09175 0.25407 lineto
0.09939 0.24097 lineto
0.10826 0.22865 lineto
0.11827 0.21721 lineto
0.14149 0.19728 lineto
0.15453 0.18894 lineto
0.16842 0.18177 lineto
0.18306 0.17584 lineto
0.19836 0.17118 lineto
0.21422 0.16785 lineto
0.23053 0.16589 lineto
0.24721 0.16531 lineto
0.26412 0.16614 lineto
0.28118 0.16839 lineto
0.29828 0.17206 lineto
0.3153 0.17715 lineto
0.33213 0.18365 lineto
0.36484 0.20077 lineto
0.39557 0.22314 lineto
0.42357 0.25038 lineto
0.44812 0.28198 lineto
0.46862 0.31734 lineto
0.47717 0.33621 lineto
0.48453 0.35575 lineto
0.49064 0.37587 lineto
0.49546 0.39647 lineto
0.49896 0.41743 lineto
0.50112 0.43865 lineto
0.50193 0.46004 lineto
0.50136 0.48147 lineto
0.49943 0.50283 lineto
0.49615 0.52403 lineto
0.49153 0.54495 lineto
0.48559 0.56549 lineto
0.46993 0.60502 lineto
0.44952 0.64181 lineto
0.42485 0.67515 lineto
0.39649 0.70439 lineto
Mistroke
0.36511 0.72899 lineto
0.34852 0.73941 lineto
0.33147 0.74852 lineto
0.31404 0.75627 lineto
0.29636 0.76265 lineto
0.27852 0.76763 lineto
0.26064 0.77119 lineto
0.24281 0.77335 lineto
0.22515 0.77409 lineto
0.20777 0.77344 lineto
0.19077 0.77142 lineto
0.17425 0.76806 lineto
0.15832 0.76339 lineto
0.14308 0.75746 lineto
0.12861 0.75032 lineto
0.11501 0.74203 lineto
0.10236 0.73266 lineto
0.08024 0.71097 lineto
0.0709 0.69881 lineto
0.0628 0.6859 lineto
0.05598 0.67232 lineto
0.0505 0.65817 lineto
0.04639 0.64356 lineto
0.04368 0.62858 lineto
0.04239 0.61335 lineto
0.04255 0.59796 lineto
0.04415 0.58253 lineto
0.04719 0.56717 lineto
0.05167 0.55197 lineto
0.05755 0.53705 lineto
0.06483 0.52252 lineto
0.07346 0.50846 lineto
0.09459 0.4822 lineto
0.12052 0.459 lineto
0.13512 0.44877 lineto
0.15071 0.43955 lineto
0.16721 0.43141 lineto
0.18453 0.42442 lineto
0.20257 0.41863 lineto
0.22124 0.41409 lineto
0.24045 0.41085 lineto
0.26008 0.40893 lineto
0.28003 0.40836 lineto
0.3002 0.40917 lineto
0.32048 0.41135 lineto
0.34075 0.41492 lineto
0.36092 0.41986 lineto
0.38086 0.42616 lineto
0.41969 0.44273 lineto
0.4564 0.46434 lineto
Mistroke
0.49024 0.4906 lineto
0.5205 0.52098 lineto
0.54659 0.55486 lineto
0.56798 0.59155 lineto
0.57679 0.6107 lineto
0.58429 0.63027 lineto
0.59044 0.65013 lineto
0.59524 0.67019 lineto
0.59865 0.69034 lineto
0.60069 0.71047 lineto
0.60134 0.73047 lineto
0.60062 0.75023 lineto
0.59856 0.76965 lineto
0.59517 0.78862 lineto
0.59049 0.80705 lineto
0.58456 0.82482 lineto
0.57745 0.84185 lineto
0.56919 0.85804 lineto
0.54954 0.88757 lineto
0.52619 0.91278 lineto
0.51335 0.92359 lineto
0.49983 0.93314 lineto
0.48576 0.94137 lineto
0.47121 0.94824 lineto
0.45631 0.95371 lineto
0.44114 0.95777 lineto
0.42582 0.96039 lineto
0.41045 0.96157 lineto
0.39515 0.9613 lineto
0.38001 0.95959 lineto
0.36515 0.95646 lineto
0.35067 0.95193 lineto
0.33668 0.94604 lineto
0.32326 0.93882 lineto
0.31053 0.93032 lineto
0.29857 0.9206 lineto
0.28747 0.90972 lineto
0.27731 0.89774 lineto
0.26013 0.87082 lineto
0.25325 0.85603 lineto
0.24758 0.84049 lineto
0.24317 0.82427 lineto
0.24008 0.80749 lineto
0.23834 0.79024 lineto
0.23797 0.77264 lineto
0.239 0.75477 lineto
0.24143 0.73676 lineto
0.24528 0.7187 lineto
0.25053 0.70071 lineto
0.25717 0.6829 lineto
Mistroke
0.26519 0.66537 lineto
0.28521 0.63156 lineto
0.31027 0.60009 lineto
0.33991 0.5717 lineto
0.37358 0.54706 lineto
0.41064 0.52673 lineto
0.43021 0.51833 lineto
0.45034 0.51118 lineto
0.47094 0.50532 lineto
0.4919 0.50077 lineto
0.51312 0.49757 lineto
0.53448 0.49572 lineto
0.55588 0.49524 lineto
0.57721 0.49612 lineto
0.59837 0.49836 lineto
0.61924 0.50194 lineto
0.63971 0.50684 lineto
0.6597 0.51302 lineto
0.69778 0.52904 lineto
0.73273 0.5496 lineto
0.76385 0.57417 lineto
0.79056 0.60213 lineto
0.81234 0.63276 lineto
0.82883 0.66529 lineto
0.83501 0.68201 lineto
0.83977 0.69889 lineto
0.84311 0.71583 lineto
0.84503 0.73272 lineto
0.84553 0.74945 lineto
0.84461 0.76591 lineto
0.84232 0.782 lineto
0.83866 0.79761 lineto
0.83369 0.81265 lineto
0.82743 0.82701 lineto
0.81996 0.8406 lineto
0.81133 0.85333 lineto
0.80159 0.86512 lineto
0.79084 0.87589 lineto
0.76657 0.89406 lineto
0.75323 0.90133 lineto
0.73921 0.90733 lineto
0.72461 0.91201 lineto
0.70953 0.91532 lineto
0.69407 0.91723 lineto
0.67833 0.91773 lineto
0.66243 0.91679 lineto
0.64647 0.91442 lineto
0.63055 0.91061 lineto
0.6148 0.90538 lineto
0.58417 0.89072 lineto
Mistroke
0.56951 0.88135 lineto
0.55541 0.87068 lineto
0.5293 0.84563 lineto
0.50656 0.81607 lineto
0.49665 0.79977 lineto
0.48781 0.78257 lineto
0.4801 0.76456 lineto
0.47358 0.74582 lineto
0.46831 0.72646 lineto
0.46431 0.70657 lineto
0.46164 0.68626 lineto
0.4603 0.66564 lineto
0.46033 0.6448 lineto
0.46172 0.62386 lineto
0.46449 0.60293 lineto
0.46862 0.58211 lineto
0.47411 0.56152 lineto
0.48092 0.54125 lineto
0.4984 0.50212 lineto
0.52071 0.46551 lineto
0.54739 0.43217 lineto
0.57789 0.40274 lineto
0.61153 0.3778 lineto
0.64759 0.3578 lineto
0.66628 0.34976 lineto
0.68527 0.34307 lineto
0.70445 0.33775 lineto
0.72371 0.33383 lineto
0.74296 0.3313 lineto
0.76208 0.33016 lineto
0.78096 0.3304 lineto
0.79949 0.33201 lineto
0.81758 0.33495 lineto
0.83511 0.3392 lineto
0.86814 0.35141 lineto
0.88344 0.35928 lineto
0.89782 0.36823 lineto
0.92347 0.3891 lineto
0.94453 0.4134 lineto
0.95318 0.42662 lineto
0.96051 0.44042 lineto
0.96648 0.4547 lineto
0.97106 0.46936 lineto
0.97421 0.4843 lineto
0.97592 0.49941 lineto
0.97619 0.51458 lineto
0.97501 0.52971 lineto
0.97239 0.54469 lineto
0.96834 0.5594 lineto
0.95608 0.58765 lineto
Mistroke
0.94793 0.60097 lineto
0.9385 0.61363 lineto
0.92785 0.62553 lineto
0.91603 0.6366 lineto
0.88917 0.65586 lineto
0.87429 0.66391 lineto
0.85855 0.67082 lineto
0.84204 0.67653 lineto
0.82487 0.68099 lineto
0.80712 0.68415 lineto
0.7889 0.68597 lineto
0.77032 0.68644 lineto
0.75148 0.68552 lineto
0.73248 0.68321 lineto
0.71344 0.67951 lineto
0.69446 0.6744 lineto
0.67566 0.66792 lineto
0.63899 0.65091 lineto
0.60425 0.62872 lineto
0.57222 0.60176 lineto
0.54361 0.57051 lineto
0.51905 0.53558 lineto
0.49905 0.49767 lineto
0.48403 0.45752 lineto
0.47848 0.43687 lineto
0.47428 0.41597 lineto
0.47144 0.39493 lineto
0.46998 0.37386 lineto
0.46988 0.35287 lineto
0.47114 0.33207 lineto
0.47375 0.31155 lineto
0.47768 0.29144 lineto
0.4829 0.27182 lineto
0.48936 0.25281 lineto
0.50583 0.21699 lineto
0.52662 0.18468 lineto
0.55116 0.15655 lineto
0.57877 0.13313 lineto
0.59351 0.12333 lineto
0.60873 0.11487 lineto
0.62433 0.10778 lineto
0.64022 0.10209 lineto
0.65628 0.09782 lineto
0.67241 0.09498 lineto
0.6885 0.09358 lineto
0.70444 0.09361 lineto
0.72012 0.09506 lineto
0.73545 0.0979 lineto
0.75031 0.10212 lineto
0.76461 0.10767 lineto
Mistroke
0.77824 0.1145 lineto
0.79112 0.12257 lineto
0.81425 0.14217 lineto
0.82433 0.15356 lineto
0.83334 0.16591 lineto
0.84119 0.17913 lineto
0.84782 0.19314 lineto
0.85319 0.20785 lineto
0.85724 0.22315 lineto
0.85994 0.23894 lineto
0.86126 0.25513 lineto
0.86117 0.2716 lineto
0.85966 0.28826 lineto
0.85672 0.30498 lineto
0.85236 0.32167 lineto
0.84658 0.33822 lineto
0.8394 0.35452 lineto
0.82096 0.38595 lineto
0.79735 0.41516 lineto
0.769 0.4414 lineto
0.73644 0.46399 lineto
0.70031 0.48235 lineto
0.68113 0.48978 lineto
0.66133 0.49598 lineto
0.64101 0.50091 lineto
0.62027 0.50453 lineto
0.59923 0.50681 lineto
0.57798 0.50774 lineto
0.55664 0.5073 lineto
0.53531 0.50549 lineto
0.5141 0.50233 lineto
0.49313 0.49781 lineto
0.45229 0.48485 lineto
0.43263 0.47646 lineto
0.41362 0.46687 lineto
0.37788 0.44428 lineto
0.34578 0.41759 lineto
0.31794 0.38741 lineto
0.29485 0.35444 lineto
0.28523 0.33714 lineto
0.27694 0.31944 lineto
0.27001 0.30143 lineto
0.26447 0.28323 lineto
0.26033 0.26494 lineto
0.2576 0.24667 lineto
0.25627 0.22852 lineto
0.25634 0.21061 lineto
0.25779 0.19304 lineto
0.26058 0.17592 lineto
0.26469 0.15934 lineto
Mistroke
0.27008 0.14342 lineto
0.27669 0.12823 lineto
0.28446 0.11388 lineto
0.30326 0.08803 lineto
0.31413 0.07668 lineto
0.32587 0.06648 lineto
0.3384 0.0575 lineto
0.35163 0.04978 lineto
0.36545 0.04338 lineto
0.37978 0.03834 lineto
0.39451 0.03469 lineto
0.40953 0.03246 lineto
0.42473 0.03167 lineto
0.44002 0.03232 lineto
0.45528 0.03442 lineto
0.47041 0.03796 lineto
0.4853 0.04293 lineto
0.49983 0.04929 lineto
0.52747 0.06608 lineto
0.54036 0.07642 lineto
0.55252 0.08799 lineto
0.57427 0.11456 lineto
0.59206 0.14521 lineto
0.5993 0.16186 lineto
0.60536 0.17928 lineto
0.61017 0.19737 lineto
0.61371 0.21603 lineto
0.61592 0.23516 lineto
0.61679 0.25466 lineto
0.61629 0.27441 lineto
0.6144 0.29432 lineto
0.61113 0.31428 lineto
0.60648 0.33416 lineto
0.59309 0.37332 lineto
0.5844 0.39237 lineto
0.57443 0.41094 lineto
0.55081 0.44622 lineto
0.52268 0.47842 lineto
0.49059 0.50687 lineto
0.45519 0.53098 lineto
0.4172 0.55029 lineto
0.39749 0.55802 lineto
0.37742 0.56443 lineto
0.35711 0.56948 lineto
0.33667 0.57316 lineto
0.31621 0.57547 lineto
0.29582 0.5764 lineto
0.27563 0.57596 lineto
0.25574 0.57416 lineto
0.23625 0.57104 lineto
Mistroke
0.21727 0.56661 lineto
0.18123 0.55404 lineto
0.16436 0.54599 lineto
0.14838 0.53685 lineto
0.11941 0.51557 lineto
0.09492 0.49081 lineto
0.08452 0.47735 lineto
0.07541 0.46329 lineto
0.06765 0.44872 lineto
0.06126 0.43376 lineto
0.05629 0.4185 lineto
0.05274 0.40305 lineto
0.05063 0.38752 lineto
0.04996 0.37202 lineto
0.05073 0.35664 lineto
0.05293 0.34151 lineto
0.05654 0.32672 lineto
0.06152 0.31238 lineto
0.06785 0.29859 lineto
0.07547 0.28545 lineto
0.09438 0.26148 lineto
0.10555 0.25083 lineto
0.11777 0.24118 lineto
0.13095 0.23259 lineto
0.14502 0.22515 lineto
0.15988 0.2189 lineto
0.17545 0.21391 lineto
0.19162 0.21022 lineto
0.2083 0.20787 lineto
0.22537 0.20689 lineto
0.24275 0.2073 lineto
0.26031 0.20913 lineto
0.27796 0.21236 lineto
0.29558 0.21702 lineto
0.31306 0.22307 lineto
0.34721 0.23932 lineto
0.37956 0.26086 lineto
0.40934 0.28734 lineto
0.43583 0.31826 lineto
0.45839 0.35305 lineto
0.46802 0.37168 lineto
0.47647 0.39102 lineto
0.4837 0.41097 lineto
0.48966 0.43142 lineto
0.49431 0.45229 lineto
0.49763 0.47345 lineto
0.49959 0.49481 lineto
0.50019 0.51626 lineto
0.49943 0.53769 lineto
0.4973 0.55898 lineto
Mistroke
0.49383 0.58004 lineto
0.48904 0.60075 lineto
0.47561 0.64072 lineto
0.46705 0.65978 lineto
0.45734 0.67809 lineto
0.43469 0.71213 lineto
0.40822 0.74218 lineto
0.37858 0.76766 lineto
0.3628 0.77854 lineto
0.3465 0.78812 lineto
0.31278 0.80321 lineto
0.29556 0.80867 lineto
0.27825 0.81271 lineto
0.26095 0.81534 lineto
0.24377 0.81654 lineto
0.22682 0.81634 lineto
0.2102 0.81475 lineto
0.19402 0.81179 lineto
0.17838 0.8075 lineto
0.16338 0.80193 lineto
0.14912 0.79511 lineto
0.12316 0.778 lineto
0.11163 0.76783 lineto
0.10118 0.7567 lineto
0.09187 0.74467 lineto
0.08376 0.73184 lineto
0.07692 0.7183 lineto
0.07139 0.70414 lineto
0.06721 0.68947 lineto
0.06441 0.67438 lineto
0.06303 0.65898 lineto
0.06308 0.64337 lineto
0.06457 0.62767 lineto
0.0675 0.61198 lineto
0.07187 0.59641 lineto
0.07765 0.58106 lineto
0.08483 0.56604 lineto
0.09338 0.55146 lineto
0.11439 0.52399 lineto
0.14028 0.49941 lineto
0.17055 0.47841 lineto
0.20455 0.4616 lineto
0.22275 0.45492 lineto
0.24161 0.44947 lineto
0.26104 0.44529 lineto
0.28093 0.44241 lineto
0.30119 0.44088 lineto
0.32171 0.4407 lineto
0.34237 0.44189 lineto
0.36307 0.44445 lineto
Mistroke
0.38371 0.44839 lineto
0.40417 0.4537 lineto
0.42434 0.46034 lineto
0.44413 0.46829 lineto
0.48213 0.48798 lineto
0.51739 0.51239 lineto
0.5492 0.54103 lineto
0.57692 0.57329 lineto
0.60003 0.60849 lineto
0.60971 0.62696 lineto
0.6181 0.64588 lineto
0.62515 0.66514 lineto
0.63084 0.68463 lineto
0.63514 0.70426 lineto
0.63807 0.72391 lineto
0.6396 0.74348 lineto
0.63975 0.76285 lineto
0.63853 0.78191 lineto
0.63597 0.80058 lineto
0.6321 0.81873 lineto
0.62696 0.83627 lineto
0.6206 0.8531 lineto
0.61306 0.86914 lineto
0.59474 0.89844 lineto
0.57256 0.92355 lineto
0.54719 0.94391 lineto
0.53353 0.95216 lineto
0.51936 0.95906 lineto
0.50477 0.96459 lineto
0.48987 0.9687 lineto
0.47477 0.97138 lineto
0.45956 0.97261 lineto
0.44436 0.9724 lineto
0.42928 0.97075 lineto
0.41442 0.96766 lineto
0.39989 0.96316 lineto
0.37222 0.95006 lineto
0.35929 0.94153 lineto
0.34708 0.93175 lineto
0.33568 0.92078 lineto
0.32519 0.90869 lineto
0.30722 0.88143 lineto
0.29989 0.86643 lineto
0.29374 0.85062 lineto
0.28883 0.8341 lineto
0.2852 0.81697 lineto
0.2829 0.79933 lineto
0.28196 0.78128 lineto
0.28239 0.76293 lineto
0.28423 0.74439 lineto
Mistroke
0.28746 0.72576 lineto
0.2921 0.70715 lineto
0.30553 0.67042 lineto
0.31428 0.65252 lineto
0.32435 0.63506 lineto
0.34825 0.60187 lineto
0.37681 0.5716 lineto
0.4095 0.54496 lineto
0.44569 0.52251 lineto
0.46487 0.51303 lineto
0.48466 0.50477 lineto
0.50494 0.49779 lineto
0.52563 0.49211 lineto
0.54661 0.48776 lineto
0.56777 0.48477 lineto
0.58901 0.48314 lineto
0.61022 0.48289 lineto
0.6313 0.48399 lineto
0.65212 0.48645 lineto
0.6726 0.49023 lineto
0.69261 0.49532 lineto
0.71207 0.50166 lineto
0.73086 0.50922 lineto
0.76611 0.52778 lineto
0.79764 0.55047 lineto
0.82485 0.57671 lineto
0.8472 0.60579 lineto
0.85643 0.62116 lineto
0.86431 0.63696 lineto
0.8708 0.65307 lineto
0.87588 0.66939 lineto
0.87954 0.68582 lineto
0.88176 0.70225 lineto
0.88255 0.71857 lineto
0.88193 0.73467 lineto
0.8799 0.75045 lineto
0.87649 0.7658 lineto
0.87174 0.78063 lineto
0.86569 0.79482 lineto
0.85839 0.80829 lineto
0.84989 0.82094 lineto
0.84026 0.83268 lineto
0.82957 0.84345 lineto
0.81789 0.85315 lineto
0.8053 0.86172 lineto
0.7919 0.86909 lineto
0.77778 0.87521 lineto
0.76302 0.88003 lineto
0.74773 0.88351 lineto
0.73201 0.88561 lineto
Mistroke
0.71597 0.88631 lineto
0.69971 0.88559 lineto
0.68334 0.88343 lineto
0.66696 0.87985 lineto
0.65069 0.87483 lineto
0.61889 0.8606 lineto
0.60357 0.85144 lineto
0.58877 0.84095 lineto
0.56111 0.81624 lineto
0.53665 0.78691 lineto
0.51604 0.75354 lineto
0.50736 0.73554 lineto
0.49983 0.71679 lineto
0.49353 0.69738 lineto
0.48848 0.6774 lineto
0.48474 0.65697 lineto
0.48232 0.63618 lineto
0.48125 0.61513 lineto
0.48155 0.59395 lineto
0.48322 0.57273 lineto
0.48625 0.55159 lineto
0.49063 0.53064 lineto
0.49635 0.50997 lineto
0.51168 0.46992 lineto
0.53192 0.43226 lineto
0.55663 0.39774 lineto
0.58527 0.36704 lineto
0.61719 0.34073 lineto
0.65169 0.3193 lineto
0.66965 0.31054 lineto
0.68796 0.30312 lineto
0.70651 0.29708 lineto
0.72519 0.29242 lineto
0.74389 0.28917 lineto
0.76251 0.28732 lineto
0.78093 0.28686 lineto
0.79906 0.28778 lineto
0.81678 0.29006 lineto
0.83399 0.29366 lineto
0.85059 0.29855 lineto
0.86648 0.30468 lineto
0.88158 0.31199 lineto
0.89578 0.32043 lineto
0.9212 0.34039 lineto
0.93226 0.35177 lineto
0.94213 0.36396 lineto
0.95075 0.37688 lineto
0.95807 0.39043 lineto
0.96405 0.40451 lineto
0.96864 0.41903 lineto
Mistroke
0.97183 0.43387 lineto
0.97358 0.44894 lineto
0.97389 0.46413 lineto
0.97275 0.47932 lineto
0.97016 0.49442 lineto
0.96615 0.50931 lineto
0.96072 0.52389 lineto
0.95391 0.53806 lineto
0.94575 0.55171 lineto
0.93629 0.56474 lineto
0.91368 0.5886 lineto
0.90066 0.59925 lineto
0.88657 0.60893 lineto
0.87152 0.61757 lineto
0.85557 0.6251 lineto
0.83882 0.63146 lineto
0.82135 0.6366 lineto
0.80328 0.64047 lineto
0.78469 0.64303 lineto
0.76569 0.64425 lineto
0.74639 0.6441 lineto
0.7269 0.64256 lineto
0.70731 0.63964 lineto
0.68775 0.63533 lineto
0.66831 0.62963 lineto
0.64911 0.62258 lineto
0.63025 0.61419 lineto
0.59396 0.59353 lineto
0.56023 0.56803 lineto
0.52978 0.53816 lineto
0.50327 0.50449 lineto
0.48124 0.46771 lineto
0.47204 0.44839 lineto
0.46412 0.42857 lineto
0.45751 0.40836 lineto
0.45224 0.38786 lineto
0.44833 0.36718 lineto
0.44579 0.34644 lineto
0.44462 0.32573 lineto
0.44483 0.30516 lineto
0.44639 0.28485 lineto
0.44929 0.2649 lineto
0.4535 0.24541 lineto
0.45898 0.22649 lineto
0.46568 0.20823 lineto
0.47356 0.19073 lineto
0.49259 0.15838 lineto
0.51552 0.13008 lineto
0.5417 0.10641 lineto
0.55579 0.09647 lineto
Mistroke
0.57041 0.08784 lineto
0.58546 0.08058 lineto
0.60084 0.07471 lineto
0.61645 0.07026 lineto
0.63218 0.06725 lineto
0.64793 0.06567 lineto
0.66357 0.06554 lineto
0.67902 0.06683 lineto
0.69415 0.06954 lineto
0.70887 0.07363 lineto
0.72308 0.07908 lineto
0.73666 0.08584 lineto
0.74954 0.09386 lineto
0.76162 0.10308 lineto
0.77281 0.11345 lineto
0.78302 0.1249 lineto
0.79219 0.13734 lineto
0.80024 0.15069 lineto
0.80711 0.16488 lineto
0.81273 0.1798 lineto
0.81707 0.19536 lineto
0.82008 0.21147 lineto
0.82173 0.22801 lineto
0.82198 0.24489 lineto
0.82083 0.262 lineto
0.81825 0.27924 lineto
0.81426 0.29648 lineto
0.80885 0.31364 lineto
0.80204 0.33059 lineto
0.78432 0.36347 lineto
0.76138 0.39431 lineto
0.73363 0.42235 lineto
0.70158 0.44688 lineto
0.66584 0.46731 lineto
0.6468 0.47581 lineto
0.62711 0.48311 lineto
0.60687 0.48915 lineto
0.58617 0.4939 lineto
0.56513 0.49733 lineto
0.54385 0.49941 lineto
0.52243 0.50013 lineto
0.50099 0.49948 lineto
0.47963 0.49747 lineto
0.45846 0.49411 lineto
0.43759 0.48942 lineto
0.41712 0.48341 lineto
0.37781 0.46764 lineto
0.34131 0.44716 lineto
0.30833 0.42246 lineto
0.27951 0.39413 lineto
Mistroke
0.25538 0.36285 lineto
0.24522 0.34634 lineto
0.23638 0.32938 lineto
0.2289 0.31207 lineto
0.2228 0.29452 lineto
0.21811 0.27683 lineto
0.21483 0.25911 lineto
0.21297 0.24148 lineto
0.21251 0.22403 lineto
0.21345 0.20688 lineto
0.21575 0.19012 lineto
0.2194 0.17387 lineto
0.22435 0.15823 lineto
0.23055 0.14328 lineto
0.23795 0.12913 lineto
0.24649 0.11586 lineto
0.2561 0.10356 lineto
0.27824 0.08217 lineto
0.2906 0.07322 lineto
0.3037 0.06551 lineto
0.31745 0.05909 lineto
0.33175 0.05402 lineto
0.3465 0.05032 lineto
0.3616 0.04803 lineto
0.37694 0.04716 lineto
0.39241 0.04774 lineto
0.40791 0.04976 lineto
0.42333 0.05322 lineto
0.43856 0.05811 lineto
0.45349 0.06441 lineto
0.46803 0.07209 lineto
0.48207 0.08111 lineto
0.50825 0.10299 lineto
0.53131 0.12963 lineto
0.54145 0.14456 lineto
0.55057 0.16047 lineto
0.5586 0.17726 lineto
0.56547 0.19486 lineto
0.57113 0.21316 lineto
0.57554 0.23208 lineto
0.57864 0.25151 lineto
0.58042 0.27134 lineto
0.58084 0.29147 lineto
0.57989 0.3118 lineto
0.57756 0.33221 lineto
0.57385 0.3526 lineto
0.56235 0.39289 lineto
0.55459 0.41256 lineto
0.54554 0.43179 lineto
0.52372 0.46851 lineto
Mistroke
0.49731 0.50228 lineto
0.46683 0.53241 lineto
0.43292 0.5583 lineto
0.39628 0.57946 lineto
0.37717 0.58813 lineto
0.35768 0.59549 lineto
0.33791 0.60149 lineto
0.31797 0.60613 lineto
0.29796 0.60939 lineto
0.27798 0.61126 lineto
0.25816 0.61176 lineto
0.2386 0.61088 lineto
0.2194 0.60866 lineto
0.20066 0.60511 lineto
0.16501 0.59422 lineto
0.14828 0.58698 lineto
0.1324 0.5786 lineto
0.10355 0.55873 lineto
0.07907 0.53522 lineto
0.06864 0.52231 lineto
0.05949 0.50876 lineto
0.05167 0.49465 lineto
0.04521 0.4801 lineto
0.04015 0.4652 lineto
0.03652 0.45005 lineto
0.03432 0.43477 lineto
0.03357 0.41946 lineto
0.03427 0.40423 lineto
0.0364 0.38919 lineto
0.03996 0.37444 lineto
0.0449 0.36009 lineto
0.05121 0.34624 lineto
0.05883 0.33298 lineto
0.06772 0.32042 lineto
0.07783 0.30865 lineto
0.10142 0.28781 lineto
0.11476 0.2789 lineto
0.12903 0.27109 lineto
0.14413 0.26445 lineto
0.15997 0.25904 lineto
0.17646 0.25489 lineto
0.19351 0.25207 lineto
0.211 0.25059 lineto
0.22883 0.25049 lineto
0.2469 0.25179 lineto
0.2651 0.2545 lineto
0.28332 0.25861 lineto
0.30146 0.26412 lineto
0.3194 0.27103 lineto
0.33704 0.27929 lineto
Mistroke
0.371 0.29979 lineto
0.40256 0.32528 lineto
0.43097 0.35529 lineto
0.45558 0.38928 lineto
0.47582 0.42657 lineto
0.48416 0.44622 lineto
0.49125 0.46643 lineto
0.49704 0.48707 lineto
0.50151 0.50806 lineto
0.50463 0.52928 lineto
0.50639 0.55062 lineto
0.50679 0.57198 lineto
0.50582 0.59325 lineto
0.50349 0.61432 lineto
0.49983 0.63508 lineto
0.49487 0.65543 lineto
0.48862 0.67526 lineto
0.47248 0.71299 lineto
0.45185 0.7475 lineto
0.42726 0.77813 lineto
0.39935 0.80427 lineto
0.36882 0.82545 lineto
0.35282 0.83406 lineto
0.33647 0.8413 lineto
0.31986 0.84714 lineto
0.30311 0.85156 lineto
0.28632 0.85456 lineto
0.26961 0.85614 lineto
0.25307 0.85629 lineto
0.23681 0.85504 lineto
0.22095 0.8524 lineto
0.20558 0.84841 lineto
0.19081 0.84311 lineto
0.17673 0.83654 lineto
0.16343 0.82875 lineto
0.151 0.81981 lineto
0.13954 0.80979 lineto
0.12911 0.79875 lineto
0.11164 0.77396 lineto
0.10473 0.76039 lineto
0.0991 0.74615 lineto
0.09481 0.73134 lineto
0.09188 0.71607 lineto
0.09036 0.70044 lineto
0.09025 0.68455 lineto
0.09157 0.66852 lineto
0.09433 0.65244 lineto
0.09853 0.63643 lineto
0.10414 0.62059 lineto
0.11955 0.58985 lineto
Mistroke
0.12928 0.57516 lineto
0.1403 0.56106 lineto
0.166 0.53497 lineto
0.19617 0.51231 lineto
0.21275 0.50246 lineto
0.23021 0.49369 lineto
0.24846 0.48606 lineto
0.26742 0.47963 lineto
0.28699 0.47445 lineto
0.30706 0.47055 lineto
0.32753 0.46798 lineto
0.34829 0.46675 lineto
0.36925 0.46688 lineto
0.39028 0.46839 lineto
0.41129 0.47126 lineto
0.43216 0.4755 lineto
0.45278 0.48108 lineto
0.47306 0.48798 lineto
0.51215 0.50562 lineto
0.54863 0.52805 lineto
0.58178 0.5548 lineto
0.61095 0.5853 lineto
0.63558 0.61888 lineto
0.64605 0.6366 lineto
0.65523 0.6548 lineto
0.66307 0.67339 lineto
0.66956 0.69226 lineto
0.67467 0.7113 lineto
0.67839 0.73041 lineto
0.68071 0.74948 lineto
0.68164 0.76839 lineto
0.68118 0.78705 lineto
0.67937 0.80535 lineto
0.67622 0.82317 lineto
0.67177 0.84043 lineto
0.66608 0.85702 lineto
0.65918 0.87284 lineto
0.65114 0.88781 lineto
0.64202 0.90184 lineto
0.62085 0.92676 lineto
0.60896 0.93751 lineto
0.5963 0.94703 lineto
0.58299 0.95527 lineto
0.56911 0.96219 lineto
0.55476 0.96773 lineto
0.54005 0.97187 lineto
0.52508 0.97459 lineto
0.50995 0.97587 lineto
0.49478 0.9757 lineto
0.47967 0.97409 lineto
Mistroke
0.46473 0.97103 lineto
0.45007 0.96655 lineto
0.43578 0.96068 lineto
0.42198 0.95345 lineto
0.40876 0.94489 lineto
0.39622 0.93506 lineto
0.38445 0.92402 lineto
0.37353 0.91182 lineto
0.3546 0.88425 lineto
0.34673 0.86904 lineto
0.34001 0.85298 lineto
0.3345 0.83618 lineto
0.33024 0.81873 lineto
0.32729 0.80072 lineto
0.32568 0.78226 lineto
0.32543 0.76345 lineto
0.32656 0.74441 lineto
0.32908 0.72523 lineto
0.333 0.70603 lineto
0.345 0.66799 lineto
0.35303 0.64936 lineto
0.3624 0.63114 lineto
0.38492 0.59629 lineto
0.41218 0.56424 lineto
0.44367 0.53566 lineto
0.47876 0.51118 lineto
0.51677 0.49132 lineto
0.53663 0.48325 lineto
0.55692 0.47647 lineto
0.57755 0.47102 lineto
0.5984 0.46692 lineto
0.61936 0.46419 lineto
0.64034 0.46282 lineto
0.66122 0.46283 lineto
0.68189 0.4642 lineto
0.70225 0.46691 lineto
0.72218 0.47094 lineto
0.76039 0.4828 lineto
0.77846 0.49054 lineto
0.79572 0.49941 lineto
0.82746 0.5203 lineto
0.85497 0.54489 lineto
0.87771 0.57249 lineto
0.88715 0.58719 lineto
0.89525 0.60237 lineto
0.90196 0.61791 lineto
0.90728 0.63371 lineto
0.91116 0.64967 lineto
0.91362 0.66568 lineto
0.91463 0.68163 lineto
Mistroke
0.91421 0.69742 lineto
0.91238 0.71293 lineto
0.90915 0.72807 lineto
0.90456 0.74272 lineto
0.89864 0.75679 lineto
0.89144 0.77019 lineto
0.88302 0.78281 lineto
0.86274 0.80539 lineto
0.85103 0.81518 lineto
0.83838 0.82388 lineto
0.82486 0.83141 lineto
0.81057 0.83772 lineto
0.79561 0.84276 lineto
0.78007 0.84647 lineto
0.76405 0.84883 lineto
0.74766 0.84981 lineto
0.73099 0.84937 lineto
0.71417 0.84751 lineto
0.69729 0.84423 lineto
0.68047 0.83952 lineto
0.66381 0.83341 lineto
0.64742 0.8259 lineto
0.61585 0.80682 lineto
0.58657 0.78262 lineto
0.56032 0.75373 lineto
0.53778 0.72069 lineto
0.52808 0.70282 lineto
0.51952 0.68416 lineto
0.51215 0.6648 lineto
0.50601 0.64485 lineto
0.50116 0.6244 lineto
0.49762 0.60355 lineto
0.49543 0.58242 lineto
0.49458 0.5611 lineto
0.49511 0.53971 lineto
0.497 0.51836 lineto
0.50025 0.49715 lineto
0.50484 0.4762 lineto
0.51075 0.4556 lineto
0.51794 0.43547 lineto
0.53603 0.39698 lineto
0.55868 0.36151 lineto
0.58538 0.32975 lineto
0.61551 0.30229 lineto
0.64836 0.27966 lineto
0.66557 0.27027 lineto
0.68317 0.26223 lineto
0.70105 0.25556 lineto
0.7191 0.25028 lineto
0.73723 0.2464 lineto
Mistroke
0.75531 0.24393 lineto
0.77325 0.24287 lineto
0.79094 0.24321 lineto
0.80826 0.24492 lineto
0.82512 0.24797 lineto
0.84142 0.25234 lineto
0.85705 0.25798 lineto
0.87192 0.26483 lineto
0.88594 0.27284 lineto
0.89902 0.28194 lineto
0.91108 0.29206 lineto
0.93187 0.31506 lineto
0.94046 0.32776 lineto
0.94777 0.34114 lineto
0.95376 0.35511 lineto
0.95838 0.36956 lineto
0.9616 0.38439 lineto
0.9634 0.3995 lineto
0.96377 0.41478 lineto
0.96268 0.43013 lineto
0.96016 0.44542 lineto
0.95619 0.46057 lineto
0.94403 0.48998 lineto
0.93589 0.50404 lineto
0.92644 0.51753 lineto
0.90376 0.54244 lineto
0.87649 0.56399 lineto
0.8613 0.57331 lineto
0.84519 0.58155 lineto
0.82824 0.58865 lineto
0.81054 0.59456 lineto
0.79219 0.59923 lineto
0.77329 0.60261 lineto
0.75393 0.60466 lineto
0.73423 0.60536 lineto
0.7143 0.6047 lineto
0.69423 0.60265 lineto
0.67413 0.59922 lineto
0.65413 0.59441 lineto
0.63432 0.58824 lineto
0.6148 0.58072 lineto
0.57709 0.56179 lineto
0.54179 0.53795 lineto
0.50965 0.50965 lineto
0.48132 0.47745 lineto
0.45738 0.44201 lineto
0.44721 0.4233 lineto
0.4383 0.40406 lineto
0.43069 0.38439 lineto
0.42441 0.3644 lineto
Mistroke
0.41949 0.34418 lineto
0.41595 0.32386 lineto
0.41378 0.30352 lineto
0.41299 0.2833 lineto
0.41358 0.26328 lineto
0.41551 0.24359 lineto
0.41877 0.22432 lineto
0.42333 0.20558 lineto
0.42913 0.18746 lineto
0.43614 0.17007 lineto
0.45353 0.13783 lineto
0.47497 0.10954 lineto
0.49983 0.08578 lineto
0.51333 0.07575 lineto
0.52741 0.06704 lineto
0.54197 0.05967 lineto
0.55691 0.05369 lineto
0.57213 0.04913 lineto
0.58753 0.04599 lineto
0.60298 0.0443 lineto
0.6184 0.04405 lineto
0.63367 0.04525 lineto
0.64867 0.04786 lineto
0.66332 0.05188 lineto
0.6775 0.05727 lineto
0.69111 0.064 lineto
0.70407 0.07201 lineto
0.71626 0.08126 lineto
0.72761 0.09168 lineto
0.74744 0.11577 lineto
0.75576 0.12928 lineto
0.76294 0.14366 lineto
0.76891 0.15883 lineto
0.77363 0.17468 lineto
0.77703 0.19111 lineto
0.77909 0.20804 lineto
0.77978 0.22535 lineto
0.77907 0.24293 lineto
0.77696 0.26068 lineto
0.77343 0.2785 lineto
0.76214 0.31389 lineto
0.75442 0.33125 lineto
0.74535 0.34824 lineto
0.7233 0.38073 lineto
0.69636 0.41057 lineto
0.66504 0.43706 lineto
0.62992 0.45957 lineto
0.59169 0.47756 lineto
0.57164 0.48473 lineto
0.55111 0.49062 lineto
Mistroke
0.53019 0.4952 lineto
0.50899 0.49844 lineto
0.48761 0.50032 lineto
0.46618 0.50084 lineto
0.44478 0.49999 lineto
0.42354 0.49779 lineto
0.40256 0.49424 lineto
0.38195 0.48938 lineto
0.34224 0.47582 lineto
0.32334 0.46721 lineto
0.3052 0.45746 lineto
0.27157 0.43477 lineto
0.242 0.40831 lineto
0.21705 0.37874 lineto
0.20645 0.36302 lineto
0.19717 0.34681 lineto
0.18924 0.3302 lineto
0.18269 0.3133 lineto
0.17755 0.29622 lineto
0.17382 0.27906 lineto
0.17151 0.26193 lineto
0.17063 0.24495 lineto
0.17115 0.22821 lineto
0.17307 0.21182 lineto
0.17634 0.19588 lineto
0.18094 0.18051 lineto
0.18682 0.16579 lineto
0.19393 0.15183 lineto
0.2116 0.12652 lineto
0.22203 0.11533 lineto
0.23342 0.10523 lineto
0.24568 0.09629 lineto
0.25874 0.08856 lineto
0.27249 0.0821 lineto
0.28684 0.07696 lineto
0.30169 0.07317 lineto
0.31694 0.07078 lineto
0.33248 0.0698 lineto
0.34821 0.07026 lineto
0.36401 0.07215 lineto
0.37979 0.07548 lineto
0.39543 0.08025 lineto
0.41083 0.08642 lineto
0.42588 0.09399 lineto
0.44048 0.10291 lineto
0.46794 0.12465 lineto
0.49244 0.15123 lineto
0.51331 0.18211 lineto
0.5222 0.19897 lineto
0.52996 0.21667 lineto
Mistroke
0.53653 0.23511 lineto
0.54188 0.2542 lineto
0.54595 0.27384 lineto
0.54871 0.29392 lineto
0.55013 0.31435 lineto
0.55018 0.33501 lineto
0.54887 0.35579 lineto
0.54618 0.3766 lineto
0.54213 0.39731 lineto
0.53671 0.41783 lineto
0.52191 0.45784 lineto
0.50205 0.49581 lineto
0.47751 0.53097 lineto
0.44881 0.5626 lineto
0.41654 0.59009 lineto
0.38141 0.61292 lineto
0.363 0.62244 lineto
0.34416 0.63066 lineto
0.325 0.63754 lineto
0.30563 0.64304 lineto
0.28615 0.64717 lineto
0.26666 0.6499 lineto
0.24728 0.65124 lineto
0.22811 0.6512 lineto
0.20927 0.6498 lineto
0.19085 0.64705 lineto
0.17297 0.643 lineto
0.15571 0.63769 lineto
0.13918 0.63116 lineto
0.12347 0.62347 lineto
0.09485 0.60486 lineto
0.07048 0.58245 lineto
0.06007 0.57002 lineto
0.05092 0.5569 lineto
0.04308 0.54317 lineto
0.0366 0.52895 lineto
0.0315 0.51433 lineto
0.02782 0.49941 lineto
0.02557 0.4843 lineto
0.02477 0.46912 lineto
0.02541 0.45395 lineto
0.0275 0.43893 lineto
0.03102 0.42414 lineto
0.03595 0.40969 lineto
0.04225 0.3957 lineto
0.04988 0.38225 lineto
0.05882 0.36945 lineto
0.06899 0.35739 lineto
0.08034 0.34616 lineto
0.0928 0.33585 lineto
Mistroke
0.10629 0.32653 lineto
0.12075 0.31827 lineto
0.13608 0.31114 lineto
0.1522 0.30521 lineto
0.16901 0.30052 lineto
0.18641 0.29713 lineto
0.2043 0.29506 lineto
0.22258 0.29436 lineto
0.24115 0.29503 lineto
0.25988 0.2971 lineto
0.27869 0.30057 lineto
0.29745 0.30544 lineto
0.31606 0.3117 lineto
0.33442 0.31932 lineto
0.36995 0.33856 lineto
0.40324 0.36283 lineto
0.43352 0.39172 lineto
0.46014 0.42467 lineto
0.48249 0.46104 lineto
0.49192 0.48029 lineto
0.5001 0.50012 lineto
0.50701 0.52043 lineto
0.51261 0.54112 lineto
0.51686 0.56208 lineto
0.51976 0.5832 lineto
0.52129 0.60438 lineto
0.52146 0.62551 lineto
0.52026 0.64647 lineto
0.51771 0.66717 lineto
0.51383 0.68749 lineto
0.50867 0.70734 lineto
0.49462 0.74519 lineto
0.48583 0.763 lineto
0.47596 0.77995 lineto
0.4532 0.81094 lineto
0.42696 0.83754 lineto
0.39794 0.85924 lineto
0.38262 0.86812 lineto
0.3669 0.87565 lineto
0.35088 0.88178 lineto
0.33466 0.8865 lineto
0.31836 0.88979 lineto
0.30208 0.89164 lineto
0.28592 0.89206 lineto
0.27 0.89107 lineto
0.25442 0.88867 lineto
0.23929 0.8849 lineto
0.2247 0.8798 lineto
0.21076 0.87339 lineto
0.19756 0.86575 lineto
Mistroke
0.18519 0.85692 lineto
0.16328 0.83596 lineto
0.1539 0.82399 lineto
0.14566 0.81112 lineto
0.13863 0.79745 lineto
0.13285 0.78307 lineto
0.12839 0.76808 lineto
0.12527 0.75257 lineto
0.12353 0.73666 lineto
0.1232 0.72043 lineto
0.12428 0.70401 lineto
0.1268 0.68749 lineto
0.13075 0.67099 lineto
0.13612 0.65461 lineto
0.1429 0.63846 lineto
0.15105 0.62264 lineto
0.17137 0.59242 lineto
0.1967 0.56474 lineto
0.22659 0.54031 lineto
0.26046 0.51978 lineto
0.27868 0.51116 lineto
0.29764 0.5037 lineto
0.31723 0.49747 lineto
0.33737 0.49251 lineto
0.35795 0.48885 lineto
0.37886 0.48652 lineto
0.4 0.48555 lineto
0.42126 0.48594 lineto
0.44253 0.48769 lineto
0.4637 0.49082 lineto
0.48467 0.49529 lineto
0.50532 0.50109 lineto
0.54528 0.51656 lineto
0.58278 0.5369 lineto
0.61706 0.56167 lineto
0.64745 0.5903 lineto
0.6734 0.62216 lineto
0.69441 0.65652 lineto
0.70295 0.67439 lineto
0.71014 0.69258 lineto
0.71595 0.71099 lineto
0.72037 0.72951 lineto
0.72338 0.74804 lineto
0.72499 0.76646 lineto
0.7252 0.78466 lineto
0.72404 0.80255 lineto
0.72152 0.82002 lineto
0.71768 0.83695 lineto
0.71256 0.85326 lineto
0.70621 0.86884 lineto
Mistroke
0.69869 0.88361 lineto
0.69005 0.89747 lineto
0.68036 0.91035 lineto
0.66971 0.92216 lineto
0.65817 0.93283 lineto
0.64582 0.94231 lineto
0.63277 0.95052 lineto
0.61909 0.95743 lineto
0.6049 0.96299 lineto
0.5903 0.96716 lineto
0.57538 0.96991 lineto
0.56025 0.97123 lineto
0.54503 0.9711 lineto
0.52981 0.96953 lineto
0.51471 0.96652 lineto
0.49983 0.96207 lineto
0.48528 0.95622 lineto
0.47117 0.94899 lineto
0.45758 0.94043 lineto
0.44462 0.93057 lineto
0.42097 0.9072 lineto
0.41045 0.89381 lineto
0.4009 0.87938 lineto
0.3924 0.86399 lineto
0.38502 0.84773 lineto
0.37882 0.83068 lineto
0.37385 0.81293 lineto
0.37016 0.7946 lineto
0.36778 0.77577 lineto
0.36674 0.75655 lineto
0.36708 0.73705 lineto
0.3688 0.71738 lineto
0.3719 0.69763 lineto
0.37639 0.67793 lineto
0.38226 0.65838 lineto
0.39804 0.62014 lineto
0.41899 0.58376 lineto
0.44474 0.55002 lineto
0.4748 0.51962 lineto
0.50859 0.49322 lineto
0.54542 0.47134 lineto
0.56474 0.46224 lineto
0.58454 0.45442 lineto
0.6047 0.44793 lineto
0.62513 0.44277 lineto
0.64572 0.43898 lineto
0.66636 0.43657 lineto
0.68694 0.43553 lineto
0.70735 0.43586 lineto
0.72749 0.43755 lineto
Mistroke
0.74725 0.44057 lineto
0.76652 0.44489 lineto
0.7852 0.45048 lineto
0.82043 0.46526 lineto
0.83678 0.47433 lineto
0.85218 0.48444 lineto
0.87982 0.50748 lineto
0.90277 0.5337 lineto
0.91234 0.54779 lineto
0.92058 0.56239 lineto
0.92745 0.57741 lineto
0.93292 0.59275 lineto
0.93697 0.60829 lineto
0.93958 0.62394 lineto
0.94075 0.63957 lineto
0.94048 0.6551 lineto
0.93878 0.6704 lineto
0.93567 0.68538 lineto
0.93118 0.69993 lineto
0.92534 0.71394 lineto
0.91819 0.72733 lineto
0.9098 0.73999 lineto
0.9002 0.75183 lineto
0.88948 0.76276 lineto
0.86492 0.78161 lineto
0.85125 0.78938 lineto
0.83677 0.79595 lineto
0.82157 0.80128 lineto
0.80574 0.80532 lineto
0.78939 0.80801 lineto
0.77261 0.80935 lineto
0.75552 0.80928 lineto
0.73822 0.80781 lineto
0.72081 0.80492 lineto
0.70341 0.80061 lineto
0.66906 0.78778 lineto
0.65232 0.7793 lineto
0.636 0.76948 lineto
0.60506 0.746 lineto
0.57698 0.71776 lineto
0.55247 0.68528 lineto
0.53211 0.64918 lineto
0.52366 0.63 lineto
0.51642 0.61018 lineto
0.51044 0.58983 lineto
0.50576 0.56904 lineto
0.50241 0.54793 lineto
0.50041 0.52661 lineto
0.49977 0.50517 lineto
0.5005 0.48372 lineto
Mistroke
0.50259 0.46238 lineto
0.50603 0.44126 lineto
0.5108 0.42046 lineto
0.51687 0.40008 lineto
0.53275 0.361 lineto
0.5533 0.32481 lineto
0.57802 0.29222 lineto
0.60632 0.26385 lineto
0.63749 0.24022 lineto
0.65392 0.23033 lineto
0.67079 0.22176 lineto
0.68798 0.21456 lineto
0.7054 0.20876 lineto
0.72294 0.20436 lineto
0.74048 0.20138 lineto
0.75792 0.19981 lineto
0.77516 0.19966 lineto
0.79208 0.20089 lineto
0.80859 0.2035 lineto
0.82457 0.20743 lineto
0.83993 0.21267 lineto
0.85457 0.21914 lineto
0.86841 0.22681 lineto
0.8933 0.24547 lineto
0.90419 0.25632 lineto
0.91396 0.26807 lineto
0.92253 0.28063 lineto
0.92985 0.29393 lineto
0.93587 0.30786 lineto
0.94053 0.32232 lineto
0.94382 0.33722 lineto
0.9457 0.35244 lineto
0.94615 0.36789 lineto
0.94516 0.38346 lineto
0.94272 0.39903 lineto
0.93885 0.4145 lineto
0.93355 0.42977 lineto
0.92685 0.44473 lineto
0.90937 0.4733 lineto
0.88674 0.49941 lineto
0.85941 0.52234 lineto
0.84416 0.5324 lineto
0.82795 0.54143 lineto
0.79299 0.55611 lineto
0.77444 0.56165 lineto
0.75529 0.56593 lineto
0.73565 0.5689 lineto
0.71563 0.57054 lineto
0.69532 0.57082 lineto
0.67485 0.56974 lineto
Mistroke
0.65431 0.56727 lineto
0.63381 0.56343 lineto
0.61347 0.55822 lineto
0.59338 0.55167 lineto
0.55441 0.53463 lineto
0.51771 0.51263 lineto
0.48402 0.48608 lineto
0.45405 0.45553 lineto
0.42837 0.4216 lineto
0.40748 0.38503 lineto
0.39174 0.34658 lineto
0.38589 0.32691 lineto
0.38142 0.30709 lineto
0.37833 0.28722 lineto
0.37662 0.26742 lineto
0.3763 0.24778 lineto
0.37734 0.22843 lineto
0.37973 0.20945 lineto
0.38343 0.19097 lineto
0.38841 0.17307 lineto
0.39463 0.15587 lineto
0.40202 0.13944 lineto
0.41052 0.12389 lineto
0.43062 0.09572 lineto
0.4543 0.07199 lineto
0.46727 0.06195 lineto
0.48088 0.0532 lineto
0.49502 0.04579 lineto
0.50959 0.03975 lineto
0.5245 0.03512 lineto
0.53963 0.03191 lineto
0.55487 0.03014 lineto
0.57013 0.02982 lineto
0.58529 0.03095 lineto
0.60024 0.03351 lineto
0.61489 0.03749 lineto
0.62912 0.04285 lineto
0.64284 0.04957 lineto
0.65594 0.0576 lineto
0.66833 0.06689 lineto
0.67992 0.07738 lineto
0.69062 0.08901 lineto
0.70036 0.1017 lineto
0.70905 0.11539 lineto
0.71662 0.12998 lineto
0.72303 0.14539 lineto
0.7282 0.16154 lineto
0.73209 0.17831 lineto
0.73466 0.19561 lineto
0.73588 0.21334 lineto
Mistroke
0.73571 0.2314 lineto
0.73415 0.24967 lineto
0.73119 0.26805 lineto
0.72682 0.28644 lineto
0.72105 0.30471 lineto
0.7054 0.34052 lineto
0.68445 0.37463 lineto
0.65855 0.40627 lineto
0.62819 0.4347 lineto
0.59392 0.45926 lineto
0.55642 0.47942 lineto
0.53669 0.48769 lineto
0.51643 0.49471 lineto
0.49575 0.50043 lineto
0.47475 0.50482 lineto
0.45355 0.50785 lineto
0.43223 0.50953 lineto
0.41093 0.50984 lineto
0.38974 0.50878 lineto
0.36877 0.50637 lineto
0.34812 0.50263 lineto
0.32792 0.49759 lineto
0.30824 0.49127 lineto
0.2709 0.47502 lineto
0.23685 0.45432 lineto
0.20675 0.4297 lineto
0.18119 0.40183 lineto
0.17026 0.38688 lineto
0.16064 0.3714 lineto
0.15236 0.35548 lineto
0.14546 0.33922 lineto
0.13996 0.32273 lineto
0.13588 0.30611 lineto
0.13323 0.28948 lineto
0.13201 0.27293 lineto
0.1322 0.25658 lineto
0.13381 0.24053 lineto
0.13679 0.22489 lineto
0.14112 0.20977 lineto
0.14676 0.19525 lineto
0.15366 0.18145 lineto
0.16176 0.16844 lineto
0.17101 0.15632 lineto
0.19265 0.13507 lineto
0.20489 0.1261 lineto
0.21797 0.1183 lineto
0.23179 0.11175 lineto
0.24625 0.10649 lineto
0.26126 0.10257 lineto
0.27673 0.10003 lineto
Mistroke
0.29253 0.09888 lineto
0.30858 0.09916 lineto
0.32475 0.10086 lineto
0.34095 0.10401 lineto
0.35706 0.10858 lineto
0.37298 0.11457 lineto
0.38861 0.12195 lineto
0.40383 0.1307 lineto
0.43267 0.15214 lineto
0.45874 0.17849 lineto
0.48133 0.20924 lineto
0.49113 0.22608 lineto
0.49983 0.24379 lineto
0.50739 0.26228 lineto
0.51373 0.28145 lineto
0.51883 0.3012 lineto
0.52262 0.32144 lineto
0.5251 0.34206 lineto
0.52623 0.36295 lineto
0.52599 0.38401 lineto
0.52438 0.40513 lineto
0.52141 0.4262 lineto
0.51707 0.44711 lineto
0.5114 0.46775 lineto
0.50441 0.48802 lineto
0.48663 0.52705 lineto
0.4641 0.56338 lineto
0.43729 0.59632 lineto
0.4068 0.6252 lineto
0.37329 0.6495 lineto
0.35564 0.65978 lineto
0.33752 0.66876 lineto
0.31904 0.67641 lineto
0.30029 0.68269 lineto
0.2814 0.68758 lineto
0.26245 0.69108 lineto
0.24357 0.69318 lineto
0.22486 0.69389 lineto
0.20643 0.69321 lineto
0.18838 0.69118 lineto
0.17082 0.68782 lineto
0.15385 0.68317 lineto
0.13756 0.67727 lineto
0.12206 0.67018 lineto
0.10742 0.66195 lineto
0.09375 0.65266 lineto
0.0811 0.64238 lineto
0.06957 0.63118 lineto
0.05009 0.60637 lineto
0.04226 0.59295 lineto
Mistroke
0.03577 0.57898 lineto
0.03065 0.56456 lineto
0.02694 0.54979 lineto
0.02465 0.53478 lineto
0.02381 0.51963 lineto
0.02442 0.50446 lineto
0.02647 0.48936 lineto
0.02996 0.47445 lineto
0.03486 0.45983 lineto
0.04116 0.44562 lineto
0.04881 0.43189 lineto
0.05777 0.41877 lineto
0.06799 0.40634 lineto
0.09199 0.38392 lineto
0.10563 0.3741 lineto
0.12027 0.3653 lineto
0.13581 0.3576 lineto
0.15217 0.35106 lineto
0.16927 0.34574 lineto
0.187 0.34168 lineto
0.20526 0.33893 lineto
0.22396 0.33752 lineto
0.24298 0.33747 lineto
0.26222 0.33881 lineto
0.28157 0.34154 lineto
0.30093 0.34566 lineto
0.32018 0.35117 lineto
0.33922 0.35805 lineto
0.37623 0.37581 lineto
0.41116 0.39866 lineto
0.44324 0.42619 lineto
0.47177 0.45789 lineto
0.49615 0.49312 lineto
0.51586 0.5312 lineto
0.52384 0.55106 lineto
0.53053 0.57133 lineto
0.53587 0.59192 lineto
0.53987 0.61271 lineto
0.54249 0.6336 lineto
0.54374 0.65447 lineto
0.54363 0.67522 lineto
0.54215 0.69574 lineto
0.53933 0.71593 lineto
0.5352 0.73568 lineto
0.5298 0.75488 lineto
0.52316 0.77344 lineto
0.50639 0.80825 lineto
0.48539 0.83941 lineto
0.46075 0.86627 lineto
0.43315 0.88831 lineto
Mistroke
0.40335 0.90511 lineto
0.38787 0.91145 lineto
0.37214 0.91637 lineto
0.35628 0.91987 lineto
0.34038 0.92193 lineto
0.32456 0.92255 lineto
0.30893 0.92174 lineto
0.29358 0.91952 lineto
0.27864 0.9159 lineto
0.26418 0.91092 lineto
0.25033 0.90463 lineto
0.23717 0.89707 lineto
0.2248 0.88828 lineto
0.2133 0.87835 lineto
0.20276 0.86733 lineto
0.19326 0.85529 lineto
0.18486 0.84233 lineto
0.17764 0.82852 lineto
0.17165 0.81395 lineto
0.16693 0.79873 lineto
0.16355 0.78294 lineto
0.16152 0.7667 lineto
0.16089 0.75009 lineto
0.16166 0.73324 lineto
0.16386 0.71625 lineto
0.16747 0.69922 lineto
0.17251 0.68226 lineto
0.17896 0.66549 lineto
0.18679 0.649 lineto
0.20647 0.61729 lineto
0.23125 0.58794 lineto
0.26065 0.56169 lineto
0.29414 0.53919 lineto
0.31222 0.52953 lineto
0.33106 0.52102 lineto
0.35058 0.51371 lineto
0.37067 0.50765 lineto
0.39124 0.50287 lineto
0.41219 0.49941 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255.5 282 281 1 0 0 1 -147 182 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 0.992908 142 185.808472 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 142 182] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.499826 0.476588 0.499931 0.476588 [
[(-1)] 0.02324 0.49993 0 2 Msboxa
[(-0.5)] 0.26153 0.49993 0 2 Msboxa
[(0.5)] 0.73812 0.49993 0 2 Msboxa
[(1)] 0.97641 0.49993 0 2 Msboxa
[(-1)] 0.48733 0.02334 1 0 Msboxa
[(-0.5)] 0.48733 0.26164 1 0 Msboxa
[(0.5)] 0.48733 0.73823 1 0 Msboxa
[(1)] 0.48733 0.97652 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.0012 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02324 0.49993 moveto
0.02324 0.50618 lineto
stroke
grestore
[(-1)] 0.02324 0.49993 0 2 Mshowa
gsave
0.002 setlinewidth
0.26153 0.49993 moveto
0.26153 0.50618 lineto
stroke
grestore
[(-0.5)] 0.26153 0.49993 0 2 Mshowa
gsave
0.002 setlinewidth
0.73812 0.49993 moveto
0.73812 0.50618 lineto
stroke
grestore
[(0.5)] 0.73812 0.49993 0 2 Mshowa
gsave
0.002 setlinewidth
0.97641 0.49993 moveto
0.97641 0.50618 lineto
stroke
grestore
[(1)] 0.97641 0.49993 0 2 Mshowa
gsave
0.001 setlinewidth
0.0709 0.49993 moveto
0.0709 0.50368 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11855 0.49993 moveto
0.11855 0.50368 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16621 0.49993 moveto
0.16621 0.50368 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21387 0.49993 moveto
0.21387 0.50368 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30919 0.49993 moveto
0.30919 0.50368 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35685 0.49993 moveto
0.35685 0.50368 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40451 0.49993 moveto
0.40451 0.50368 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45217 0.49993 moveto
0.45217 0.50368 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54748 0.49993 moveto
0.54748 0.50368 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59514 0.49993 moveto
0.59514 0.50368 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.6428 0.49993 moveto
0.6428 0.50368 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69046 0.49993 moveto
0.69046 0.50368 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78578 0.49993 moveto
0.78578 0.50368 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83344 0.49993 moveto
0.83344 0.50368 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.8811 0.49993 moveto
0.8811 0.50368 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92876 0.49993 moveto
0.92876 0.50368 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.49993 moveto
1 0.49993 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.49983 0.02334 moveto
0.50608 0.02334 lineto
stroke
grestore
[(-1)] 0.48733 0.02334 1 0 Mshowa
gsave
0.002 setlinewidth
0.49983 0.26164 moveto
0.50608 0.26164 lineto
stroke
grestore
[(-0.5)] 0.48733 0.26164 1 0 Mshowa
gsave
0.002 setlinewidth
0.49983 0.73823 moveto
0.50608 0.73823 lineto
stroke
grestore
[(0.5)] 0.48733 0.73823 1 0 Mshowa
gsave
0.002 setlinewidth
0.49983 0.97652 moveto
0.50608 0.97652 lineto
stroke
grestore
[(1)] 0.48733 0.97652 1 0 Mshowa
gsave
0.001 setlinewidth
0.49983 0.071 moveto
0.50358 0.071 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.11866 moveto
0.50358 0.11866 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.16632 moveto
0.50358 0.16632 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.21398 moveto
0.50358 0.21398 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.3093 moveto
0.50358 0.3093 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.35695 moveto
0.50358 0.35695 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.40461 moveto
0.50358 0.40461 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.45227 moveto
0.50358 0.45227 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.54759 moveto
0.50358 0.54759 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.59525 moveto
0.50358 0.59525 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.64291 moveto
0.50358 0.64291 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.69057 moveto
0.50358 0.69057 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.78588 moveto
0.50358 0.78588 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.83354 moveto
0.50358 0.83354 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.8812 moveto
0.50358 0.8812 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.49983 0.92886 moveto
0.50358 0.92886 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.49983 0 moveto
0.49983 1.0002 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1.0002 lineto
0 1.0002 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.49983 0.49993 moveto
0.5426 0.50266 lineto
0.58451 0.51078 lineto
0.62471 0.52408 lineto
0.6624 0.54226 lineto
0.69682 0.56487 lineto
0.72732 0.59135 lineto
0.75331 0.62106 lineto
0.77432 0.65327 lineto
0.79 0.68721 lineto
0.80012 0.72203 lineto
0.80457 0.75687 lineto
0.8034 0.79088 lineto
0.79676 0.82322 lineto
0.78496 0.85306 lineto
0.7684 0.87966 lineto
0.7476 0.90234 lineto
0.72319 0.92051 lineto
0.69589 0.93366 lineto
0.66644 0.94144 lineto
0.63569 0.94359 lineto
0.60449 0.93999 lineto
0.57368 0.93064 lineto
0.54412 0.9157 lineto
0.51663 0.89543 lineto
0.49196 0.87023 lineto
0.47083 0.84061 lineto
0.45383 0.80717 lineto
0.44149 0.77061 lineto
0.43419 0.73171 lineto
0.43222 0.69127 lineto
0.43573 0.65015 lineto
0.44472 0.60922 lineto
0.4591 0.56934 lineto
0.4786 0.53133 lineto
0.50287 0.49599 lineto
0.53142 0.46403 lineto
0.56366 0.4361 lineto
0.59891 0.41273 lineto
0.63642 0.39435 lineto
0.67539 0.38127 lineto
0.71495 0.37369 lineto
0.75426 0.37165 lineto
0.79245 0.37507 lineto
0.82868 0.38374 lineto
0.86215 0.39733 lineto
0.89214 0.41538 lineto
0.91798 0.43734 lineto
0.93911 0.46254 lineto
0.95509 0.49027 lineto
Mistroke
0.96558 0.51972 lineto
0.97036 0.55006 lineto
0.96936 0.58044 lineto
0.96263 0.61 lineto
0.95035 0.6379 lineto
0.93285 0.66335 lineto
0.91055 0.68559 lineto
0.88399 0.70396 lineto
0.85381 0.71789 lineto
0.82073 0.7269 lineto
0.78554 0.73063 lineto
0.74906 0.72886 lineto
0.71216 0.72148 lineto
0.67569 0.70852 lineto
0.6405 0.69014 lineto
0.60742 0.66664 lineto
0.57719 0.63842 lineto
0.55052 0.60601 lineto
0.528 0.57004 lineto
0.51013 0.53121 lineto
0.49732 0.49029 lineto
0.4898 0.44812 lineto
0.48774 0.40554 lineto
0.49112 0.36343 lineto
0.49983 0.32265 lineto
0.51359 0.28402 lineto
0.53205 0.24832 lineto
0.55469 0.21626 lineto
0.58092 0.18848 lineto
0.61007 0.16548 lineto
0.64136 0.1477 lineto
0.674 0.13543 lineto
0.70714 0.12883 lineto
0.73991 0.12793 lineto
0.77146 0.13265 lineto
0.80097 0.14276 lineto
0.82764 0.1579 lineto
0.85076 0.1776 lineto
0.86969 0.20129 lineto
0.88388 0.2283 lineto
0.89291 0.2579 lineto
0.89645 0.28928 lineto
0.89432 0.32161 lineto
0.88646 0.35402 lineto
0.87294 0.38567 lineto
0.85398 0.4157 lineto
0.8299 0.44333 lineto
0.80116 0.46783 lineto
0.76831 0.48853 lineto
0.73201 0.50486 lineto
Mistroke
0.693 0.51637 lineto
0.65206 0.52272 lineto
0.61003 0.52368 lineto
0.56779 0.51918 lineto
0.52619 0.50925 lineto
0.48608 0.49407 lineto
0.44828 0.47394 lineto
0.41355 0.4493 lineto
0.38256 0.42067 lineto
0.35591 0.38869 lineto
0.3341 0.35407 lineto
0.31749 0.31759 lineto
0.30633 0.28008 lineto
0.30076 0.2424 lineto
0.30076 0.20541 lineto
0.30619 0.16996 lineto
0.31677 0.13686 lineto
0.33212 0.1069 lineto
0.35172 0.08076 lineto
0.37498 0.05906 lineto
0.4012 0.0423 lineto
0.42961 0.03088 lineto
0.45941 0.02508 lineto
0.48974 0.02504 lineto
0.51976 0.03077 lineto
0.54859 0.04216 lineto
0.57544 0.05897 lineto
0.59951 0.0808 lineto
0.6201 0.10719 lineto
0.63659 0.13754 lineto
0.64844 0.17116 lineto
0.65524 0.20731 lineto
0.65669 0.24517 lineto
0.65261 0.2839 lineto
0.64298 0.32263 lineto
0.62789 0.36051 lineto
0.60755 0.39669 lineto
0.58231 0.43038 lineto
0.55265 0.46086 lineto
0.51914 0.48747 lineto
0.48243 0.50965 lineto
0.44328 0.52695 lineto
0.40249 0.53904 lineto
0.36089 0.54573 lineto
0.31935 0.54692 lineto
0.27874 0.54269 lineto
0.23991 0.53322 lineto
0.20364 0.51882 lineto
0.17071 0.49993 lineto
0.14177 0.4771 lineto
Mistroke
0.1174 0.45096 lineto
0.09809 0.42224 lineto
0.08419 0.39171 lineto
0.07593 0.36021 lineto
0.07341 0.32858 lineto
0.07661 0.2977 lineto
0.08537 0.2684 lineto
0.09939 0.2415 lineto
0.11827 0.21774 lineto
0.14149 0.19781 lineto
0.16842 0.1823 lineto
0.19835 0.17171 lineto
0.23053 0.16641 lineto
0.26412 0.16667 lineto
0.29827 0.17259 lineto
0.33213 0.18418 lineto
0.36483 0.20129 lineto
0.39557 0.22367 lineto
0.42356 0.25091 lineto
0.44811 0.28251 lineto
0.46861 0.31786 lineto
0.48452 0.35628 lineto
0.49545 0.39699 lineto
0.50112 0.43918 lineto
0.50135 0.48199 lineto
0.49614 0.52455 lineto
0.48558 0.56601 lineto
0.46992 0.60553 lineto
0.44951 0.64233 lineto
0.42484 0.67566 lineto
0.39648 0.70491 lineto
0.3651 0.72951 lineto
0.33146 0.74903 lineto
0.29636 0.76316 lineto
0.26063 0.77171 lineto
0.22515 0.77461 lineto
0.19077 0.77194 lineto
0.15832 0.7639 lineto
0.12861 0.75083 lineto
0.10236 0.73317 lineto
0.08023 0.71148 lineto
0.06279 0.68641 lineto
0.0505 0.65869 lineto
0.04368 0.6291 lineto
0.04255 0.59848 lineto
0.04719 0.56769 lineto
0.05755 0.53757 lineto
0.07346 0.50898 lineto
0.09459 0.48272 lineto
0.12052 0.45952 lineto
Mistroke
0.15071 0.44007 lineto
0.18452 0.42494 lineto
0.22124 0.41462 lineto
0.26007 0.40945 lineto
0.3002 0.40969 lineto
0.34075 0.41544 lineto
0.38086 0.42668 lineto
0.41968 0.44325 lineto
0.45639 0.46486 lineto
0.49023 0.49112 lineto
0.52049 0.5215 lineto
0.54658 0.55538 lineto
0.56797 0.59207 lineto
0.58428 0.63078 lineto
0.59523 0.67071 lineto
0.60068 0.71098 lineto
0.60061 0.75075 lineto
0.59515 0.78914 lineto
0.58455 0.82533 lineto
0.56918 0.85855 lineto
0.54953 0.88808 lineto
0.52618 0.91329 lineto
0.49983 0.93365 lineto
0.47121 0.94875 lineto
0.44113 0.95828 lineto
0.41045 0.96208 lineto
0.38001 0.9601 lineto
0.35067 0.95245 lineto
0.32326 0.93933 lineto
0.29857 0.92112 lineto
0.27731 0.89826 lineto
0.26013 0.87133 lineto
0.24757 0.841 lineto
0.24008 0.80801 lineto
0.23797 0.77315 lineto
0.24143 0.73727 lineto
0.25052 0.70123 lineto
0.26518 0.66589 lineto
0.2852 0.63208 lineto
0.31026 0.60061 lineto
0.3399 0.57222 lineto
0.37358 0.54758 lineto
0.41063 0.52725 lineto
0.45033 0.5117 lineto
0.49189 0.50129 lineto
0.53447 0.49624 lineto
0.5772 0.49664 lineto
0.61923 0.50247 lineto
0.65969 0.51354 lineto
0.69777 0.52956 lineto
Mistroke
0.73272 0.55012 lineto
0.76384 0.57469 lineto
0.79054 0.60265 lineto
0.81233 0.63328 lineto
0.82882 0.66581 lineto
0.83976 0.69941 lineto
0.84502 0.73324 lineto
0.8446 0.76643 lineto
0.83864 0.79813 lineto
0.82742 0.82753 lineto
0.81131 0.85385 lineto
0.79082 0.8764 lineto
0.76655 0.89457 lineto
0.7392 0.90785 lineto
0.70952 0.91583 lineto
0.67832 0.91824 lineto
0.64646 0.91493 lineto
0.61478 0.90589 lineto
0.58416 0.89123 lineto
0.5554 0.87119 lineto
0.52929 0.84615 lineto
0.50655 0.81658 lineto
0.4878 0.78309 lineto
0.47357 0.74634 lineto
0.4643 0.70709 lineto
0.46029 0.66616 lineto
0.46171 0.62438 lineto
0.46862 0.58263 lineto
0.48091 0.54177 lineto
0.49839 0.50264 lineto
0.5207 0.46603 lineto
0.54738 0.43269 lineto
0.57788 0.40327 lineto
0.61152 0.37832 lineto
0.64758 0.35832 lineto
0.68525 0.34359 lineto
0.7237 0.33435 lineto
0.76206 0.33069 lineto
0.79948 0.33254 lineto
0.8351 0.33972 lineto
0.86812 0.35194 lineto
0.8978 0.36875 lineto
0.92346 0.38963 lineto
0.94451 0.41393 lineto
0.96049 0.44094 lineto
0.97104 0.46988 lineto
0.9759 0.49993 lineto
0.97499 0.53023 lineto
0.96832 0.55992 lineto
0.95606 0.58817 lineto
Mistroke
0.93849 0.61415 lineto
0.91601 0.63711 lineto
0.88915 0.65638 lineto
0.85853 0.67134 lineto
0.82485 0.6815 lineto
0.78889 0.68649 lineto
0.75146 0.68604 lineto
0.71343 0.68002 lineto
0.67564 0.66844 lineto
0.63897 0.65143 lineto
0.60424 0.62924 lineto
0.57221 0.60228 lineto
0.5436 0.57103 lineto
0.51904 0.5361 lineto
0.49904 0.49819 lineto
0.48402 0.45805 lineto
0.47427 0.4165 lineto
0.46997 0.37439 lineto
0.47113 0.33259 lineto
0.47767 0.29196 lineto
0.48935 0.25334 lineto
0.50582 0.21751 lineto
0.52661 0.18521 lineto
0.55115 0.15708 lineto
0.57876 0.13366 lineto
0.60872 0.1154 lineto
0.64021 0.10262 lineto
0.67239 0.09551 lineto
0.70442 0.09414 lineto
0.73543 0.09843 lineto
0.76459 0.1082 lineto
0.7911 0.1231 lineto
0.81423 0.1427 lineto
0.83332 0.16644 lineto
0.8478 0.19367 lineto
0.85723 0.22367 lineto
0.86125 0.25565 lineto
0.85965 0.28878 lineto
0.85234 0.3222 lineto
0.83938 0.35504 lineto
0.82094 0.38647 lineto
0.79734 0.41568 lineto
0.76898 0.44192 lineto
0.73643 0.46451 lineto
0.7003 0.48287 lineto
0.66131 0.4965 lineto
0.62026 0.50505 lineto
0.57797 0.50826 lineto
0.5353 0.50601 lineto
0.49312 0.49834 lineto
Mistroke
0.45228 0.48537 lineto
0.41361 0.46739 lineto
0.37787 0.44481 lineto
0.34578 0.41811 lineto
0.31793 0.38793 lineto
0.29485 0.35496 lineto
0.27694 0.31996 lineto
0.26447 0.28375 lineto
0.25759 0.24719 lineto
0.25634 0.21114 lineto
0.26058 0.17645 lineto
0.27007 0.14394 lineto
0.28446 0.11441 lineto
0.30325 0.08855 lineto
0.32586 0.06701 lineto
0.35162 0.05031 lineto
0.37977 0.03887 lineto
0.40952 0.03299 lineto
0.44001 0.03285 lineto
0.4704 0.03849 lineto
0.49983 0.04982 lineto
0.52746 0.06661 lineto
0.55251 0.08852 lineto
0.57425 0.11509 lineto
0.59205 0.14574 lineto
0.60535 0.17981 lineto
0.6137 0.21655 lineto
0.61678 0.25518 lineto
0.61439 0.29485 lineto
0.60647 0.33469 lineto
0.59308 0.37384 lineto
0.57442 0.41146 lineto
0.5508 0.44675 lineto
0.52267 0.47895 lineto
0.49059 0.50739 lineto
0.45519 0.5315 lineto
0.4172 0.55081 lineto
0.37741 0.56495 lineto
0.33667 0.57368 lineto
0.29582 0.57692 lineto
0.25573 0.57468 lineto
0.21726 0.56713 lineto
0.18123 0.55456 lineto
0.14838 0.53737 lineto
0.11941 0.51609 lineto
0.09492 0.49134 lineto
0.07541 0.46381 lineto
0.06126 0.43428 lineto
0.05273 0.40358 lineto
0.04996 0.37254 lineto
Mistroke
0.05293 0.34203 lineto
0.06152 0.31291 lineto
0.07547 0.28598 lineto
0.09438 0.26201 lineto
0.11777 0.2417 lineto
0.14502 0.22568 lineto
0.17544 0.21444 lineto
0.20829 0.2084 lineto
0.24274 0.20783 lineto
0.27795 0.21289 lineto
0.31306 0.2236 lineto
0.3472 0.23985 lineto
0.37956 0.26139 lineto
0.40934 0.28786 lineto
0.43582 0.31879 lineto
0.45838 0.35357 lineto
0.47647 0.39154 lineto
0.48965 0.43195 lineto
0.49762 0.47398 lineto
0.50018 0.51678 lineto
0.4973 0.5595 lineto
0.48903 0.60127 lineto
0.4756 0.64123 lineto
0.45733 0.67861 lineto
0.43468 0.71265 lineto
0.40821 0.74269 lineto
0.37857 0.76818 lineto
0.3465 0.78863 lineto
0.31277 0.80372 lineto
0.27824 0.81323 lineto
0.24376 0.81706 lineto
0.21019 0.81526 lineto
0.17837 0.80802 lineto
0.14911 0.79563 lineto
0.12316 0.77851 lineto
0.10118 0.75721 lineto
0.08376 0.73236 lineto
0.07138 0.70466 lineto
0.06441 0.67489 lineto
0.06308 0.64389 lineto
0.0675 0.6125 lineto
0.07765 0.58158 lineto
0.09337 0.55198 lineto
0.11439 0.52451 lineto
0.14028 0.49993 lineto
0.17054 0.47893 lineto
0.20455 0.46212 lineto
0.2416 0.44999 lineto
0.28093 0.44294 lineto
0.3217 0.44122 lineto
Mistroke
0.36307 0.44498 lineto
0.40416 0.45422 lineto
0.44412 0.46881 lineto
0.48212 0.4885 lineto
0.51738 0.51291 lineto
0.54918 0.54155 lineto
0.57691 0.57381 lineto
0.60002 0.60901 lineto
0.61809 0.6464 lineto
0.63082 0.68515 lineto
0.63805 0.72443 lineto
0.63973 0.76336 lineto
0.63596 0.80109 lineto
0.62695 0.83678 lineto
0.61305 0.86965 lineto
0.59473 0.89896 lineto
0.57255 0.92407 lineto
0.54718 0.94442 lineto
0.51935 0.95957 lineto
0.48986 0.96921 lineto
0.45955 0.97313 lineto
0.42927 0.97126 lineto
0.39988 0.96367 lineto
0.37222 0.95057 lineto
0.34707 0.93226 lineto
0.32519 0.90921 lineto
0.30722 0.88195 lineto
0.29373 0.85113 lineto
0.2852 0.81748 lineto
0.28195 0.7818 lineto
0.28422 0.74491 lineto
0.29209 0.70766 lineto
0.30552 0.67094 lineto
0.32434 0.63558 lineto
0.34824 0.60238 lineto
0.3768 0.57212 lineto
0.40949 0.54548 lineto
0.44568 0.52304 lineto
0.48465 0.50529 lineto
0.52562 0.49263 lineto
0.56776 0.48529 lineto
0.61021 0.48341 lineto
0.65211 0.48697 lineto
0.6926 0.49584 lineto
0.73085 0.50975 lineto
0.76609 0.5283 lineto
0.79763 0.55099 lineto
0.82483 0.57723 lineto
0.84719 0.60631 lineto
0.86429 0.63748 lineto
Mistroke
0.87586 0.66991 lineto
0.88174 0.70277 lineto
0.88191 0.73519 lineto
0.87648 0.76632 lineto
0.86567 0.79533 lineto
0.84987 0.82145 lineto
0.82955 0.84396 lineto
0.80529 0.86223 lineto
0.77776 0.87573 lineto
0.74772 0.88403 lineto
0.71596 0.88682 lineto
0.68333 0.88395 lineto
0.65068 0.87535 lineto
0.61888 0.86112 lineto
0.58876 0.84147 lineto
0.5611 0.81675 lineto
0.53664 0.78742 lineto
0.51603 0.75406 lineto
0.49983 0.71731 lineto
0.48848 0.67792 lineto
0.48231 0.63669 lineto
0.48154 0.59447 lineto
0.48624 0.55211 lineto
0.49635 0.51049 lineto
0.51167 0.47044 lineto
0.53191 0.43278 lineto
0.55662 0.39827 lineto
0.58526 0.36756 lineto
0.61718 0.34125 lineto
0.65168 0.31983 lineto
0.68795 0.30365 lineto
0.72518 0.29295 lineto
0.76249 0.28784 lineto
0.79904 0.28831 lineto
0.83397 0.29419 lineto
0.86647 0.30521 lineto
0.89576 0.32096 lineto
0.92118 0.34092 lineto
0.94211 0.36448 lineto
0.95805 0.39095 lineto
0.96862 0.41955 lineto
0.97356 0.44946 lineto
0.97273 0.47984 lineto
0.96613 0.50983 lineto
0.95389 0.53858 lineto
0.93628 0.56526 lineto
0.91367 0.58912 lineto
0.88656 0.60944 lineto
0.85555 0.62562 lineto
0.82134 0.63712 lineto
Mistroke
0.78468 0.64355 lineto
0.74638 0.64461 lineto
0.7073 0.64016 lineto
0.6683 0.63015 lineto
0.63023 0.6147 lineto
0.59394 0.59405 lineto
0.56022 0.56855 lineto
0.52977 0.53868 lineto
0.50326 0.50501 lineto
0.48123 0.46824 lineto
0.46411 0.42909 lineto
0.45223 0.38838 lineto
0.44578 0.34696 lineto
0.44482 0.30569 lineto
0.44929 0.26542 lineto
0.45897 0.22701 lineto
0.47355 0.19126 lineto
0.49259 0.15891 lineto
0.51551 0.13061 lineto
0.54169 0.10694 lineto
0.57039 0.08837 lineto
0.60083 0.07524 lineto
0.63217 0.06778 lineto
0.66356 0.06607 lineto
0.69414 0.07007 lineto
0.72306 0.07961 lineto
0.74953 0.09439 lineto
0.77279 0.11398 lineto
0.79217 0.13786 lineto
0.80709 0.1654 lineto
0.81706 0.19589 lineto
0.82171 0.22854 lineto
0.82081 0.26253 lineto
0.81424 0.29701 lineto
0.80202 0.33111 lineto
0.7843 0.36399 lineto
0.76137 0.39483 lineto
0.73362 0.42287 lineto
0.70156 0.4474 lineto
0.66582 0.46783 lineto
0.6271 0.48363 lineto
0.58616 0.49443 lineto
0.54384 0.49993 lineto
0.50098 0.5 lineto
0.45845 0.49463 lineto
0.41712 0.48394 lineto
0.3778 0.46816 lineto
0.3413 0.44768 lineto
0.30832 0.42298 lineto
0.2795 0.39465 lineto
Mistroke
0.25538 0.36337 lineto
0.23637 0.3299 lineto
0.2228 0.29504 lineto
0.21483 0.25964 lineto
0.21251 0.22456 lineto
0.21575 0.19065 lineto
0.22435 0.15876 lineto
0.23795 0.12966 lineto
0.2561 0.10409 lineto
0.27823 0.0827 lineto
0.30369 0.06604 lineto
0.33175 0.05455 lineto
0.36159 0.04856 lineto
0.3924 0.04827 lineto
0.42332 0.05375 lineto
0.45348 0.06494 lineto
0.48206 0.08164 lineto
0.50824 0.10352 lineto
0.5313 0.13016 lineto
0.55056 0.161 lineto
0.56546 0.19539 lineto
0.57553 0.23261 lineto
0.58041 0.27186 lineto
0.57988 0.31232 lineto
0.57384 0.35313 lineto
0.56234 0.39341 lineto
0.54553 0.43232 lineto
0.52371 0.46904 lineto
0.4973 0.5028 lineto
0.46682 0.53293 lineto
0.43291 0.55882 lineto
0.39627 0.57998 lineto
0.35768 0.59601 lineto
0.31796 0.60665 lineto
0.27798 0.61178 lineto
0.23859 0.6114 lineto
0.20066 0.60563 lineto
0.165 0.59474 lineto
0.1324 0.57912 lineto
0.10355 0.55925 lineto
0.07907 0.53574 lineto
0.05949 0.50928 lineto
0.04521 0.48062 lineto
0.03652 0.45057 lineto
0.03357 0.41998 lineto
0.0364 0.38971 lineto
0.0449 0.36061 lineto
0.05883 0.33351 lineto
0.07783 0.30918 lineto
0.10142 0.28834 lineto
Mistroke
0.12902 0.27162 lineto
0.15997 0.25956 lineto
0.1935 0.25259 lineto
0.22883 0.25102 lineto
0.2651 0.25502 lineto
0.30145 0.26465 lineto
0.33703 0.27982 lineto
0.371 0.30032 lineto
0.40255 0.3258 lineto
0.43096 0.35582 lineto
0.45557 0.3898 lineto
0.47582 0.42709 lineto
0.49124 0.46695 lineto
0.5015 0.50858 lineto
0.50638 0.55114 lineto
0.50581 0.59377 lineto
0.49983 0.6356 lineto
0.48861 0.67578 lineto
0.47248 0.71351 lineto
0.45184 0.74802 lineto
0.42725 0.77864 lineto
0.39934 0.80479 lineto
0.36881 0.82596 lineto
0.33646 0.84181 lineto
0.3031 0.85208 lineto
0.2696 0.85665 lineto
0.23681 0.85555 lineto
0.20558 0.84893 lineto
0.17672 0.83705 lineto
0.151 0.82033 lineto
0.12911 0.79927 lineto
0.11164 0.77448 lineto
0.0991 0.74667 lineto
0.09188 0.71659 lineto
0.09025 0.68507 lineto
0.09433 0.65296 lineto
0.10414 0.62111 lineto
0.11955 0.59037 lineto
0.1403 0.56158 lineto
0.166 0.5355 lineto
0.19617 0.51283 lineto
0.23021 0.49421 lineto
0.26742 0.48015 lineto
0.30705 0.47107 lineto
0.34829 0.46727 lineto
0.39027 0.46891 lineto
0.43215 0.47602 lineto
0.47305 0.48851 lineto
0.51214 0.50614 lineto
0.54862 0.52857 lineto
Mistroke
0.58177 0.55532 lineto
0.61094 0.58582 lineto
0.63557 0.6194 lineto
0.65521 0.65532 lineto
0.66955 0.69278 lineto
0.67838 0.73093 lineto
0.68162 0.76891 lineto
0.67935 0.80586 lineto
0.67176 0.84095 lineto
0.65917 0.87336 lineto
0.64201 0.90235 lineto
0.62084 0.92727 lineto
0.59629 0.94754 lineto
0.5691 0.9627 lineto
0.54004 0.97239 lineto
0.50994 0.97638 lineto
0.47966 0.9746 lineto
0.45006 0.96707 lineto
0.42197 0.95396 lineto
0.39621 0.93558 lineto
0.37353 0.91234 lineto
0.35459 0.88477 lineto
0.34 0.8535 lineto
0.33024 0.81924 lineto
0.32567 0.78277 lineto
0.32655 0.74492 lineto
0.333 0.70655 lineto
0.34499 0.6685 lineto
0.36239 0.63165 lineto
0.38492 0.59681 lineto
0.41218 0.56476 lineto
0.44366 0.53618 lineto
0.47875 0.5117 lineto
0.51676 0.49184 lineto
0.55691 0.47699 lineto
0.59839 0.46744 lineto
0.64033 0.46335 lineto
0.68188 0.46472 lineto
0.72217 0.47146 lineto
0.76037 0.48332 lineto
0.79571 0.49993 lineto
0.82744 0.52082 lineto
0.85495 0.54541 lineto
0.87769 0.57301 lineto
0.89523 0.60289 lineto
0.90726 0.63423 lineto
0.9136 0.6662 lineto
0.9142 0.69794 lineto
0.90913 0.72858 lineto
0.89862 0.75731 lineto
Mistroke
0.883 0.78333 lineto
0.86273 0.8059 lineto
0.83836 0.82439 lineto
0.81056 0.83824 lineto
0.78005 0.84699 lineto
0.74764 0.85032 lineto
0.71416 0.84803 lineto
0.68046 0.84004 lineto
0.6474 0.82641 lineto
0.61584 0.80734 lineto
0.58656 0.78314 lineto
0.56031 0.75425 lineto
0.53777 0.72121 lineto
0.51951 0.68468 lineto
0.506 0.64537 lineto
0.49761 0.60407 lineto
0.49458 0.56162 lineto
0.49699 0.51888 lineto
0.50483 0.47672 lineto
0.51793 0.43599 lineto
0.53602 0.3975 lineto
0.55867 0.36203 lineto
0.58537 0.33027 lineto
0.6155 0.30282 lineto
0.64835 0.28018 lineto
0.68315 0.26276 lineto
0.71909 0.2508 lineto
0.7553 0.24446 lineto
0.79092 0.24373 lineto
0.82511 0.2485 lineto
0.85703 0.2585 lineto
0.88592 0.27336 lineto
0.91107 0.29259 lineto
0.93185 0.31558 lineto
0.94775 0.34167 lineto
0.95836 0.37009 lineto
0.96339 0.40003 lineto
0.96267 0.43065 lineto
0.95618 0.46109 lineto
0.94401 0.4905 lineto
0.92642 0.51805 lineto
0.90375 0.54296 lineto
0.87647 0.56451 lineto
0.84517 0.58207 lineto
0.81052 0.59508 lineto
0.77327 0.60313 lineto
0.73422 0.60588 lineto
0.69421 0.60317 lineto
0.65412 0.59493 lineto
0.61479 0.58124 lineto
Mistroke
0.57708 0.56231 lineto
0.54178 0.53847 lineto
0.50964 0.51017 lineto
0.48131 0.47798 lineto
0.45738 0.44254 lineto
0.43829 0.40459 lineto
0.42441 0.36492 lineto
0.41594 0.32438 lineto
0.41299 0.28382 lineto
0.4155 0.24411 lineto
0.42332 0.2061 lineto
0.43613 0.1706 lineto
0.45352 0.13836 lineto
0.47496 0.11007 lineto
0.49983 0.08631 lineto
0.5274 0.06757 lineto
0.5569 0.05422 lineto
0.58752 0.04652 lineto
0.61839 0.04458 lineto
0.64866 0.04839 lineto
0.67749 0.0578 lineto
0.70405 0.07254 lineto
0.72759 0.09221 lineto
0.74742 0.11629 lineto
0.76293 0.14419 lineto
0.77361 0.1752 lineto
0.77908 0.20857 lineto
0.77906 0.24346 lineto
0.77341 0.27903 lineto
0.76213 0.31441 lineto
0.74534 0.34876 lineto
0.72329 0.38125 lineto
0.69635 0.4111 lineto
0.66503 0.43759 lineto
0.62991 0.46009 lineto
0.59168 0.47809 lineto
0.5511 0.49114 lineto
0.50898 0.49896 lineto
0.46617 0.50136 lineto
0.42353 0.49831 lineto
0.38194 0.4899 lineto
0.34223 0.47634 lineto
0.30519 0.45798 lineto
0.27156 0.43529 lineto
0.242 0.40883 lineto
0.21705 0.37927 lineto
0.19717 0.34733 lineto
0.18269 0.31383 lineto
0.17382 0.27959 lineto
0.17063 0.24547 lineto
Mistroke
0.17306 0.21234 lineto
0.18093 0.18104 lineto
0.19392 0.15236 lineto
0.2116 0.12704 lineto
0.23341 0.10576 lineto
0.25873 0.08909 lineto
0.28683 0.07748 lineto
0.31693 0.07131 lineto
0.3482 0.07079 lineto
0.37978 0.07601 lineto
0.41082 0.08695 lineto
0.44047 0.10344 lineto
0.46793 0.12518 lineto
0.49243 0.15175 lineto
0.5133 0.18263 lineto
0.52995 0.21719 lineto
0.54187 0.25472 lineto
0.5487 0.29445 lineto
0.55017 0.33553 lineto
0.54617 0.37712 lineto
0.5367 0.41835 lineto
0.5219 0.45836 lineto
0.50204 0.49634 lineto
0.4775 0.53149 lineto
0.4488 0.56312 lineto
0.41653 0.59061 lineto
0.3814 0.61343 lineto
0.34416 0.63118 lineto
0.30562 0.64356 lineto
0.26665 0.65042 lineto
0.22811 0.65172 lineto
0.19085 0.64757 lineto
0.15571 0.63821 lineto
0.12347 0.62399 lineto
0.09484 0.60538 lineto
0.07048 0.58297 lineto
0.05092 0.55742 lineto
0.0366 0.52947 lineto
0.02782 0.49993 lineto
0.02477 0.46964 lineto
0.0275 0.43945 lineto
0.03594 0.41022 lineto
0.04988 0.38278 lineto
0.06899 0.35792 lineto
0.09279 0.33637 lineto
0.12075 0.31879 lineto
0.1522 0.30574 lineto
0.18641 0.29765 lineto
0.22258 0.29488 lineto
0.25988 0.29763 lineto
Mistroke
0.29744 0.30596 lineto
0.33442 0.31985 lineto
0.36995 0.33908 lineto
0.40323 0.36336 lineto
0.43352 0.39224 lineto
0.46013 0.42519 lineto
0.48248 0.46156 lineto
0.50009 0.50064 lineto
0.5126 0.54164 lineto
0.51975 0.58372 lineto
0.52145 0.62602 lineto
0.5177 0.66769 lineto
0.50866 0.70785 lineto
0.49461 0.7457 lineto
0.47595 0.78047 lineto
0.45319 0.81145 lineto
0.42696 0.83805 lineto
0.39793 0.85975 lineto
0.36689 0.87616 lineto
0.33466 0.88701 lineto
0.30207 0.89215 lineto
0.27 0.89158 lineto
0.23928 0.88542 lineto
0.21076 0.87391 lineto
0.18519 0.85743 lineto
0.16328 0.83648 lineto
0.14566 0.81164 lineto
0.13285 0.78359 lineto
0.12526 0.75309 lineto
0.12319 0.72095 lineto
0.1268 0.68801 lineto
0.13612 0.65513 lineto
0.15105 0.62316 lineto
0.17136 0.59294 lineto
0.1967 0.56526 lineto
0.22659 0.54083 lineto
0.26046 0.5203 lineto
0.29763 0.50422 lineto
0.33736 0.49303 lineto
0.37885 0.48704 lineto
0.42125 0.48646 lineto
0.46369 0.49134 lineto
0.50532 0.50161 lineto
0.54527 0.51708 lineto
0.58277 0.53742 lineto
0.61704 0.56219 lineto
0.64744 0.59082 lineto
0.67338 0.62268 lineto
0.6944 0.65704 lineto
0.71013 0.6931 lineto
Mistroke
0.72036 0.73003 lineto
0.72498 0.76697 lineto
0.72402 0.80307 lineto
0.71767 0.83747 lineto
0.7062 0.86936 lineto
0.69003 0.89799 lineto
0.6697 0.92267 lineto
0.64581 0.94282 lineto
0.61908 0.95794 lineto
0.59029 0.96767 lineto
0.56024 0.97174 lineto
0.5298 0.97004 lineto
0.49983 0.96258 lineto
0.47116 0.94951 lineto
0.44461 0.93108 lineto
0.42096 0.90771 lineto
0.40089 0.87989 lineto
0.38502 0.84824 lineto
0.37384 0.81345 lineto
0.36777 0.77629 lineto
0.36707 0.73757 lineto
0.3719 0.69815 lineto
0.38226 0.6589 lineto
0.39803 0.62066 lineto
0.41898 0.58428 lineto
0.44473 0.55054 lineto
0.47479 0.52014 lineto
0.50858 0.49374 lineto
0.54541 0.47186 lineto
0.58453 0.45495 lineto
0.62512 0.44329 lineto
0.66635 0.43709 lineto
0.70734 0.43638 lineto
0.74723 0.44109 lineto
0.78519 0.451 lineto
0.82041 0.46578 lineto
0.85217 0.48496 lineto
0.8798 0.508 lineto
0.90275 0.53423 lineto
0.92057 0.56291 lineto
0.93291 0.59327 lineto
0.93956 0.62445 lineto
0.94046 0.65562 lineto
0.93565 0.6859 lineto
0.92532 0.71446 lineto
0.90978 0.7405 lineto
0.88946 0.76328 lineto
0.86491 0.78213 lineto
0.83676 0.79647 lineto
0.80572 0.80583 lineto
Mistroke
0.7726 0.80986 lineto
0.7382 0.80833 lineto
0.7034 0.80113 lineto
0.66905 0.7883 lineto
0.63599 0.77 lineto
0.60505 0.74652 lineto
0.57697 0.71828 lineto
0.55246 0.6858 lineto
0.5321 0.6497 lineto
0.51641 0.6107 lineto
0.50575 0.56956 lineto
0.5004 0.52713 lineto
0.50049 0.48424 lineto
0.50602 0.44178 lineto
0.51686 0.4006 lineto
0.53274 0.36153 lineto
0.55329 0.32534 lineto
0.57801 0.29274 lineto
0.6063 0.26437 lineto
0.63748 0.24075 lineto
0.67078 0.22229 lineto
0.70539 0.20929 lineto
0.74046 0.20191 lineto
0.77514 0.20018 lineto
0.80857 0.20402 lineto
0.83992 0.21319 lineto
0.86839 0.22734 lineto
0.89328 0.246 lineto
0.91394 0.26859 lineto
0.92983 0.29446 lineto
0.94052 0.32285 lineto
0.94568 0.35297 lineto
0.94514 0.38398 lineto
0.93883 0.41503 lineto
0.92683 0.44525 lineto
0.90935 0.47382 lineto
0.88672 0.49993 lineto
0.8594 0.52286 lineto
0.82793 0.54195 lineto
0.79298 0.55663 lineto
0.75528 0.56645 lineto
0.71562 0.57106 lineto
0.67484 0.57026 lineto
0.6338 0.56395 lineto
0.59337 0.55219 lineto
0.5544 0.53515 lineto
0.5177 0.51315 lineto
0.48402 0.4866 lineto
0.45404 0.45605 lineto
0.42836 0.42213 lineto
Mistroke
0.40747 0.38555 lineto
0.39174 0.3471 lineto
0.38141 0.30762 lineto
0.37662 0.26794 lineto
0.37734 0.22895 lineto
0.38343 0.1915 lineto
0.39462 0.15639 lineto
0.41051 0.12441 lineto
0.43061 0.09625 lineto
0.45429 0.07252 lineto
0.48087 0.05373 lineto
0.50958 0.04028 lineto
0.53962 0.03244 lineto
0.57012 0.03035 lineto
0.60023 0.03404 lineto
0.62911 0.04338 lineto
0.65592 0.05813 lineto
0.6799 0.07791 lineto
0.70034 0.10223 lineto
0.71661 0.13051 lineto
0.72818 0.16206 lineto
0.73465 0.19614 lineto
0.7357 0.23193 lineto
0.73118 0.26858 lineto
0.72104 0.30524 lineto
0.70538 0.34104 lineto
0.68443 0.37516 lineto
0.65854 0.40679 lineto
0.62818 0.43522 lineto
0.59391 0.45978 lineto
0.55641 0.47994 lineto
0.51642 0.49523 lineto
0.47475 0.50534 lineto
0.43223 0.51005 lineto
0.38973 0.5093 lineto
0.34812 0.50315 lineto
0.30824 0.49179 lineto
0.2709 0.47554 lineto
0.23684 0.45484 lineto
0.20675 0.43023 lineto
0.18119 0.40235 lineto
0.16064 0.37193 lineto
0.14546 0.33975 lineto
0.13588 0.30664 lineto
0.132 0.27345 lineto
0.1338 0.24106 lineto
0.14112 0.2103 lineto
0.15366 0.18197 lineto
0.17101 0.15685 lineto
0.19265 0.1356 lineto
Mistroke
0.21796 0.11883 lineto
0.24625 0.10702 lineto
0.27672 0.10056 lineto
0.30857 0.09969 lineto
0.34094 0.10453 lineto
0.37298 0.1151 lineto
0.40382 0.13123 lineto
0.43266 0.15267 lineto
0.45873 0.17901 lineto
0.48132 0.20977 lineto
0.49983 0.24432 lineto
0.51372 0.28197 lineto
0.52262 0.32196 lineto
0.52622 0.36348 lineto
0.52437 0.40565 lineto
0.51706 0.44763 lineto
0.5044 0.48855 lineto
0.48662 0.52757 lineto
0.46409 0.5639 lineto
0.43728 0.59684 lineto
0.40679 0.62572 lineto
0.37329 0.65001 lineto
0.33752 0.66928 lineto
0.30029 0.68321 lineto
0.26245 0.6916 lineto
0.22486 0.69441 lineto
0.18838 0.6917 lineto
0.15384 0.68368 lineto
0.12205 0.67069 lineto
0.09374 0.65318 lineto
0.06957 0.6317 lineto
0.05009 0.60689 lineto
0.03577 0.5795 lineto
0.02694 0.55031 lineto
0.02381 0.52015 lineto
0.02647 0.48988 lineto
0.03486 0.46036 lineto
0.04881 0.43242 lineto
0.06799 0.40686 lineto
0.09199 0.38444 lineto
0.12026 0.36582 lineto
0.15217 0.35159 lineto
0.187 0.34221 lineto
0.22395 0.33804 lineto
0.26222 0.33933 lineto
0.30092 0.34619 lineto
0.33921 0.35857 lineto
0.37623 0.37633 lineto
0.41116 0.39918 lineto
0.44323 0.42671 lineto
Mistroke
0.47176 0.45841 lineto
0.49614 0.49364 lineto
0.51585 0.53172 lineto
0.53052 0.57185 lineto
0.53986 0.61323 lineto
0.54373 0.65499 lineto
0.54214 0.69626 lineto
0.53519 0.73619 lineto
0.52315 0.77396 lineto
0.50638 0.80877 lineto
0.48538 0.83992 lineto
0.46074 0.86678 lineto
0.43314 0.88882 lineto
0.40334 0.90562 lineto
0.37213 0.91689 lineto
0.34038 0.92244 lineto
0.30892 0.92225 lineto
0.27863 0.91641 lineto
0.25033 0.90514 lineto
0.2248 0.8888 lineto
0.20276 0.86784 lineto
0.18486 0.84284 lineto
0.17164 0.81447 lineto
0.16355 0.78346 lineto
0.16088 0.75061 lineto
0.16385 0.71677 lineto
0.17251 0.68278 lineto
0.18678 0.64952 lineto
0.20647 0.61781 lineto
0.23124 0.58846 lineto
0.26065 0.56221 lineto
0.29414 0.53971 lineto
0.33105 0.52154 lineto
0.37066 0.50817 lineto
0.41218 0.49993 lineto
0.45476 0.49706 lineto
0.49754 0.49964 lineto
0.53965 0.50763 lineto
0.58025 0.52087 lineto
0.61852 0.53906 lineto
0.6537 0.56176 lineto
0.6851 0.58847 lineto
0.71214 0.61854 lineto
0.7343 0.65126 lineto
0.75122 0.68586 lineto
0.76264 0.72152 lineto
0.76844 0.75737 lineto
0.76861 0.79256 lineto
0.7633 0.82624 lineto
0.75277 0.85758 lineto
Mistroke
0.73742 0.88581 lineto
0.71775 0.91025 lineto
0.69435 0.93028 lineto
0.66793 0.94538 lineto
0.63924 0.95516 lineto
0.60909 0.95934 lineto
0.57833 0.95777 lineto
0.54782 0.95043 lineto
0.51841 0.93745 lineto
0.49093 0.91906 lineto
0.46615 0.89564 lineto
0.44478 0.86767 lineto
0.42745 0.83573 lineto
0.41471 0.80052 lineto
0.40696 0.76278 lineto
0.4045 0.72332 lineto
0.40753 0.68299 lineto
0.41607 0.64266 lineto
0.43004 0.60318 lineto
0.44922 0.5654 lineto
0.47327 0.53011 lineto
0.50172 0.49804 lineto
0.534 0.46985 lineto
0.56946 0.44611 lineto
0.60735 0.42726 lineto
0.64687 0.41364 lineto
0.68719 0.40547 lineto
0.72743 0.40281 lineto
0.76675 0.40562 lineto
0.80428 0.41372 lineto
0.83923 0.42678 lineto
0.87084 0.44439 lineto
0.89845 0.466 lineto
0.92147 0.49098 lineto
0.93942 0.51861 lineto
0.95195 0.5481 lineto
0.95881 0.57863 lineto
0.95991 0.60935 lineto
0.95526 0.63941 lineto
0.94502 0.66794 lineto
0.92949 0.69415 lineto
0.90907 0.71728 lineto
0.88427 0.73665 lineto
0.85573 0.75165 lineto
0.82413 0.76179 lineto
0.79026 0.7667 lineto
0.75494 0.76611 lineto
0.71901 0.7599 lineto
0.68335 0.74807 lineto
0.64879 0.73075 lineto
Mistroke
0.61618 0.70821 lineto
0.58627 0.68084 lineto
0.55978 0.64914 lineto
0.53733 0.61372 lineto
0.51944 0.57526 lineto
0.50652 0.53452 lineto
0.49885 0.49234 lineto
0.49661 0.44955 lineto
0.49983 0.40703 lineto
0.50839 0.36564 lineto
0.52207 0.32621 lineto
0.54052 0.28954 lineto
0.56325 0.25635 lineto
0.5897 0.22728 lineto
0.61919 0.20288 lineto
0.65098 0.1836 lineto
0.68427 0.16975 lineto
0.71822 0.16153 lineto
0.75197 0.15901 lineto
0.78466 0.1621 lineto
0.81545 0.17061 lineto
0.84356 0.18421 lineto
0.86823 0.20247 lineto
0.88882 0.22481 lineto
0.90476 0.2506 lineto
0.9156 0.27911 lineto
0.92099 0.30955 lineto
0.92071 0.3411 lineto
0.91469 0.37288 lineto
0.90297 0.40405 lineto
0.88574 0.43376 lineto
0.86329 0.46121 lineto
0.83605 0.48565 lineto
0.80457 0.5064 lineto
0.76948 0.52288 lineto
0.7315 0.53461 lineto
0.6914 0.54122 lineto
0.65003 0.54247 lineto
0.60824 0.53824 lineto
0.56689 0.52855 lineto
0.52685 0.51356 lineto
0.48893 0.49354 lineto
0.4539 0.46889 lineto
0.42246 0.44013 lineto
0.39523 0.40788 lineto
0.37272 0.37282 lineto
0.35532 0.33574 lineto
0.34331 0.29745 lineto
0.33685 0.2588 lineto
0.33594 0.22066 lineto
Mistroke
0.34048 0.18388 lineto
0.35021 0.1493 lineto
0.36477 0.11769 lineto
0.38368 0.08977 lineto
0.40634 0.06616 lineto
0.43209 0.0474 lineto
0.46016 0.03391 lineto
0.48976 0.02599 lineto
0.52005 0.02381 lineto
0.55016 0.02742 lineto
0.57925 0.03672 lineto
0.60648 0.05149 lineto
0.63107 0.07139 lineto
0.65228 0.09594 lineto
0.66949 0.12459 lineto
0.68214 0.15666 lineto
0.68978 0.19142 lineto
0.6921 0.22807 lineto
0.6889 0.26577 lineto
0.68011 0.30365 lineto
0.6658 0.34085 lineto
0.64617 0.37654 lineto
0.62155 0.40991 lineto
0.59237 0.44021 lineto
0.55918 0.46677 lineto
0.52264 0.48903 lineto
0.48348 0.5065 lineto
0.44248 0.51883 lineto
0.40049 0.5258 lineto
0.35836 0.52729 lineto
0.31696 0.52335 lineto
0.27714 0.51413 lineto
0.23971 0.49993 lineto
0.20545 0.48116 lineto
0.17503 0.45834 lineto
0.14906 0.43209 lineto
0.12804 0.40313 lineto
0.11234 0.37221 lineto
0.10223 0.34017 lineto
0.09784 0.30785 lineto
0.09917 0.27611 lineto
0.10607 0.24581 lineto
0.1183 0.21776 lineto
0.13546 0.19273 lineto
0.15706 0.17141 lineto
0.18249 0.15443 lineto
0.21106 0.1423 lineto
0.24202 0.13541 lineto
0.27455 0.13406 lineto
0.3078 0.13838 lineto
Mistroke
0.34092 0.1484 lineto
0.37305 0.16401 lineto
0.40337 0.18497 lineto
0.43108 0.2109 lineto
0.45548 0.24133 lineto
0.47593 0.27567 lineto
0.4919 0.31325 lineto
0.50294 0.3533 lineto
0.50875 0.39502 lineto
0.50916 0.43757 lineto
0.50411 0.48007 lineto
0.49367 0.52167 lineto
0.47807 0.56152 lineto
0.45763 0.59881 lineto
0.43282 0.63283 lineto
0.4042 0.66289 lineto
0.37241 0.68844 lineto
0.33821 0.70902 lineto
0.30237 0.72429 lineto
0.26574 0.73402 lineto
0.22918 0.73813 lineto
0.19355 0.73667 lineto
0.15969 0.72983 lineto
0.1284 0.71789 lineto
0.10045 0.70129 lineto
0.0765 0.68057 lineto
0.05713 0.65635 lineto
0.04283 0.62934 lineto
0.03395 0.60034 lineto
0.03074 0.57015 lineto
0.0333 0.53964 lineto
0.04161 0.50966 lineto
0.05552 0.48106 lineto
0.07474 0.45464 lineto
0.09887 0.43118 lineto
0.12738 0.41135 lineto
0.15967 0.39576 lineto
0.19502 0.3849 lineto
0.23267 0.37917 lineto
0.27179 0.37882 lineto
0.31153 0.38399 lineto
0.35102 0.39469 lineto
0.38941 0.41078 lineto
0.42587 0.432 lineto
0.45961 0.45797 lineto
0.48994 0.48821 lineto
0.51622 0.52209 lineto
0.53792 0.55895 lineto
0.55462 0.59802 lineto
0.56603 0.63848 lineto
Mistroke
0.57198 0.67949 lineto
0.57242 0.72017 lineto
0.56746 0.75967 lineto
0.55731 0.79716 lineto
0.54233 0.83183 lineto
0.52298 0.86297 lineto
0.49983 0.88993 lineto
0.47354 0.91215 lineto
0.44486 0.92919 lineto
0.41458 0.94072 lineto
0.38353 0.94656 lineto
0.35258 0.94663 lineto
0.32259 0.94101 lineto
0.29438 0.92988 lineto
0.26875 0.91357 lineto
0.24645 0.89253 lineto
0.22812 0.8673 lineto
0.21434 0.83853 lineto
0.20557 0.80695 lineto
0.20215 0.77335 lineto
0.20429 0.73856 lineto
0.2121 0.70343 lineto
0.22552 0.66883 lineto
0.24438 0.6356 lineto
0.26838 0.60455 lineto
0.29708 0.57644 lineto
0.32997 0.55195 lineto
0.36639 0.53167 lineto
0.40565 0.51608 lineto
0.44696 0.50556 lineto
0.48948 0.50037 lineto
0.53236 0.50062 lineto
0.57472 0.50631 lineto
0.61572 0.51728 lineto
0.65454 0.53327 lineto
0.69038 0.55389 lineto
0.72257 0.57863 lineto
0.75047 0.60688 lineto
0.77357 0.63795 lineto
0.79146 0.67107 lineto
0.80387 0.70543 lineto
0.81064 0.74018 lineto
0.81174 0.77445 lineto
0.80729 0.8074 lineto
0.79753 0.83819 lineto
0.78282 0.86605 lineto
0.76364 0.89026 lineto
0.74058 0.91019 lineto
0.7143 0.92532 lineto
0.68556 0.9352 lineto
Mistroke
0.65515 0.93955 lineto
0.62393 0.93818 lineto
0.59274 0.93106 lineto
0.56245 0.91826 lineto
0.53388 0.90001 lineto
0.50782 0.87666 lineto
0.48501 0.84866 lineto
0.46609 0.81658 lineto
0.45162 0.78109 lineto
0.44203 0.74292 lineto
0.43767 0.70288 lineto
0.43874 0.6618 lineto
0.4453 0.62055 lineto
0.4573 0.58 lineto
0.47455 0.54099 lineto
0.49672 0.50432 lineto
0.52339 0.47075 lineto
0.554 0.44095 lineto
0.58791 0.41551 lineto
0.62441 0.39489 lineto
0.66269 0.37948 lineto
0.70194 0.36949 lineto
0.74128 0.36505 lineto
0.77986 0.36612 lineto
0.81682 0.37255 lineto
0.85136 0.38406 lineto
0.8827 0.40024 lineto
0.91015 0.42057 lineto
0.93313 0.44444 lineto
0.95111 0.47115 lineto
0.96373 0.49993 lineto
0.97072 0.52996 lineto
0.97194 0.56039 lineto
0.96739 0.59036 lineto
0.9572 0.61902 lineto
0.94164 0.64556 lineto
0.92108 0.66921 lineto
0.89603 0.68925 lineto
0.86708 0.70509 lineto
0.83492 0.7162 lineto
0.80031 0.72217 lineto
0.76407 0.72272 lineto
0.72704 0.7177 lineto
0.69008 0.70707 lineto
0.65406 0.69095 lineto
0.6198 0.66957 lineto
0.5881 0.6433 lineto
0.55967 0.61261 lineto
0.53515 0.57808 lineto
0.5151 0.5404 lineto
Mistroke
0.49994 0.50031 lineto
0.49 0.45861 lineto
0.48546 0.41616 lineto
0.48639 0.37382 lineto
0.49271 0.33246 lineto
0.50422 0.29291 lineto
0.52059 0.25598 lineto
0.54137 0.2224 lineto
0.56601 0.19286 lineto
0.59385 0.1679 lineto
0.62417 0.148 lineto
0.65618 0.1335 lineto
0.68905 0.12463 lineto
0.72191 0.12148 lineto
0.75392 0.12399 lineto
0.78422 0.13201 lineto
0.81201 0.14522 lineto
0.83655 0.16321 lineto
0.85715 0.18545 lineto
0.87324 0.2113 lineto
0.88433 0.24005 lineto
0.89005 0.27094 lineto
0.89017 0.30312 lineto
0.88457 0.33576 lineto
0.87328 0.36798 lineto
0.85643 0.39895 lineto
0.83433 0.42784 lineto
0.80736 0.4539 lineto
0.77605 0.47642 lineto
0.741 0.49481 lineto
0.70293 0.50856 lineto
0.6626 0.51727 lineto
0.62083 0.52068 lineto
0.57849 0.51864 lineto
0.53644 0.51114 lineto
0.49553 0.49831 lineto
0.45661 0.48039 lineto
0.42044 0.45777 lineto
0.38775 0.43092 lineto
0.35917 0.40045 lineto
0.33524 0.36703 lineto
0.31637 0.33143 lineto
0.30288 0.29444 lineto
0.29494 0.25692 lineto
0.29259 0.21973 lineto
0.29576 0.18374 lineto
0.30421 0.14976 lineto
0.31761 0.1186 lineto
0.3355 0.09099 lineto
0.35731 0.06756 lineto
Mistroke
0.38238 0.04888 lineto
0.40998 0.03539 lineto
0.43932 0.02742 lineto
0.46955 0.02516 lineto
0.49983 0.02869 lineto
0.52929 0.03794 lineto
0.55709 0.05272 lineto
0.58245 0.0727 lineto
0.60462 0.09745 lineto
0.62294 0.12642 lineto
0.63684 0.15895 lineto
0.64585 0.19433 lineto
0.64963 0.23177 lineto
0.64795 0.27043 lineto
0.64071 0.30945 lineto
0.62795 0.34797 lineto
0.60985 0.38514 lineto
0.5867 0.42014 lineto
0.55892 0.45222 lineto
0.52703 0.48069 lineto
0.49168 0.50495 lineto
0.45356 0.5245 lineto
0.41346 0.53897 lineto
0.37221 0.54809 lineto
0.33067 0.55174 lineto
0.28969 0.54991 lineto
0.25014 0.54274 lineto
0.21284 0.53051 lineto
0.17857 0.51358 lineto
0.14802 0.49246 lineto
0.12183 0.46776 lineto
0.1005 0.44016 lineto
0.08446 0.41041 lineto
0.07397 0.37934 lineto
0.06921 0.34779 lineto
0.0702 0.31661 lineto
0.07683 0.28666 lineto
0.08886 0.25877 lineto
0.10594 0.23371 lineto
0.12759 0.21221 lineto
0.15323 0.19488 lineto
0.18218 0.18228 lineto
0.21369 0.17482 lineto
0.24698 0.17282 lineto
0.28118 0.17644 lineto
0.31545 0.18575 lineto
0.34893 0.20065 lineto
0.38077 0.22093 lineto
0.41019 0.24625 lineto
0.43646 0.27615 lineto
Mistroke
0.45891 0.31006 lineto
0.47698 0.34733 lineto
0.49023 0.38722 lineto
0.49832 0.42892 lineto
0.50103 0.4716 lineto
0.49828 0.5144 lineto
0.49014 0.55644 lineto
0.47677 0.59688 lineto
0.45849 0.63491 lineto
0.43573 0.66977 lineto
0.40903 0.70079 lineto
0.37903 0.72738 lineto
0.34644 0.74905 lineto
0.31204 0.76544 lineto
0.27667 0.77631 lineto
0.24117 0.78153 lineto
0.20642 0.78113 lineto
0.17327 0.77526 lineto
0.14251 0.7642 lineto
0.11493 0.74834 lineto
0.0912 0.72821 lineto
0.07193 0.7044 lineto
0.05762 0.67762 lineto
0.04867 0.64864 lineto
0.04533 0.61827 lineto
0.04774 0.58736 lineto
0.05591 0.55678 lineto
0.06971 0.52736 lineto
0.08888 0.49993 lineto
0.11304 0.47527 lineto
0.1417 0.45407 lineto
0.17425 0.43696 lineto
0.21 0.42447 lineto
0.24821 0.417 lineto
0.28806 0.41484 lineto
0.32869 0.41815 lineto
0.36924 0.42698 lineto
0.40885 0.44122 lineto
0.44668 0.46063 lineto
0.48195 0.48486 lineto
0.51392 0.51344 lineto
0.54195 0.5458 lineto
0.56549 0.58125 lineto
0.58408 0.61906 lineto
0.59741 0.65842 lineto
0.60528 0.6985 lineto
0.60763 0.73841 lineto
0.6045 0.77731 lineto
0.59612 0.81435 lineto
0.58278 0.84873 lineto
Mistroke
0.56494 0.8797 lineto
0.54315 0.90661 lineto
0.51805 0.92887 lineto
0.49035 0.94603 lineto
0.46086 0.95773 lineto
0.4304 0.96374 lineto
0.39981 0.96398 lineto
0.36997 0.95849 lineto
0.34172 0.94743 lineto
0.31585 0.9311 lineto
0.29311 0.90992 lineto
0.2742 0.88442 lineto
0.25969 0.85523 lineto
0.25006 0.82305 lineto
0.2457 0.78868 lineto
0.24683 0.75292 lineto
0.25359 0.71664 lineto
0.26595 0.68071 lineto
0.28377 0.64596 lineto
0.30677 0.61322 lineto
0.33455 0.58326 lineto
0.36661 0.55678 lineto
0.40231 0.53438 lineto
0.44098 0.51659 lineto
0.48184 0.50381 lineto
0.52406 0.4963 lineto
0.56679 0.49423 lineto
0.60917 0.49761 lineto
0.65034 0.50632 lineto
0.68945 0.52013 lineto
0.72574 0.53867 lineto
0.75847 0.56145 lineto
0.78702 0.58788 lineto
0.81084 0.6173 lineto
0.8295 0.64895 lineto
0.84269 0.68203 lineto
0.85024 0.71569 lineto
0.85209 0.74907 lineto
0.84833 0.78133 lineto
0.83916 0.81161 lineto
0.82493 0.83914 lineto
0.80609 0.86318 lineto
0.7832 0.88308 lineto
0.75693 0.8983 lineto
0.728 0.90837 lineto
0.6972 0.91299 lineto
0.66538 0.91193 lineto
0.63339 0.90513 lineto
0.60208 0.89265 lineto
0.5723 0.87467 lineto
Mistroke
0.54485 0.85153 lineto
0.52047 0.82366 lineto
0.49983 0.7916 lineto
0.4835 0.756 lineto
0.47195 0.71758 lineto
0.46555 0.67714 lineto
0.46453 0.6355 lineto
0.46897 0.59353 lineto
0.47887 0.55209 lineto
0.49404 0.51204 lineto
0.5142 0.4742 lineto
0.53894 0.43932 lineto
0.56774 0.4081 lineto
0.59997 0.38115 lineto
0.63493 0.35896 lineto
0.67184 0.34193 lineto
0.70988 0.33032 lineto
0.74819 0.32427 lineto
0.78592 0.32378 lineto
0.82219 0.32872 lineto
0.8562 0.33884 lineto
0.88716 0.35376 lineto
0.91438 0.37298 lineto
0.93722 0.3959 lineto
0.95518 0.42185 lineto
0.96783 0.45007 lineto
0.97489 0.47975 lineto
0.97619 0.51004 lineto
0.97171 0.54009 lineto
0.96156 0.56905 lineto
0.94596 0.59608 lineto
0.92528 0.62041 lineto
0.89998 0.64131 lineto
0.87065 0.65816 lineto
0.83796 0.67042 lineto
0.80266 0.67764 lineto
0.76554 0.67953 lineto
0.72746 0.67589 lineto
0.68928 0.66667 lineto
0.65185 0.65195 lineto
0.61602 0.63195 lineto
0.58258 0.60699 lineto
0.55228 0.57754 lineto
0.52577 0.54415 lineto
0.50363 0.50747 lineto
0.48631 0.46825 lineto
0.47415 0.42727 lineto
0.46739 0.38539 lineto
0.4661 0.34346 lineto
0.47025 0.30234 lineto
Mistroke
0.47965 0.26289 lineto
0.49401 0.22592 lineto
0.5129 0.19218 lineto
0.53579 0.16235 lineto
0.56205 0.13703 lineto
0.59097 0.1167 lineto
0.62177 0.10174 lineto
0.65363 0.09238 lineto
0.68569 0.08876 lineto
0.71709 0.09085 lineto
0.74699 0.09851 lineto
0.77457 0.11147 lineto
0.79907 0.12932 lineto
0.8198 0.15157 lineto
0.83615 0.17759 lineto
0.84762 0.20669 lineto
0.85382 0.23812 lineto
0.85448 0.27104 lineto
0.84946 0.30461 lineto
0.83876 0.33797 lineto
0.82249 0.37028 lineto
0.80091 0.40069 lineto
0.7744 0.42844 lineto
0.74345 0.45281 lineto
0.70866 0.47319 lineto
0.67071 0.48903 lineto
0.63036 0.49993 lineto
0.58843 0.50558 lineto
0.54576 0.50581 lineto
0.50322 0.50059 lineto
0.46168 0.49 lineto
0.42198 0.47427 lineto
0.3849 0.45375 lineto
0.35118 0.4289 lineto
0.32147 0.40029 lineto
0.29633 0.3686 lineto
0.27621 0.33454 lineto
0.26144 0.29894 lineto
0.25222 0.26262 lineto
0.24863 0.22645 lineto
0.25061 0.19128 lineto
0.25797 0.15797 lineto
0.27039 0.1273 lineto
0.28743 0.10003 lineto
0.30856 0.07681 lineto
0.33313 0.05822 lineto
0.36042 0.04474 lineto
0.38965 0.0367 lineto
0.41999 0.03435 lineto
0.45059 0.03777 lineto
Mistroke
0.48058 0.04693 lineto
0.50913 0.06166 lineto
0.53542 0.08167 lineto
0.55871 0.10654 lineto
0.57831 0.13574 lineto
0.59364 0.16865 lineto
0.60419 0.20455 lineto
0.6096 0.24267 lineto
0.60962 0.28217 lineto
0.60411 0.32222 lineto
0.5931 0.36193 lineto
0.57672 0.40045 lineto
0.55524 0.43696 lineto
0.52906 0.47069 lineto
0.49868 0.50094 lineto
0.46472 0.52707 lineto
0.42785 0.54858 lineto
0.38886 0.56505 lineto
0.34855 0.5762 lineto
0.30779 0.58188 lineto
0.26743 0.58204 lineto
0.22834 0.57681 lineto
0.19135 0.56641 lineto
0.15724 0.55121 lineto
0.12673 0.53169 lineto
0.10048 0.50841 lineto
0.079 0.48205 lineto
0.06275 0.45337 lineto
0.05203 0.42315 lineto
0.04702 0.39224 lineto
0.04778 0.36149 lineto
0.05423 0.33177 lineto
0.06616 0.3039 lineto
0.08324 0.27868 lineto
0.10502 0.25684 lineto
0.13092 0.23902 lineto
0.1603 0.22578 lineto
0.19243 0.21758 lineto
0.2265 0.21475 lineto
0.2617 0.2175 lineto
0.29715 0.22589 lineto
0.33199 0.23988 lineto
0.36539 0.25928 lineto
0.39653 0.28377 lineto
0.42468 0.31291 lineto
0.44914 0.34617 lineto
0.46936 0.38291 lineto
0.48483 0.42239 lineto
0.4952 0.46384 lineto
0.50024 0.50642 lineto
Mistroke
0.49983 0.54926 lineto
0.49399 0.59151 lineto
0.48287 0.63231 lineto
0.46677 0.67083 lineto
0.44609 0.70631 lineto
0.42134 0.73806 lineto
0.39313 0.76546 lineto
0.36217 0.78801 lineto
0.32923 0.80532 lineto
0.29512 0.81711 lineto
0.2607 0.82325 lineto
0.22683 0.82372 lineto
0.19437 0.81864 lineto
0.16413 0.80827 lineto
0.13688 0.79299 lineto
0.11335 0.77327 lineto
0.09414 0.74972 lineto
0.07978 0.72302 lineto
0.07068 0.69392 lineto
0.06714 0.66322 lineto
0.06932 0.63177 lineto
0.07725 0.60043 lineto
0.09083 0.57006 lineto
0.10983 0.54148 lineto
0.1339 0.51548 lineto
0.16255 0.49277 lineto
0.19522 0.47401 lineto
0.23124 0.45973 lineto
0.26985 0.45037 lineto
0.31025 0.44625 lineto
0.3516 0.44756 lineto
0.39304 0.45437 lineto
0.4337 0.46659 lineto
0.47273 0.48403 lineto
0.50934 0.50636 lineto
0.54278 0.53313 lineto
0.57238 0.56379 lineto
0.59757 0.59767 lineto
0.61788 0.63407 lineto
0.63296 0.67218 lineto
0.64259 0.71116 lineto
0.64666 0.75016 lineto
0.64522 0.78831 lineto
0.63843 0.82477 lineto
0.62659 0.85872 lineto
0.61011 0.8894 lineto
0.58953 0.91615 lineto
0.56545 0.93835 lineto
0.5386 0.95553 lineto
0.50975 0.96731 lineto
Mistroke
0.47971 0.97343 lineto
0.44934 0.97378 lineto
0.4195 0.96837 lineto
0.39104 0.95733 lineto
0.36476 0.94095 lineto
0.34144 0.91962 lineto
0.32177 0.89384 lineto
0.30635 0.86423 lineto
0.29569 0.83147 lineto
0.29019 0.79634 lineto
0.29012 0.75965 lineto
0.29563 0.72225 lineto
0.30672 0.68501 lineto
0.32329 0.64878 lineto
0.34507 0.61439 lineto
0.3717 0.58262 lineto
0.40269 0.55419 lineto
0.43745 0.52974 lineto
0.47529 0.50979 lineto
0.51546 0.49478 lineto
0.55715 0.48501 lineto
0.5995 0.48065 lineto
0.64166 0.48177 lineto
0.68275 0.48827 lineto
0.72195 0.49993 lineto
0.75844 0.51642 lineto
0.79151 0.53728 lineto
0.82049 0.56195 lineto
0.84482 0.58976 lineto
0.86405 0.61999 lineto
0.87784 0.65183 lineto
0.88599 0.68446 lineto
0.88841 0.71701 lineto
0.88517 0.74863 lineto
0.87644 0.77847 lineto
0.86254 0.80574 lineto
0.8439 0.8297 lineto
0.82106 0.84967 lineto
0.79466 0.86508 lineto
0.76542 0.87546 lineto
0.73413 0.88046 lineto
0.7016 0.87984 lineto
0.66869 0.87351 lineto
0.63627 0.86149 lineto
0.60518 0.84396 lineto
0.57624 0.82121 lineto
0.55019 0.79364 lineto
0.52772 0.76178 lineto
0.50944 0.72627 lineto
0.49584 0.6878 lineto
Mistroke
0.48729 0.64716 lineto
0.48407 0.60517 lineto
0.4863 0.56269 lineto
0.49398 0.52059 lineto
0.50697 0.47972 lineto
0.52501 0.44091 lineto
0.54772 0.40494 lineto
0.5746 0.37252 lineto
0.60504 0.34427 lineto
0.63836 0.32071 lineto
0.67379 0.30227 lineto
0.71052 0.28923 lineto
0.74771 0.28177 lineto
0.78448 0.2799 lineto
0.81999 0.28354 lineto
0.8534 0.29245 lineto
0.88392 0.30627 lineto
0.91084 0.32455 lineto
0.93351 0.3467 lineto
0.95139 0.37206 lineto
0.96404 0.39989 lineto
0.97116 0.42938 lineto
0.97254 0.4597 lineto
0.96815 0.48999 lineto
0.95804 0.5194 lineto
0.94244 0.54709 lineto
0.92167 0.57226 lineto
0.89618 0.5942 lineto
0.86653 0.61223 lineto
0.83338 0.62581 lineto
0.79746 0.63447 lineto
0.75956 0.63788 lineto
0.72051 0.63582 lineto
0.68119 0.62821 lineto
0.64246 0.6151 lineto
0.60515 0.59668 lineto
0.57009 0.57325 lineto
0.53802 0.54524 lineto
0.50963 0.51319 lineto
0.4855 0.47774 lineto
0.46612 0.4396 lineto
0.45187 0.39957 lineto
0.44298 0.35846 lineto
0.43958 0.31715 lineto
0.44165 0.27649 lineto
0.44904 0.23735 lineto
0.46149 0.20053 lineto
0.47858 0.16682 lineto
0.49983 0.1369 lineto
0.5246 0.11139 lineto
Mistroke
0.55222 0.0908 lineto
0.58191 0.07552 lineto
0.61286 0.06583 lineto
0.64422 0.06188 lineto
0.67513 0.06368 lineto
0.70474 0.0711 lineto
0.73223 0.08391 lineto
0.75682 0.10173 lineto
0.77781 0.12407 lineto
0.79457 0.15035 lineto
0.80657 0.17988 lineto
0.81341 0.21191 lineto
0.81478 0.24563 lineto
0.81051 0.2802 lineto
0.80058 0.31475 lineto
0.78507 0.34844 lineto
0.76422 0.38042 lineto
0.73838 0.40991 lineto
0.70801 0.43618 lineto
0.67369 0.45858 lineto
0.63609 0.47657 lineto
0.59596 0.48969 lineto
0.55409 0.49763 lineto
0.51133 0.50018 lineto
0.46855 0.49727 lineto
0.42661 0.48897 lineto
0.38636 0.47548 lineto
0.3486 0.45711 lineto
0.31408 0.4343 lineto
0.28347 0.40761 lineto
0.25735 0.37768 lineto
0.23619 0.34522 lineto
0.22035 0.31104 lineto
0.21006 0.27595 lineto
0.20542 0.24083 lineto
0.20641 0.20652 lineto
0.21286 0.17388 lineto
0.22448 0.14371 lineto
0.24086 0.11678 lineto
0.26147 0.09376 lineto
0.2857 0.07524 lineto
0.31284 0.06173 lineto
0.34212 0.0536 lineto
0.37272 0.05109 lineto
0.40379 0.05434 lineto
0.43447 0.06333 lineto
0.46391 0.07793 lineto
0.49129 0.09787 lineto
0.51585 0.12275 lineto
0.53688 0.15207 lineto
Mistroke
0.55379 0.18522 lineto
0.56604 0.22151 lineto
0.57325 0.26017 lineto
0.57513 0.30038 lineto
0.57153 0.3413 lineto
0.56244 0.38204 lineto
0.54795 0.42177 lineto
0.52833 0.45963 lineto
0.50393 0.49485 lineto
0.47523 0.52671 lineto
0.44283 0.55456 lineto
0.4074 0.57786 lineto
0.36968 0.59618 lineto
0.3305 0.60921 lineto
0.29069 0.61676 lineto
0.25112 0.61877 lineto
0.21266 0.61533 lineto
0.17613 0.60663 lineto
0.14234 0.59301 lineto
0.11202 0.57493 lineto
0.08583 0.55295 lineto
0.06433 0.5277 lineto
0.04799 0.49993 lineto
0.03712 0.47043 lineto
0.03196 0.44002 lineto
0.03258 0.40956 lineto
0.03892 0.37992 lineto
0.05082 0.35193 lineto
0.06794 0.32639 lineto
0.08988 0.30404 lineto
0.11608 0.28556 lineto
0.14592 0.27152 lineto
0.17866 0.2624 lineto
0.21354 0.25856 lineto
0.24972 0.26023 lineto
0.28635 0.26751 lineto
0.32255 0.28038 lineto
0.35749 0.29868 lineto
0.39034 0.32212 lineto
0.42035 0.35029 lineto
0.44682 0.38266 lineto
0.46914 0.41863 lineto
0.48682 0.45747 lineto
0.49947 0.49843 lineto
0.50681 0.54066 lineto
0.50871 0.58331 lineto
0.50516 0.62553 lineto
0.49629 0.66644 lineto
0.48235 0.70522 lineto
0.46373 0.74109 lineto
Mistroke
0.4409 0.77334 lineto
0.41447 0.80134 lineto
0.38513 0.82456 lineto
0.35362 0.84258 lineto
0.32075 0.8551 lineto
0.28738 0.86196 lineto
0.25436 0.86311 lineto
0.22254 0.85866 lineto
0.19276 0.84882 lineto
0.16581 0.83395 lineto
0.1424 0.81451 lineto
0.12317 0.79107 lineto
0.10867 0.76431 lineto
0.09934 0.73495 lineto
0.0955 0.70379 lineto
0.09733 0.67168 lineto
0.10489 0.63947 lineto
0.11812 0.60802 lineto
0.13681 0.57817 lineto
0.16062 0.55071 lineto
0.18911 0.52638 lineto
0.22173 0.50584 lineto
0.25782 0.48965 lineto
0.29665 0.47829 lineto
0.33742 0.47208 lineto
0.3793 0.47127 lineto
0.42142 0.47592 lineto
0.46292 0.48601 lineto
0.50295 0.50135 lineto
0.5407 0.52164 lineto
0.5754 0.54647 lineto
0.60638 0.57529 lineto
0.63303 0.60748 lineto
0.65486 0.64233 lineto
0.6715 0.67906 lineto
0.6827 0.71683 lineto
0.68832 0.75479 lineto
0.68838 0.79209 lineto
0.68301 0.82785 lineto
0.67249 0.86128 lineto
0.65721 0.89159 lineto
0.63766 0.91809 lineto
0.61445 0.94016 lineto
0.58828 0.9573 lineto
0.55991 0.96911 lineto
0.53014 0.9753 lineto
0.49983 0.97573 lineto
0.46983 0.97039 lineto
0.44099 0.95938 lineto
0.41414 0.94296 lineto
Mistroke
0.39006 0.92149 lineto
0.36945 0.89546 lineto
0.35294 0.86546 lineto
0.34107 0.83216 lineto
0.33425 0.79633 lineto
0.33278 0.75876 lineto
0.33684 0.7203 lineto
0.34646 0.68183 lineto
0.36156 0.64419 lineto
0.38192 0.60823 lineto
0.40718 0.57473 lineto
0.43689 0.54444 lineto
0.47047 0.51801 lineto
0.50726 0.49598 lineto
0.54651 0.47883 lineto
0.58744 0.46687 lineto
0.62919 0.46031 lineto
0.6709 0.45924 lineto
0.7117 0.4636 lineto
0.75076 0.4732 lineto
0.78726 0.48772 lineto
0.82045 0.50674 lineto
0.84967 0.52971 lineto
0.87432 0.55599 lineto
0.89394 0.58487 lineto
0.90815 0.61556 lineto
0.91674 0.64724 lineto
0.91958 0.67904 lineto
0.91671 0.71012 lineto
0.90828 0.73962 lineto
0.89459 0.76674 lineto
0.87603 0.79072 lineto
0.85313 0.81088 lineto
0.82651 0.82662 lineto
0.79687 0.83744 lineto
0.76498 0.84297 lineto
0.73166 0.84295 lineto
0.69777 0.83725 lineto
0.66416 0.82588 lineto
0.63169 0.80897 lineto
0.60118 0.78678 lineto
0.57339 0.75972 lineto
0.54904 0.72828 lineto
0.52874 0.69306 lineto
0.513 0.65476 lineto
0.50225 0.61415 lineto
0.49676 0.57203 lineto
0.4967 0.52927 lineto
0.50209 0.48673 lineto
0.51283 0.44527 lineto
Mistroke
0.52868 0.40573 lineto
0.54928 0.36889 lineto
0.57416 0.33549 lineto
0.60274 0.30616 lineto
0.63434 0.28146 lineto
0.66823 0.26182 lineto
0.7036 0.24756 lineto
0.7396 0.23888 lineto
0.77537 0.23584 lineto
0.81007 0.23836 lineto
0.84283 0.24624 lineto
0.87288 0.25916 lineto
0.89947 0.27667 lineto
0.92196 0.29822 lineto
0.93976 0.32315 lineto
0.95243 0.35074 lineto
0.95962 0.38021 lineto
0.96112 0.41072 lineto
0.95685 0.44141 lineto
0.94685 0.47143 lineto
0.9313 0.49993 lineto
0.91052 0.52612 lineto
0.88492 0.54924 lineto
0.85505 0.56863 lineto
0.82154 0.5837 lineto
0.78511 0.59397 lineto
0.74654 0.59907 lineto
0.70666 0.59877 lineto
0.66633 0.59295 lineto
0.62642 0.58164 lineto
0.58778 0.56498 lineto
0.55123 0.54327 lineto
0.51754 0.51691 lineto
0.4874 0.4864 lineto
0.46142 0.45237 lineto
0.44012 0.41552 lineto
0.4239 0.37662 lineto
0.41302 0.33649 lineto
0.40764 0.29599 lineto
0.40776 0.25598 lineto
0.41328 0.21732 lineto
0.42393 0.18084 lineto
0.43936 0.14731 lineto
0.45908 0.11746 lineto
0.48249 0.09192 lineto
0.50893 0.0712 lineto
0.53763 0.05575 lineto
0.5678 0.04585 lineto
0.59859 0.04168 lineto
0.62914 0.04328 lineto
Mistroke
0.6586 0.05057 lineto
0.68613 0.06331 lineto
0.71096 0.08116 lineto
0.73236 0.10367 lineto
0.74969 0.13024 lineto
0.76239 0.16024 lineto
0.77004 0.19291 lineto
0.7723 0.22746 lineto
0.76898 0.26305 lineto
0.76001 0.29882 lineto
0.74548 0.3339 lineto
0.72557 0.36746 lineto
0.70061 0.3987 lineto
0.67104 0.42687 lineto
0.63743 0.45131 lineto
0.60042 0.47145 lineto
0.56073 0.48681 lineto
0.51917 0.49704 lineto
0.47656 0.50191 lineto
0.43377 0.50133 lineto
0.39167 0.49534 lineto
0.35111 0.48409 lineto
0.31291 0.46788 lineto
0.27782 0.44713 lineto
0.24653 0.42236 lineto
0.21965 0.3942 lineto
0.19767 0.36335 lineto
0.18097 0.33059 lineto
0.16981 0.29673 lineto
0.16433 0.26265 lineto
0.16451 0.22918 lineto
0.17023 0.1972 lineto
0.18122 0.16751 lineto
0.1971 0.14088 lineto
0.21736 0.11801 lineto
0.2414 0.09951 lineto
0.26854 0.08591 lineto
0.29802 0.0776 lineto
0.32902 0.07486 lineto
0.3607 0.07784 lineto
0.39219 0.08656 lineto
0.42265 0.10091 lineto
0.45126 0.12065 lineto
0.47722 0.14541 lineto
0.49983 0.1747 lineto
0.51844 0.20794 lineto
0.53254 0.24446 lineto
0.54169 0.28349 lineto
0.54557 0.32423 lineto
0.54403 0.36584 lineto
Mistroke
0.53699 0.40744 lineto
0.52456 0.44818 lineto
0.50693 0.48721 lineto
0.48447 0.52373 lineto
0.45761 0.55701 lineto
0.42693 0.58639 lineto
0.39308 0.61131 lineto
0.3568 0.6313 lineto
0.31889 0.64603 lineto
0.28018 0.65528 lineto
0.24154 0.65896 lineto
0.20383 0.65714 lineto
0.16789 0.64997 lineto
0.13454 0.63778 lineto
0.10452 0.62099 lineto
0.0785 0.60014 lineto
0.05707 0.57585 lineto
0.04071 0.54884 lineto
0.02978 0.5199 lineto
0.02452 0.48984 lineto
0.02505 0.45952 lineto
0.03132 0.4298 lineto
0.0432 0.40152 lineto
0.06039 0.3755 lineto
0.0825 0.35248 lineto
0.109 0.33316 lineto
0.13927 0.31814 lineto
0.17262 0.30792 lineto
0.20827 0.30287 lineto
0.2454 0.30327 lineto
0.28316 0.30924 lineto
0.32068 0.32078 lineto
0.3571 0.33777 lineto
0.39161 0.35994 lineto
0.42343 0.3869 lineto
0.45184 0.41817 lineto
0.47623 0.45313 lineto
0.49606 0.4911 lineto
0.51092 0.53133 lineto
0.52051 0.57298 lineto
0.52467 0.61521 lineto
0.52336 0.65716 lineto
0.51668 0.69796 lineto
0.50485 0.73677 lineto
0.48823 0.77281 lineto
0.46729 0.80535 lineto
0.44259 0.83374 lineto
0.4148 0.85742 lineto
0.38467 0.87596 lineto
0.35299 0.88903 lineto
Mistroke
0.32059 0.89644 lineto
0.28835 0.89811 lineto
0.25711 0.89412 lineto
0.22772 0.88467 lineto
0.20096 0.87007 lineto
0.17758 0.85077 lineto
0.15823 0.82732 lineto
0.14348 0.80037 lineto
0.1338 0.77064 lineto
0.12951 0.73893 lineto
0.13085 0.70605 lineto
0.1379 0.67287 lineto
0.15062 0.64025 lineto
0.16882 0.60904 lineto
0.19221 0.58003 lineto
0.22035 0.55398 lineto
0.25272 0.53157 lineto
0.28868 0.5134 lineto
0.32752 0.49993 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 0.992908 142 185.808472 sc6mt astore rstroke
end
grestore
grestore
%%EndDocument
 @endspecial 359 717 a Fi(Fig)p Fq(.)15 b(61.)k(Irrational)d
Fh(b)e Fq(with)i Fh(T)i Fq(=)13 b(24)p Fh(\031)j Fq(\(left\))f(and)h
Fh(T)i Fq(=)13 b(48)p Fh(\031)j Fq(\(righ)o(t\).)427 1516 y
@beginspecial 0 @llx 0 @lly 568 @urx 258 @ury 2632 @rwi @setspecial
%%BeginDocument: Pol.limacon1.eps


/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /TDeps_dict 20 dict def TDeps_dict begin /showpage {
    
} def /copypage {
    
} def /grestoreall {
    
} def /erasepage {
    
} def /nulldevice {
    
} def /exitserver {
    
} def /initgraphics {
    
} def /renderbands {
    
} def /initmatrix {
    
} def /banddevice {
    
} def /setpageparams {
    
} def /framedevice {
    
} def /note {
    
} def end end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
gsave
0 0 568 258 rectclip
-19 -461 translate
19 461 568 258 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
gsave clpmt currentmatrix pop newpath
0.941192 0 0 0.941192 -136.004807 217.287994 sc5mt astore pop false {
    sc5mt dodrawctm 165 259 282 274 0 rfpath unpagectm
} {
    282 274 165 259 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[0.941192 0 0 0.941192 -136.004807 217.287994] dodrawctm
165 259 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	274.024048 def
/Mwidth		282.000000 def
/Mheight	274.024048 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.462697 0.370157 0.462697 [
[(-1)] 0.0373 0.37016 0 2 Msboxa
[(-0.5)] 0.26865 0.37016 0 2 Msboxa
[(0.5)] 0.73135 0.37016 0 2 Msboxa
[(1)] 0.9627 0.37016 0 2 Msboxa
[(-0.5)] 0.4875 0.13881 1 0 Msboxa
[(0.5)] 0.4875 0.60151 1 0 Msboxa
[(1)] 0.4875 0.83285 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.97266 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.0373 0.37016 moveto
0.0373 0.37641 lineto
stroke
grestore
[(-1)] 0.0373 0.37016 0 2 Mshowa
gsave
0.002 setlinewidth
0.26865 0.37016 moveto
0.26865 0.37641 lineto
stroke
grestore
[(-0.5)] 0.26865 0.37016 0 2 Mshowa
gsave
0.002 setlinewidth
0.73135 0.37016 moveto
0.73135 0.37641 lineto
stroke
grestore
[(0.5)] 0.73135 0.37016 0 2 Mshowa
gsave
0.002 setlinewidth
0.9627 0.37016 moveto
0.9627 0.37641 lineto
stroke
grestore
[(1)] 0.9627 0.37016 0 2 Mshowa
gsave
0.001 setlinewidth
0.08357 0.37016 moveto
0.08357 0.37391 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.12984 0.37016 moveto
0.12984 0.37391 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.17611 0.37016 moveto
0.17611 0.37391 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22238 0.37016 moveto
0.22238 0.37391 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31492 0.37016 moveto
0.31492 0.37391 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36119 0.37016 moveto
0.36119 0.37391 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40746 0.37016 moveto
0.40746 0.37391 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45373 0.37016 moveto
0.45373 0.37391 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54627 0.37016 moveto
0.54627 0.37391 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59254 0.37016 moveto
0.59254 0.37391 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63881 0.37016 moveto
0.63881 0.37391 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.68508 0.37016 moveto
0.68508 0.37391 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77762 0.37016 moveto
0.77762 0.37391 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.82389 0.37016 moveto
0.82389 0.37391 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.87016 0.37016 moveto
0.87016 0.37391 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.91643 0.37016 moveto
0.91643 0.37391 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.37016 moveto
1 0.37016 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.13881 moveto
0.50625 0.13881 lineto
stroke
grestore
[(-0.5)] 0.4875 0.13881 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.60151 moveto
0.50625 0.60151 lineto
stroke
grestore
[(0.5)] 0.4875 0.60151 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.83285 moveto
0.50625 0.83285 lineto
stroke
grestore
[(1)] 0.4875 0.83285 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.18508 moveto
0.50375 0.18508 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.23135 moveto
0.50375 0.23135 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.27762 moveto
0.50375 0.27762 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.32389 moveto
0.50375 0.32389 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.41643 moveto
0.50375 0.41643 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.4627 moveto
0.50375 0.4627 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.50897 moveto
0.50375 0.50897 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55524 moveto
0.50375 0.55524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.64778 moveto
0.50375 0.64778 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.69405 moveto
0.50375 0.69405 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.74031 moveto
0.50375 0.74031 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.78658 moveto
0.50375 0.78658 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.09254 moveto
0.50375 0.09254 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.04627 moveto
0.50375 0.04627 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0 moveto
0.50375 0 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.87912 moveto
0.50375 0.87912 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.92539 moveto
0.50375 0.92539 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.97166 moveto
0.50375 0.97166 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.97166 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.97166 lineto
0 0.97166 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.9627 0.37016 moveto
0.96623 0.38542 lineto
0.96926 0.40091 lineto
0.97175 0.41662 lineto
0.97371 0.43252 lineto
0.97448 0.44054 lineto
0.97511 0.4486 lineto
0.97537 0.45264 lineto
0.9756 0.4567 lineto
0.97579 0.46076 lineto
0.97594 0.46483 lineto
0.97606 0.46891 lineto
0.97614 0.47299 lineto
0.97618 0.47709 lineto
0.97619 0.48119 lineto
0.97616 0.4853 lineto
0.97609 0.48941 lineto
0.97599 0.49353 lineto
0.97585 0.49766 lineto
0.97567 0.50179 lineto
0.97545 0.50593 lineto
0.97491 0.51422 lineto
0.97335 0.53084 lineto
0.97118 0.5475 lineto
0.96837 0.56416 lineto
0.96087 0.59743 lineto
0.9508 0.63042 lineto
0.92295 0.6947 lineto
0.90522 0.72552 lineto
0.88501 0.75517 lineto
0.83754 0.81005 lineto
0.78144 0.85762 lineto
0.75053 0.87818 lineto
0.71796 0.89637 lineto
0.68394 0.91202 lineto
0.64867 0.92501 lineto
0.6124 0.93524 lineto
0.59396 0.93928 lineto
0.57536 0.9426 lineto
0.55664 0.94519 lineto
0.54723 0.94621 lineto
0.53781 0.94704 lineto
0.52837 0.94769 lineto
0.52365 0.94795 lineto
0.51892 0.94816 lineto
0.51419 0.94832 lineto
0.50946 0.94844 lineto
0.50473 0.94851 lineto
0.5 0.94853 lineto
0.49527 0.94851 lineto
Mistroke
0.49054 0.94844 lineto
0.48581 0.94832 lineto
0.48108 0.94816 lineto
0.47163 0.94769 lineto
0.46219 0.94704 lineto
0.45277 0.94621 lineto
0.44336 0.94519 lineto
0.42464 0.9426 lineto
0.40604 0.93928 lineto
0.3876 0.93524 lineto
0.35133 0.92501 lineto
0.31606 0.91202 lineto
0.28204 0.89637 lineto
0.21856 0.85762 lineto
0.16246 0.81005 lineto
0.11499 0.75517 lineto
0.09478 0.72552 lineto
0.07705 0.6947 lineto
0.06185 0.66292 lineto
0.0492 0.63042 lineto
0.03913 0.59743 lineto
0.03163 0.56416 lineto
0.02882 0.5475 lineto
0.02665 0.53084 lineto
0.02579 0.52252 lineto
0.02509 0.51422 lineto
0.02455 0.50593 lineto
0.02433 0.50179 lineto
0.02415 0.49766 lineto
0.02401 0.49353 lineto
0.02391 0.48941 lineto
0.02384 0.4853 lineto
0.02381 0.48119 lineto
0.02382 0.47709 lineto
0.02386 0.47299 lineto
0.02394 0.46891 lineto
0.02406 0.46483 lineto
0.02421 0.46076 lineto
0.0244 0.4567 lineto
0.02489 0.4486 lineto
0.02552 0.44054 lineto
0.02629 0.43252 lineto
0.02825 0.41662 lineto
0.03074 0.40091 lineto
0.0373 0.37016 lineto
0.04584 0.34039 lineto
0.05623 0.31173 lineto
0.08199 0.25815 lineto
0.11342 0.21003 lineto
0.14938 0.16773 lineto
Mistroke
0.18878 0.13135 lineto
0.23066 0.10082 lineto
0.27419 0.07588 lineto
0.31874 0.05621 lineto
0.34124 0.04822 lineto
0.36383 0.04142 lineto
0.38648 0.03574 lineto
0.40916 0.03115 lineto
0.43187 0.02762 lineto
0.44322 0.02625 lineto
0.45458 0.02512 lineto
0.46593 0.02425 lineto
0.47161 0.02391 lineto
0.47729 0.02363 lineto
0.48297 0.02341 lineto
0.4858 0.02333 lineto
0.48864 0.02326 lineto
0.49148 0.0232 lineto
0.49432 0.02317 lineto
0.49716 0.02314 lineto
0.5 0.02313 lineto
0.50284 0.02314 lineto
0.50568 0.02317 lineto
0.50852 0.0232 lineto
0.51136 0.02326 lineto
0.51703 0.02341 lineto
0.52271 0.02363 lineto
0.52839 0.02391 lineto
0.53407 0.02425 lineto
0.54542 0.02512 lineto
0.55678 0.02625 lineto
0.56813 0.02762 lineto
0.59084 0.03115 lineto
0.61352 0.03574 lineto
0.63617 0.04142 lineto
0.68126 0.05621 lineto
0.72581 0.07588 lineto
0.76934 0.10082 lineto
0.81122 0.13135 lineto
0.85062 0.16773 lineto
0.88658 0.21003 lineto
0.91801 0.25815 lineto
0.94377 0.31173 lineto
0.95416 0.34039 lineto
0.9627 0.37016 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
0.941192 0 0 0.941192 9.468046 34.931969 sc4mt astore 0.941192 0 0 0.941192 9.468046 34.931969 sc5mt astore 165 259 282 274 0.941192 0 0 0.941192 -136.004807 217.287994 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1.182877 0 0 1.182877 77.040344 121.581062 sc5mt astore pop false {
    sc5mt dodrawctm 181.5 287.5 249 217 0 rfpath unpagectm
} {
    249 217 181.5 287.5 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1.182877 0 0 1.182877 77.040344 121.581062] dodrawctm
181.5 287.5 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	217.497482 def
/Mwidth		249.319305 def
/Mheight	217.497482 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.398677 0.153656 0.398677 [
[(-1)] 0.10132 0.15366 0 2 Msboxa
[(-0.5)] 0.30066 0.15366 0 2 Msboxa
[(0.5)] 0.69934 0.15366 0 2 Msboxa
[(1)] 0.89868 0.15366 0 2 Msboxa
[(0.5)] 0.4875 0.35299 1 0 Msboxa
[(1)] 0.4875 0.55233 1 0 Msboxa
[(1.5)] 0.4875 0.75167 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.87311 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.10132 0.15366 moveto
0.10132 0.15991 lineto
stroke
grestore
[(-1)] 0.10132 0.15366 0 2 Mshowa
gsave
0.002 setlinewidth
0.30066 0.15366 moveto
0.30066 0.15991 lineto
stroke
grestore
[(-0.5)] 0.30066 0.15366 0 2 Mshowa
gsave
0.002 setlinewidth
0.69934 0.15366 moveto
0.69934 0.15991 lineto
stroke
grestore
[(0.5)] 0.69934 0.15366 0 2 Mshowa
gsave
0.002 setlinewidth
0.89868 0.15366 moveto
0.89868 0.15991 lineto
stroke
grestore
[(1)] 0.89868 0.15366 0 2 Mshowa
gsave
0.001 setlinewidth
0.14119 0.15366 moveto
0.14119 0.15741 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18106 0.15366 moveto
0.18106 0.15741 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22093 0.15366 moveto
0.22093 0.15741 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.26079 0.15366 moveto
0.26079 0.15741 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.34053 0.15366 moveto
0.34053 0.15741 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.3804 0.15366 moveto
0.3804 0.15741 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.42026 0.15366 moveto
0.42026 0.15741 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46013 0.15366 moveto
0.46013 0.15741 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53987 0.15366 moveto
0.53987 0.15741 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.57974 0.15366 moveto
0.57974 0.15741 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.6196 0.15366 moveto
0.6196 0.15741 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.65947 0.15366 moveto
0.65947 0.15741 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.73921 0.15366 moveto
0.73921 0.15741 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77907 0.15366 moveto
0.77907 0.15741 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81894 0.15366 moveto
0.81894 0.15741 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85881 0.15366 moveto
0.85881 0.15741 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.06146 0.15366 moveto
0.06146 0.15741 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02159 0.15366 moveto
0.02159 0.15741 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.93854 0.15366 moveto
0.93854 0.15741 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.97841 0.15366 moveto
0.97841 0.15741 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.15366 moveto
1 0.15366 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.35299 moveto
0.50625 0.35299 lineto
stroke
grestore
[(0.5)] 0.4875 0.35299 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.55233 moveto
0.50625 0.55233 lineto
stroke
grestore
[(1)] 0.4875 0.55233 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.75167 moveto
0.50625 0.75167 lineto
stroke
grestore
[(1.5)] 0.4875 0.75167 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.19352 moveto
0.50375 0.19352 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.23339 moveto
0.50375 0.23339 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.27326 moveto
0.50375 0.27326 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31313 moveto
0.50375 0.31313 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.39286 moveto
0.50375 0.39286 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.43273 moveto
0.50375 0.43273 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.4726 moveto
0.50375 0.4726 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.51247 moveto
0.50375 0.51247 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.5922 moveto
0.50375 0.5922 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.63207 moveto
0.50375 0.63207 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.67194 moveto
0.50375 0.67194 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.7118 moveto
0.50375 0.7118 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.11379 moveto
0.50375 0.11379 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.07392 moveto
0.50375 0.07392 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.03405 moveto
0.50375 0.03405 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.79154 moveto
0.50375 0.79154 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.83141 moveto
0.50375 0.83141 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.87127 moveto
0.50375 0.87127 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.87211 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.87211 lineto
0 0.87211 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.89868 0.15366 moveto
0.91734 0.18101 lineto
0.93396 0.21079 lineto
0.94823 0.24281 lineto
0.95984 0.27687 lineto
0.96853 0.3127 lineto
0.9717 0.33119 lineto
0.97298 0.34056 lineto
0.97404 0.35001 lineto
0.9749 0.35953 lineto
0.97525 0.36432 lineto
0.97554 0.36912 lineto
0.97578 0.37394 lineto
0.97597 0.37877 lineto
0.9761 0.38362 lineto
0.97617 0.38848 lineto
0.97619 0.39335 lineto
0.97615 0.39823 lineto
0.97606 0.40313 lineto
0.97591 0.40804 lineto
0.9757 0.41295 lineto
0.97544 0.41787 lineto
0.97474 0.42775 lineto
0.97381 0.43765 lineto
0.97264 0.44756 lineto
0.96961 0.46744 lineto
0.96563 0.48732 lineto
0.9607 0.50716 lineto
0.94797 0.54651 lineto
0.93141 0.58507 lineto
0.91109 0.62242 lineto
0.88711 0.65815 lineto
0.82881 0.72318 lineto
0.79494 0.75173 lineto
0.75828 0.7772 lineto
0.71916 0.79929 lineto
0.67794 0.81773 lineto
0.63499 0.8323 lineto
0.613 0.83808 lineto
0.59073 0.84284 lineto
0.56824 0.84655 lineto
0.55693 0.84801 lineto
0.54559 0.84921 lineto
0.53422 0.85014 lineto
0.52852 0.85051 lineto
0.52282 0.85081 lineto
0.51712 0.85104 lineto
0.51141 0.85121 lineto
0.50571 0.85131 lineto
0.5 0.85134 lineto
Mistroke
0.49429 0.85131 lineto
0.48859 0.85121 lineto
0.48288 0.85104 lineto
0.47718 0.85081 lineto
0.46578 0.85014 lineto
0.45441 0.84921 lineto
0.44307 0.84801 lineto
0.43176 0.84655 lineto
0.40927 0.84284 lineto
0.387 0.83808 lineto
0.36501 0.8323 lineto
0.32206 0.81773 lineto
0.28084 0.79929 lineto
0.24172 0.7772 lineto
0.17119 0.72318 lineto
0.14038 0.69186 lineto
0.11289 0.65815 lineto
0.08891 0.62242 lineto
0.06859 0.58507 lineto
0.05203 0.54651 lineto
0.04519 0.52691 lineto
0.0393 0.50716 lineto
0.03437 0.48732 lineto
0.03039 0.46744 lineto
0.02736 0.44756 lineto
0.02619 0.43765 lineto
0.02526 0.42775 lineto
0.02488 0.42281 lineto
0.02456 0.41787 lineto
0.0243 0.41295 lineto
0.02409 0.40804 lineto
0.02394 0.40313 lineto
0.02385 0.39823 lineto
0.02381 0.39335 lineto
0.02383 0.38848 lineto
0.0239 0.38362 lineto
0.02403 0.37877 lineto
0.02446 0.36912 lineto
0.02475 0.36432 lineto
0.0251 0.35953 lineto
0.02596 0.35001 lineto
0.0283 0.33119 lineto
0.03147 0.3127 lineto
0.04016 0.27687 lineto
0.05177 0.24281 lineto
0.06604 0.21079 lineto
0.08266 0.18101 lineto
0.10132 0.15366 lineto
0.12169 0.12886 lineto
0.14343 0.10671 lineto
Mistroke
0.1662 0.08726 lineto
0.18966 0.0705 lineto
0.23739 0.04488 lineto
0.26105 0.03582 lineto
0.28421 0.02907 lineto
0.29553 0.02651 lineto
0.30664 0.02445 lineto
0.31751 0.02288 lineto
0.32285 0.02227 lineto
0.32812 0.02177 lineto
0.33332 0.02137 lineto
0.33845 0.02108 lineto
0.34099 0.02097 lineto
0.3435 0.02088 lineto
0.346 0.02082 lineto
0.34848 0.02078 lineto
0.35094 0.02076 lineto
0.35338 0.02077 lineto
0.3558 0.0208 lineto
0.3582 0.02085 lineto
0.36294 0.02101 lineto
0.36528 0.02112 lineto
0.3676 0.02125 lineto
0.37665 0.02196 lineto
0.38105 0.02241 lineto
0.38536 0.02293 lineto
0.39371 0.02415 lineto
0.40171 0.02556 lineto
0.43014 0.03265 lineto
0.45315 0.04055 lineto
0.47157 0.04754 lineto
0.47943 0.05027 lineto
0.48311 0.05138 lineto
0.48666 0.0523 lineto
0.49009 0.05303 lineto
0.49177 0.05332 lineto
0.49344 0.05356 lineto
0.49509 0.05375 lineto
0.49591 0.05382 lineto
0.49673 0.05388 lineto
0.49755 0.05393 lineto
0.49837 0.05396 lineto
0.49918 0.05398 lineto
0.5 0.05399 lineto
0.50082 0.05398 lineto
0.50163 0.05396 lineto
0.50245 0.05393 lineto
0.50327 0.05388 lineto
0.50491 0.05375 lineto
0.50656 0.05356 lineto
Mistroke
0.50991 0.05303 lineto
0.51334 0.0523 lineto
0.52057 0.05027 lineto
0.52843 0.04754 lineto
0.54685 0.04055 lineto
0.56986 0.03265 lineto
0.58337 0.02889 lineto
0.59829 0.02556 lineto
0.60629 0.02415 lineto
0.61464 0.02293 lineto
0.62335 0.02196 lineto
0.62783 0.02157 lineto
0.6324 0.02125 lineto
0.63706 0.02101 lineto
0.63942 0.02092 lineto
0.6418 0.02085 lineto
0.6442 0.0208 lineto
0.64662 0.02077 lineto
0.64906 0.02076 lineto
0.65152 0.02078 lineto
0.654 0.02082 lineto
0.6565 0.02088 lineto
0.65901 0.02097 lineto
0.66155 0.02108 lineto
0.66668 0.02137 lineto
0.67188 0.02177 lineto
0.68249 0.02288 lineto
0.69336 0.02445 lineto
0.70447 0.02651 lineto
0.71579 0.02907 lineto
0.73895 0.03582 lineto
0.76261 0.04488 lineto
0.78651 0.0564 lineto
0.81034 0.0705 lineto
0.85657 0.10671 lineto
0.87831 0.12886 lineto
0.89868 0.15366 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1.182877 0 0 1.182877 -81.255623 -108.793495 sc4mt astore 1.182877 0 0 1.182877 -81.255623 -108.793495 sc5mt astore 181.5 287.5 249 217 1.182877 0 0 1.182877 77.040344 121.581062 sc6mt astore rstroke
end
grestore
grestore
%%EndDocument
 @endspecial 544 1603 a Fi(Fig)p Fq(.)g(62.)j Fh(p)12 b Fq(=)h(1)p
Fh(=)p Fq(4)i(\(left\))g(and)g Fh(p)d Fq(=)h(3)p Fh(=)p Fq(4)i(\(righ)o(t\).)
423 2402 y @beginspecial 0 @llx 0 @lly 561 @urx 253 @ury 2650
@rwi @setspecial
%%BeginDocument: Pol.limacon2.eps


/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /TDeps_dict 20 dict def TDeps_dict begin /showpage {
    
} def /copypage {
    
} def /grestoreall {
    
} def /erasepage {
    
} def /nulldevice {
    
} def /exitserver {
    
} def /initgraphics {
    
} def /renderbands {
    
} def /initmatrix {
    
} def /banddevice {
    
} def /setpageparams {
    
} def /framedevice {
    
} def /note {
    
} def end end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
gsave
0 0 560.75177 252.772522 rectclip
-20 -466.540833 translate
20 466.540833 560.75177 252.772522 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
gsave clpmt currentmatrix pop newpath
1 0 0 1.010121 -144 193.741882 sc5mt astore pop false {
    sc5mt dodrawctm 164 272.5 284 247 0 rfpath unpagectm
} {
    284 247 164 272.5 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -144 199] dodrawctm
164 272.5 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	247.983704 def
/Mwidth		284.744781 def
/Mheight	247.983704 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.328931 0.082404 0.328931 [
[(-1.5)] 0.0066 0.0824 0 2 Msboxa
[(-1)] 0.17107 0.0824 0 2 Msboxa
[(-0.5)] 0.33553 0.0824 0 2 Msboxa
[(0.5)] 0.66447 0.0824 0 2 Msboxa
[(1)] 0.82893 0.0824 0 2 Msboxa
[(1.5)] 0.9934 0.0824 0 2 Msboxa
[(0.5)] 0.4875 0.24687 1 0 Msboxa
[(1)] 0.4875 0.41134 1 0 Msboxa
[(1.5)] 0.4875 0.5758 1 0 Msboxa
[(2)] 0.4875 0.74027 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.87164 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.0066 0.0824 moveto
0.0066 0.08865 lineto
stroke
grestore
[(-1.5)] 0.0066 0.0824 0 2 Mshowa
gsave
0.002 setlinewidth
0.17107 0.0824 moveto
0.17107 0.08865 lineto
stroke
grestore
[(-1)] 0.17107 0.0824 0 2 Mshowa
gsave
0.002 setlinewidth
0.33553 0.0824 moveto
0.33553 0.08865 lineto
stroke
grestore
[(-0.5)] 0.33553 0.0824 0 2 Mshowa
gsave
0.002 setlinewidth
0.66447 0.0824 moveto
0.66447 0.08865 lineto
stroke
grestore
[(0.5)] 0.66447 0.0824 0 2 Mshowa
gsave
0.002 setlinewidth
0.82893 0.0824 moveto
0.82893 0.08865 lineto
stroke
grestore
[(1)] 0.82893 0.0824 0 2 Mshowa
gsave
0.002 setlinewidth
0.9934 0.0824 moveto
0.9934 0.08865 lineto
stroke
grestore
[(1.5)] 0.9934 0.0824 0 2 Mshowa
gsave
0.001 setlinewidth
0.0395 0.0824 moveto
0.0395 0.08615 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.07239 0.0824 moveto
0.07239 0.08615 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.10528 0.0824 moveto
0.10528 0.08615 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.13818 0.0824 moveto
0.13818 0.08615 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.20396 0.0824 moveto
0.20396 0.08615 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.23686 0.0824 moveto
0.23686 0.08615 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.26975 0.0824 moveto
0.26975 0.08615 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30264 0.0824 moveto
0.30264 0.08615 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36843 0.0824 moveto
0.36843 0.08615 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40132 0.0824 moveto
0.40132 0.08615 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.43421 0.0824 moveto
0.43421 0.08615 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46711 0.0824 moveto
0.46711 0.08615 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53289 0.0824 moveto
0.53289 0.08615 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56579 0.0824 moveto
0.56579 0.08615 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59868 0.0824 moveto
0.59868 0.08615 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63157 0.0824 moveto
0.63157 0.08615 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69736 0.0824 moveto
0.69736 0.08615 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.73025 0.0824 moveto
0.73025 0.08615 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.76314 0.0824 moveto
0.76314 0.08615 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.79604 0.0824 moveto
0.79604 0.08615 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.86182 0.0824 moveto
0.86182 0.08615 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.89472 0.0824 moveto
0.89472 0.08615 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92761 0.0824 moveto
0.92761 0.08615 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9605 0.0824 moveto
0.9605 0.08615 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.0824 moveto
1 0.0824 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.24687 moveto
0.50625 0.24687 lineto
stroke
grestore
[(0.5)] 0.4875 0.24687 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.41134 moveto
0.50625 0.41134 lineto
stroke
grestore
[(1)] 0.4875 0.41134 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.5758 moveto
0.50625 0.5758 lineto
stroke
grestore
[(1.5)] 0.4875 0.5758 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.74027 moveto
0.50625 0.74027 lineto
stroke
grestore
[(2)] 0.4875 0.74027 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.1153 moveto
0.50375 0.1153 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.14819 moveto
0.50375 0.14819 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18108 moveto
0.50375 0.18108 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.21398 moveto
0.50375 0.21398 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.27976 moveto
0.50375 0.27976 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31266 moveto
0.50375 0.31266 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.34555 moveto
0.50375 0.34555 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.37844 moveto
0.50375 0.37844 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.44423 moveto
0.50375 0.44423 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.47712 moveto
0.50375 0.47712 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.51001 moveto
0.50375 0.51001 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54291 moveto
0.50375 0.54291 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.60869 moveto
0.50375 0.60869 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.64159 moveto
0.50375 0.64159 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.67448 moveto
0.50375 0.67448 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.70737 moveto
0.50375 0.70737 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.04951 moveto
0.50375 0.04951 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.01662 moveto
0.50375 0.01662 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.77316 moveto
0.50375 0.77316 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.80605 moveto
0.50375 0.80605 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.83895 moveto
0.50375 0.83895 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.87064 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.87064 lineto
0 0.87064 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.82893 0.0824 moveto
0.85685 0.10579 lineto
0.88287 0.13281 lineto
0.90653 0.16327 lineto
0.92737 0.19692 lineto
0.94497 0.23345 lineto
0.95243 0.25269 lineto
0.95895 0.27251 lineto
0.96448 0.29286 lineto
0.96898 0.31368 lineto
0.97084 0.32425 lineto
0.97242 0.33492 lineto
0.97373 0.34568 lineto
0.97477 0.35651 lineto
0.97553 0.36742 lineto
0.9758 0.37291 lineto
0.976 0.3784 lineto
0.97613 0.38391 lineto
0.97619 0.38943 lineto
0.97618 0.39497 lineto
0.97609 0.40052 lineto
0.97593 0.40608 lineto
0.9757 0.41164 lineto
0.9754 0.41722 lineto
0.97502 0.4228 lineto
0.97404 0.43398 lineto
0.97277 0.44518 lineto
0.96934 0.46758 lineto
0.96471 0.48995 lineto
0.95188 0.53428 lineto
0.93429 0.57762 lineto
0.91206 0.61941 lineto
0.85437 0.6962 lineto
0.81945 0.73019 lineto
0.78094 0.76064 lineto
0.73923 0.78714 lineto
0.69478 0.80932 lineto
0.64809 0.8269 lineto
0.62407 0.83388 lineto
0.59969 0.83962 lineto
0.57502 0.84411 lineto
0.5626 0.84588 lineto
0.55014 0.84733 lineto
0.53763 0.84846 lineto
0.53137 0.8489 lineto
0.5251 0.84926 lineto
0.51883 0.84955 lineto
0.51256 0.84975 lineto
0.50628 0.84987 lineto
0.5 0.84991 lineto
Mistroke
0.49372 0.84987 lineto
0.48744 0.84975 lineto
0.48117 0.84955 lineto
0.4749 0.84926 lineto
0.46237 0.84846 lineto
0.44986 0.84733 lineto
0.4374 0.84588 lineto
0.42498 0.84411 lineto
0.40031 0.83962 lineto
0.37593 0.83388 lineto
0.35191 0.8269 lineto
0.30522 0.80932 lineto
0.26077 0.78714 lineto
0.21906 0.76064 lineto
0.14563 0.6962 lineto
0.11466 0.65911 lineto
0.08794 0.61941 lineto
0.06571 0.57762 lineto
0.04812 0.53428 lineto
0.04111 0.5122 lineto
0.03529 0.48995 lineto
0.03066 0.46758 lineto
0.02879 0.45638 lineto
0.02723 0.44518 lineto
0.02596 0.43398 lineto
0.02543 0.42839 lineto
0.02498 0.4228 lineto
0.0246 0.41722 lineto
0.0243 0.41164 lineto
0.02407 0.40608 lineto
0.02391 0.40052 lineto
0.02382 0.39497 lineto
0.02381 0.38943 lineto
0.02387 0.38391 lineto
0.024 0.3784 lineto
0.0242 0.37291 lineto
0.02447 0.36742 lineto
0.02523 0.35651 lineto
0.02627 0.34568 lineto
0.02758 0.33492 lineto
0.03102 0.31368 lineto
0.03552 0.29286 lineto
0.04105 0.27251 lineto
0.05503 0.23345 lineto
0.07263 0.19692 lineto
0.09347 0.16327 lineto
0.11713 0.13281 lineto
0.14315 0.10579 lineto
0.17107 0.0824 lineto
0.2004 0.06277 lineto
Mistroke
0.23064 0.04694 lineto
0.24595 0.04046 lineto
0.26131 0.03493 lineto
0.27665 0.03033 lineto
0.29192 0.02665 lineto
0.29951 0.02515 lineto
0.30706 0.02388 lineto
0.31457 0.02282 lineto
0.32202 0.02199 lineto
0.32572 0.02165 lineto
0.32941 0.02137 lineto
0.33308 0.02114 lineto
0.33674 0.02096 lineto
0.34037 0.02083 lineto
0.34399 0.02075 lineto
0.34759 0.02073 lineto
0.35117 0.02076 lineto
0.35472 0.02083 lineto
0.35826 0.02096 lineto
0.36177 0.02113 lineto
0.36526 0.02135 lineto
0.37216 0.02194 lineto
0.37896 0.02272 lineto
0.39224 0.0248 lineto
0.40505 0.02758 lineto
0.41734 0.03101 lineto
0.4291 0.03503 lineto
0.45086 0.0447 lineto
0.47011 0.05619 lineto
0.4867 0.0691 lineto
0.50053 0.08301 lineto
0.51157 0.09749 lineto
0.51605 0.10481 lineto
0.51985 0.11211 lineto
0.52297 0.11935 lineto
0.52544 0.12647 lineto
0.52644 0.12997 lineto
0.52727 0.13343 lineto
0.52796 0.13683 lineto
0.52849 0.14018 lineto
0.5287 0.14182 lineto
0.52888 0.14346 lineto
0.52901 0.14507 lineto
0.52912 0.14667 lineto
0.52918 0.14824 lineto
0.52922 0.1498 lineto
0.52922 0.15134 lineto
0.52918 0.15286 lineto
0.52912 0.15435 lineto
0.52902 0.15583 lineto
Mistroke
0.52888 0.15728 lineto
0.52872 0.15871 lineto
0.5283 0.1615 lineto
0.52776 0.16419 lineto
0.52635 0.16925 lineto
0.52548 0.17162 lineto
0.52451 0.17388 lineto
0.5223 0.17803 lineto
0.51975 0.18168 lineto
0.51691 0.1848 lineto
0.51382 0.18739 lineto
0.5122 0.18847 lineto
0.51054 0.18942 lineto
0.50884 0.19022 lineto
0.50711 0.19088 lineto
0.50535 0.19139 lineto
0.50447 0.19159 lineto
0.50358 0.19175 lineto
0.50269 0.19188 lineto
0.50179 0.19197 lineto
0.5009 0.19203 lineto
0.5 0.19205 lineto
0.4991 0.19203 lineto
0.49821 0.19197 lineto
0.49731 0.19188 lineto
0.49642 0.19175 lineto
0.49465 0.19139 lineto
0.49289 0.19088 lineto
0.49116 0.19022 lineto
0.48946 0.18942 lineto
0.48618 0.18739 lineto
0.48309 0.1848 lineto
0.48025 0.18168 lineto
0.4777 0.17803 lineto
0.47549 0.17388 lineto
0.47452 0.17162 lineto
0.47365 0.16925 lineto
0.47289 0.16678 lineto
0.47224 0.16419 lineto
0.4717 0.1615 lineto
0.47128 0.15871 lineto
0.47112 0.15728 lineto
0.47098 0.15583 lineto
0.47088 0.15435 lineto
0.47082 0.15286 lineto
0.47078 0.15134 lineto
0.47078 0.1498 lineto
0.47082 0.14824 lineto
0.47088 0.14667 lineto
0.47099 0.14507 lineto
Mistroke
0.47112 0.14346 lineto
0.47151 0.14018 lineto
0.47204 0.13683 lineto
0.47273 0.13343 lineto
0.47456 0.12647 lineto
0.47703 0.11935 lineto
0.48015 0.11211 lineto
0.48843 0.09749 lineto
0.49947 0.08301 lineto
0.5133 0.0691 lineto
0.52989 0.05619 lineto
0.54914 0.0447 lineto
0.55972 0.03961 lineto
0.5709 0.03503 lineto
0.58266 0.03101 lineto
0.59495 0.02758 lineto
0.60776 0.0248 lineto
0.62104 0.02272 lineto
0.62784 0.02194 lineto
0.63128 0.02162 lineto
0.63474 0.02135 lineto
0.63823 0.02113 lineto
0.64174 0.02096 lineto
0.64528 0.02083 lineto
0.64883 0.02076 lineto
0.65241 0.02073 lineto
0.65601 0.02075 lineto
0.65963 0.02083 lineto
0.66326 0.02096 lineto
0.67059 0.02137 lineto
0.67428 0.02165 lineto
0.67798 0.02199 lineto
0.69294 0.02388 lineto
0.70049 0.02515 lineto
0.70808 0.02665 lineto
0.73869 0.03493 lineto
0.75405 0.04046 lineto
0.76936 0.04694 lineto
0.82893 0.0824 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 164 272.5 284 247 1 0 0 1.010121 -144 193.741882 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
0.9604 0 0 0.968662 151.117691 209.335999 sc5mt astore pop false {
    sc5mt dodrawctm 165 266 282 260 0 rfpath unpagectm
} {
    282 260 165 266 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[0.9604 0 0 0.9604 151.117691 213.681595] dodrawctm
165 266 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	260.954102 def
/Mwidth		282.000000 def
/Mheight	260.954102 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.174058 0.032903 0.174058 [
[(-2)] 0.15188 0.0329 0 2 Msboxa
[(-1)] 0.32594 0.0329 0 2 Msboxa
[(1)] 0.67406 0.0329 0 2 Msboxa
[(2)] 0.84812 0.0329 0 2 Msboxa
[(1)] 0.4875 0.20696 1 0 Msboxa
[(2)] 0.4875 0.38102 1 0 Msboxa
[(3)] 0.4875 0.55508 1 0 Msboxa
[(4)] 0.4875 0.72914 1 0 Msboxa
[(5)] 0.4875 0.90319 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.92622 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.15188 0.0329 moveto
0.15188 0.03915 lineto
stroke
grestore
[(-2)] 0.15188 0.0329 0 2 Mshowa
gsave
0.002 setlinewidth
0.32594 0.0329 moveto
0.32594 0.03915 lineto
stroke
grestore
[(-1)] 0.32594 0.0329 0 2 Mshowa
gsave
0.002 setlinewidth
0.67406 0.0329 moveto
0.67406 0.03915 lineto
stroke
grestore
[(1)] 0.67406 0.0329 0 2 Mshowa
gsave
0.002 setlinewidth
0.84812 0.0329 moveto
0.84812 0.03915 lineto
stroke
grestore
[(2)] 0.84812 0.0329 0 2 Mshowa
gsave
0.001 setlinewidth
0.1867 0.0329 moveto
0.1867 0.03665 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22151 0.0329 moveto
0.22151 0.03665 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.25632 0.0329 moveto
0.25632 0.03665 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29113 0.0329 moveto
0.29113 0.03665 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36075 0.0329 moveto
0.36075 0.03665 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.39557 0.0329 moveto
0.39557 0.03665 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.43038 0.0329 moveto
0.43038 0.03665 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46519 0.0329 moveto
0.46519 0.03665 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53481 0.0329 moveto
0.53481 0.03665 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56962 0.0329 moveto
0.56962 0.03665 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.60443 0.0329 moveto
0.60443 0.03665 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63925 0.0329 moveto
0.63925 0.03665 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.70887 0.0329 moveto
0.70887 0.03665 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.74368 0.0329 moveto
0.74368 0.03665 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77849 0.0329 moveto
0.77849 0.03665 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.8133 0.0329 moveto
0.8133 0.03665 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11707 0.0329 moveto
0.11707 0.03665 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.08226 0.0329 moveto
0.08226 0.03665 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.04745 0.0329 moveto
0.04745 0.03665 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.01264 0.0329 moveto
0.01264 0.03665 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88293 0.0329 moveto
0.88293 0.03665 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.91774 0.0329 moveto
0.91774 0.03665 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.95255 0.0329 moveto
0.95255 0.03665 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.98736 0.0329 moveto
0.98736 0.03665 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.0329 moveto
1 0.0329 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.20696 moveto
0.50625 0.20696 lineto
stroke
grestore
[(1)] 0.4875 0.20696 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.38102 moveto
0.50625 0.38102 lineto
stroke
grestore
[(2)] 0.4875 0.38102 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.55508 moveto
0.50625 0.55508 lineto
stroke
grestore
[(3)] 0.4875 0.55508 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.72914 moveto
0.50625 0.72914 lineto
stroke
grestore
[(4)] 0.4875 0.72914 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.90319 moveto
0.50625 0.90319 lineto
stroke
grestore
[(5)] 0.4875 0.90319 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.06771 moveto
0.50375 0.06771 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.10253 moveto
0.50375 0.10253 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13734 moveto
0.50375 0.13734 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.17215 moveto
0.50375 0.17215 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.24177 moveto
0.50375 0.24177 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.27658 moveto
0.50375 0.27658 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.3114 moveto
0.50375 0.3114 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.34621 moveto
0.50375 0.34621 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.41583 moveto
0.50375 0.41583 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45064 moveto
0.50375 0.45064 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.48545 moveto
0.50375 0.48545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.52027 moveto
0.50375 0.52027 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.58989 moveto
0.50375 0.58989 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.6247 moveto
0.50375 0.6247 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.65951 moveto
0.50375 0.65951 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.69432 moveto
0.50375 0.69432 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.76395 moveto
0.50375 0.76395 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.79876 moveto
0.50375 0.79876 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.83357 moveto
0.50375 0.83357 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.86838 moveto
0.50375 0.86838 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.92522 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.92522 lineto
0 0.92522 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.67406 0.0329 moveto
0.69673 0.03934 lineto
0.71912 0.04727 lineto
0.76267 0.06748 lineto
0.80393 0.09336 lineto
0.84219 0.12459 lineto
0.87674 0.16079 lineto
0.90696 0.20147 lineto
0.93229 0.24608 lineto
0.95222 0.29399 lineto
0.96003 0.31897 lineto
0.96634 0.3445 lineto
0.96893 0.35745 lineto
0.97112 0.37051 lineto
0.97293 0.38365 lineto
0.97434 0.39688 lineto
0.9749 0.40352 lineto
0.97536 0.41018 lineto
0.97572 0.41684 lineto
0.97598 0.42353 lineto
0.97613 0.43022 lineto
0.97619 0.43692 lineto
0.97615 0.44363 lineto
0.976 0.45035 lineto
0.97576 0.45707 lineto
0.97541 0.46379 lineto
0.97496 0.47051 lineto
0.97441 0.47724 lineto
0.973 0.49068 lineto
0.97119 0.5041 lineto
0.96636 0.53083 lineto
0.9599 0.55732 lineto
0.94221 0.60921 lineto
0.91832 0.65896 lineto
0.88851 0.70582 lineto
0.85316 0.74905 lineto
0.81276 0.78798 lineto
0.76787 0.82202 lineto
0.71911 0.85062 lineto
0.66718 0.87335 lineto
0.64025 0.88239 lineto
0.61282 0.88984 lineto
0.58497 0.89567 lineto
0.57093 0.89796 lineto
0.55682 0.89984 lineto
0.54266 0.90131 lineto
0.53557 0.90188 lineto
0.52846 0.90235 lineto
0.52135 0.90272 lineto
0.51424 0.90298 lineto
Mistroke
0.50712 0.90314 lineto
0.5 0.90319 lineto
0.49288 0.90314 lineto
0.48576 0.90298 lineto
0.47865 0.90272 lineto
0.47154 0.90235 lineto
0.45734 0.90131 lineto
0.44318 0.89984 lineto
0.42907 0.89796 lineto
0.41503 0.89567 lineto
0.38718 0.88984 lineto
0.35975 0.88239 lineto
0.33282 0.87335 lineto
0.28089 0.85062 lineto
0.23213 0.82202 lineto
0.18724 0.78798 lineto
0.14684 0.74905 lineto
0.11149 0.70582 lineto
0.08168 0.65896 lineto
0.05779 0.60921 lineto
0.04815 0.58348 lineto
0.0401 0.55732 lineto
0.03364 0.53083 lineto
0.03102 0.51748 lineto
0.02881 0.5041 lineto
0.027 0.49068 lineto
0.02559 0.47724 lineto
0.02504 0.47051 lineto
0.02459 0.46379 lineto
0.02424 0.45707 lineto
0.024 0.45035 lineto
0.02385 0.44363 lineto
0.02381 0.43692 lineto
0.02387 0.43022 lineto
0.02402 0.42353 lineto
0.02428 0.41684 lineto
0.02464 0.41018 lineto
0.02566 0.39688 lineto
0.02707 0.38365 lineto
0.02888 0.37051 lineto
0.03366 0.3445 lineto
0.03997 0.31897 lineto
0.04778 0.29399 lineto
0.06771 0.24608 lineto
0.09304 0.20147 lineto
0.12326 0.16079 lineto
0.15781 0.12459 lineto
0.19607 0.09336 lineto
0.23733 0.06748 lineto
0.25887 0.05665 lineto
Mistroke
0.28088 0.04727 lineto
0.30327 0.03934 lineto
0.32594 0.0329 lineto
0.33736 0.03024 lineto
0.3488 0.02795 lineto
0.36027 0.02604 lineto
0.37175 0.0245 lineto
0.37749 0.02387 lineto
0.38323 0.02333 lineto
0.38896 0.02288 lineto
0.39469 0.02253 lineto
0.40042 0.02227 lineto
0.40613 0.0221 lineto
0.41184 0.02203 lineto
0.41753 0.02205 lineto
0.42321 0.02215 lineto
0.42888 0.02235 lineto
0.43453 0.02264 lineto
0.44017 0.02302 lineto
0.45138 0.02406 lineto
0.4625 0.02544 lineto
0.48446 0.02928 lineto
0.50593 0.03449 lineto
0.52684 0.04104 lineto
0.5471 0.04889 lineto
0.58535 0.06825 lineto
0.62007 0.09212 lineto
0.65074 0.11993 lineto
0.67689 0.1511 lineto
0.69816 0.18496 lineto
0.70688 0.20268 lineto
0.71427 0.22082 lineto
0.72033 0.23927 lineto
0.72504 0.25794 lineto
0.72688 0.26733 lineto
0.72839 0.27675 lineto
0.72955 0.28617 lineto
0.73 0.29088 lineto
0.73037 0.29559 lineto
0.73066 0.3003 lineto
0.73086 0.305 lineto
0.73097 0.3097 lineto
0.73101 0.31438 lineto
0.73095 0.31906 lineto
0.73082 0.32373 lineto
0.7306 0.32839 lineto
0.73029 0.33303 lineto
0.72944 0.34227 lineto
0.72826 0.35143 lineto
0.72675 0.36052 lineto
Mistroke
0.72492 0.36951 lineto
0.7203 0.38718 lineto
0.71445 0.40434 lineto
0.6992 0.43683 lineto
0.67955 0.46637 lineto
0.65597 0.49238 lineto
0.62901 0.51437 lineto
0.59926 0.53192 lineto
0.58354 0.53893 lineto
0.56738 0.5447 lineto
0.55085 0.54923 lineto
0.54248 0.55101 lineto
0.53405 0.55247 lineto
0.52558 0.55361 lineto
0.52133 0.55406 lineto
0.51707 0.55443 lineto
0.51281 0.55471 lineto
0.50854 0.55491 lineto
0.50427 0.55504 lineto
0.5 0.55508 lineto
0.49573 0.55504 lineto
0.49146 0.55491 lineto
0.48719 0.55471 lineto
0.48293 0.55443 lineto
0.47442 0.55361 lineto
0.46595 0.55247 lineto
0.45752 0.55101 lineto
0.44915 0.54923 lineto
0.43262 0.5447 lineto
0.41646 0.53893 lineto
0.40074 0.53192 lineto
0.37099 0.51437 lineto
0.34403 0.49238 lineto
0.32045 0.46637 lineto
0.3008 0.43683 lineto
0.2926 0.42092 lineto
0.28555 0.40434 lineto
0.2797 0.38718 lineto
0.27508 0.36951 lineto
0.27325 0.36052 lineto
0.27174 0.35143 lineto
0.27056 0.34227 lineto
0.27009 0.33766 lineto
0.26971 0.33303 lineto
0.2694 0.32839 lineto
0.26918 0.32373 lineto
0.26905 0.31906 lineto
0.26899 0.31438 lineto
0.26903 0.3097 lineto
0.26914 0.305 lineto
Mistroke
0.26934 0.3003 lineto
0.26963 0.29559 lineto
0.27045 0.28617 lineto
0.27161 0.27675 lineto
0.27312 0.26733 lineto
0.27496 0.25794 lineto
0.27967 0.23927 lineto
0.28573 0.22082 lineto
0.30184 0.18496 lineto
0.32311 0.1511 lineto
0.34926 0.11993 lineto
0.37993 0.09212 lineto
0.41465 0.06825 lineto
0.43337 0.05798 lineto
0.4529 0.04889 lineto
0.47316 0.04104 lineto
0.49407 0.03449 lineto
0.51554 0.02928 lineto
0.5375 0.02544 lineto
0.54862 0.02406 lineto
0.55422 0.0235 lineto
0.55983 0.02302 lineto
0.56547 0.02264 lineto
0.57112 0.02235 lineto
0.57679 0.02215 lineto
0.58247 0.02205 lineto
0.58816 0.02203 lineto
0.59387 0.0221 lineto
0.59958 0.02227 lineto
0.60531 0.02253 lineto
0.61677 0.02333 lineto
0.62251 0.02387 lineto
0.62825 0.0245 lineto
0.63973 0.02604 lineto
0.6512 0.02795 lineto
0.67406 0.0329 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
0.9604 0 0 0.9604 17.661686 23.363976 sc4mt astore 0.9604 0 0 0.9604 17.661686 23.363976 sc5mt astore 165 266 282 260 0.9604 0 0 0.968662 151.117691 209.335999 sc6mt astore rstroke
end
grestore
grestore
%%EndDocument
 @endspecial 567 2489 a Fi(Fig)p Fq(.)g(63.)20 b Fh(p)12 b
Fq(=)h(4)p Fh(=)p Fq(3)h(\(left\))h(and)h Fh(p)c Fq(=)h(4)i(\(righ)o(t\).)p
eop
%%Page: 97 97
97 96 bop 75 -103 a Fm(Analytical)21 b(Geometry)p 75 -85 631
2 v 1123 w Fq(97)606 49 y Fn(PURPOSE)d(OF)g(THE)g(PR)o(OJECT)146
153 y Fq(Illustrate)12 b(the)g(p)q(o)o(w)o(er)f(and)h(b)q(eaut)o(y)g(of)g
(analytical)h(geometry)e(whic)o(h)h(is)h(only)f(enhanced)h(b)o(y)f(ha)o(ving)
75 210 y Fl(Mathematic)n(a)j Fq(to)10 b(do)h(the)g(hard)g(algebra.)18
b(In)o(tro)q(duces)12 b(the)f Fl(Mathematic)n(a)k Fq(commands)c
Fk(ImplicitPlot)75 266 y Fq(and)k Fk(Collect)p Fq(.)75 344
y Fn(Instructor)22 b(Note)p Fq(:)48 b(The)19 b(Lab)h(is)g(enhanced)h(if)f
(studen)o(ts)f(ha)o(v)o(e)g(already)h(seen)g(examples)g(of)f(the)75
400 y(ellipse)f(and)d(h)o(yp)q(erb)q(ola)h(equations)g(in)g(standard)f(form.)
75 478 y Fn(Instructor)23 b(Note)p Fq(:)51 b(The)21 b(Instructor's)f(noteb)q
(o)q(ok)g(con)o(tains)h(a)f(mo)q(dule)i(for)e(pro)q(ducing)h(an)g(an-)75
535 y(imation)g(suitable)h(for)e(classro)q(om)g(demonstrations)g(of)h(the)f
(circles)i(discussed)h(in)e(Exercises)g(1,)h(2,)75 591 y(and)15
b(6.)577 721 y Fn(ANSWERS)i(F)o(OR)h(INSTR)o(UCTORS)75 818
y(Exercise)f(1.)75 929 y Fj(Clear[k,c,x,y])75 979 y(d1)k(=)h(Sqrt[\(x)e(+)i
(c\)^2)f(+)g(y^2];)75 1029 y(d2)g(=)h(Sqrt[\(x)e(-)i(c\)^2)f(+)g(y^2];)75
1078 y(locus)g(=)g(d1^2)g(-)h(k^2)f(d2^2)g(//Expand)184 1128
y(2)87 b(2)43 b(2)349 b(2)130 b(2)87 b(2)44 b(2)87 b(2)g(2)43
b(2)162 1178 y(c)h(-)21 b(c)44 b(k)f(+)21 b(2)h(c)g(x)f(+)h(2)f(c)h(k)43
b(x)22 b(+)g(x)43 b(-)22 b(k)43 b(x)g(+)22 b(y)43 b(-)22 b(k)43
b(y)75 1228 y(Collect[locus,)19 b({x,)i(y,)g(c}])184 1278 y(2)152
b(2)305 b(2)262 b(2)65 b(2)196 b(2)65 b(2)162 1327 y(c)44 b(\(1)21
b(-)h(k)f(\))h(+)f(c)h(\(2)f(+)h(2)f(k)h(\))g(x)f(+)h(\(1)f(-)h(k)f(\))h(x)43
b(+)22 b(\(1)f(-)h(k)f(\))h(y)75 1445 y Fq(Th)o(us,)15 b(on)g(equating)h(the)
f(result)g(to)g(zero)g(and)g(dividing)j(out)d(the)g(1)10 b
Fg(\000)g Fh(k)1334 1428 y Fe(2)1354 1445 y Fq(,)15 b(w)o(e)g(obtain)671
1574 y Fh(x)697 1555 y Fe(2)727 1574 y Fq(+)10 b Fh(y)796 1555
y Fe(2)826 1574 y Fq(+)g(2)907 1543 y(1)g(+)g Fh(k)1010 1527
y Fe(2)p 907 1563 124 2 v 907 1605 a Fq(1)g Fg(\000)g Fh(k)1010
1592 y Fe(2)1042 1574 y Fh(cx)g Fq(+)h Fh(c)1164 1555 y Fe(2)1196
1574 y Fq(=)i(0)p Fh(:)75 1716 y Fn(Exercise)i(2.)20 b Fq(F)l(or)13
b(0)f Fh(<)h(k)h(<)f Fq(1,)g(the)h(lo)q(cus)g(is)g(a)f(circle)j(with)e(the)f
(p)q(oin)o(t)h Fh(P)1351 1723 y Fe(1)1371 1716 y Fq(\()p Fg(\000)p
Fh(p;)8 b Fq(0\))k(in)j(its)e(in)o(terior)h(\()p Fl(not)75
1773 y Fq(cen)o(tered)j(on)g Fh(P)351 1780 y Fe(1)370 1773
y Fq(\).)24 b(F)l(or)16 b(1)f Fh(<)g(k)h(<)f Fq(+)p Fg(1)p
Fq(,)i(it's)g(a)f(circle)i(surrounding)f Fh(P)1316 1780 y Fe(2)1336
1773 y Fq(\()p Fh(p;)8 b Fq(0\).)22 b(As)17 b Fh(k)f Fg(!)f
Fq(0,)h(the)h(lo)q(cus)75 1829 y(collapses)e(on)g(the)f(p)q(oin)o(t)h(\()p
Fg(\000)p Fh(p;)8 b Fq(0\).)18 b(As)c Fh(k)g Fg(!)f Fq(1,)h(w)o(e)g(get)f
(the)i Fh(y)r Fq(-axis)f(\(as)g(in)h(the)f(Illustrativ)o(e)i(Exercise\).)75
1886 y(And)k(as)f Fh(k)h Fg(!)g Fq(+)p Fg(1)p Fq(,)h(the)e(lo)q(cus)i
(collapses)f(on)f Fh(P)951 1893 y Fe(2)971 1886 y Fq(.)32 b(All)21
b(this)f(is)g(ob)o(vious)f(from)g(the)g(lo)q(cus)h(and)g(the)75
1942 y(\\After)13 b(The)g(Lab")h(exercise)g(asks)f(the)h(studen)o(ts)f(to)g
(carry)g(out)g(the)g(analysis)h(v)o(erifying)h(the)e(graphical)75
1998 y(evidence)k(pro)o(vided)f(b)o(y)f Fk(ImplicitPlot)f Fq(\(see)h(the)g
(animation)h(in)g(the)f(Instructor)g(Noteb)q(o)q(ok\).)75 2070
y Fn(Exercise)i(3.)75 2180 y Fj(Clear[a,c,x,y])75 2230 y(d1)k(=)h(Sqrt[\(x)e
(+)i(c\)^2)f(+)g(y^2];)75 2280 y(d2)g(=)h(Sqrt[\(x)e(-)i(c\)^2)f(+)g(y^2];)75
2330 y(locus)g(=)g(4)h(d1^2)f(d2^2)g(-)g(\(4a^2)g(-)h(d1^2)f(-)g(d2^2\)^2)g
(//Expand)271 2380 y(4)152 b(2)44 b(2)152 b(2)44 b(2)152 b(2)43
b(2)153 b(2)43 b(2)162 2429 y(-16)21 b(a)44 b(+)21 b(16)h(a)43
b(c)g(+)22 b(16)f(a)44 b(x)f(-)22 b(16)f(c)44 b(x)f(+)21 b(16)h(a)43
b(y)75 2529 y(Collect[locus,)19 b({x,)i(y}])271 2579 y(4)152
b(2)44 b(2)174 b(2)152 b(2)66 b(2)152 b(2)43 b(2)162 2629 y(-16)21
b(a)44 b(+)21 b(16)h(a)43 b(c)g(+)22 b(\(16)f(a)44 b(-)21 b(16)h(c)f(\))h(x)
43 b(+)22 b(16)f(a)43 b(y)p eop
%%Page: 98 98
98 97 bop 75 -103 a Fq(98)1123 b Fm(Analytical)21 b(Geometry)p
1244 -85 631 2 v 75 49 a Fq(Th)o(us)15 b(the)g(lo)q(cus)i(equation)e(is)802
100 y Fh(x)828 84 y Fe(2)p 802 120 46 2 v 803 162 a Fh(a)827
149 y Fe(2)863 131 y Fq(+)961 100 y Fh(y)985 84 y Fe(2)p 913
120 139 2 v 913 162 a Fh(a)937 149 y Fe(2)967 162 y Fg(\000)c
Fh(c)1033 149 y Fe(2)1070 131 y Fq(=)i(1)p Fh(:)75 249 y Fn(Exercise)i(4.)k
Fq(The)13 b(\\little)i(bit)e(of)g(though)o(t")f(rev)o(eals)h(that)g(the)g
(min)o(us)h(sign)f(in)h Fh(d)1487 256 y Fe(1)1512 249 y Fg(\000)6
b Fh(d)1577 256 y Fe(2)1610 249 y Fq(=)13 b(2)p Fh(a)p Fq(,)g(will)h(get)75
306 y(\\eaten)g(up")h(in)h(the)e(second)i(squaring.)j(Th)o(us)c(the)g
(equation)g(is)g(formally)g(the)f(same.)20 b(The)15 b(di\013erence)75
362 y(here)e(is)g(that)g(no)o(w)f Fh(a)427 346 y Fe(2)459 362
y Fh(<)h(c)527 346 y Fe(2)547 362 y Fq(,)f(so)h(to)f(a)o(v)o(oid)g(hidden)j
(min)o(us)e(signs,)h(w)o(e)e(should)i(write)f(the)g(lo)q(cus)h(equation)75
419 y(as)802 461 y Fh(x)828 444 y Fe(2)p 802 481 46 2 v 803
523 a Fh(a)827 510 y Fe(2)863 491 y Fg(\000)961 461 y Fh(y)985
444 y Fe(2)p 913 481 139 2 v 913 523 a Fh(c)933 510 y Fe(2)963
523 y Fg(\000)c Fh(a)1032 510 y Fe(2)1070 491 y Fq(=)j(1)p
Fh(:)75 610 y Fn(Exercise)i(5.)k Fq(Here,)14 b(no)f(miraculous)h(cancelling)i
(of)c(fourth)h(degree)h(terms)e(o)q(ccurs|the)h(lo)q(cus)i(is)e(not)75
660 y(a)i(conic.)75 768 y Fj(Clear[c,k,x,y])75 817 y(d1)21
b(=)h(Sqrt[\(x)e(+)i(c\)^2)f(+)g(y^2];)75 867 y(d2)g(=)h(Sqrt[\(x)e(-)i
(c\)^2)f(+)g(y^2];)75 917 y(locus)g(=)g(d1^2)g(d2^2)g(-)h(k^2)f(//Expand)184
967 y(4)87 b(2)130 b(2)44 b(2)87 b(4)130 b(2)44 b(2)130 b(2)44
b(2)87 b(4)162 1017 y(c)44 b(-)21 b(k)44 b(-)21 b(2)h(c)43
b(x)g(+)22 b(x)43 b(+)22 b(2)g(c)43 b(y)g(+)22 b(2)g(x)43 b(y)g(+)22
b(y)75 1131 y Fq(Th)o(us)15 b(the)g(lo)q(cus)i(is)620 1188
y(\()p Fh(x)664 1169 y Fe(2)693 1188 y Fq(+)10 b Fh(y)762 1169
y Fe(2)782 1188 y Fq(\))800 1169 y Fe(2)830 1188 y Fg(\000)g
Fq(2)p Fh(c)918 1169 y Fe(2)937 1188 y Fq(\()p Fh(x)981 1169
y Fe(2)1011 1188 y Fg(\000)g Fh(y)1080 1169 y Fe(2)1100 1188
y Fq(\))g(+)g Fh(c)1193 1169 y Fe(4)1225 1188 y Fq(=)j Fh(k)1298
1169 y Fe(2)1318 1188 y Fh(:)75 1271 y Fq(The)j(k)o(ey)g(graphs)g(are)g(sho)o
(wn)g(in)h(Figures)f(64,)f(65)h(and)g(66.)45 b(Key)17 b(features)f(are)g(the)
g(closed)h(lo)q(op)g(for)726 1828 y @beginspecial 0 @llx 0
@lly 282 @urx 282 @ury 1195 @rwi @setspecial
%%BeginDocument: Anal.product1.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.125 0.5 0.125 [
[(-4)] 0 0.5 0 2 Msboxa
[(-3)] 0.125 0.5 0 2 Msboxa
[(-2)] 0.25 0.5 0 2 Msboxa
[(-1)] 0.375 0.5 0 2 Msboxa
[(1)] 0.625 0.5 0 2 Msboxa
[(2)] 0.75 0.5 0 2 Msboxa
[(3)] 0.875 0.5 0 2 Msboxa
[(4)] 1 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(1)] 0.5 1 0 -2 Msboxa
grestore
[(-4)] 0.4875 0 1 0 Msboxa
[(-3)] 0.4875 0.125 1 0 Msboxa
[(-2)] 0.4875 0.25 1 0 Msboxa
[(-1)] 0.4875 0.375 1 0 Msboxa
[(1)] 0.4875 0.625 1 0 Msboxa
[(2)] 0.4875 0.75 1 0 Msboxa
[(3)] 0.4875 0.875 1 0 Msboxa
[(4)] 0.4875 1 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0 0.5 moveto
0 0.50625 lineto
stroke
grestore
[(-4)] 0 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.125 0.5 moveto
0.125 0.50625 lineto
stroke
grestore
[(-3)] 0.125 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.25 0.5 moveto
0.25 0.50625 lineto
stroke
grestore
[(-2)] 0.25 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.375 0.5 moveto
0.375 0.50625 lineto
stroke
grestore
[(-1)] 0.375 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.625 0.5 moveto
0.625 0.50625 lineto
stroke
grestore
[(1)] 0.625 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.75 0.5 moveto
0.75 0.50625 lineto
stroke
grestore
[(2)] 0.75 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.875 0.5 moveto
0.875 0.50625 lineto
stroke
grestore
[(3)] 0.875 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
1 0.5 moveto
1 0.50625 lineto
stroke
grestore
[(4)] 1 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.025 0.5 moveto
0.025 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.05 0.5 moveto
0.05 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.075 0.5 moveto
0.075 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1 0.5 moveto
0.1 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.15 0.5 moveto
0.15 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.175 0.5 moveto
0.175 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2 0.5 moveto
0.2 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.225 0.5 moveto
0.225 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.275 0.5 moveto
0.275 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.3 0.5 moveto
0.3 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.325 0.5 moveto
0.325 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35 0.5 moveto
0.35 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.4 0.5 moveto
0.4 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.425 0.5 moveto
0.425 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45 0.5 moveto
0.45 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.475 0.5 moveto
0.475 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.525 0.5 moveto
0.525 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.55 0.5 moveto
0.55 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.575 0.5 moveto
0.575 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.6 0.5 moveto
0.6 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.65 0.5 moveto
0.65 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.675 0.5 moveto
0.675 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.7 0.5 moveto
0.7 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.725 0.5 moveto
0.725 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.775 0.5 moveto
0.775 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.8 0.5 moveto
0.8 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.825 0.5 moveto
0.825 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85 0.5 moveto
0.85 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9 0.5 moveto
0.9 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.925 0.5 moveto
0.925 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.95 0.5 moveto
0.95 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.975 0.5 moveto
0.975 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(1)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.50625 0 lineto
stroke
grestore
[(-4)] 0.4875 0 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.125 moveto
0.50625 0.125 lineto
stroke
grestore
[(-3)] 0.4875 0.125 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.25 moveto
0.50625 0.25 lineto
stroke
grestore
[(-2)] 0.4875 0.25 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.375 moveto
0.50625 0.375 lineto
stroke
grestore
[(-1)] 0.4875 0.375 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.625 moveto
0.50625 0.625 lineto
stroke
grestore
[(1)] 0.4875 0.625 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.75 moveto
0.50625 0.75 lineto
stroke
grestore
[(2)] 0.4875 0.75 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.875 moveto
0.50625 0.875 lineto
stroke
grestore
[(3)] 0.4875 0.875 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 1 moveto
0.50625 1 lineto
stroke
grestore
[(4)] 0.4875 1 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.025 moveto
0.50375 0.025 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.05 moveto
0.50375 0.05 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.075 moveto
0.50375 0.075 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1 moveto
0.50375 0.1 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.15 moveto
0.50375 0.15 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.175 moveto
0.50375 0.175 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.2 moveto
0.50375 0.2 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.225 moveto
0.50375 0.225 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.275 moveto
0.50375 0.275 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.3 moveto
0.50375 0.3 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.325 moveto
0.50375 0.325 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.35 moveto
0.50375 0.35 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.4 moveto
0.50375 0.4 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.425 moveto
0.50375 0.425 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45 moveto
0.50375 0.45 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.475 moveto
0.50375 0.475 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.525 moveto
0.50375 0.525 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55 moveto
0.50375 0.55 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.575 moveto
0.50375 0.575 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.6 moveto
0.50375 0.6 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.65 moveto
0.50375 0.65 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.675 moveto
0.50375 0.675 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.7 moveto
0.50375 0.7 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.725 moveto
0.50375 0.725 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.775 moveto
0.50375 0.775 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.8 moveto
0.50375 0.8 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.825 moveto
0.50375 0.825 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.85 moveto
0.50375 0.85 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.9 moveto
0.50375 0.9 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.925 moveto
0.50375 0.925 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.95 moveto
0.50375 0.95 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.975 moveto
0.50375 0.975 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
grestore
gsave
gsave
0.004 setlinewidth
0.32322 0.49997 moveto
0.32398 0.49059 lineto
0.32624 0.48138 lineto
0.32995 0.47259 lineto
0.33507 0.46441 lineto
0.34149 0.45703 lineto
0.34911 0.45063 lineto
0.3578 0.44535 lineto
0.36742 0.44134 lineto
0.37779 0.43872 lineto
0.38874 0.43755 lineto
0.40007 0.43791 lineto
0.41161 0.43979 lineto
0.42315 0.44314 lineto
0.43449 0.44786 lineto
0.44544 0.45375 lineto
0.45581 0.46052 lineto
0.46542 0.46781 lineto
0.47411 0.47516 lineto
0.48173 0.48211 lineto
0.48816 0.48826 lineto
0.49327 0.49329 lineto
0.49699 0.49699 lineto
0.49924 0.49924 lineto
0.5 0.5 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.32322 0.50003 moveto
0.32398 0.50941 lineto
0.32624 0.51862 lineto
0.32995 0.52741 lineto
0.33507 0.53559 lineto
0.34149 0.54297 lineto
0.34911 0.54937 lineto
0.3578 0.55465 lineto
0.36742 0.55866 lineto
0.37779 0.56128 lineto
0.38874 0.56245 lineto
0.40007 0.56209 lineto
0.41161 0.56021 lineto
0.42315 0.55686 lineto
0.43449 0.55214 lineto
0.44544 0.54625 lineto
0.45581 0.53948 lineto
0.46542 0.53219 lineto
0.47411 0.52484 lineto
0.48173 0.51789 lineto
0.48816 0.51174 lineto
0.49327 0.50671 lineto
0.49699 0.50301 lineto
0.49924 0.50076 lineto
0.5 0.5 lineto
stroke
grestore
grestore
gsave
gsave
0.004 setlinewidth
0.5 0.5 moveto
0.50076 0.49924 lineto
0.50301 0.49699 lineto
0.50673 0.49329 lineto
0.51184 0.48826 lineto
0.51827 0.48211 lineto
0.52589 0.47516 lineto
0.53458 0.46781 lineto
0.54419 0.46052 lineto
0.55456 0.45375 lineto
0.56551 0.44786 lineto
0.57685 0.44314 lineto
0.58839 0.43979 lineto
0.59993 0.43791 lineto
0.61126 0.43755 lineto
0.62221 0.43872 lineto
0.63258 0.44134 lineto
0.6422 0.44535 lineto
0.65089 0.45063 lineto
0.65851 0.45703 lineto
0.66493 0.46441 lineto
0.67005 0.47259 lineto
0.67376 0.48138 lineto
0.67602 0.49059 lineto
0.67678 0.49997 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.5 0.5 moveto
0.50076 0.50076 lineto
0.50301 0.50301 lineto
0.50673 0.50671 lineto
0.51184 0.51174 lineto
0.51827 0.51789 lineto
0.52589 0.52484 lineto
0.53458 0.53219 lineto
0.54419 0.53948 lineto
0.55456 0.54625 lineto
0.56551 0.55214 lineto
0.57685 0.55686 lineto
0.58839 0.56021 lineto
0.59993 0.56209 lineto
0.61126 0.56245 lineto
0.62221 0.56128 lineto
0.63258 0.55866 lineto
0.6422 0.55465 lineto
0.65089 0.54937 lineto
0.65851 0.54297 lineto
0.66493 0.53559 lineto
0.67005 0.52741 lineto
0.67376 0.51862 lineto
0.67602 0.50941 lineto
0.67678 0.50003 lineto
stroke
grestore
grestore
gsave
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 228 1915 a Fi(Fig)p Fq(.)e(64.)20 b(The)15 b Fh(d)527
1922 y Fe(1)546 1915 y Fh(d)570 1922 y Fe(2)602 1915 y Fq(=)e
Fh(k)k Fq(lo)q(cus)f(for)e Fh(c)f Fq(=)g(1)i(and)g Fh(k)f Fq(=)f(1,)h(lab)q
(eled)j(b)o(y)f(the)f(v)m(alue)h(of)f Fh(k)q Fq(.)75 2021 y
Fh(c)i Fq(=)h Fh(k)q Fq(;)h(the)f(disapp)q(earance)i(of)e(the)g(\\dimple")h
(as)f Fh(k)h Fq(increases,)g(and)f(the)h(approac)o(h)e(to)h(a)g(circle)h(as)
75 2077 y Fh(k)f Fq(gro)o(ws)e(v)o(ery)g(large;)i(the)f(separation)f(in)o(to)
h(t)o(w)o(o)f(closed)i(curv)o(es)e(for)h Fh(k)f(<)g(c)p Fq(,)h(and)g(the)g
(collapse)h(on)o(to)75 2134 y(the)c(p)q(oin)o(ts)g(\()p Fg(\006)p
Fh(c;)8 b Fq(0\))13 b(as)g Fh(k)h Fg(!)f Fq(0.)19 b(The)c(limiting)h(cases)d
(can)i(b)q(e)f(explained)i(analytically)g(\(probably)e(not)75
2190 y(b)o(y)i(the)g(studen)o(ts\):)21 b(as)15 b Fh(k)g Fg(!)g
Fq(+)p Fg(1)p Fq(,)h(the)g(separation)g(of)g(the)g(\\fo)q(ci")g
Fg(\006)p Fh(c)g Fq(b)q(ecomes)g(neglible,)j(if)d(w)o(e)g(put)75
2247 y Fh(c)c Fq(=)h(0,)i(w)o(e)g(can)g(see)h(the)f(circle.)21
b(As)15 b Fh(k)f Fg(!)f Fq(0,)i(the)g(lo)q(cus)h(equation)g(factors)e(in)o
(to)636 2349 y(\(\()p Fh(x)c Fq(+)g Fh(c)p Fq(\))791 2330 y
Fe(2)820 2349 y Fq(+)h Fh(y)890 2330 y Fe(2)909 2349 y Fq(\)\(\()p
Fh(x)e Fg(\000)i Fh(c)p Fq(\))1082 2330 y Fe(2)1111 2349 y
Fq(+)g Fh(y)1181 2330 y Fe(2)1200 2349 y Fq(\))h(=)h(0)p Fh(;)75
2451 y Fq(hence)j(the)g(collapse)g(on)o(to)e(the)i(t)o(w)o(o)d(isolated)j(p)q
(oin)o(ts.)p eop
%%Page: 99 99
99 98 bop 75 -103 a Fm(Analytical)21 b(Geometry)p 75 -85 631
2 v 1123 w Fq(99)475 1226 y @beginspecial 0 @llx 0 @lly 572
@urx 570 @ury 2399 @rwi @setspecial
%%BeginDocument: Anal.product2.eps


/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /TDeps_dict 20 dict def TDeps_dict begin /showpage {
    
} def /copypage {
    
} def /grestoreall {
    
} def /erasepage {
    
} def /nulldevice {
    
} def /exitserver {
    
} def /initgraphics {
    
} def /renderbands {
    
} def /initmatrix {
    
} def /banddevice {
    
} def /setpageparams {
    
} def /framedevice {
    
} def /note {
    
} def end end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
gsave
0 0 572 570 rectclip
-18 -167 translate
18 167 572 570 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
gsave clpmt currentmatrix pop newpath
1 0 0 1 -147 200 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -147 200] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.125 0.5 0.125 [
[(-4)] 0 0.5 0 2 Msboxa
[(-3)] 0.125 0.5 0 2 Msboxa
[(-2)] 0.25 0.5 0 2 Msboxa
[(-1)] 0.375 0.5 0 2 Msboxa
[(1)] 0.625 0.5 0 2 Msboxa
[(2)] 0.75 0.5 0 2 Msboxa
[(3)] 0.875 0.5 0 2 Msboxa
[(4)] 1 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(1.1)] 0.5 1 0 -2 Msboxa
grestore
[(-4)] 0.4875 0 1 0 Msboxa
[(-3)] 0.4875 0.125 1 0 Msboxa
[(-2)] 0.4875 0.25 1 0 Msboxa
[(-1)] 0.4875 0.375 1 0 Msboxa
[(1)] 0.4875 0.625 1 0 Msboxa
[(2)] 0.4875 0.75 1 0 Msboxa
[(3)] 0.4875 0.875 1 0 Msboxa
[(4)] 0.4875 1 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0 0.5 moveto
0 0.50625 lineto
stroke
grestore
[(-4)] 0 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.125 0.5 moveto
0.125 0.50625 lineto
stroke
grestore
[(-3)] 0.125 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.25 0.5 moveto
0.25 0.50625 lineto
stroke
grestore
[(-2)] 0.25 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.375 0.5 moveto
0.375 0.50625 lineto
stroke
grestore
[(-1)] 0.375 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.625 0.5 moveto
0.625 0.50625 lineto
stroke
grestore
[(1)] 0.625 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.75 0.5 moveto
0.75 0.50625 lineto
stroke
grestore
[(2)] 0.75 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.875 0.5 moveto
0.875 0.50625 lineto
stroke
grestore
[(3)] 0.875 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
1 0.5 moveto
1 0.50625 lineto
stroke
grestore
[(4)] 1 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.025 0.5 moveto
0.025 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.05 0.5 moveto
0.05 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.075 0.5 moveto
0.075 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1 0.5 moveto
0.1 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.15 0.5 moveto
0.15 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.175 0.5 moveto
0.175 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2 0.5 moveto
0.2 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.225 0.5 moveto
0.225 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.275 0.5 moveto
0.275 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.3 0.5 moveto
0.3 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.325 0.5 moveto
0.325 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35 0.5 moveto
0.35 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.4 0.5 moveto
0.4 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.425 0.5 moveto
0.425 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45 0.5 moveto
0.45 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.475 0.5 moveto
0.475 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.525 0.5 moveto
0.525 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.55 0.5 moveto
0.55 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.575 0.5 moveto
0.575 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.6 0.5 moveto
0.6 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.65 0.5 moveto
0.65 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.675 0.5 moveto
0.675 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.7 0.5 moveto
0.7 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.725 0.5 moveto
0.725 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.775 0.5 moveto
0.775 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.8 0.5 moveto
0.8 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.825 0.5 moveto
0.825 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85 0.5 moveto
0.85 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9 0.5 moveto
0.9 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.925 0.5 moveto
0.925 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.95 0.5 moveto
0.95 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.975 0.5 moveto
0.975 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(1.1)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.50625 0 lineto
stroke
grestore
[(-4)] 0.4875 0 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.125 moveto
0.50625 0.125 lineto
stroke
grestore
[(-3)] 0.4875 0.125 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.25 moveto
0.50625 0.25 lineto
stroke
grestore
[(-2)] 0.4875 0.25 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.375 moveto
0.50625 0.375 lineto
stroke
grestore
[(-1)] 0.4875 0.375 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.625 moveto
0.50625 0.625 lineto
stroke
grestore
[(1)] 0.4875 0.625 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.75 moveto
0.50625 0.75 lineto
stroke
grestore
[(2)] 0.4875 0.75 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.875 moveto
0.50625 0.875 lineto
stroke
grestore
[(3)] 0.4875 0.875 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 1 moveto
0.50625 1 lineto
stroke
grestore
[(4)] 0.4875 1 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.025 moveto
0.50375 0.025 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.05 moveto
0.50375 0.05 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.075 moveto
0.50375 0.075 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1 moveto
0.50375 0.1 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.15 moveto
0.50375 0.15 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.175 moveto
0.50375 0.175 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.2 moveto
0.50375 0.2 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.225 moveto
0.50375 0.225 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.275 moveto
0.50375 0.275 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.3 moveto
0.50375 0.3 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.325 moveto
0.50375 0.325 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.35 moveto
0.50375 0.35 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.4 moveto
0.50375 0.4 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.425 moveto
0.50375 0.425 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45 moveto
0.50375 0.45 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.475 moveto
0.50375 0.475 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.525 moveto
0.50375 0.525 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55 moveto
0.50375 0.55 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.575 moveto
0.50375 0.575 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.6 moveto
0.50375 0.6 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.65 moveto
0.50375 0.65 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.675 moveto
0.50375 0.675 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.7 moveto
0.50375 0.7 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.725 moveto
0.50375 0.725 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.775 moveto
0.50375 0.775 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.8 moveto
0.50375 0.8 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.825 moveto
0.50375 0.825 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.85 moveto
0.50375 0.85 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.9 moveto
0.50375 0.9 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.925 moveto
0.50375 0.925 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.95 moveto
0.50375 0.95 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.975 moveto
0.50375 0.975 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
grestore
gsave
gsave
0.004 setlinewidth
0.31886 0.49996 moveto
0.32041 0.48596 lineto
0.32503 0.47246 lineto
0.33265 0.46001 lineto
0.34313 0.44916 lineto
0.35629 0.44042 lineto
0.37191 0.43434 lineto
0.38973 0.43143 lineto
0.40943 0.43218 lineto
0.43068 0.43693 lineto
0.45312 0.44541 lineto
0.47636 0.45537 lineto
0.5 0.46047 lineto
0.52364 0.45537 lineto
0.54688 0.44541 lineto
0.56932 0.43693 lineto
0.59057 0.43218 lineto
0.61027 0.43143 lineto
0.62809 0.43434 lineto
0.64371 0.44042 lineto
0.65687 0.44916 lineto
0.66735 0.46001 lineto
0.67497 0.47246 lineto
0.67959 0.48596 lineto
0.68114 0.49996 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.31886 0.50004 moveto
0.32041 0.51404 lineto
0.32503 0.52754 lineto
0.33265 0.53999 lineto
0.34313 0.55084 lineto
0.35629 0.55958 lineto
0.37191 0.56566 lineto
0.38973 0.56857 lineto
0.40943 0.56782 lineto
0.43068 0.56307 lineto
0.45312 0.55459 lineto
0.47636 0.54463 lineto
0.5 0.53953 lineto
0.52364 0.54463 lineto
0.54688 0.55459 lineto
0.56932 0.56307 lineto
0.59057 0.56782 lineto
0.61027 0.56857 lineto
0.62809 0.56566 lineto
0.64371 0.55958 lineto
0.65687 0.55084 lineto
0.66735 0.53999 lineto
0.67497 0.52754 lineto
0.67959 0.51404 lineto
0.68114 0.50004 lineto
stroke
grestore
grestore
gsave
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1 -147 200 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1 141 200 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 141 200] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.125 0.5 0.125 [
[(-4)] 0 0.5 0 2 Msboxa
[(-3)] 0.125 0.5 0 2 Msboxa
[(-2)] 0.25 0.5 0 2 Msboxa
[(-1)] 0.375 0.5 0 2 Msboxa
[(1)] 0.625 0.5 0 2 Msboxa
[(2)] 0.75 0.5 0 2 Msboxa
[(3)] 0.875 0.5 0 2 Msboxa
[(4)] 1 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(1.5)] 0.5 1 0 -2 Msboxa
grestore
[(-4)] 0.4875 0 1 0 Msboxa
[(-3)] 0.4875 0.125 1 0 Msboxa
[(-2)] 0.4875 0.25 1 0 Msboxa
[(-1)] 0.4875 0.375 1 0 Msboxa
[(1)] 0.4875 0.625 1 0 Msboxa
[(2)] 0.4875 0.75 1 0 Msboxa
[(3)] 0.4875 0.875 1 0 Msboxa
[(4)] 0.4875 1 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0 0.5 moveto
0 0.50625 lineto
stroke
grestore
[(-4)] 0 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.125 0.5 moveto
0.125 0.50625 lineto
stroke
grestore
[(-3)] 0.125 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.25 0.5 moveto
0.25 0.50625 lineto
stroke
grestore
[(-2)] 0.25 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.375 0.5 moveto
0.375 0.50625 lineto
stroke
grestore
[(-1)] 0.375 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.625 0.5 moveto
0.625 0.50625 lineto
stroke
grestore
[(1)] 0.625 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.75 0.5 moveto
0.75 0.50625 lineto
stroke
grestore
[(2)] 0.75 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.875 0.5 moveto
0.875 0.50625 lineto
stroke
grestore
[(3)] 0.875 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
1 0.5 moveto
1 0.50625 lineto
stroke
grestore
[(4)] 1 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.025 0.5 moveto
0.025 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.05 0.5 moveto
0.05 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.075 0.5 moveto
0.075 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1 0.5 moveto
0.1 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.15 0.5 moveto
0.15 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.175 0.5 moveto
0.175 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2 0.5 moveto
0.2 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.225 0.5 moveto
0.225 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.275 0.5 moveto
0.275 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.3 0.5 moveto
0.3 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.325 0.5 moveto
0.325 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35 0.5 moveto
0.35 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.4 0.5 moveto
0.4 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.425 0.5 moveto
0.425 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45 0.5 moveto
0.45 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.475 0.5 moveto
0.475 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.525 0.5 moveto
0.525 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.55 0.5 moveto
0.55 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.575 0.5 moveto
0.575 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.6 0.5 moveto
0.6 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.65 0.5 moveto
0.65 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.675 0.5 moveto
0.675 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.7 0.5 moveto
0.7 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.725 0.5 moveto
0.725 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.775 0.5 moveto
0.775 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.8 0.5 moveto
0.8 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.825 0.5 moveto
0.825 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85 0.5 moveto
0.85 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9 0.5 moveto
0.9 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.925 0.5 moveto
0.925 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.95 0.5 moveto
0.95 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.975 0.5 moveto
0.975 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(1.5)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.50625 0 lineto
stroke
grestore
[(-4)] 0.4875 0 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.125 moveto
0.50625 0.125 lineto
stroke
grestore
[(-3)] 0.4875 0.125 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.25 moveto
0.50625 0.25 lineto
stroke
grestore
[(-2)] 0.4875 0.25 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.375 moveto
0.50625 0.375 lineto
stroke
grestore
[(-1)] 0.4875 0.375 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.625 moveto
0.50625 0.625 lineto
stroke
grestore
[(1)] 0.4875 0.625 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.75 moveto
0.50625 0.75 lineto
stroke
grestore
[(2)] 0.4875 0.75 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.875 moveto
0.50625 0.875 lineto
stroke
grestore
[(3)] 0.4875 0.875 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 1 moveto
0.50625 1 lineto
stroke
grestore
[(4)] 0.4875 1 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.025 moveto
0.50375 0.025 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.05 moveto
0.50375 0.05 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.075 moveto
0.50375 0.075 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1 moveto
0.50375 0.1 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.15 moveto
0.50375 0.15 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.175 moveto
0.50375 0.175 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.2 moveto
0.50375 0.2 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.225 moveto
0.50375 0.225 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.275 moveto
0.50375 0.275 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.3 moveto
0.50375 0.3 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.325 moveto
0.50375 0.325 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.35 moveto
0.50375 0.35 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.4 moveto
0.50375 0.4 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.425 moveto
0.50375 0.425 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45 moveto
0.50375 0.45 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.475 moveto
0.50375 0.475 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.525 moveto
0.50375 0.525 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55 moveto
0.50375 0.55 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.575 moveto
0.50375 0.575 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.6 moveto
0.50375 0.6 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.65 moveto
0.50375 0.65 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.675 moveto
0.50375 0.675 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.7 moveto
0.50375 0.7 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.725 moveto
0.50375 0.725 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.775 moveto
0.50375 0.775 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.8 moveto
0.50375 0.8 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.825 moveto
0.50375 0.825 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.85 moveto
0.50375 0.85 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.9 moveto
0.50375 0.9 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.925 moveto
0.50375 0.925 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.95 moveto
0.50375 0.95 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.975 moveto
0.50375 0.975 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
grestore
gsave
gsave
0.004 setlinewidth
0.30236 0.49996 moveto
0.30405 0.48315 lineto
0.30909 0.46683 lineto
0.3174 0.45155 lineto
0.32884 0.43781 lineto
0.3432 0.4261 lineto
0.36025 0.41684 lineto
0.37968 0.41038 lineto
0.40118 0.40692 lineto
0.42437 0.40636 lineto
0.44885 0.40803 lineto
0.4742 0.41046 lineto
0.5 0.41161 lineto
0.5258 0.41046 lineto
0.55115 0.40803 lineto
0.57563 0.40636 lineto
0.59882 0.40692 lineto
0.62032 0.41038 lineto
0.63975 0.41684 lineto
0.6568 0.4261 lineto
0.67116 0.43781 lineto
0.6826 0.45155 lineto
0.69091 0.46683 lineto
0.69595 0.48315 lineto
0.69764 0.49996 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.30236 0.50004 moveto
0.30405 0.51685 lineto
0.30909 0.53317 lineto
0.3174 0.54845 lineto
0.32884 0.56219 lineto
0.3432 0.5739 lineto
0.36025 0.58316 lineto
0.37968 0.58962 lineto
0.40118 0.59308 lineto
0.42437 0.59364 lineto
0.44885 0.59197 lineto
0.4742 0.58954 lineto
0.5 0.58839 lineto
0.5258 0.58954 lineto
0.55115 0.59197 lineto
0.57563 0.59364 lineto
0.59882 0.59308 lineto
0.62032 0.58962 lineto
0.63975 0.58316 lineto
0.6568 0.5739 lineto
0.67116 0.56219 lineto
0.6826 0.54845 lineto
0.69091 0.53317 lineto
0.69595 0.51685 lineto
0.69764 0.50004 lineto
stroke
grestore
grestore
gsave
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1 141 200 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1 -147 -87 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -147 -87] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.125 0.5 0.125 [
[(-4)] 0 0.5 0 2 Msboxa
[(-3)] 0.125 0.5 0 2 Msboxa
[(-2)] 0.25 0.5 0 2 Msboxa
[(-1)] 0.375 0.5 0 2 Msboxa
[(1)] 0.625 0.5 0 2 Msboxa
[(2)] 0.75 0.5 0 2 Msboxa
[(3)] 0.875 0.5 0 2 Msboxa
[(4)] 1 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(5)] 0.5 1 0 -2 Msboxa
grestore
[(-4)] 0.4875 0 1 0 Msboxa
[(-3)] 0.4875 0.125 1 0 Msboxa
[(-2)] 0.4875 0.25 1 0 Msboxa
[(-1)] 0.4875 0.375 1 0 Msboxa
[(1)] 0.4875 0.625 1 0 Msboxa
[(2)] 0.4875 0.75 1 0 Msboxa
[(3)] 0.4875 0.875 1 0 Msboxa
[(4)] 0.4875 1 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0 0.5 moveto
0 0.50625 lineto
stroke
grestore
[(-4)] 0 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.125 0.5 moveto
0.125 0.50625 lineto
stroke
grestore
[(-3)] 0.125 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.25 0.5 moveto
0.25 0.50625 lineto
stroke
grestore
[(-2)] 0.25 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.375 0.5 moveto
0.375 0.50625 lineto
stroke
grestore
[(-1)] 0.375 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.625 0.5 moveto
0.625 0.50625 lineto
stroke
grestore
[(1)] 0.625 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.75 0.5 moveto
0.75 0.50625 lineto
stroke
grestore
[(2)] 0.75 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.875 0.5 moveto
0.875 0.50625 lineto
stroke
grestore
[(3)] 0.875 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
1 0.5 moveto
1 0.50625 lineto
stroke
grestore
[(4)] 1 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.025 0.5 moveto
0.025 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.05 0.5 moveto
0.05 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.075 0.5 moveto
0.075 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1 0.5 moveto
0.1 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.15 0.5 moveto
0.15 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.175 0.5 moveto
0.175 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2 0.5 moveto
0.2 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.225 0.5 moveto
0.225 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.275 0.5 moveto
0.275 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.3 0.5 moveto
0.3 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.325 0.5 moveto
0.325 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35 0.5 moveto
0.35 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.4 0.5 moveto
0.4 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.425 0.5 moveto
0.425 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45 0.5 moveto
0.45 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.475 0.5 moveto
0.475 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.525 0.5 moveto
0.525 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.55 0.5 moveto
0.55 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.575 0.5 moveto
0.575 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.6 0.5 moveto
0.6 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.65 0.5 moveto
0.65 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.675 0.5 moveto
0.675 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.7 0.5 moveto
0.7 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.725 0.5 moveto
0.725 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.775 0.5 moveto
0.775 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.8 0.5 moveto
0.8 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.825 0.5 moveto
0.825 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85 0.5 moveto
0.85 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9 0.5 moveto
0.9 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.925 0.5 moveto
0.925 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.95 0.5 moveto
0.95 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.975 0.5 moveto
0.975 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(5)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.50625 0 lineto
stroke
grestore
[(-4)] 0.4875 0 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.125 moveto
0.50625 0.125 lineto
stroke
grestore
[(-3)] 0.4875 0.125 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.25 moveto
0.50625 0.25 lineto
stroke
grestore
[(-2)] 0.4875 0.25 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.375 moveto
0.50625 0.375 lineto
stroke
grestore
[(-1)] 0.4875 0.375 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.625 moveto
0.50625 0.625 lineto
stroke
grestore
[(1)] 0.4875 0.625 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.75 moveto
0.50625 0.75 lineto
stroke
grestore
[(2)] 0.4875 0.75 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.875 moveto
0.50625 0.875 lineto
stroke
grestore
[(3)] 0.4875 0.875 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 1 moveto
0.50625 1 lineto
stroke
grestore
[(4)] 0.4875 1 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.025 moveto
0.50375 0.025 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.05 moveto
0.50375 0.05 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.075 moveto
0.50375 0.075 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1 moveto
0.50375 0.1 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.15 moveto
0.50375 0.15 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.175 moveto
0.50375 0.175 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.2 moveto
0.50375 0.2 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.225 moveto
0.50375 0.225 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.275 moveto
0.50375 0.275 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.3 moveto
0.50375 0.3 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.325 moveto
0.50375 0.325 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.35 moveto
0.50375 0.35 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.4 moveto
0.50375 0.4 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.425 moveto
0.50375 0.425 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45 moveto
0.50375 0.45 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.475 moveto
0.50375 0.475 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.525 moveto
0.50375 0.525 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55 moveto
0.50375 0.55 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.575 moveto
0.50375 0.575 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.6 moveto
0.50375 0.6 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.65 moveto
0.50375 0.65 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.675 moveto
0.50375 0.675 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.7 moveto
0.50375 0.7 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.725 moveto
0.50375 0.725 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.775 moveto
0.50375 0.775 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.8 moveto
0.50375 0.8 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.825 moveto
0.50375 0.825 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.85 moveto
0.50375 0.85 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.9 moveto
0.50375 0.9 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.925 moveto
0.50375 0.925 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.95 moveto
0.50375 0.95 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.975 moveto
0.50375 0.975 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
grestore
gsave
gsave
0.004 setlinewidth
0.19381 0.49993 moveto
0.19643 0.46624 lineto
0.20425 0.43314 lineto
0.21712 0.40134 lineto
0.23483 0.37146 lineto
0.25709 0.34405 lineto
0.28349 0.3196 lineto
0.31361 0.29851 lineto
0.34691 0.28106 lineto
0.38283 0.26744 lineto
0.42075 0.25773 lineto
0.46003 0.25193 lineto
0.5 0.25 lineto
0.53997 0.25193 lineto
0.57925 0.25773 lineto
0.61717 0.26744 lineto
0.65309 0.28106 lineto
0.68639 0.29851 lineto
0.71651 0.3196 lineto
0.74291 0.34405 lineto
0.76517 0.37146 lineto
0.78288 0.40134 lineto
0.79575 0.43314 lineto
0.80357 0.46624 lineto
0.80619 0.49993 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.19381 0.50007 moveto
0.19643 0.53376 lineto
0.20425 0.56686 lineto
0.21712 0.59866 lineto
0.23483 0.62854 lineto
0.25709 0.65595 lineto
0.28349 0.6804 lineto
0.31361 0.70149 lineto
0.34691 0.71894 lineto
0.38283 0.73256 lineto
0.42075 0.74227 lineto
0.46003 0.74807 lineto
0.5 0.75 lineto
0.53997 0.74807 lineto
0.57925 0.74227 lineto
0.61717 0.73256 lineto
0.65309 0.71894 lineto
0.68639 0.70149 lineto
0.71651 0.6804 lineto
0.74291 0.65595 lineto
0.76517 0.62854 lineto
0.78288 0.59866 lineto
0.79575 0.56686 lineto
0.80357 0.53376 lineto
0.80619 0.50007 lineto
stroke
grestore
grestore
gsave
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1 -147 -87 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1 142 -87 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 142 -87] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.125 0.5 0.125 [
[(-4)] 0 0.5 0 2 Msboxa
[(-3)] 0.125 0.5 0 2 Msboxa
[(-2)] 0.25 0.5 0 2 Msboxa
[(-1)] 0.375 0.5 0 2 Msboxa
[(1)] 0.625 0.5 0 2 Msboxa
[(2)] 0.75 0.5 0 2 Msboxa
[(3)] 0.875 0.5 0 2 Msboxa
[(4)] 1 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(10)] 0.5 1 0 -2 Msboxa
grestore
[(-4)] 0.4875 0 1 0 Msboxa
[(-3)] 0.4875 0.125 1 0 Msboxa
[(-2)] 0.4875 0.25 1 0 Msboxa
[(-1)] 0.4875 0.375 1 0 Msboxa
[(1)] 0.4875 0.625 1 0 Msboxa
[(2)] 0.4875 0.75 1 0 Msboxa
[(3)] 0.4875 0.875 1 0 Msboxa
[(4)] 0.4875 1 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0 0.5 moveto
0 0.50625 lineto
stroke
grestore
[(-4)] 0 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.125 0.5 moveto
0.125 0.50625 lineto
stroke
grestore
[(-3)] 0.125 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.25 0.5 moveto
0.25 0.50625 lineto
stroke
grestore
[(-2)] 0.25 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.375 0.5 moveto
0.375 0.50625 lineto
stroke
grestore
[(-1)] 0.375 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.625 0.5 moveto
0.625 0.50625 lineto
stroke
grestore
[(1)] 0.625 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.75 0.5 moveto
0.75 0.50625 lineto
stroke
grestore
[(2)] 0.75 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.875 0.5 moveto
0.875 0.50625 lineto
stroke
grestore
[(3)] 0.875 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
1 0.5 moveto
1 0.50625 lineto
stroke
grestore
[(4)] 1 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.025 0.5 moveto
0.025 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.05 0.5 moveto
0.05 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.075 0.5 moveto
0.075 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1 0.5 moveto
0.1 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.15 0.5 moveto
0.15 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.175 0.5 moveto
0.175 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2 0.5 moveto
0.2 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.225 0.5 moveto
0.225 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.275 0.5 moveto
0.275 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.3 0.5 moveto
0.3 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.325 0.5 moveto
0.325 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35 0.5 moveto
0.35 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.4 0.5 moveto
0.4 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.425 0.5 moveto
0.425 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45 0.5 moveto
0.45 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.475 0.5 moveto
0.475 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.525 0.5 moveto
0.525 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.55 0.5 moveto
0.55 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.575 0.5 moveto
0.575 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.6 0.5 moveto
0.6 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.65 0.5 moveto
0.65 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.675 0.5 moveto
0.675 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.7 0.5 moveto
0.7 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.725 0.5 moveto
0.725 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.775 0.5 moveto
0.775 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.8 0.5 moveto
0.8 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.825 0.5 moveto
0.825 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85 0.5 moveto
0.85 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9 0.5 moveto
0.9 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.925 0.5 moveto
0.925 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.95 0.5 moveto
0.95 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.975 0.5 moveto
0.975 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(10)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.50625 0 lineto
stroke
grestore
[(-4)] 0.4875 0 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.125 moveto
0.50625 0.125 lineto
stroke
grestore
[(-3)] 0.4875 0.125 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.25 moveto
0.50625 0.25 lineto
stroke
grestore
[(-2)] 0.4875 0.25 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.375 moveto
0.50625 0.375 lineto
stroke
grestore
[(-1)] 0.4875 0.375 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.625 moveto
0.50625 0.625 lineto
stroke
grestore
[(1)] 0.4875 0.625 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.75 moveto
0.50625 0.75 lineto
stroke
grestore
[(2)] 0.4875 0.75 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.875 moveto
0.50625 0.875 lineto
stroke
grestore
[(3)] 0.4875 0.875 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 1 moveto
0.50625 1 lineto
stroke
grestore
[(4)] 0.4875 1 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.025 moveto
0.50375 0.025 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.05 moveto
0.50375 0.05 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.075 moveto
0.50375 0.075 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1 moveto
0.50375 0.1 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.15 moveto
0.50375 0.15 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.175 moveto
0.50375 0.175 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.2 moveto
0.50375 0.2 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.225 moveto
0.50375 0.225 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.275 moveto
0.50375 0.275 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.3 moveto
0.50375 0.3 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.325 moveto
0.50375 0.325 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.35 moveto
0.50375 0.35 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.4 moveto
0.50375 0.4 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.425 moveto
0.50375 0.425 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45 moveto
0.50375 0.45 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.475 moveto
0.50375 0.475 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.525 moveto
0.50375 0.525 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55 moveto
0.50375 0.55 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.575 moveto
0.50375 0.575 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.6 moveto
0.50375 0.6 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.65 moveto
0.50375 0.65 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.675 moveto
0.50375 0.675 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.7 moveto
0.50375 0.7 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.725 moveto
0.50375 0.725 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.775 moveto
0.50375 0.775 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.8 moveto
0.50375 0.8 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.825 moveto
0.50375 0.825 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.85 moveto
0.50375 0.85 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.9 moveto
0.50375 0.9 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.925 moveto
0.50375 0.925 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.95 moveto
0.50375 0.95 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.975 moveto
0.50375 0.975 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
grestore
gsave
gsave
0.004 setlinewidth
0.08542 0.49992 moveto
0.08897 0.45061 lineto
0.09955 0.4021 lineto
0.11698 0.35534 lineto
0.14096 0.31115 lineto
0.17109 0.2703 lineto
0.20685 0.2335 lineto
0.24762 0.20136 lineto
0.29271 0.17438 lineto
0.34135 0.153 lineto
0.3927 0.13751 lineto
0.44589 0.12814 lineto
0.5 0.125 lineto
0.55411 0.12814 lineto
0.6073 0.13751 lineto
0.65865 0.153 lineto
0.70729 0.17438 lineto
0.75238 0.20136 lineto
0.79315 0.2335 lineto
0.82891 0.2703 lineto
0.85904 0.31115 lineto
0.88302 0.35534 lineto
0.90045 0.4021 lineto
0.91103 0.45061 lineto
0.91458 0.49992 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.08542 0.50008 moveto
0.08897 0.54939 lineto
0.09955 0.5979 lineto
0.11698 0.64466 lineto
0.14096 0.68885 lineto
0.17109 0.7297 lineto
0.20685 0.7665 lineto
0.24762 0.79864 lineto
0.29271 0.82562 lineto
0.34135 0.847 lineto
0.3927 0.86249 lineto
0.44589 0.87186 lineto
0.5 0.875 lineto
0.55411 0.87186 lineto
0.6073 0.86249 lineto
0.65865 0.847 lineto
0.70729 0.82562 lineto
0.75238 0.79864 lineto
0.79315 0.7665 lineto
0.82891 0.7297 lineto
0.85904 0.68885 lineto
0.88302 0.64466 lineto
0.90045 0.5979 lineto
0.91103 0.54939 lineto
0.91458 0.50008 lineto
stroke
grestore
grestore
gsave
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1 142 -87 sc6mt astore rstroke
end
grestore
grestore
%%EndDocument
 @endspecial 228 1313 a Fi(Fig)p Fq(.)15 b(65.)20 b(The)15
b Fh(d)527 1320 y Fe(1)546 1313 y Fh(d)570 1320 y Fe(2)602
1313 y Fq(=)e Fh(k)k Fq(lo)q(cus)f(for)e Fh(c)f Fq(=)g(1)i(and)g
Fh(k)f(>)f Fq(1,)h(lab)q(eled)j(b)o(y)f(the)f(v)m(alue)h(of)f
Fh(k)q Fq(.)472 2306 y @beginspecial 0 @llx 0 @lly 571 @urx
283 @ury 2412 @rwi @setspecial
%%BeginDocument: Anal.product3.eps


/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /TDeps_dict 20 dict def TDeps_dict begin /showpage {
    
} def /copypage {
    
} def /grestoreall {
    
} def /erasepage {
    
} def /nulldevice {
    
} def /exitserver {
    
} def /initgraphics {
    
} def /renderbands {
    
} def /initmatrix {
    
} def /banddevice {
    
} def /setpageparams {
    
} def /framedevice {
    
} def /note {
    
} def end end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
gsave
0 0 571 283 rectclip
-19 -455 translate
19 455 571 283 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
gsave clpmt currentmatrix pop newpath
1 0 0 1 -146 201 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -146 201] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.125 0.5 0.125 [
[(-4)] 0 0.5 0 2 Msboxa
[(-3)] 0.125 0.5 0 2 Msboxa
[(-2)] 0.25 0.5 0 2 Msboxa
[(-1)] 0.375 0.5 0 2 Msboxa
[(1)] 0.625 0.5 0 2 Msboxa
[(2)] 0.75 0.5 0 2 Msboxa
[(3)] 0.875 0.5 0 2 Msboxa
[(4)] 1 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(0.9)] 0.5 1 0 -2 Msboxa
grestore
[(-4)] 0.4875 0 1 0 Msboxa
[(-3)] 0.4875 0.125 1 0 Msboxa
[(-2)] 0.4875 0.25 1 0 Msboxa
[(-1)] 0.4875 0.375 1 0 Msboxa
[(1)] 0.4875 0.625 1 0 Msboxa
[(2)] 0.4875 0.75 1 0 Msboxa
[(3)] 0.4875 0.875 1 0 Msboxa
[(4)] 0.4875 1 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0 0.5 moveto
0 0.50625 lineto
stroke
grestore
[(-4)] 0 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.125 0.5 moveto
0.125 0.50625 lineto
stroke
grestore
[(-3)] 0.125 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.25 0.5 moveto
0.25 0.50625 lineto
stroke
grestore
[(-2)] 0.25 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.375 0.5 moveto
0.375 0.50625 lineto
stroke
grestore
[(-1)] 0.375 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.625 0.5 moveto
0.625 0.50625 lineto
stroke
grestore
[(1)] 0.625 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.75 0.5 moveto
0.75 0.50625 lineto
stroke
grestore
[(2)] 0.75 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.875 0.5 moveto
0.875 0.50625 lineto
stroke
grestore
[(3)] 0.875 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
1 0.5 moveto
1 0.50625 lineto
stroke
grestore
[(4)] 1 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.025 0.5 moveto
0.025 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.05 0.5 moveto
0.05 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.075 0.5 moveto
0.075 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1 0.5 moveto
0.1 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.15 0.5 moveto
0.15 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.175 0.5 moveto
0.175 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2 0.5 moveto
0.2 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.225 0.5 moveto
0.225 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.275 0.5 moveto
0.275 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.3 0.5 moveto
0.3 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.325 0.5 moveto
0.325 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35 0.5 moveto
0.35 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.4 0.5 moveto
0.4 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.425 0.5 moveto
0.425 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45 0.5 moveto
0.45 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.475 0.5 moveto
0.475 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.525 0.5 moveto
0.525 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.55 0.5 moveto
0.55 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.575 0.5 moveto
0.575 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.6 0.5 moveto
0.6 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.65 0.5 moveto
0.65 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.675 0.5 moveto
0.675 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.7 0.5 moveto
0.7 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.725 0.5 moveto
0.725 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.775 0.5 moveto
0.775 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.8 0.5 moveto
0.8 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.825 0.5 moveto
0.825 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85 0.5 moveto
0.85 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9 0.5 moveto
0.9 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.925 0.5 moveto
0.925 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.95 0.5 moveto
0.95 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.975 0.5 moveto
0.975 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(0.9)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.50625 0 lineto
stroke
grestore
[(-4)] 0.4875 0 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.125 moveto
0.50625 0.125 lineto
stroke
grestore
[(-3)] 0.4875 0.125 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.25 moveto
0.50625 0.25 lineto
stroke
grestore
[(-2)] 0.4875 0.25 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.375 moveto
0.50625 0.375 lineto
stroke
grestore
[(-1)] 0.4875 0.375 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.625 moveto
0.50625 0.625 lineto
stroke
grestore
[(1)] 0.4875 0.625 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.75 moveto
0.50625 0.75 lineto
stroke
grestore
[(2)] 0.4875 0.75 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.875 moveto
0.50625 0.875 lineto
stroke
grestore
[(3)] 0.4875 0.875 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 1 moveto
0.50625 1 lineto
stroke
grestore
[(4)] 0.4875 1 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.025 moveto
0.50375 0.025 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.05 moveto
0.50375 0.05 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.075 moveto
0.50375 0.075 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1 moveto
0.50375 0.1 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.15 moveto
0.50375 0.15 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.175 moveto
0.50375 0.175 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.2 moveto
0.50375 0.2 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.225 moveto
0.50375 0.225 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.275 moveto
0.50375 0.275 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.3 moveto
0.50375 0.3 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.325 moveto
0.50375 0.325 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.35 moveto
0.50375 0.35 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.4 moveto
0.50375 0.4 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.425 moveto
0.50375 0.425 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45 moveto
0.50375 0.45 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.475 moveto
0.50375 0.475 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.525 moveto
0.50375 0.525 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55 moveto
0.50375 0.55 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.575 moveto
0.50375 0.575 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.6 moveto
0.50375 0.6 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.65 moveto
0.50375 0.65 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.675 moveto
0.50375 0.675 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.7 moveto
0.50375 0.7 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.725 moveto
0.50375 0.725 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.775 moveto
0.50375 0.775 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.8 moveto
0.50375 0.8 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.825 moveto
0.50375 0.825 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.85 moveto
0.50375 0.85 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.9 moveto
0.50375 0.9 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.925 moveto
0.50375 0.925 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.95 moveto
0.50375 0.95 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.975 moveto
0.50375 0.975 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
grestore
gsave
gsave
0.004 setlinewidth
0.3277 0.49997 moveto
0.32827 0.49223 lineto
0.32996 0.4846 lineto
0.33275 0.47727 lineto
0.33659 0.47038 lineto
0.34142 0.46405 lineto
0.34714 0.45841 lineto
0.35367 0.45358 lineto
0.36089 0.44964 lineto
0.36868 0.44666 lineto
0.3769 0.44471 lineto
0.38542 0.44381 lineto
0.39409 0.44398 lineto
0.40275 0.44519 lineto
0.41127 0.4474 lineto
0.41949 0.45054 lineto
0.42728 0.45449 lineto
0.4345 0.45914 lineto
0.44103 0.46434 lineto
0.44675 0.46994 lineto
0.45158 0.4758 lineto
0.45542 0.4818 lineto
0.45821 0.48786 lineto
0.4599 0.49393 lineto
0.46047 0.49997 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.3277 0.50003 moveto
0.32827 0.50777 lineto
0.32996 0.5154 lineto
0.33275 0.52273 lineto
0.33659 0.52962 lineto
0.34142 0.53595 lineto
0.34714 0.54159 lineto
0.35367 0.54642 lineto
0.36089 0.55036 lineto
0.36868 0.55334 lineto
0.3769 0.55529 lineto
0.38542 0.55619 lineto
0.39409 0.55602 lineto
0.40275 0.55481 lineto
0.41127 0.5526 lineto
0.41949 0.54946 lineto
0.42728 0.54551 lineto
0.4345 0.54086 lineto
0.44103 0.53566 lineto
0.44675 0.53006 lineto
0.45158 0.5242 lineto
0.45542 0.5182 lineto
0.45821 0.51214 lineto
0.4599 0.50607 lineto
0.46047 0.50003 lineto
stroke
grestore
grestore
gsave
grestore
gsave
gsave
0.004 setlinewidth
0.53953 0.49997 moveto
0.5401 0.49393 lineto
0.54179 0.48786 lineto
0.54458 0.4818 lineto
0.54842 0.4758 lineto
0.55325 0.46994 lineto
0.55897 0.46434 lineto
0.5655 0.45914 lineto
0.57272 0.45449 lineto
0.58051 0.45054 lineto
0.58873 0.4474 lineto
0.59725 0.44519 lineto
0.60591 0.44398 lineto
0.61458 0.44381 lineto
0.6231 0.44471 lineto
0.63132 0.44666 lineto
0.63911 0.44964 lineto
0.64633 0.45358 lineto
0.65286 0.45841 lineto
0.65858 0.46405 lineto
0.66341 0.47038 lineto
0.66725 0.47727 lineto
0.67004 0.4846 lineto
0.67173 0.49223 lineto
0.6723 0.49997 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.53953 0.50003 moveto
0.5401 0.50607 lineto
0.54179 0.51214 lineto
0.54458 0.5182 lineto
0.54842 0.5242 lineto
0.55325 0.53006 lineto
0.55897 0.53566 lineto
0.5655 0.54086 lineto
0.57272 0.54551 lineto
0.58051 0.54946 lineto
0.58873 0.5526 lineto
0.59725 0.55481 lineto
0.60591 0.55602 lineto
0.61458 0.55619 lineto
0.6231 0.55529 lineto
0.63132 0.55334 lineto
0.63911 0.55036 lineto
0.64633 0.54642 lineto
0.65286 0.54159 lineto
0.65858 0.53595 lineto
0.66341 0.52962 lineto
0.66725 0.52273 lineto
0.67004 0.5154 lineto
0.67173 0.50777 lineto
0.6723 0.50003 lineto
stroke
grestore
grestore
gsave
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1 -146 201 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1 142 201 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 142 201] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.125 0.5 0.125 [
[(-4)] 0 0.5 0 2 Msboxa
[(-3)] 0.125 0.5 0 2 Msboxa
[(-2)] 0.25 0.5 0 2 Msboxa
[(-1)] 0.375 0.5 0 2 Msboxa
[(1)] 0.625 0.5 0 2 Msboxa
[(2)] 0.75 0.5 0 2 Msboxa
[(3)] 0.875 0.5 0 2 Msboxa
[(4)] 1 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(0.5)] 0.5 1 0 -2 Msboxa
grestore
[(-4)] 0.4875 0 1 0 Msboxa
[(-3)] 0.4875 0.125 1 0 Msboxa
[(-2)] 0.4875 0.25 1 0 Msboxa
[(-1)] 0.4875 0.375 1 0 Msboxa
[(1)] 0.4875 0.625 1 0 Msboxa
[(2)] 0.4875 0.75 1 0 Msboxa
[(3)] 0.4875 0.875 1 0 Msboxa
[(4)] 0.4875 1 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0 0.5 moveto
0 0.50625 lineto
stroke
grestore
[(-4)] 0 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.125 0.5 moveto
0.125 0.50625 lineto
stroke
grestore
[(-3)] 0.125 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.25 0.5 moveto
0.25 0.50625 lineto
stroke
grestore
[(-2)] 0.25 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.375 0.5 moveto
0.375 0.50625 lineto
stroke
grestore
[(-1)] 0.375 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.625 0.5 moveto
0.625 0.50625 lineto
stroke
grestore
[(1)] 0.625 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.75 0.5 moveto
0.75 0.50625 lineto
stroke
grestore
[(2)] 0.75 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.875 0.5 moveto
0.875 0.50625 lineto
stroke
grestore
[(3)] 0.875 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
1 0.5 moveto
1 0.50625 lineto
stroke
grestore
[(4)] 1 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.025 0.5 moveto
0.025 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.05 0.5 moveto
0.05 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.075 0.5 moveto
0.075 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1 0.5 moveto
0.1 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.15 0.5 moveto
0.15 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.175 0.5 moveto
0.175 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2 0.5 moveto
0.2 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.225 0.5 moveto
0.225 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.275 0.5 moveto
0.275 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.3 0.5 moveto
0.3 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.325 0.5 moveto
0.325 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35 0.5 moveto
0.35 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.4 0.5 moveto
0.4 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.425 0.5 moveto
0.425 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45 0.5 moveto
0.45 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.475 0.5 moveto
0.475 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.525 0.5 moveto
0.525 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.55 0.5 moveto
0.55 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.575 0.5 moveto
0.575 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.6 0.5 moveto
0.6 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.65 0.5 moveto
0.65 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.675 0.5 moveto
0.675 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.7 0.5 moveto
0.7 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.725 0.5 moveto
0.725 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.775 0.5 moveto
0.775 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.8 0.5 moveto
0.8 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.825 0.5 moveto
0.825 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85 0.5 moveto
0.85 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9 0.5 moveto
0.9 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.925 0.5 moveto
0.925 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.95 0.5 moveto
0.95 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.975 0.5 moveto
0.975 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(0.5)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.50625 0 lineto
stroke
grestore
[(-4)] 0.4875 0 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.125 moveto
0.50625 0.125 lineto
stroke
grestore
[(-3)] 0.4875 0.125 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.25 moveto
0.50625 0.25 lineto
stroke
grestore
[(-2)] 0.4875 0.25 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.375 moveto
0.50625 0.375 lineto
stroke
grestore
[(-1)] 0.4875 0.375 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.625 moveto
0.50625 0.625 lineto
stroke
grestore
[(1)] 0.4875 0.625 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.75 moveto
0.50625 0.75 lineto
stroke
grestore
[(2)] 0.4875 0.75 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.875 moveto
0.50625 0.875 lineto
stroke
grestore
[(3)] 0.4875 0.875 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 1 moveto
0.50625 1 lineto
stroke
grestore
[(4)] 0.4875 1 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.025 moveto
0.50375 0.025 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.05 moveto
0.50375 0.05 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.075 moveto
0.50375 0.075 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1 moveto
0.50375 0.1 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.15 moveto
0.50375 0.15 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.175 moveto
0.50375 0.175 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.2 moveto
0.50375 0.2 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.225 moveto
0.50375 0.225 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.275 moveto
0.50375 0.275 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.3 moveto
0.50375 0.3 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.325 moveto
0.50375 0.325 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.35 moveto
0.50375 0.35 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.4 moveto
0.50375 0.4 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.425 moveto
0.50375 0.425 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45 moveto
0.50375 0.45 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.475 moveto
0.50375 0.475 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.525 moveto
0.50375 0.525 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55 moveto
0.50375 0.55 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.575 moveto
0.50375 0.575 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.6 moveto
0.50375 0.6 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.65 moveto
0.50375 0.65 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.675 moveto
0.50375 0.675 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.7 moveto
0.50375 0.7 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.725 moveto
0.50375 0.725 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.775 moveto
0.50375 0.775 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.8 moveto
0.50375 0.8 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.825 moveto
0.50375 0.825 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.85 moveto
0.50375 0.85 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.9 moveto
0.50375 0.9 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.925 moveto
0.50375 0.925 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.95 moveto
0.50375 0.95 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.975 moveto
0.50375 0.975 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
grestore
gsave
gsave
0.004 setlinewidth
0.34691 0.49998 moveto
0.34718 0.49589 lineto
0.34801 0.49186 lineto
0.34937 0.48796 lineto
0.35124 0.48428 lineto
0.35359 0.48086 lineto
0.35638 0.47778 lineto
0.35956 0.47509 lineto
0.36308 0.47283 lineto
0.36688 0.47104 lineto
0.37089 0.46975 lineto
0.37504 0.46898 lineto
0.37926 0.46875 lineto
0.38348 0.46906 lineto
0.38763 0.46989 lineto
0.39164 0.47124 lineto
0.39544 0.47308 lineto
0.39895 0.47537 lineto
0.40214 0.47807 lineto
0.40493 0.48115 lineto
0.40728 0.48453 lineto
0.40915 0.48817 lineto
0.41051 0.492 lineto
0.41133 0.49597 lineto
0.41161 0.49998 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.34691 0.50002 moveto
0.34718 0.50411 lineto
0.34801 0.50814 lineto
0.34937 0.51204 lineto
0.35124 0.51572 lineto
0.35359 0.51914 lineto
0.35638 0.52222 lineto
0.35956 0.52491 lineto
0.36308 0.52717 lineto
0.36688 0.52896 lineto
0.37089 0.53025 lineto
0.37504 0.53102 lineto
0.37926 0.53125 lineto
0.38348 0.53094 lineto
0.38763 0.53011 lineto
0.39164 0.52876 lineto
0.39544 0.52692 lineto
0.39895 0.52463 lineto
0.40214 0.52193 lineto
0.40493 0.51885 lineto
0.40728 0.51547 lineto
0.40915 0.51183 lineto
0.41051 0.508 lineto
0.41133 0.50403 lineto
0.41161 0.50002 lineto
stroke
grestore
grestore
gsave
grestore
gsave
gsave
0.004 setlinewidth
0.58839 0.49998 moveto
0.58867 0.49597 lineto
0.58949 0.492 lineto
0.59085 0.48817 lineto
0.59272 0.48453 lineto
0.59507 0.48115 lineto
0.59786 0.47807 lineto
0.60105 0.47537 lineto
0.60456 0.47308 lineto
0.60836 0.47124 lineto
0.61237 0.46989 lineto
0.61652 0.46906 lineto
0.62074 0.46875 lineto
0.62496 0.46898 lineto
0.62911 0.46975 lineto
0.63312 0.47104 lineto
0.63692 0.47283 lineto
0.64044 0.47509 lineto
0.64362 0.47778 lineto
0.64641 0.48086 lineto
0.64876 0.48428 lineto
0.65063 0.48796 lineto
0.65199 0.49186 lineto
0.65282 0.49589 lineto
0.65309 0.49998 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.58839 0.50002 moveto
0.58867 0.50403 lineto
0.58949 0.508 lineto
0.59085 0.51183 lineto
0.59272 0.51547 lineto
0.59507 0.51885 lineto
0.59786 0.52193 lineto
0.60105 0.52463 lineto
0.60456 0.52692 lineto
0.60836 0.52876 lineto
0.61237 0.53011 lineto
0.61652 0.53094 lineto
0.62074 0.53125 lineto
0.62496 0.53102 lineto
0.62911 0.53025 lineto
0.63312 0.52896 lineto
0.63692 0.52717 lineto
0.64044 0.52491 lineto
0.64362 0.52222 lineto
0.64641 0.51914 lineto
0.64876 0.51572 lineto
0.65063 0.51204 lineto
0.65199 0.50814 lineto
0.65282 0.50411 lineto
0.65309 0.50002 lineto
stroke
grestore
grestore
gsave
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1 142 201 sc6mt astore rstroke
end
grestore
grestore
%%EndDocument
 @endspecial 228 2393 a Fi(Fig)p Fq(.)g(66.)20 b(The)15 b Fh(d)527
2400 y Fe(1)546 2393 y Fh(d)570 2400 y Fe(2)602 2393 y Fq(=)e
Fh(k)k Fq(lo)q(cus)f(for)e Fh(c)f Fq(=)g(1)i(and)g Fh(k)f(<)f
Fq(1,)h(lab)q(eled)j(b)o(y)f(the)f(v)m(alue)h(of)f Fh(k)q Fq(.)p
eop
%%Page: 100 100
100 99 bop 75 -105 a Fq(100)865 b Fm(Classifying)21 b(Conics)h(\(optional\))p
1009 -84 867 2 v 606 49 a Fn(PURPOSE)c(OF)g(THE)g(PR)o(OJECT)146
151 y Fq(Put)h(conics)i(in)g(standard)e(form)g(\(including)j(rotated)d
(conics\).)35 b(Dev)o(elop)20 b(Mo)q(dules)h(to)e(do)h(this)75
207 y(task.)i(This)17 b(pro)s(ject)f(is)h(certainly)g Fn(optional)h
Fq(and)f(studen)o(ts)f(are)g(just)g(supp)q(osed)h(to)f(\\get)g(the)g(drift")
75 264 y(of)f(the)g(subtler)h(p)q(oin)o(ts)g(in)g(the)f(mo)q(dules)h(\(all)g
(of)f(whic)o(h)h(are)f(in)h(the)f(online)i(Noteb)q(o)q(ok\).)75
340 y Fn(Instructor)e(Note)p Fq(:)32 b(The)13 b(Instructor)g(Noteb)q(o)q(ok)g
(con)o(tains)g(an)g(animation)g(sho)o(wing)h(the)f(transition)75
397 y(from)h(ellipse)k(to)d(h)o(yp)q(erb)q(ola)h(as)f(the)g(eccen)o(tricit)o
(y)h(c)o(hanges.)577 521 y Fn(ANSWERS)h(F)o(OR)h(INSTR)o(UCTORS)75
622 y(Exercise)f(1.)j Fq(See)c(Exercise)g(4.)75 692 y Fn(Exercise)h(2.)j
Fq(Actually)l(,)c(I)g(used)g(this)f(little)i(calculation)g(to)d(c)o(hec)o(k)i
(the)f(co)q(de:)75 794 y Fj(CompleteSquare[a)j(x^2)k(+)f(b)h(x)f(+)h(c,)f(x])
206 844 y(2)162 894 y(-b)261 b(b)131 b(2)162 944 y(---)21 b(+)h(c)g(+)f(a)h
(\(---)f(+)g(x\))162 993 y(4)h(a)217 b(2)22 b(a)75 1122 y Fn(Exercise)15
b(3.)k Fq(The)13 b(answ)o(ers)f(are)h(visible)i(in)f(the)f(co)q(de|the)g
(studen)o(ts)g(are)g(supp)q(osed)h(to)e(notice)i(that!)75 1178
y(Let)j Fh(y)g Fq(=)f(cos)8 b Fh(u)17 b Fq(where)g Fh(u)e Fq(=)h(arctan)7
b Fh(g)r Fq(.)24 b(Then)17 b(from)f(the)h(latter,)g Fh(g)g
Fq(=)e(tan)8 b Fh(u)p Fq(,)17 b(whic)o(h)g(in)h(turn)f(implies)75
1235 y(\(for)f(acute)g(angles\))h(that)f(cos)7 b Fh(u)15 b
Fq(=)h(1)p Fh(=)748 1197 y Fd(p)p 789 1197 122 2 v 789 1235
a Fq(1)10 b(+)g Fh(g)891 1222 y Fe(2)925 1235 y Fq(=)16 b(cos)o(\(arctan)7
b Fh(g)r Fq(\).)23 b(Similarly)c(sin)8 b Fh(u)15 b Fq(=)h Fh(g)r(=)1663
1197 y Fd(p)p 1703 1197 V 1703 1235 a Fq(1)10 b(+)h Fh(g)1806
1222 y Fe(2)1840 1235 y Fq(=)75 1291 y(sin)q(\(arctan)6 b Fh(g)r
Fq(\).)146 1367 y(No)o(w)14 b(let)i Fh(y)f Fq(=)f(cos)7 b Fh(u)16
b Fq(where)f Fh(u)f Fq(=)735 1349 y Fe(1)p 735 1356 18 2 v
735 1383 a(2)765 1367 y Fq(arctan)7 b Fh(g)r Fq(.)20 b(Then)c(from)f(the)h
(latter,)e Fh(g)h Fq(=)e(tan)7 b(2)p Fh(u)16 b Fq(and)f(cos)8
b(2)p Fh(u)13 b Fq(=)75 1428 y(1)p Fh(=)121 1391 y Fd(p)p 162
1391 122 2 v 162 1428 a Fq(1)d(+)g Fh(g)264 1415 y Fe(2)283
1428 y Fq(.)20 b(Hence:)718 1554 y(cos)7 b Fh(u)42 b Fq(=)931
1487 y Fd(r)p 972 1487 206 2 v 977 1523 a Fq(cos)8 b(2)p Fh(u)i
Fq(+)g(1)p 977 1543 196 2 v 1064 1585 a(2)854 1695 y(=)931
1605 y Fd(v)931 1628 y(u)931 1653 y(u)931 1678 y(t)p 975 1605
252 2 v 980 1627 a(p)p 1021 1627 122 2 v 1021 1664 a Fq(1)g(+)g
Fh(g)1123 1651 y Fe(2)1152 1664 y Fq(+)h(1)p 980 1685 242 2
v 1007 1731 a(2)1030 1693 y Fd(p)p 1072 1693 122 2 v 38 x Fq(1)e(+)i
Fh(g)1174 1718 y Fe(2)854 1809 y Fq(=)42 b(cos\()1015 1791
y Fe(1)p 1015 1798 18 2 v 1015 1824 a(2)1044 1809 y Fq(arctan)7
b Fh(g)r Fq(\))p Fh(:)75 1905 y Fq(Similarly)649 2011 y(sin)q(\()728
1994 y Fe(1)p 728 2001 V 728 2027 a(2)758 2011 y Fq(arctan)g
Fh(g)r Fq(\))k(=)993 1921 y Fd(v)993 1944 y(u)993 1969 y(u)993
1994 y(t)p 1037 1921 252 2 v 1042 1943 a(p)p 1084 1943 122
2 v 38 x Fq(1)e(+)i Fh(g)1186 1968 y Fe(2)1215 1981 y Fg(\000)g
Fq(1)p 1042 2001 242 2 v 1070 2047 a(2)1093 2009 y Fd(p)p 1134
2009 122 2 v 1134 2047 a Fq(1)f(+)g Fh(g)1236 2034 y Fe(2)1288
2011 y Fh(:)75 2151 y Fn(Exercise)17 b(4.)j Fq(See)c(Figure)f(67|in)g(eac)o
(h)g(case)h(the)f(plot)g(range)g(w)o(as)g([)p Fg(\000)p Fq(10)p
Fh(;)8 b Fq(10].)75 2227 y Fn(Exercise)17 b(5.)j Fq(See)c(Figure)f(68)g(\(w)o
(e)f(omitted)i(part)e(\(e\),)h(whic)o(h)h(is)f(a)g Fl(cir)n(cle)s
Fq(\).)126 2329 y(a\))22 b(Use)15 b(co)q(de)h(lik)o(e:)189
2429 y Fj(q)21 b(=)h(9x^2)f(-)g(16y^2)g(-)h(54x)f(-)g(63;)189
2479 y(CompleteSquareXY)o([q,)d(x,)k(y])189 2529 y(ImplicitPlot[q)d(==)i(0,)g
({x,)g(-10,)g(10}])646 2579 y(2)153 b(2)276 2629 y(-144)21
b(+)g(9)h(\(-3)f(+)h(x\))43 b(-)21 b(16)h(y)p eop
%%Page: 101 101
101 100 bop 75 -105 a Fm(Classifying)21 b(Conics)h(\(optional\))p
75 -84 867 2 v 865 w Fq(101)480 1000 y @beginspecial 0 @llx
0 @lly 525 @urx 528 @ury 2377 @rwi @setspecial
%%BeginDocument: Conics.ex4.eps


/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /TDeps_dict 20 dict def TDeps_dict begin /showpage {
    
} def /copypage {
    
} def /grestoreall {
    
} def /erasepage {
    
} def /nulldevice {
    
} def /exitserver {
    
} def /initgraphics {
    
} def /renderbands {
    
} def /initmatrix {
    
} def /banddevice {
    
} def /setpageparams {
    
} def /framedevice {
    
} def /note {
    
} def end end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
gsave
0 0 524.471619 527.956177 rectclip
-19 -193.512085 translate
19 193.512085 524.471619 527.956177 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
gsave clpmt currentmatrix pop newpath
1 0 0 1.014218 -145 212.36972 sc5mt astore pop false {
    sc5mt dodrawctm 165 290.5 282 211 0 rfpath unpagectm
} {
    282 211 165 290.5 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -145 217] dodrawctm
165 290.5 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	211.640686 def
/Mwidth		282.000000 def
/Mheight	211.640686 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.261905 0.119048 0.375 0.119048 [
[(-2)] 0.02381 0.375 0 2 Msboxa
[(2)] 0.5 0.375 0 2 Msboxa
[(4)] 0.7381 0.375 0 2 Msboxa
[(6)] 0.97619 0.375 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(Part a)] 0.5 0.75 0 -2 Msboxa
grestore
[(-3)] 0.2494 0.01786 1 0 Msboxa
[(-2)] 0.2494 0.1369 1 0 Msboxa
[(-1)] 0.2494 0.25595 1 0 Msboxa
[(1)] 0.2494 0.49405 1 0 Msboxa
[(2)] 0.2494 0.6131 1 0 Msboxa
[(3)] 0.2494 0.73214 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.751 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.375 moveto
0.02381 0.38125 lineto
stroke
grestore
[(-2)] 0.02381 0.375 0 2 Mshowa
gsave
0.002 setlinewidth
0.5 0.375 moveto
0.5 0.38125 lineto
stroke
grestore
[(2)] 0.5 0.375 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.375 moveto
0.7381 0.38125 lineto
stroke
grestore
[(4)] 0.7381 0.375 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.375 moveto
0.97619 0.38125 lineto
stroke
grestore
[(6)] 0.97619 0.375 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.375 moveto
0.07143 0.37875 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.375 moveto
0.11905 0.37875 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.375 moveto
0.16667 0.37875 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.375 moveto
0.21429 0.37875 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.375 moveto
0.30952 0.37875 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.375 moveto
0.35714 0.37875 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.375 moveto
0.40476 0.37875 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.375 moveto
0.45238 0.37875 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.375 moveto
0.54762 0.37875 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.375 moveto
0.59524 0.37875 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.375 moveto
0.64286 0.37875 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.375 moveto
0.69048 0.37875 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.375 moveto
0.78571 0.37875 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.375 moveto
0.83333 0.37875 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.375 moveto
0.88095 0.37875 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.375 moveto
0.92857 0.37875 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.375 moveto
1 0.375 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(Part a)] 0.5 0.75 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.2619 0.01786 moveto
0.26815 0.01786 lineto
stroke
grestore
[(-3)] 0.2494 0.01786 1 0 Mshowa
gsave
0.002 setlinewidth
0.2619 0.1369 moveto
0.26815 0.1369 lineto
stroke
grestore
[(-2)] 0.2494 0.1369 1 0 Mshowa
gsave
0.002 setlinewidth
0.2619 0.25595 moveto
0.26815 0.25595 lineto
stroke
grestore
[(-1)] 0.2494 0.25595 1 0 Mshowa
gsave
0.002 setlinewidth
0.2619 0.49405 moveto
0.26815 0.49405 lineto
stroke
grestore
[(1)] 0.2494 0.49405 1 0 Mshowa
gsave
0.002 setlinewidth
0.2619 0.6131 moveto
0.26815 0.6131 lineto
stroke
grestore
[(2)] 0.2494 0.6131 1 0 Mshowa
gsave
0.002 setlinewidth
0.2619 0.73214 moveto
0.26815 0.73214 lineto
stroke
grestore
[(3)] 0.2494 0.73214 1 0 Mshowa
gsave
0.001 setlinewidth
0.2619 0.04167 moveto
0.26565 0.04167 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2619 0.06548 moveto
0.26565 0.06548 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2619 0.08929 moveto
0.26565 0.08929 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2619 0.1131 moveto
0.26565 0.1131 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2619 0.16071 moveto
0.26565 0.16071 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2619 0.18452 moveto
0.26565 0.18452 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2619 0.20833 moveto
0.26565 0.20833 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2619 0.23214 moveto
0.26565 0.23214 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2619 0.27976 moveto
0.26565 0.27976 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2619 0.30357 moveto
0.26565 0.30357 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2619 0.32738 moveto
0.26565 0.32738 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2619 0.35119 moveto
0.26565 0.35119 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2619 0.39881 moveto
0.26565 0.39881 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2619 0.42262 moveto
0.26565 0.42262 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2619 0.44643 moveto
0.26565 0.44643 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2619 0.47024 moveto
0.26565 0.47024 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2619 0.51786 moveto
0.26565 0.51786 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2619 0.54167 moveto
0.26565 0.54167 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2619 0.56548 moveto
0.26565 0.56548 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2619 0.58929 moveto
0.26565 0.58929 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2619 0.6369 moveto
0.26565 0.6369 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2619 0.66071 moveto
0.26565 0.66071 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2619 0.68452 moveto
0.26565 0.68452 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2619 0.70833 moveto
0.26565 0.70833 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.2619 0 moveto
0.2619 0.75 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.75 lineto
0 0.75 lineto
closepath
clip
newpath
gsave
gsave
grestore
gsave
gsave
0.004 setlinewidth
0.02381 0.37489 moveto
0.02788 0.32838 lineto
0.04004 0.28256 lineto
0.06006 0.23833 lineto
0.08761 0.19643 lineto
0.12221 0.15759 lineto
0.16328 0.12246 lineto
0.21011 0.09166 lineto
0.2619 0.06571 lineto
0.31777 0.04504 lineto
0.37675 0.03003 lineto
0.43784 0.02091 lineto
0.5 0.01786 lineto
0.56216 0.02091 lineto
0.62325 0.03003 lineto
0.68223 0.04504 lineto
0.7381 0.06571 lineto
0.78989 0.09166 lineto
0.83672 0.12246 lineto
0.87779 0.15759 lineto
0.91239 0.19643 lineto
0.93994 0.23833 lineto
0.95996 0.28256 lineto
0.97212 0.32838 lineto
0.97619 0.37489 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.02381 0.37511 moveto
0.02788 0.42162 lineto
0.04004 0.46744 lineto
0.06006 0.51167 lineto
0.08761 0.55357 lineto
0.12221 0.59241 lineto
0.16328 0.62754 lineto
0.21011 0.65834 lineto
0.2619 0.68429 lineto
0.31777 0.70496 lineto
0.37675 0.71997 lineto
0.43784 0.72909 lineto
0.5 0.73214 lineto
0.56216 0.72909 lineto
0.62325 0.71997 lineto
0.68223 0.70496 lineto
0.7381 0.68429 lineto
0.78989 0.65834 lineto
0.83672 0.62754 lineto
0.87779 0.59241 lineto
0.91239 0.55357 lineto
0.93994 0.51167 lineto
0.95996 0.46744 lineto
0.97212 0.42162 lineto
0.97619 0.37511 lineto
stroke
grestore
grestore
gsave
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 290.5 282 211 1 0 0 1.014218 -145 212.36972 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1 109 181 sc5mt astore pop false {
    sc5mt dodrawctm 198.5 252.5 215 287 0 rfpath unpagectm
} {
    215 287 198.5 252.5 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 109 181] dodrawctm
198.5 252.5 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	287.000000 def
/Mwidth		215.358032 def
/Mheight	287.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.18254 0.15873 0.666667 0.15873 [
[(-1)] 0.02381 0.66667 0 2 Msboxa
[(1)] 0.34127 0.66667 0 2 Msboxa
[(2)] 0.5 0.66667 0 2 Msboxa
[(3)] 0.65873 0.66667 0 2 Msboxa
[(4)] 0.81746 0.66667 0 2 Msboxa
[(5)] 0.97619 0.66667 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(Part b)] 0.5 1.33333 0 -2 Msboxa
grestore
[(-4)] 0.17004 0.03175 1 0 Msboxa
[(-2)] 0.17004 0.34921 1 0 Msboxa
[(2)] 0.17004 0.98413 1 0 Msboxa
[(4)] 0.17004 1.30159 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.33433 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.66667 moveto
0.02381 0.67292 lineto
stroke
grestore
[(-1)] 0.02381 0.66667 0 2 Mshowa
gsave
0.002 setlinewidth
0.34127 0.66667 moveto
0.34127 0.67292 lineto
stroke
grestore
[(1)] 0.34127 0.66667 0 2 Mshowa
gsave
0.002 setlinewidth
0.5 0.66667 moveto
0.5 0.67292 lineto
stroke
grestore
[(2)] 0.5 0.66667 0 2 Mshowa
gsave
0.002 setlinewidth
0.65873 0.66667 moveto
0.65873 0.67292 lineto
stroke
grestore
[(3)] 0.65873 0.66667 0 2 Mshowa
gsave
0.002 setlinewidth
0.81746 0.66667 moveto
0.81746 0.67292 lineto
stroke
grestore
[(4)] 0.81746 0.66667 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.66667 moveto
0.97619 0.67292 lineto
stroke
grestore
[(5)] 0.97619 0.66667 0 2 Mshowa
gsave
0.001 setlinewidth
0.05556 0.66667 moveto
0.05556 0.67042 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.0873 0.66667 moveto
0.0873 0.67042 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.66667 moveto
0.11905 0.67042 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.15079 0.66667 moveto
0.15079 0.67042 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.66667 moveto
0.21429 0.67042 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.24603 0.66667 moveto
0.24603 0.67042 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.27778 0.66667 moveto
0.27778 0.67042 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.66667 moveto
0.30952 0.67042 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.37302 0.66667 moveto
0.37302 0.67042 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.66667 moveto
0.40476 0.67042 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.43651 0.66667 moveto
0.43651 0.67042 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46825 0.66667 moveto
0.46825 0.67042 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53175 0.66667 moveto
0.53175 0.67042 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56349 0.66667 moveto
0.56349 0.67042 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.66667 moveto
0.59524 0.67042 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.62698 0.66667 moveto
0.62698 0.67042 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.66667 moveto
0.69048 0.67042 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72222 0.66667 moveto
0.72222 0.67042 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.75397 0.66667 moveto
0.75397 0.67042 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.66667 moveto
0.78571 0.67042 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84921 0.66667 moveto
0.84921 0.67042 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.66667 moveto
0.88095 0.67042 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9127 0.66667 moveto
0.9127 0.67042 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.94444 0.66667 moveto
0.94444 0.67042 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.66667 moveto
1 0.66667 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(Part b)] 0.5 1.33333 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.18254 0.03175 moveto
0.18879 0.03175 lineto
stroke
grestore
[(-4)] 0.17004 0.03175 1 0 Mshowa
gsave
0.002 setlinewidth
0.18254 0.34921 moveto
0.18879 0.34921 lineto
stroke
grestore
[(-2)] 0.17004 0.34921 1 0 Mshowa
gsave
0.002 setlinewidth
0.18254 0.98413 moveto
0.18879 0.98413 lineto
stroke
grestore
[(2)] 0.17004 0.98413 1 0 Mshowa
gsave
0.002 setlinewidth
0.18254 1.30159 moveto
0.18879 1.30159 lineto
stroke
grestore
[(4)] 0.17004 1.30159 1 0 Mshowa
gsave
0.001 setlinewidth
0.18254 0.09524 moveto
0.18629 0.09524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18254 0.15873 moveto
0.18629 0.15873 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18254 0.22222 moveto
0.18629 0.22222 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18254 0.28571 moveto
0.18629 0.28571 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18254 0.4127 moveto
0.18629 0.4127 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18254 0.47619 moveto
0.18629 0.47619 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18254 0.53968 moveto
0.18629 0.53968 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18254 0.60317 moveto
0.18629 0.60317 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18254 0.73016 moveto
0.18629 0.73016 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18254 0.79365 moveto
0.18629 0.79365 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18254 0.85714 moveto
0.18629 0.85714 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18254 0.92063 moveto
0.18629 0.92063 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18254 1.04762 moveto
0.18629 1.04762 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18254 1.11111 moveto
0.18629 1.11111 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18254 1.1746 moveto
0.18629 1.1746 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18254 1.2381 moveto
0.18629 1.2381 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.18254 0 moveto
0.18254 1.33333 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1.33333 lineto
0 1.33333 lineto
closepath
clip
newpath
gsave
gsave
grestore
gsave
gsave
0.004 setlinewidth
0.02381 0.66643 moveto
0.02788 0.58379 lineto
0.04004 0.50234 lineto
0.06006 0.42369 lineto
0.08761 0.34921 lineto
0.12221 0.28015 lineto
0.16328 0.21771 lineto
0.21011 0.16295 lineto
0.2619 0.11681 lineto
0.31777 0.08008 lineto
0.37675 0.05338 lineto
0.43784 0.03718 lineto
0.5 0.03175 lineto
0.56216 0.03718 lineto
0.62325 0.05338 lineto
0.68223 0.08008 lineto
0.7381 0.11681 lineto
0.78989 0.16295 lineto
0.83672 0.21771 lineto
0.87779 0.28015 lineto
0.91239 0.34921 lineto
0.93994 0.42369 lineto
0.95996 0.50234 lineto
0.97212 0.58379 lineto
0.97619 0.66643 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.02381 0.6669 moveto
0.02788 0.74954 lineto
0.04004 0.831 lineto
0.06006 0.90964 lineto
0.08761 0.98413 lineto
0.12221 1.05318 lineto
0.16328 1.11562 lineto
0.21011 1.17038 lineto
0.2619 1.21652 lineto
0.31777 1.25326 lineto
0.37675 1.27995 lineto
0.43784 1.29616 lineto
0.5 1.30159 lineto
0.56216 1.29616 lineto
0.62325 1.27995 lineto
0.68223 1.25326 lineto
0.7381 1.21652 lineto
0.78989 1.17038 lineto
0.83672 1.11562 lineto
0.87779 1.05318 lineto
0.91239 0.98413 lineto
0.93994 0.90964 lineto
0.95996 0.831 lineto
0.97212 0.74954 lineto
0.97619 0.6669 lineto
stroke
grestore
grestore
gsave
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 198.5 252.5 215 287 1 0 0 1 109 181 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.01046 -146 -84.892273 sc5mt astore pop false {
    sc5mt dodrawctm 165 276.5 282 239 0 rfpath unpagectm
} {
    282 239 165 276.5 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -146 -82] dodrawctm
165 276.5 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	239.370697 def
/Mwidth		282.000000 def
/Mheight	239.370697 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.047619 0.424264 0.047619 [
[(-10)] 0.02381 0.42426 0 2 Msboxa
[(-5)] 0.2619 0.42426 0 2 Msboxa
[(5)] 0.7381 0.42426 0 2 Msboxa
[(10)] 0.97619 0.42426 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(Part c)] 0.5 0.84853 0 -2 Msboxa
grestore
[(-7.5)] 0.4875 0.06712 1 0 Msboxa
[(-5)] 0.4875 0.18617 1 0 Msboxa
[(-2.5)] 0.4875 0.30522 1 0 Msboxa
[(2.5)] 0.4875 0.54331 1 0 Msboxa
[(5)] 0.4875 0.66236 1 0 Msboxa
[(7.5)] 0.4875 0.78141 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.84953 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.42426 moveto
0.02381 0.43051 lineto
stroke
grestore
[(-10)] 0.02381 0.42426 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.42426 moveto
0.2619 0.43051 lineto
stroke
grestore
[(-5)] 0.2619 0.42426 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.42426 moveto
0.7381 0.43051 lineto
stroke
grestore
[(5)] 0.7381 0.42426 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.42426 moveto
0.97619 0.43051 lineto
stroke
grestore
[(10)] 0.97619 0.42426 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.42426 moveto
0.07143 0.42801 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.42426 moveto
0.11905 0.42801 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.42426 moveto
0.16667 0.42801 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.42426 moveto
0.21429 0.42801 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.42426 moveto
0.30952 0.42801 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.42426 moveto
0.35714 0.42801 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.42426 moveto
0.40476 0.42801 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.42426 moveto
0.45238 0.42801 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.42426 moveto
0.54762 0.42801 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.42426 moveto
0.59524 0.42801 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.42426 moveto
0.64286 0.42801 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.42426 moveto
0.69048 0.42801 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.42426 moveto
0.78571 0.42801 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.42426 moveto
0.83333 0.42801 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.42426 moveto
0.88095 0.42801 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.42426 moveto
0.92857 0.42801 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.42426 moveto
1 0.42426 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(Part c)] 0.5 0.84853 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.06712 moveto
0.50625 0.06712 lineto
stroke
grestore
[(-7.5)] 0.4875 0.06712 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.18617 moveto
0.50625 0.18617 lineto
stroke
grestore
[(-5)] 0.4875 0.18617 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.30522 moveto
0.50625 0.30522 lineto
stroke
grestore
[(-2.5)] 0.4875 0.30522 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.54331 moveto
0.50625 0.54331 lineto
stroke
grestore
[(2.5)] 0.4875 0.54331 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.66236 moveto
0.50625 0.66236 lineto
stroke
grestore
[(5)] 0.4875 0.66236 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.78141 moveto
0.50625 0.78141 lineto
stroke
grestore
[(7.5)] 0.4875 0.78141 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.09093 moveto
0.50375 0.09093 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.11474 moveto
0.50375 0.11474 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13855 moveto
0.50375 0.13855 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.16236 moveto
0.50375 0.16236 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.20998 moveto
0.50375 0.20998 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.23379 moveto
0.50375 0.23379 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.2576 moveto
0.50375 0.2576 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.28141 moveto
0.50375 0.28141 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.32903 moveto
0.50375 0.32903 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.35284 moveto
0.50375 0.35284 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.37665 moveto
0.50375 0.37665 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40045 moveto
0.50375 0.40045 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.44807 moveto
0.50375 0.44807 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.47188 moveto
0.50375 0.47188 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.49569 moveto
0.50375 0.49569 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.5195 moveto
0.50375 0.5195 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.56712 moveto
0.50375 0.56712 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59093 moveto
0.50375 0.59093 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.61474 moveto
0.50375 0.61474 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.63855 moveto
0.50375 0.63855 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.68617 moveto
0.50375 0.68617 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.70998 moveto
0.50375 0.70998 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.73379 moveto
0.50375 0.73379 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.7576 moveto
0.50375 0.7576 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.04331 moveto
0.50375 0.04331 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.0195 moveto
0.50375 0.0195 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.80522 moveto
0.50375 0.80522 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.82903 moveto
0.50375 0.82903 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.84853 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.84853 lineto
0 0.84853 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.0202 moveto
0.02544 0.0215 lineto
0.0303 0.02537 lineto
0.03831 0.03176 lineto
0.04933 0.04056 lineto
0.06317 0.05166 lineto
0.0796 0.06489 lineto
0.09833 0.08005 lineto
0.11905 0.09694 lineto
0.14139 0.11531 lineto
0.16499 0.13492 lineto
0.18942 0.15551 lineto
0.21429 0.17683 lineto
0.23915 0.19862 lineto
0.26358 0.22064 lineto
0.28718 0.24268 lineto
0.30952 0.26454 lineto
0.33024 0.28609 lineto
0.34897 0.30719 lineto
0.3654 0.3278 lineto
0.37924 0.34788 lineto
0.39026 0.36747 lineto
0.39827 0.38665 lineto
0.40313 0.40554 lineto
0.40476 0.42422 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.02381 0.82833 moveto
0.02544 0.82703 lineto
0.0303 0.82316 lineto
0.03831 0.81677 lineto
0.04933 0.80797 lineto
0.06317 0.79687 lineto
0.0796 0.78364 lineto
0.09833 0.76848 lineto
0.11905 0.75159 lineto
0.14139 0.73322 lineto
0.16499 0.71361 lineto
0.18942 0.69302 lineto
0.21429 0.6717 lineto
0.23915 0.64991 lineto
0.26358 0.62789 lineto
0.28718 0.60585 lineto
0.30952 0.58398 lineto
0.33024 0.56244 lineto
0.34897 0.54133 lineto
0.3654 0.52073 lineto
0.37924 0.50065 lineto
0.39026 0.48106 lineto
0.39827 0.46187 lineto
0.40313 0.44299 lineto
0.40476 0.42431 lineto
stroke
grestore
grestore
gsave
grestore
gsave
gsave
0.004 setlinewidth
0.78571 0.42422 moveto
0.78653 0.41104 lineto
0.78896 0.39778 lineto
0.79296 0.38448 lineto
0.79847 0.37111 lineto
0.80539 0.35767 lineto
0.81361 0.34417 lineto
0.82298 0.33064 lineto
0.83333 0.31712 lineto
0.84451 0.30367 lineto
0.8563 0.29037 lineto
0.86852 0.27729 lineto
0.88095 0.26454 lineto
0.89338 0.25224 lineto
0.9056 0.24048 lineto
0.9174 0.2294 lineto
0.92857 0.2191 lineto
0.93893 0.2097 lineto
0.9483 0.20131 lineto
0.95651 0.19403 lineto
0.96343 0.18794 lineto
0.96894 0.18313 lineto
0.97295 0.17964 lineto
0.97538 0.17753 lineto
0.97619 0.17683 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.78571 0.42431 moveto
0.78653 0.43749 lineto
0.78896 0.45075 lineto
0.79296 0.46405 lineto
0.79847 0.47742 lineto
0.80539 0.49086 lineto
0.81361 0.50436 lineto
0.82298 0.51789 lineto
0.83333 0.53141 lineto
0.84451 0.54486 lineto
0.8563 0.55816 lineto
0.86852 0.57124 lineto
0.88095 0.58398 lineto
0.89338 0.59629 lineto
0.9056 0.60804 lineto
0.9174 0.61913 lineto
0.92857 0.62943 lineto
0.93893 0.63883 lineto
0.9483 0.64722 lineto
0.95651 0.6545 lineto
0.96343 0.66059 lineto
0.96894 0.6654 lineto
0.97295 0.66889 lineto
0.97538 0.67099 lineto
0.97619 0.6717 lineto
stroke
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 276.5 282 239 1 0 0 1.01046 -146 -84.892273 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.013393 119 -93.803589 sc5mt astore pop false {
    sc5mt dodrawctm 188 284 236 224 0 rfpath unpagectm
} {
    236 224 188 284 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 119 -90] dodrawctm
188 284 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	224.681107 def
/Mwidth		236.809967 def
/Mheight	224.681107 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.047619 0.474342 0.047619 [
[(-10)] 0.02381 0.47434 0 2 Msboxa
[(-5)] 0.2619 0.47434 0 2 Msboxa
[(5)] 0.7381 0.47434 0 2 Msboxa
[(10)] 0.97619 0.47434 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(Part d)] 0.5 0.94868 0 -2 Msboxa
grestore
[(-7.5)] 0.4875 0.1172 1 0 Msboxa
[(-5)] 0.4875 0.23625 1 0 Msboxa
[(-2.5)] 0.4875 0.35529 1 0 Msboxa
[(2.5)] 0.4875 0.59339 1 0 Msboxa
[(5)] 0.4875 0.71244 1 0 Msboxa
[(7.5)] 0.4875 0.83148 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.94968 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.47434 moveto
0.02381 0.48059 lineto
stroke
grestore
[(-10)] 0.02381 0.47434 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.47434 moveto
0.2619 0.48059 lineto
stroke
grestore
[(-5)] 0.2619 0.47434 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.47434 moveto
0.7381 0.48059 lineto
stroke
grestore
[(5)] 0.7381 0.47434 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.47434 moveto
0.97619 0.48059 lineto
stroke
grestore
[(10)] 0.97619 0.47434 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.47434 moveto
0.07143 0.47809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.47434 moveto
0.11905 0.47809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.47434 moveto
0.16667 0.47809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.47434 moveto
0.21429 0.47809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.47434 moveto
0.30952 0.47809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.47434 moveto
0.35714 0.47809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.47434 moveto
0.40476 0.47809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.47434 moveto
0.45238 0.47809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.47434 moveto
0.54762 0.47809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.47434 moveto
0.59524 0.47809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.47434 moveto
0.64286 0.47809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.47434 moveto
0.69048 0.47809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.47434 moveto
0.78571 0.47809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.47434 moveto
0.83333 0.47809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.47434 moveto
0.88095 0.47809 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.47434 moveto
0.92857 0.47809 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.47434 moveto
1 0.47434 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(Part d)] 0.5 0.94868 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.1172 moveto
0.50625 0.1172 lineto
stroke
grestore
[(-7.5)] 0.4875 0.1172 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.23625 moveto
0.50625 0.23625 lineto
stroke
grestore
[(-5)] 0.4875 0.23625 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.35529 moveto
0.50625 0.35529 lineto
stroke
grestore
[(-2.5)] 0.4875 0.35529 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.59339 moveto
0.50625 0.59339 lineto
stroke
grestore
[(2.5)] 0.4875 0.59339 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.71244 moveto
0.50625 0.71244 lineto
stroke
grestore
[(5)] 0.4875 0.71244 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.83148 moveto
0.50625 0.83148 lineto
stroke
grestore
[(7.5)] 0.4875 0.83148 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.02196 moveto
0.50375 0.02196 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.04577 moveto
0.50375 0.04577 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.06958 moveto
0.50375 0.06958 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.09339 moveto
0.50375 0.09339 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.14101 moveto
0.50375 0.14101 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.16482 moveto
0.50375 0.16482 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18863 moveto
0.50375 0.18863 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.21244 moveto
0.50375 0.21244 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.26006 moveto
0.50375 0.26006 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.28387 moveto
0.50375 0.28387 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.30767 moveto
0.50375 0.30767 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.33148 moveto
0.50375 0.33148 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.3791 moveto
0.50375 0.3791 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40291 moveto
0.50375 0.40291 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.42672 moveto
0.50375 0.42672 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45053 moveto
0.50375 0.45053 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.49815 moveto
0.50375 0.49815 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.52196 moveto
0.50375 0.52196 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54577 moveto
0.50375 0.54577 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.56958 moveto
0.50375 0.56958 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.6172 moveto
0.50375 0.6172 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.64101 moveto
0.50375 0.64101 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.66482 moveto
0.50375 0.66482 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.68863 moveto
0.50375 0.68863 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.73625 moveto
0.50375 0.73625 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.76006 moveto
0.50375 0.76006 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.78387 moveto
0.50375 0.78387 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.80767 moveto
0.50375 0.80767 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.85529 moveto
0.50375 0.85529 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.8791 moveto
0.50375 0.8791 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90291 moveto
0.50375 0.90291 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.92672 moveto
0.50375 0.92672 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.94868 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.94868 lineto
0 0.94868 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.02259 moveto
0.02788 0.02549 lineto
0.04004 0.03412 lineto
0.06006 0.04829 lineto
0.08761 0.0677 lineto
0.12221 0.09189 lineto
0.16328 0.12028 lineto
0.21011 0.1521 lineto
0.2619 0.1864 lineto
0.31777 0.22192 lineto
0.37675 0.25695 lineto
0.43784 0.28902 lineto
0.5 0.31462 lineto
0.56216 0.32935 lineto
0.62325 0.32995 lineto
0.68223 0.31729 lineto
0.7381 0.29577 lineto
0.78989 0.27009 lineto
0.83672 0.24367 lineto
0.87779 0.21877 lineto
0.91239 0.19687 lineto
0.93994 0.17897 lineto
0.95996 0.16574 lineto
0.97212 0.15763 lineto
0.97619 0.1549 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.02381 0.9261 moveto
0.02788 0.9232 lineto
0.04004 0.91457 lineto
0.06006 0.90039 lineto
0.08761 0.88098 lineto
0.12221 0.85679 lineto
0.16328 0.82841 lineto
0.21011 0.79658 lineto
0.2619 0.76228 lineto
0.31777 0.72676 lineto
0.37675 0.69173 lineto
0.43784 0.65966 lineto
0.5 0.63406 lineto
0.56216 0.61934 lineto
0.62325 0.61874 lineto
0.68223 0.63139 lineto
0.7381 0.65291 lineto
0.78989 0.6786 lineto
0.83672 0.70501 lineto
0.87779 0.72991 lineto
0.91239 0.75181 lineto
0.93994 0.76971 lineto
0.95996 0.78294 lineto
0.97212 0.79105 lineto
0.97619 0.79378 lineto
stroke
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 188 284 236 224 1 0 0 1.013393 119 -93.803589 sc6mt astore rstroke
end
grestore
grestore
%%EndDocument
 @endspecial 590 1087 a Fi(Fig)p Fq(.)15 b(67.)k(The)d(four)f(conics)h(of)f
(Exercise)h(4.)189 1216 y(Th)o(us)f(the)g(standard)g(form)f(is)801
1232 y Fd(\022)837 1261 y Fh(x)c Fg(\000)g Fq(3)p 837 1281
105 2 v 877 1323 a(4)946 1232 y Fd(\023)977 1243 y Fe(2)1006
1291 y Fg(\000)1052 1232 y Fd(\022)1087 1261 y Fh(y)p 1087
1281 24 2 v 1088 1323 a Fq(3)1116 1232 y Fd(\023)1147 1243
y Fe(2)1179 1291 y Fq(=)j(1)p Fh(;)189 1397 y Fq(so)i(the)h
Fk(ImplicitPlot)e Fq(should)j(sho)o(w)e(a)h(graph)f(of)h(a)f(h)o(yp)q(erb)q
(ola)i(with)f(cen)o(ter)g(\(3)p Fh(;)8 b Fq(0\),)14 b(v)o(ertices)189
1453 y(\(3)9 b Fg(\006)i Fq(4)p Fh(;)d Fq(0\),)13 b(and)i(fo)q(ci)h(\(3)9
b Fg(\006)i Fq(5)p Fh(;)d Fq(0\).)123 1543 y(b\))502 b Fj(2)305
b(2)276 1592 y(-400)21 b(+)g(16)h(\(-5)f(+)g(x\))44 b(+)21
b(25)h(\(-4)f(+)g(y\))189 1669 y Fq(Th)o(us)15 b(the)g(standard)g(form)f(is)
762 1730 y Fd(\022)798 1759 y Fh(x)c Fg(\000)g Fq(5)p 798 1779
105 2 v 838 1821 a(5)907 1730 y Fd(\023)937 1741 y Fe(2)967
1789 y Fq(+)1013 1730 y Fd(\022)1048 1759 y Fh(y)i Fg(\000)f
Fq(4)p 1048 1779 103 2 v 1088 1821 a(4)1155 1730 y Fd(\023)1186
1741 y Fe(2)1218 1789 y Fq(=)i(1)p Fh(;)189 1913 y Fq(so)h(the)h
Fk(ImplicitPlot)f Fq(should)i(sho)o(w)e(a)h(graph)g(of)g(an)g(ellipse)i(with)
e(cen)o(ter)g(\(5)p Fh(;)8 b Fq(4\),)13 b(ma)s(jor)h(axis)189
1970 y(v)o(ertices)h(\(5)10 b Fg(\006)g Fq(5)p Fh(;)e Fq(4\),)13
b(minor)j(axis)f(v)o(ertices)h(\(5)p Fh(;)8 b Fq(4)g Fg(\006)j
Fq(4\))j(and)h(fo)q(ci)h(\(5)10 b Fg(\006)g Fq(3)p Fh(;)e Fq(4\).)128
2059 y(c\))437 b Fj(2)283 b(2)276 2109 y(-5)21 b(-)h(3)f(\(-1)h(+)f(x\))43
b(+)22 b(2)f(\(-2)h(+)f(y\))189 2185 y Fq(Th)o(us)15 b(the)g(standard)g(form)
f(is)793 2274 y(\()p Fh(y)d Fg(\000)g Fq(2\))931 2258 y Fe(2)p
793 2295 158 2 v 837 2336 a Fq(5)p Fh(=)p Fq(2)965 2305 y Fg(\000)1016
2274 y Fq(\()p Fh(x)e Fg(\000)i Fq(1\))1156 2258 y Fe(2)p 1016
2295 160 2 v 1061 2336 a Fq(5)p Fh(=)p Fq(3)1193 2305 y(=)h(1)p
Fh(;)189 2433 y Fq(so)j(the)h Fk(ImplicitPlot)e Fq(should)j(sho)o(w)e(a)h
(graph)f(of)h(a)f(h)o(yp)q(erb)q(ola)i(with)f(cen)o(ter)g(\(1)p
Fh(;)8 b Fq(2\),)14 b(v)o(ertices)189 2490 y(\(1)p Fh(;)8 b
Fq(2)g Fg(\006)328 2453 y Fd(p)p 369 2453 69 2 v 369 2490 a
Fq(5)p Fh(=)p Fq(2)o(\),)15 b(and)g(fo)q(ci)h(\(1)p Fh(;)8
b Fq(2)g Fg(\006)j Fq(5)p Fh(=)842 2452 y Fg(p)p 879 2452 23
2 v 879 2490 a Fq(6\).)p eop
%%Page: 102 102
102 101 bop 75 -105 a Fq(102)865 b Fm(Classifying)21 b(Conics)h(\(optional\))
p 1009 -84 867 2 v 123 49 a Fq(d\))306 b Fj(3)109 b(2)130 b(1)109
b(2)276 99 y(-32)21 b(+)h(8)f(\(-)h(+)f(x\))43 b(+)22 b(4)f(\(-)h(+)f(y\))472
149 y(2)261 b(2)189 224 y Fq(Th)o(us)15 b(the)g(standard)g(form)f(is)717
286 y Fd(\022)752 315 y Fh(x)c Fq(+)h(3)p Fh(=)p Fq(2)p 752
335 150 2 v 816 377 a(2)907 286 y Fd(\023)937 294 y Fe(2)967
345 y Fq(+)1013 286 y Fd(\022)1048 315 y Fh(y)h Fq(+)f(1)p
Fh(=)p Fq(2)p 1048 335 148 2 v 1080 381 a(2)1103 344 y Fg(p)p
1141 344 23 2 v 37 x Fq(2)1201 286 y Fd(\023)1231 294 y Fe(2)1264
345 y Fq(=)i(1)p Fh(;)189 470 y Fq(so)20 b(the)g Fk(ImplicitPlot)f
Fq(should)i(sho)o(w)f(a)g(graph)g(of)g(an)g(ellipse)j(with)d(cen)o(ter)h(\()p
Fg(\000)p Fq(3)p Fh(=)p Fq(2)p Fh(;)8 b Fg(\000)p Fq(1)p Fh(=)p
Fq(2\),)189 526 y(ma)s(jor)j(axis)i(v)o(ertices)h(\()p Fg(\000)p
Fq(3)p Fh(=)p Fq(2)p Fh(;)8 b Fg(\000)p Fq(1)p Fh(=)p Fq(2)e
Fg(\006)g Fq(2)889 489 y Fg(p)p 924 489 V 924 526 a Fq(2\),)13
b(minor)g(axis)g(v)o(ertices)h(\()p Fg(\000)p Fq(3)p Fh(=)p
Fq(2)6 b Fg(\006)g Fq(2)p Fh(;)i Fg(\000)p Fq(1)p Fh(=)p Fq(2\))i(and)j(fo)q
(ci)189 583 y(\()p Fg(\000)p Fq(3)p Fh(=)p Fq(2)p Fh(;)8 b
Fg(\000)p Fq(1)p Fh(=)p Fq(2)g Fg(\006)i Fq(2\).)128 669 y(e\))393
b Fj(2)131 b(2)196 b(3)130 b(2)276 719 y(-144)21 b(+)g(36)h(\(-\(-\))e(+)i
(x\))43 b(+)22 b(36)f(\(-\(-\))g(+)h(y\))559 769 y(3)349 b(2)189
844 y Fq(This)15 b(is)h(a)f(circle,)h(cen)o(ter)g(\(2)p Fh(=)p
Fq(3)p Fh(;)8 b Fq(3)p Fh(=)p Fq(2\),)j(radius)16 b(2.)467
1937 y @beginspecial 0 @llx 0 @lly 570 @urx 559 @ury 2438 @rwi
@setspecial
%%BeginDocument: Conics.ex5.eps


/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /TDeps_dict 20 dict def TDeps_dict begin /showpage {
    
} def /copypage {
    
} def /grestoreall {
    
} def /erasepage {
    
} def /nulldevice {
    
} def /exitserver {
    
} def /initgraphics {
    
} def /renderbands {
    
} def /initmatrix {
    
} def /banddevice {
    
} def /setpageparams {
    
} def /framedevice {
    
} def /note {
    
} def end end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
gsave
0 0 569.036682 558.938721 rectclip
-18.963322 -215.06131 translate
18.963322 215.06131 569.036682 558.938721 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
gsave clpmt currentmatrix pop newpath
1 0 0 1.009578 -146 241.456909 sc5mt astore pop false {
    sc5mt dodrawctm 165 265.5 282 261 0 rfpath unpagectm
} {
    282 261 165 265.5 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -146 244] dodrawctm
165 265.5 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	261.652069 def
/Mwidth		282.000000 def
/Mheight	261.652069 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.047619 0.463849 0.047619 [
[(-10)] 0.02381 0.46385 0 2 Msboxa
[(-5)] 0.2619 0.46385 0 2 Msboxa
[(5)] 0.7381 0.46385 0 2 Msboxa
[(10)] 0.97619 0.46385 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(Part a)] 0.5 0.9277 0 -2 Msboxa
grestore
[(-7.5)] 0.4875 0.10671 1 0 Msboxa
[(-5)] 0.4875 0.22575 1 0 Msboxa
[(-2.5)] 0.4875 0.3448 1 0 Msboxa
[(2.5)] 0.4875 0.5829 1 0 Msboxa
[(5)] 0.4875 0.70194 1 0 Msboxa
[(7.5)] 0.4875 0.82099 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.9287 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.46385 moveto
0.02381 0.4701 lineto
stroke
grestore
[(-10)] 0.02381 0.46385 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.46385 moveto
0.2619 0.4701 lineto
stroke
grestore
[(-5)] 0.2619 0.46385 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.46385 moveto
0.7381 0.4701 lineto
stroke
grestore
[(5)] 0.7381 0.46385 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.46385 moveto
0.97619 0.4701 lineto
stroke
grestore
[(10)] 0.97619 0.46385 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.46385 moveto
0.07143 0.4676 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.46385 moveto
0.11905 0.4676 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.46385 moveto
0.16667 0.4676 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.46385 moveto
0.21429 0.4676 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.46385 moveto
0.30952 0.4676 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.46385 moveto
0.35714 0.4676 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.46385 moveto
0.40476 0.4676 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.46385 moveto
0.45238 0.4676 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.46385 moveto
0.54762 0.4676 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.46385 moveto
0.59524 0.4676 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.46385 moveto
0.64286 0.4676 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.46385 moveto
0.69048 0.4676 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.46385 moveto
0.78571 0.4676 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.46385 moveto
0.83333 0.4676 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.46385 moveto
0.88095 0.4676 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.46385 moveto
0.92857 0.4676 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.46385 moveto
1 0.46385 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(Part a)] 0.5 0.9277 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.10671 moveto
0.50625 0.10671 lineto
stroke
grestore
[(-7.5)] 0.4875 0.10671 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.22575 moveto
0.50625 0.22575 lineto
stroke
grestore
[(-5)] 0.4875 0.22575 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.3448 moveto
0.50625 0.3448 lineto
stroke
grestore
[(-2.5)] 0.4875 0.3448 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.5829 moveto
0.50625 0.5829 lineto
stroke
grestore
[(2.5)] 0.4875 0.5829 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.70194 moveto
0.50625 0.70194 lineto
stroke
grestore
[(5)] 0.4875 0.70194 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.82099 moveto
0.50625 0.82099 lineto
stroke
grestore
[(7.5)] 0.4875 0.82099 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.13052 moveto
0.50375 0.13052 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.15433 moveto
0.50375 0.15433 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.17814 moveto
0.50375 0.17814 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.20194 moveto
0.50375 0.20194 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.24956 moveto
0.50375 0.24956 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.27337 moveto
0.50375 0.27337 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.29718 moveto
0.50375 0.29718 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.32099 moveto
0.50375 0.32099 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36861 moveto
0.50375 0.36861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.39242 moveto
0.50375 0.39242 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.41623 moveto
0.50375 0.41623 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.44004 moveto
0.50375 0.44004 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.48766 moveto
0.50375 0.48766 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.51147 moveto
0.50375 0.51147 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.53528 moveto
0.50375 0.53528 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55909 moveto
0.50375 0.55909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.60671 moveto
0.50375 0.60671 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.63052 moveto
0.50375 0.63052 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.65433 moveto
0.50375 0.65433 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.67814 moveto
0.50375 0.67814 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.72575 moveto
0.50375 0.72575 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.74956 moveto
0.50375 0.74956 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.77337 moveto
0.50375 0.77337 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.79718 moveto
0.50375 0.79718 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.0829 moveto
0.50375 0.0829 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.05909 moveto
0.50375 0.05909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.03528 moveto
0.50375 0.03528 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.01147 moveto
0.50375 0.01147 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.8448 moveto
0.50375 0.8448 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.86861 moveto
0.50375 0.86861 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.89242 moveto
0.50375 0.89242 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.91623 moveto
0.50375 0.91623 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.9277 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.9277 lineto
0 0.9277 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.02209 moveto
0.02564 0.02353 lineto
0.03111 0.02785 lineto
0.04012 0.03496 lineto
0.05252 0.04478 lineto
0.06809 0.05713 lineto
0.08657 0.07186 lineto
0.10765 0.08872 lineto
0.13095 0.10749 lineto
0.15609 0.12789 lineto
0.18263 0.14963 lineto
0.21013 0.17243 lineto
0.2381 0.19599 lineto
0.26607 0.22002 lineto
0.29356 0.24425 lineto
0.3201 0.26843 lineto
0.34524 0.29234 lineto
0.36854 0.3158 lineto
0.38962 0.33869 lineto
0.4081 0.36093 lineto
0.42367 0.38251 lineto
0.43607 0.40348 lineto
0.44508 0.42392 lineto
0.45055 0.44398 lineto
0.45238 0.4638 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.02381 0.90561 moveto
0.02564 0.90417 lineto
0.03111 0.89985 lineto
0.04012 0.89274 lineto
0.05252 0.88292 lineto
0.06809 0.87056 lineto
0.08657 0.85584 lineto
0.10765 0.83898 lineto
0.13095 0.82021 lineto
0.15609 0.79981 lineto
0.18263 0.77807 lineto
0.21013 0.75527 lineto
0.2381 0.73171 lineto
0.26607 0.70768 lineto
0.29356 0.68345 lineto
0.3201 0.65927 lineto
0.34524 0.63536 lineto
0.36854 0.6119 lineto
0.38962 0.58901 lineto
0.4081 0.56677 lineto
0.42367 0.54519 lineto
0.43607 0.52422 lineto
0.44508 0.50378 lineto
0.45055 0.48372 lineto
0.45238 0.46389 lineto
stroke
grestore
grestore
gsave
grestore
gsave
gsave
0.004 setlinewidth
0.83333 0.4638 moveto
0.83394 0.4524 lineto
0.83577 0.44094 lineto
0.83877 0.42947 lineto
0.8429 0.418 lineto
0.84809 0.40653 lineto
0.85425 0.39508 lineto
0.86128 0.38368 lineto
0.86905 0.37236 lineto
0.87743 0.36117 lineto
0.88627 0.35018 lineto
0.89544 0.33944 lineto
0.90476 0.32903 lineto
0.91409 0.31903 lineto
0.92325 0.30953 lineto
0.9321 0.3006 lineto
0.94048 0.29234 lineto
0.94824 0.28482 lineto
0.95527 0.27813 lineto
0.96143 0.27233 lineto
0.96662 0.2675 lineto
0.97075 0.26368 lineto
0.97376 0.26091 lineto
0.97558 0.25925 lineto
0.97619 0.25869 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.83333 0.46389 moveto
0.83394 0.4753 lineto
0.83577 0.48676 lineto
0.83877 0.49823 lineto
0.8429 0.5097 lineto
0.84809 0.52117 lineto
0.85425 0.53262 lineto
0.86128 0.54402 lineto
0.86905 0.55534 lineto
0.87743 0.56653 lineto
0.88627 0.57752 lineto
0.89544 0.58826 lineto
0.90476 0.59867 lineto
0.91409 0.60867 lineto
0.92325 0.61817 lineto
0.9321 0.6271 lineto
0.94048 0.63536 lineto
0.94824 0.64288 lineto
0.95527 0.64957 lineto
0.96143 0.65537 lineto
0.96662 0.6602 lineto
0.97075 0.66402 lineto
0.97376 0.66678 lineto
0.97558 0.66845 lineto
0.97619 0.66901 lineto
stroke
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 265.5 282 261 1 0 0 1.009578 -146 241.456909 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.026667 140 250.939972 sc5mt astore pop false {
    sc5mt dodrawctm 165 283.5 282 225 0 rfpath unpagectm
} {
    282 225 165 283.5 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 140 262] dodrawctm
165 283.5 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	225.712555 def
/Mwidth		282.000000 def
/Mheight	225.712555 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.02381 0.095238 0.019048 0.095238 [
[(2)] 0.21429 0.01905 0 2 Msboxa
[(4)] 0.40476 0.01905 0 2 Msboxa
[(6)] 0.59524 0.01905 0 2 Msboxa
[(8)] 0.78571 0.01905 0 2 Msboxa
[(10)] 0.97619 0.01905 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(Part b)] 0.5 0.8 0 -2 Msboxa
grestore
[(2)] 0.01131 0.20952 1 0 Msboxa
[(4)] 0.01131 0.4 1 0 Msboxa
[(6)] 0.01131 0.59048 1 0 Msboxa
[(8)] 0.01131 0.78095 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.801 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.21429 0.01905 moveto
0.21429 0.0253 lineto
stroke
grestore
[(2)] 0.21429 0.01905 0 2 Mshowa
gsave
0.002 setlinewidth
0.40476 0.01905 moveto
0.40476 0.0253 lineto
stroke
grestore
[(4)] 0.40476 0.01905 0 2 Mshowa
gsave
0.002 setlinewidth
0.59524 0.01905 moveto
0.59524 0.0253 lineto
stroke
grestore
[(6)] 0.59524 0.01905 0 2 Mshowa
gsave
0.002 setlinewidth
0.78571 0.01905 moveto
0.78571 0.0253 lineto
stroke
grestore
[(8)] 0.78571 0.01905 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.01905 moveto
0.97619 0.0253 lineto
stroke
grestore
[(10)] 0.97619 0.01905 0 2 Mshowa
gsave
0.001 setlinewidth
0.0619 0.01905 moveto
0.0619 0.0228 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1 0.01905 moveto
0.1 0.0228 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.1381 0.01905 moveto
0.1381 0.0228 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.17619 0.01905 moveto
0.17619 0.0228 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.25238 0.01905 moveto
0.25238 0.0228 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29048 0.01905 moveto
0.29048 0.0228 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.32857 0.01905 moveto
0.32857 0.0228 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36667 0.01905 moveto
0.36667 0.0228 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44286 0.01905 moveto
0.44286 0.0228 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.48095 0.01905 moveto
0.48095 0.0228 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.51905 0.01905 moveto
0.51905 0.0228 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.55714 0.01905 moveto
0.55714 0.0228 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63333 0.01905 moveto
0.63333 0.0228 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.67143 0.01905 moveto
0.67143 0.0228 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.70952 0.01905 moveto
0.70952 0.0228 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.74762 0.01905 moveto
0.74762 0.0228 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.82381 0.01905 moveto
0.82381 0.0228 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.8619 0.01905 moveto
0.8619 0.0228 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9 0.01905 moveto
0.9 0.0228 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9381 0.01905 moveto
0.9381 0.0228 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.01905 moveto
1 0.01905 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(Part b)] 0.5 0.8 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.02381 0.20952 moveto
0.03006 0.20952 lineto
stroke
grestore
[(2)] 0.01131 0.20952 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.4 moveto
0.03006 0.4 lineto
stroke
grestore
[(4)] 0.01131 0.4 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.59048 moveto
0.03006 0.59048 lineto
stroke
grestore
[(6)] 0.01131 0.59048 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.78095 moveto
0.03006 0.78095 lineto
stroke
grestore
[(8)] 0.01131 0.78095 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.05714 moveto
0.02756 0.05714 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.09524 moveto
0.02756 0.09524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.13333 moveto
0.02756 0.13333 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.17143 moveto
0.02756 0.17143 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.24762 moveto
0.02756 0.24762 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.28571 moveto
0.02756 0.28571 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.32381 moveto
0.02756 0.32381 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.3619 moveto
0.02756 0.3619 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.4381 moveto
0.02756 0.4381 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.47619 moveto
0.02756 0.47619 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.51429 moveto
0.02756 0.51429 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.55238 moveto
0.02756 0.55238 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.62857 moveto
0.02756 0.62857 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.66667 moveto
0.02756 0.66667 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.70476 moveto
0.02756 0.70476 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.74286 moveto
0.02756 0.74286 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.8 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.8 lineto
0 0.8 lineto
closepath
clip
newpath
gsave
gsave
grestore
gsave
gsave
0.004 setlinewidth
0.02381 0.39989 moveto
0.02788 0.35028 lineto
0.04004 0.3014 lineto
0.06006 0.25422 lineto
0.08761 0.20952 lineto
0.12221 0.16809 lineto
0.16328 0.13063 lineto
0.21011 0.09777 lineto
0.2619 0.07009 lineto
0.31777 0.04805 lineto
0.37675 0.03203 lineto
0.43784 0.02231 lineto
0.5 0.01905 lineto
0.56216 0.02231 lineto
0.62325 0.03203 lineto
0.68223 0.04805 lineto
0.7381 0.07009 lineto
0.78989 0.09777 lineto
0.83672 0.13063 lineto
0.87779 0.16809 lineto
0.91239 0.20952 lineto
0.93994 0.25422 lineto
0.95996 0.3014 lineto
0.97212 0.35028 lineto
0.97619 0.39989 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.02381 0.40011 moveto
0.02788 0.44972 lineto
0.04004 0.4986 lineto
0.06006 0.54578 lineto
0.08761 0.59048 lineto
0.12221 0.63191 lineto
0.16328 0.66937 lineto
0.21011 0.70223 lineto
0.2619 0.72991 lineto
0.31777 0.75195 lineto
0.37675 0.76797 lineto
0.43784 0.77769 lineto
0.5 0.78095 lineto
0.56216 0.77769 lineto
0.62325 0.76797 lineto
0.68223 0.75195 lineto
0.7381 0.72991 lineto
0.78989 0.70223 lineto
0.83672 0.66937 lineto
0.87779 0.63191 lineto
0.91239 0.59048 lineto
0.93994 0.54578 lineto
0.95996 0.4986 lineto
0.97212 0.44972 lineto
0.97619 0.40011 lineto
stroke
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 283.5 282 225 1 0 0 1.026667 140 250.939972 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.008711 -181 -39.199493 sc5mt astore pop false {
    sc5mt dodrawctm 200.5 252.5 211 287 0 rfpath unpagectm
} {
    211 287 200.5 252.5 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -181 -37] dodrawctm
200.5 252.5 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	287.000000 def
/Mwidth		211.689636 def
/Mheight	287.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.047619 0.582995 0.047619 [
[(-10)] 0.02381 0.58299 0 2 Msboxa
[(-5)] 0.2619 0.58299 0 2 Msboxa
[(5)] 0.7381 0.58299 0 2 Msboxa
[(10)] 0.97619 0.58299 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(Part c)] 0.5 1.35647 0 -2 Msboxa
grestore
[(-10)] 0.4875 0.1068 1 0 Msboxa
[(-5)] 0.4875 0.3449 1 0 Msboxa
[(5)] 0.4875 0.82109 1 0 Msboxa
[(10)] 0.4875 1.05919 1 0 Msboxa
[(15)] 0.4875 1.29728 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.35747 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.58299 moveto
0.02381 0.58924 lineto
stroke
grestore
[(-10)] 0.02381 0.58299 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.58299 moveto
0.2619 0.58924 lineto
stroke
grestore
[(-5)] 0.2619 0.58299 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.58299 moveto
0.7381 0.58924 lineto
stroke
grestore
[(5)] 0.7381 0.58299 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.58299 moveto
0.97619 0.58924 lineto
stroke
grestore
[(10)] 0.97619 0.58299 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.58299 moveto
0.07143 0.58674 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.58299 moveto
0.11905 0.58674 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.58299 moveto
0.16667 0.58674 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.58299 moveto
0.21429 0.58674 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.58299 moveto
0.30952 0.58674 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.58299 moveto
0.35714 0.58674 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.58299 moveto
0.40476 0.58674 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.58299 moveto
0.45238 0.58674 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.58299 moveto
0.54762 0.58674 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.58299 moveto
0.59524 0.58674 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.58299 moveto
0.64286 0.58674 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.58299 moveto
0.69048 0.58674 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.58299 moveto
0.78571 0.58674 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.58299 moveto
0.83333 0.58674 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.58299 moveto
0.88095 0.58674 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.58299 moveto
0.92857 0.58674 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.58299 moveto
1 0.58299 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(Part c)] 0.5 1.35647 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.1068 moveto
0.50625 0.1068 lineto
stroke
grestore
[(-10)] 0.4875 0.1068 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.3449 moveto
0.50625 0.3449 lineto
stroke
grestore
[(-5)] 0.4875 0.3449 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.82109 moveto
0.50625 0.82109 lineto
stroke
grestore
[(5)] 0.4875 0.82109 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 1.05919 moveto
0.50625 1.05919 lineto
stroke
grestore
[(10)] 0.4875 1.05919 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 1.29728 moveto
0.50625 1.29728 lineto
stroke
grestore
[(15)] 0.4875 1.29728 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.15442 moveto
0.50375 0.15442 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.20204 moveto
0.50375 0.20204 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.24966 moveto
0.50375 0.24966 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.29728 moveto
0.50375 0.29728 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.39252 moveto
0.50375 0.39252 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.44014 moveto
0.50375 0.44014 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.48776 moveto
0.50375 0.48776 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.53538 moveto
0.50375 0.53538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.63061 moveto
0.50375 0.63061 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.67823 moveto
0.50375 0.67823 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.72585 moveto
0.50375 0.72585 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.77347 moveto
0.50375 0.77347 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.86871 moveto
0.50375 0.86871 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.91633 moveto
0.50375 0.91633 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.96395 moveto
0.50375 0.96395 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1.01157 moveto
0.50375 1.01157 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1.1068 moveto
0.50375 1.1068 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1.15442 moveto
0.50375 1.15442 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1.20204 moveto
0.50375 1.20204 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1.24966 moveto
0.50375 1.24966 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.05919 moveto
0.50375 0.05919 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.01157 moveto
0.50375 0.01157 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1.3449 moveto
0.50375 1.3449 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1.35647 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1.35647 lineto
0 1.35647 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.0323 moveto
0.02788 0.03725 lineto
0.04004 0.05203 lineto
0.06006 0.07637 lineto
0.08761 0.10983 lineto
0.12221 0.15181 lineto
0.16328 0.20154 lineto
0.21011 0.25807 lineto
0.2619 0.3203 lineto
0.31777 0.38683 lineto
0.37675 0.45583 lineto
0.43784 0.52414 lineto
0.5 0.58299 lineto
0.56216 0.60086 lineto
0.62325 0.55887 lineto
0.68223 0.49699 lineto
0.7381 0.4331 lineto
0.78989 0.37211 lineto
0.83672 0.31624 lineto
0.87779 0.26691 lineto
0.91239 0.22518 lineto
0.93994 0.19187 lineto
0.95996 0.16763 lineto
0.97212 0.15291 lineto
0.97619 0.14797 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.02381 1.32417 moveto
0.02788 1.31921 lineto
0.04004 1.30444 lineto
0.06006 1.2801 lineto
0.08761 1.24664 lineto
0.12221 1.20466 lineto
0.16328 1.15493 lineto
0.21011 1.09839 lineto
0.2619 1.03617 lineto
0.31777 0.96963 lineto
0.37675 0.90063 lineto
0.43784 0.83233 lineto
0.5 0.77347 lineto
0.56216 0.7556 lineto
0.62325 0.7976 lineto
0.68223 0.85948 lineto
0.7381 0.92337 lineto
0.78989 0.98435 lineto
0.83672 1.04022 lineto
0.87779 1.08955 lineto
0.91239 1.13129 lineto
0.93994 1.16459 lineto
0.95996 1.18883 lineto
0.97212 1.20356 lineto
0.97619 1.2085 lineto
stroke
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 200.5 252.5 211 287 1 0 0 1.008711 -181 -39.199493 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.008711 102 -38.199493 sc5mt astore pop false {
    sc5mt dodrawctm 204.5 252.5 203 287 0 rfpath unpagectm
} {
    203 287 204.5 252.5 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 102 -36] dodrawctm
204.5 252.5 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	287.000000 def
/Mwidth		203.058899 def
/Mheight	287.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.857143 0.238095 0.826154 0.238095 [
[(-3)] 0.14286 0.82615 0 2 Msboxa
[(-2)] 0.38095 0.82615 0 2 Msboxa
[(-1)] 0.61905 0.82615 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(Part d)] 0.5 1.41421 0 -2 Msboxa
grestore
[(-3)] 0.84464 0.11187 1 0 Msboxa
[(-2)] 0.84464 0.34996 1 0 Msboxa
[(-1)] 0.84464 0.58806 1 0 Msboxa
[(1)] 0.84464 1.06425 1 0 Msboxa
[(2)] 0.84464 1.30235 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.41521 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.14286 0.82615 moveto
0.14286 0.8324 lineto
stroke
grestore
[(-3)] 0.14286 0.82615 0 2 Mshowa
gsave
0.002 setlinewidth
0.38095 0.82615 moveto
0.38095 0.8324 lineto
stroke
grestore
[(-2)] 0.38095 0.82615 0 2 Mshowa
gsave
0.002 setlinewidth
0.61905 0.82615 moveto
0.61905 0.8324 lineto
stroke
grestore
[(-1)] 0.61905 0.82615 0 2 Mshowa
gsave
0.001 setlinewidth
0.19048 0.82615 moveto
0.19048 0.8299 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2381 0.82615 moveto
0.2381 0.8299 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.28571 0.82615 moveto
0.28571 0.8299 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.33333 0.82615 moveto
0.33333 0.8299 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.42857 0.82615 moveto
0.42857 0.8299 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.47619 0.82615 moveto
0.47619 0.8299 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.52381 0.82615 moveto
0.52381 0.8299 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.57143 0.82615 moveto
0.57143 0.8299 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.66667 0.82615 moveto
0.66667 0.8299 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.71429 0.82615 moveto
0.71429 0.8299 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.7619 0.82615 moveto
0.7619 0.8299 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.80952 0.82615 moveto
0.80952 0.8299 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.09524 0.82615 moveto
0.09524 0.8299 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.04762 0.82615 moveto
0.04762 0.8299 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90476 0.82615 moveto
0.90476 0.8299 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.95238 0.82615 moveto
0.95238 0.8299 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.82615 moveto
1 0.82615 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(Part d)] 0.5 1.41421 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.85714 0.11187 moveto
0.86339 0.11187 lineto
stroke
grestore
[(-3)] 0.84464 0.11187 1 0 Mshowa
gsave
0.002 setlinewidth
0.85714 0.34996 moveto
0.86339 0.34996 lineto
stroke
grestore
[(-2)] 0.84464 0.34996 1 0 Mshowa
gsave
0.002 setlinewidth
0.85714 0.58806 moveto
0.86339 0.58806 lineto
stroke
grestore
[(-1)] 0.84464 0.58806 1 0 Mshowa
gsave
0.002 setlinewidth
0.85714 1.06425 moveto
0.86339 1.06425 lineto
stroke
grestore
[(1)] 0.84464 1.06425 1 0 Mshowa
gsave
0.002 setlinewidth
0.85714 1.30235 moveto
0.86339 1.30235 lineto
stroke
grestore
[(2)] 0.84464 1.30235 1 0 Mshowa
gsave
0.001 setlinewidth
0.85714 0.15949 moveto
0.86089 0.15949 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85714 0.20711 moveto
0.86089 0.20711 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85714 0.25473 moveto
0.86089 0.25473 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85714 0.30234 moveto
0.86089 0.30234 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85714 0.39758 moveto
0.86089 0.39758 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85714 0.4452 moveto
0.86089 0.4452 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85714 0.49282 moveto
0.86089 0.49282 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85714 0.54044 moveto
0.86089 0.54044 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85714 0.63568 moveto
0.86089 0.63568 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85714 0.6833 moveto
0.86089 0.6833 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85714 0.73092 moveto
0.86089 0.73092 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85714 0.77854 moveto
0.86089 0.77854 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85714 0.87377 moveto
0.86089 0.87377 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85714 0.92139 moveto
0.86089 0.92139 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85714 0.96901 moveto
0.86089 0.96901 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85714 1.01663 moveto
0.86089 1.01663 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85714 1.11187 moveto
0.86089 1.11187 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85714 1.15949 moveto
0.86089 1.15949 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85714 1.20711 moveto
0.86089 1.20711 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85714 1.25473 moveto
0.86089 1.25473 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85714 0.06425 moveto
0.86089 0.06425 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85714 0.01663 moveto
0.86089 0.01663 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85714 1.34996 moveto
0.86089 1.34996 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.85714 1.39758 moveto
0.86089 1.39758 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.85714 0 moveto
0.85714 1.41421 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1.41421 lineto
0 1.41421 lineto
closepath
clip
newpath
gsave
gsave
grestore
gsave
gsave
0.004 setlinewidth
0.02381 0.70681 moveto
0.02788 0.61921 lineto
0.04004 0.53281 lineto
0.06006 0.44939 lineto
0.08761 0.37039 lineto
0.12221 0.29715 lineto
0.16328 0.23092 lineto
0.21011 0.17283 lineto
0.2619 0.12389 lineto
0.31777 0.08493 lineto
0.37675 0.05662 lineto
0.43784 0.03943 lineto
0.5 0.03367 lineto
0.56216 0.03943 lineto
0.62325 0.05662 lineto
0.68223 0.08493 lineto
0.7381 0.12389 lineto
0.78989 0.17283 lineto
0.83672 0.23092 lineto
0.87779 0.29715 lineto
0.91239 0.37039 lineto
0.93994 0.44939 lineto
0.95996 0.53281 lineto
0.97212 0.61921 lineto
0.97619 0.70681 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.02381 0.70741 moveto
0.02788 0.79501 lineto
0.04004 0.8814 lineto
0.06006 0.96482 lineto
0.08761 1.04382 lineto
0.12221 1.11707 lineto
0.16328 1.1833 lineto
0.21011 1.24138 lineto
0.2619 1.29032 lineto
0.31777 1.32928 lineto
0.37675 1.3576 lineto
0.43784 1.37478 lineto
0.5 1.38054 lineto
0.56216 1.37478 lineto
0.62325 1.3576 lineto
0.68223 1.32928 lineto
0.7381 1.29032 lineto
0.78989 1.24138 lineto
0.83672 1.1833 lineto
0.87779 1.11707 lineto
0.91239 1.04382 lineto
0.93994 0.96482 lineto
0.95996 0.8814 lineto
0.97212 0.79501 lineto
0.97619 0.70741 lineto
stroke
grestore
grestore
gsave
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 204.5 252.5 203 287 1 0 0 1.008711 102 -38.199493 sc6mt astore rstroke
end
grestore
grestore
%%EndDocument
 @endspecial 543 2024 a Fi(Fig)p Fq(.)f(68.)20 b(The)15 b(\014rst)g(four)g
(conics)h(of)e(Exercise)i(5.)75 2118 y Fn(Exercise)h(6.)126
2225 y Fq(a\))22 b(Use)15 b(co)q(de)h(lik)o(e)g(this)g(\(assuming)f(that)f
(the)h(studen)o(ts)g(do)h(in)o(v)o(en)o(t)f(a)g Fk(PrincipalPart)e
Fq(routine|)189 2275 y(certainly)j(the)f(co)q(e\016cien)o(ts)h(can)g(b)q(e)f
(hand)h(en)o(tered)g(instead.)189 2380 y Fj(q)21 b(=)h(x)f(y)h(-)g(1;)189
2429 y({a,)f(b,)g(c})h(=)f(PrincipalPart[q,)e(x,)i(y];)189
2479 y(b^2)g(-)g(4)h(a)g(c)189 2529 y(RotationAngle[a,)c(b,)j(c])189
2579 y(\045)g(180/Pi)g(//N//Chop)189 2629 y(Q)g(=)h(EliminateCrossTe)o(rm[q,)
c({x,)j(y},)h({X,)f(Y}];)p eop
%%Page: 103 103
103 102 bop 75 -105 a Fm(Classifying)21 b(Conics)h(\(optional\))p
75 -84 867 2 v 865 w Fq(103)189 49 y Fj(CompleteSquareXY)o([Q,)c(X,)k(Y])f
(//N//Chop)189 99 y(Clear[a,)f(b,)h(c])276 149 y(1)43 b(\(*)22
b(b^2)f(-)g(4ac)g(>)h(0,)f(so)h(hyperbola\))276 249 y(Pi)276
298 y(--)43 b(\(*)21 b(angle)g(in)g(rad)h(*\))276 348 y(4)276
448 y(45.)43 b(\(*)21 b(angle)g(in)g(degrees)g(*\))516 547
y(2)174 b(2)276 597 y(-1.)21 b(+)h(0.5)f(X)43 b(-)22 b(0.5)f(Y)43
b(\(*)22 b(rotated)e(conic)h(*\))189 713 y Fq(The)15 b(standard)g(form)f(is)i
Fh(X)667 696 y Fe(2)686 713 y Fh(=)p Fq(2)9 b Fg(\000)i Fh(Y)823
696 y Fe(2)843 713 y Fh(=)p Fq(2)h(=)h(1,)i(a)g(h)o(yp)q(erb)q(ola)h(sure)f
(enough.)123 802 y(b\))110 b Fj(-48)428 902 y(2)276 952 y(ArcTan[-])428
1002 y(3)276 1051 y(---------)363 1101 y(2)276 1201 y(16.845)581
1300 y(2)261 b(2)276 1350 y(7.)21 b(+)h(1.39445)e(X)43 b(+)22
b(8.60555)e(Y)189 1427 y Fq(Ellipse.)128 1516 y(c\))110 b Fj(1)428
1616 y(1)276 1666 y(ArcTan[-])428 1715 y(3)276 1765 y(---------)363
1815 y(2)276 1915 y(9.21747)886 2014 y(2)276 2064 y(-4.)21
b(+)h(3.08114)e(\(0.160182)g(+)h(X\))44 b(-)842 2164 y(2)319
2214 y(0.0811388)20 b(\(0.987087)g(+)i(Y\))189 2290 y Fq(Hyp)q(erb)q(ola.)123
2380 y(d\))110 b Fj(0)43 b(\(*)22 b(parabola)e(*\))276 2479
y(Pi)276 2529 y(--)276 2579 y(4)p eop
%%Page: 104 104
104 103 bop 75 -105 a Fq(104)865 b Fm(Classifying)21 b(Conics)h(\(optional\))
p 1009 -84 867 2 v 276 49 a Fj(45.)363 149 y(2)276 199 y(6.)f(X)44
b(+)21 b(1.41421)f(Y)189 273 y Fq(P)o(arab)q(ola.)128 357 y(e\))110
b Fj(28)276 457 y(ArcTan[6])276 506 y(---------)363 556 y(2)189
656 y(40.2688)886 706 y(2)189 756 y(0.571429)20 b(+)h(4.54138)g(\(0.95672)f
(+)h(X\))44 b(-)712 855 y(2)232 905 y(1.54138)21 b(\(0.687344)e(+)j(Y\))189
979 y Fq(Hyp)q(erb)q(ola.)131 1063 y(f)t(\))109 b Fj(9)450
1163 y(1)276 1213 y(-ArcTan[-])450 1263 y(3)276 1312 y(----------)363
1362 y(2)276 1462 y(-9.21747)755 1561 y(2)545 b(2)276 1611
y(1.08114)20 b(\(0.604664)g(+)i(X\))43 b(-)21 b(2.08114)g(\(0.435817)f(+)h
(Y\))189 1685 y Fq(Hyp)q(erb)q(ola)16 b(b)o(y)f Fh(b)494 1669
y Fe(2)523 1685 y Fg(\000)c Fq(4)p Fh(ac)p Fq(,)j(but)h(actually)h
(degenerate)g(\(t)o(w)o(o)d(lines\).)126 1770 y(g\))109 b Fj(0)276
1869 y(Pi)276 1919 y(--)276 1969 y(4)276 2068 y(45.)668 2168
y(2)276 2218 y(2.)21 b(\(-0.707107)f(+)h(X\))189 2292 y Fq(P)o(arab)q(ola)14
b(b)o(y)h Fh(b)464 2275 y Fe(2)494 2292 y Fg(\000)10 b Fq(4)p
Fh(ac)p Fq(,)k(but)i(actually)g(degenerate)f(\(single)h(line\).)75
2398 y Fn(Exercise)h(7.)j Fq(Substituting)c(the)g(rotation)e(form)o(ulas)h
(in)o(to)g Fh(y)f Fq(=)f(tan)8 b Fh(\013)i Fg(\001)g Fh(x)15
b Fq(giv)o(es)541 2510 y Fh(X)c Fq(sin)e Fh(\022)i Fq(+)g Fh(Y)18
b Fq(cos)7 b Fh(\022)15 b Fq(=)935 2479 y(sin)8 b Fh(\013)p
932 2500 98 2 v 932 2541 a Fq(cos)g Fh(\013)1035 2510 y Fq(\()p
Fh(X)j Fq(cos)c Fh(\022)12 b Fg(\000)e Fh(Y)18 b Fq(sin)9 b
Fh(\022)q Fq(\))p Fh(:)75 2617 y Fq(Regrouping)15 b(to)g(the)g(form)f
Fh(Y)24 b Fq(=)13 b Fh(M)5 b(X)18 b Fq(and)d(using)h(the)g(addition)g(form)o
(ulas)f(giv)o(es)g Fh(M)j Fq(=)13 b(tan)o(\()p Fh(\013)d Fg(\000)h
Fh(\022)q Fq(\).)p eop
%%Page: 105 105
105 104 bop 75 -100 a Fm(P)n(arametric)22 b(Curv)n(es)h(in)f(2D)p
75 -93 756 2 v 976 w Fq(105)606 49 y Fn(PURPOSE)c(OF)g(THE)g(PR)o(OJECT)146
152 y Fq(This)e(pro)s(ject)f(is)h(similar)h(in)g(tone)e(to)g(the)h(one)g(on)g
(p)q(olar)g(plotting:)22 b(w)o(e)15 b(explore)i(sev)o(eral)e(families)75
209 y(of)h(parametric)g(curv)o(es)g(with)g(emphasis)h(on)f(the)g(h)o(yp)q(o)q
(cycloid.)25 b(The)16 b(main)h(result)f(for)g(h)o(yp)q(o)q(cycloids)75
265 y(is)h(simple)i(to)d(state)g(once)i(y)o(ou)e(kno)o(w)h(it,)g(but)g(the)g
(suggested)g(examples)h(delib)q(erately)h(don't)d(giv)o(e)i(it)75
322 y(a)o(w)o(a)o(y)10 b(to)q(o)g(quic)o(kly|once)i(again,)g(w)o(e)f(see)g
(that)g(go)q(o)q(d)g(mathematics)f(can)i(reside)g(in)g(h)o(um)o(ble)g
(problems.)75 378 y(Exercises)17 b(4)g(and)f(9)h(in)o(v)o(olv)o(e)g(limits)h
(of)e(arclengths)h(for)f(families)i(of)e(parametric)g(curv)o(es|w)o(e)g
(didn't)75 434 y(plan)g(for)f(the)g(answ)o(ers)f(to)h(b)q(e)h(the)f(same)g
(for)g(these)g(t)o(w)o(o)f(problems,)h(but)h(it's)f(a)g(nice)h(touc)o(h.)75
512 y Fn(Instructor)f(Note)p Fq(:)33 b(The)13 b(Instructor's)g(noteb)q(o)q
(ok)g(con)o(tains)h(a)f(mo)q(dule)i(for)d(pro)q(ducing)j(parametric)75
568 y(curv)o(e)g(animations)h(suitable)g(for)f(classro)q(om)g
(demonstrations.)75 646 y Fn(Shorter)i(Pro)s(ject)p Fq(:)j(Omit)15
b(an)o(y)g(of)g(4,)f(7,)h(8,)f(9,)h(10,)f(11.)577 773 y Fn(ANSWERS)j(F)o(OR)h
(INSTR)o(UCTORS)75 869 y(Exercise)h(1.)26 b Fq(The)18 b(quan)o(tit)o(y)f
Fh(x)657 852 y Fe(2)688 869 y Fq(+)12 b Fh(y)759 852 y Fe(2)795
869 y Fq(giv)o(es)18 b(1,)f(so)g(eac)o(h)g Fh(t)h Fq(v)m(alue)g(corresp)q
(onds)g(to)e(a)h(p)q(oin)o(t)h(on)f(the)75 919 y(unit)k(circle.)36
b(The)20 b(instructor's)g(animination)h(section)g(vividly)h(rev)o(eals)e(the)
g(approac)o(h)g(to)g(\()p Fg(\000)p Fq(1)p Fh(;)8 b Fq(0\))75
968 y(from)15 b(ab)q(o)o(v)o(e)f(as)h Fh(t)f Fg(!)f(1)j Fq(and)f(from)g(b)q
(elo)o(w)h(as)f Fh(t)e Fg(!)g(\0001)p Fq(.)21 b(The)16 b(sp)q(eed)g(is)g
(relativ)o(ely)g(large)g(near)f(\(1)p Fh(;)8 b Fq(0\))75 1018
y(and)15 b(go)q(es)g(to)g(zero)g(as)g(w)o(e)g(approac)o(h)g(\()p
Fg(\000)p Fq(1)p Fh(;)8 b Fq(0\):)75 1127 y Fj(x[t_])21 b(:=)g(\(1)h(-)f
(t^2\)/\(1)f(+)i(t^2\))75 1177 y(y[t_])f(:=)g(2t/\(1)g(+)g(t^2\))75
1226 y(v[t_])g(:=)g(Sqrt[x'[t]^2)e(+)j(y'[t]^2]//Simplify)75
1276 y(v[t])445 1326 y(2)g(-2)162 1376 y(2)g(Sqrt[\(1)e(+)i(t)f(\))44
b(])75 1475 y(Table[{t,)20 b(x[t],)h(y[t],)f(v[t]},)h({t,)g(-5,)g
(5}]//N//TableForm)162 1525 y(-5.)65 b(-0.923077)e(-0.384615)h(0.0769231)162
1575 y(-4.)h(-0.882353)e(-0.470588)h(0.117647)162 1625 y(-3.)h(-0.8)173
b(-0.6)h(0.2)162 1675 y(-2.)65 b(-0.6)173 b(-0.8)h(0.4)162
1725 y(-1.)65 b(0)239 b(-1.)196 b(1.)162 1774 y(0)109 b(1.)217
b(0)240 b(2.)162 1824 y(1.)87 b(0)239 b(1.)218 b(1.)162 1874
y(2.)87 b(-0.6)173 b(0.8)196 b(0.4)162 1924 y(3.)87 b(-0.8)173
b(0.6)196 b(0.2)162 1974 y(4.)87 b(-0.882353)63 b(0.470588)86
b(0.117647)162 2023 y(5.)h(-0.923077)63 b(0.384615)86 b(0.0769231)75
2159 y Fn(Exercise)18 b(2.)23 b Fq(The)17 b(p)q(erio)q(d)g(is)g(2)p
Fh(\031)g Fq(for)f(all)h(the)f(indicated)i Fh(k)q Fq(-v)m(alues.)24
b(The)17 b(\014gure)f(for)g Fh(b)e Fq(=)g(1)p Fh(=k)j Fq(has)f
Fh(k)75 2216 y Fq(\\lob)q(es,")f(see)h(Figure)f(69.)75 2293
y Fn(Exercise)j(3.)j Fq(The)15 b(curv)o(es)h(approac)o(h)f(the)h(unit)g
(circle)h(from)e(within.)22 b(Figure)16 b(70)f(sho)o(ws)g(the)h(curv)o(es)75
2350 y(for)f Fh(b)d Fq(=)h(1)p Fh(=)p Fq(8,)h(1/6,)g(1/32,)f(and)j(1/64.)75
2420 y Fn(Exercise)j(4.)26 b Fq(The)18 b(limiting)h(arclength)f(is)f(8.)26
b(This)18 b(calculation)g(can)g(b)q(e)f(carried)h(out)f(with)h(p)q(encil)75
2470 y(and)d(pap)q(er,)h(but)f(here)h(is)f(the)h Fl(Mathematic)n(a)s
Fq(-assisted)g(v)o(ersion:)75 2579 y Fj(x[t_])21 b(:=)g(\(a)h(-)f(b\))g
(Cos[t])g(+)h(b)f(Cos[\(a)g(-)g(b\)t/b])75 2629 y(y[t_])g(:=)g(\(a)h(-)f(b\))
g(Sin[t])g(-)h(b)f(Sin[\(a)g(-)g(b\)t/b])p eop
%%Page: 106 106
106 105 bop 75 -100 a Fq(106)975 b Fm(P)n(arametric)22 b(Curv)n(es)h(in)f(2D)
p 1119 -93 756 2 v 562 1019 a @beginspecial 0 @llx 0 @lly 571
@urx 574 @ury 1982 @rwi @setspecial
%%BeginDocument: Par.ex2.eps


/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /TDeps_dict 20 dict def TDeps_dict begin /showpage {
    
} def /copypage {
    
} def /grestoreall {
    
} def /erasepage {
    
} def /nulldevice {
    
} def /exitserver {
    
} def /initgraphics {
    
} def /renderbands {
    
} def /initmatrix {
    
} def /banddevice {
    
} def /setpageparams {
    
} def /framedevice {
    
} def /note {
    
} def end end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
gsave
0 0 571 574 rectclip
-18 -163 translate
18 163 571 574 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
gsave clpmt currentmatrix pop newpath
1 0 0 1.007092 -147 196.191498 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -147 198] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.454545 0.5 0.454545 [
[(-1)] 0.04545 0.5 0 2 Msboxa
[(-0.5)] 0.27273 0.5 0 2 Msboxa
[(0.5)] 0.72727 0.5 0 2 Msboxa
[(1)] 0.95455 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.333333)] 0.5 1 0 -2 Msboxa
grestore
[(-1)] 0.4875 0.04545 1 0 Msboxa
[(-0.5)] 0.4875 0.27273 1 0 Msboxa
[(0.5)] 0.4875 0.72727 1 0 Msboxa
[(1)] 0.4875 0.95455 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.04545 0.5 moveto
0.04545 0.50625 lineto
stroke
grestore
[(-1)] 0.04545 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.27273 0.5 moveto
0.27273 0.50625 lineto
stroke
grestore
[(-0.5)] 0.27273 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.72727 0.5 moveto
0.72727 0.50625 lineto
stroke
grestore
[(0.5)] 0.72727 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.95455 0.5 moveto
0.95455 0.50625 lineto
stroke
grestore
[(1)] 0.95455 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.09091 0.5 moveto
0.09091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.13636 0.5 moveto
0.13636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18182 0.5 moveto
0.18182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22727 0.5 moveto
0.22727 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31818 0.5 moveto
0.31818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36364 0.5 moveto
0.36364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40909 0.5 moveto
0.40909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45455 0.5 moveto
0.45455 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54545 0.5 moveto
0.54545 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59091 0.5 moveto
0.59091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63636 0.5 moveto
0.63636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.68182 0.5 moveto
0.68182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77273 0.5 moveto
0.77273 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81818 0.5 moveto
0.81818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.86364 0.5 moveto
0.86364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90909 0.5 moveto
0.90909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.5 moveto
0 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
1 0.5 moveto
1 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.333333)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.04545 moveto
0.50625 0.04545 lineto
stroke
grestore
[(-1)] 0.4875 0.04545 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.27273 moveto
0.50625 0.27273 lineto
stroke
grestore
[(-0.5)] 0.4875 0.27273 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.72727 moveto
0.50625 0.72727 lineto
stroke
grestore
[(0.5)] 0.4875 0.72727 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.95455 moveto
0.50625 0.95455 lineto
stroke
grestore
[(1)] 0.4875 0.95455 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.09091 moveto
0.50375 0.09091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13636 moveto
0.50375 0.13636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18182 moveto
0.50375 0.18182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22727 moveto
0.50375 0.22727 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31818 moveto
0.50375 0.31818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36364 moveto
0.50375 0.36364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40909 moveto
0.50375 0.40909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45455 moveto
0.50375 0.45455 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54545 moveto
0.50375 0.54545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59091 moveto
0.50375 0.59091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.63636 moveto
0.50375 0.63636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.68182 moveto
0.50375 0.68182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.77273 moveto
0.50375 0.77273 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.81818 moveto
0.50375 0.81818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.86364 moveto
0.50375 0.86364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90909 moveto
0.50375 0.90909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0 moveto
0.50375 0 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1 moveto
0.50375 1 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.95455 0.5 moveto
0.95454 0.5 lineto
0.95452 0.5 lineto
0.95448 0.5 lineto
0.95443 0.5 lineto
0.95428 0.5 lineto
0.95408 0.5 lineto
0.95382 0.50001 lineto
0.9535 0.50002 lineto
0.95268 0.50004 lineto
0.95163 0.50008 lineto
0.95035 0.50013 lineto
0.9471 0.50032 lineto
0.94294 0.50062 lineto
0.93788 0.50107 lineto
0.92514 0.50251 lineto
0.90902 0.50486 lineto
0.88972 0.50831 lineto
0.84258 0.51914 lineto
0.78596 0.53599 lineto
0.72254 0.55938 lineto
0.65522 0.5892 lineto
0.58701 0.6248 lineto
0.5208 0.66493 lineto
0.45924 0.70785 lineto
0.40457 0.7514 lineto
0.35851 0.79317 lineto
0.32218 0.83059 lineto
0.29606 0.86117 lineto
0.27997 0.8826 lineto
0.27547 0.88926 lineto
0.27315 0.89293 lineto
0.27289 0.89337 lineto
0.27275 0.8936 lineto
0.27274 0.89363 lineto
0.27273 0.89365 lineto
0.27273 0.89364 lineto
0.27283 0.89347 lineto
0.27336 0.89251 lineto
0.2743 0.89073 lineto
0.28172 0.87514 lineto
0.29344 0.84601 lineto
0.30736 0.80386 lineto
0.32145 0.74994 lineto
0.32796 0.71912 lineto
0.33383 0.68611 lineto
0.3389 0.65122 lineto
0.343 0.61479 lineto
0.34465 0.59611 lineto
0.34602 0.57718 lineto
Mistroke
0.34709 0.55806 lineto
0.34752 0.54844 lineto
0.34786 0.53879 lineto
0.34813 0.52911 lineto
0.34824 0.52427 lineto
0.34833 0.51942 lineto
0.3484 0.51457 lineto
0.34842 0.51214 lineto
0.34845 0.50971 lineto
0.34846 0.50729 lineto
0.34848 0.50486 lineto
0.34848 0.50243 lineto
0.34848 0.5 lineto
0.34848 0.49757 lineto
0.34848 0.49514 lineto
0.34846 0.49271 lineto
0.34845 0.49029 lineto
0.3484 0.48543 lineto
0.34833 0.48058 lineto
0.34824 0.47573 lineto
0.34813 0.47089 lineto
0.34786 0.46121 lineto
0.34752 0.45156 lineto
0.34709 0.44194 lineto
0.34602 0.42282 lineto
0.34465 0.40389 lineto
0.343 0.38521 lineto
0.3389 0.34878 lineto
0.33383 0.31389 lineto
0.32145 0.25006 lineto
0.30736 0.19614 lineto
0.29344 0.15399 lineto
0.28172 0.12486 lineto
0.2743 0.10927 lineto
0.27283 0.10653 lineto
0.27277 0.10642 lineto
0.27273 0.10636 lineto
0.27273 0.10635 lineto
0.27273 0.10635 lineto
0.27275 0.1064 lineto
0.27315 0.10707 lineto
0.27997 0.1174 lineto
0.29606 0.13883 lineto
0.32218 0.16941 lineto
0.35851 0.20683 lineto
0.40457 0.2486 lineto
0.45924 0.29215 lineto
0.5208 0.33507 lineto
0.58701 0.3752 lineto
0.65522 0.4108 lineto
Mistroke
0.72254 0.44062 lineto
0.78596 0.46401 lineto
0.84258 0.48086 lineto
0.88972 0.49169 lineto
0.90902 0.49514 lineto
0.92514 0.49749 lineto
0.93788 0.49893 lineto
0.94294 0.49938 lineto
0.9471 0.49968 lineto
0.95035 0.49987 lineto
0.95163 0.49992 lineto
0.95268 0.49996 lineto
0.9535 0.49998 lineto
0.95382 0.49999 lineto
0.95408 0.5 lineto
0.95428 0.5 lineto
0.95436 0.5 lineto
0.95443 0.5 lineto
0.95448 0.5 lineto
0.95452 0.5 lineto
0.95454 0.5 lineto
0.95455 0.5 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1.007092 -147 196.191498 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.007092 141 196.191498 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 141 198] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.454545 0.5 0.454545 [
[(-1)] 0.04545 0.5 0 2 Msboxa
[(-0.5)] 0.27273 0.5 0 2 Msboxa
[(0.5)] 0.72727 0.5 0 2 Msboxa
[(1)] 0.95455 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.25)] 0.5 1 0 -2 Msboxa
grestore
[(-1)] 0.4875 0.04545 1 0 Msboxa
[(-0.5)] 0.4875 0.27273 1 0 Msboxa
[(0.5)] 0.4875 0.72727 1 0 Msboxa
[(1)] 0.4875 0.95455 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.04545 0.5 moveto
0.04545 0.50625 lineto
stroke
grestore
[(-1)] 0.04545 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.27273 0.5 moveto
0.27273 0.50625 lineto
stroke
grestore
[(-0.5)] 0.27273 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.72727 0.5 moveto
0.72727 0.50625 lineto
stroke
grestore
[(0.5)] 0.72727 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.95455 0.5 moveto
0.95455 0.50625 lineto
stroke
grestore
[(1)] 0.95455 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.09091 0.5 moveto
0.09091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.13636 0.5 moveto
0.13636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18182 0.5 moveto
0.18182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22727 0.5 moveto
0.22727 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31818 0.5 moveto
0.31818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36364 0.5 moveto
0.36364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40909 0.5 moveto
0.40909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45455 0.5 moveto
0.45455 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54545 0.5 moveto
0.54545 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59091 0.5 moveto
0.59091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63636 0.5 moveto
0.63636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.68182 0.5 moveto
0.68182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77273 0.5 moveto
0.77273 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81818 0.5 moveto
0.81818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.86364 0.5 moveto
0.86364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90909 0.5 moveto
0.90909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.5 moveto
0 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
1 0.5 moveto
1 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.25)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.04545 moveto
0.50625 0.04545 lineto
stroke
grestore
[(-1)] 0.4875 0.04545 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.27273 moveto
0.50625 0.27273 lineto
stroke
grestore
[(-0.5)] 0.4875 0.27273 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.72727 moveto
0.50625 0.72727 lineto
stroke
grestore
[(0.5)] 0.4875 0.72727 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.95455 moveto
0.50625 0.95455 lineto
stroke
grestore
[(1)] 0.4875 0.95455 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.09091 moveto
0.50375 0.09091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13636 moveto
0.50375 0.13636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18182 moveto
0.50375 0.18182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22727 moveto
0.50375 0.22727 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31818 moveto
0.50375 0.31818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36364 moveto
0.50375 0.36364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40909 moveto
0.50375 0.40909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45455 moveto
0.50375 0.45455 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54545 moveto
0.50375 0.54545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59091 moveto
0.50375 0.59091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.63636 moveto
0.50375 0.63636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.68182 moveto
0.50375 0.68182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.77273 moveto
0.50375 0.77273 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.81818 moveto
0.50375 0.81818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.86364 moveto
0.50375 0.86364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90909 moveto
0.50375 0.90909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0 moveto
0.50375 0 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1 moveto
0.50375 1 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.95455 0.5 moveto
0.95453 0.5 lineto
0.9545 0.5 lineto
0.95445 0.5 lineto
0.95437 0.5 lineto
0.95415 0.50001 lineto
0.95385 0.50001 lineto
0.95345 0.50003 lineto
0.95297 0.50005 lineto
0.95175 0.50012 lineto
0.95018 0.50023 lineto
0.94827 0.5004 lineto
0.94344 0.50095 lineto
0.93729 0.50185 lineto
0.92986 0.50318 lineto
0.91139 0.50742 lineto
0.88855 0.51422 lineto
0.86199 0.52402 lineto
0.80068 0.55371 lineto
0.73396 0.59726 lineto
0.66849 0.65304 lineto
0.61017 0.71723 lineto
0.56332 0.78425 lineto
0.53015 0.84754 lineto
0.51047 0.90048 lineto
0.50501 0.92121 lineto
0.50318 0.92986 lineto
0.50185 0.93729 lineto
0.50095 0.94344 lineto
0.5004 0.94827 lineto
0.50023 0.95018 lineto
0.50012 0.95175 lineto
0.50005 0.95297 lineto
0.50003 0.95345 lineto
0.50001 0.95385 lineto
0.50001 0.95415 lineto
0.5 0.95427 lineto
0.5 0.95437 lineto
0.5 0.95445 lineto
0.5 0.9545 lineto
0.5 0.95453 lineto
0.5 0.95455 lineto
0.5 0.95453 lineto
0.5 0.9545 lineto
0.5 0.95445 lineto
0.5 0.95437 lineto
0.49999 0.95415 lineto
0.49999 0.95385 lineto
0.49997 0.95345 lineto
0.49995 0.95297 lineto
Mistroke
0.49988 0.95175 lineto
0.49977 0.95018 lineto
0.4996 0.94827 lineto
0.49905 0.94344 lineto
0.49815 0.93729 lineto
0.49499 0.92121 lineto
0.48953 0.90048 lineto
0.48128 0.8757 lineto
0.45502 0.81678 lineto
0.41488 0.75078 lineto
0.36188 0.6844 lineto
0.29932 0.62381 lineto
0.23242 0.5738 lineto
0.16757 0.53713 lineto
0.13801 0.52402 lineto
0.11145 0.51422 lineto
0.08861 0.50742 lineto
0.07014 0.50318 lineto
0.06271 0.50185 lineto
0.05656 0.50095 lineto
0.05173 0.5004 lineto
0.04982 0.50023 lineto
0.04825 0.50012 lineto
0.04703 0.50005 lineto
0.04655 0.50003 lineto
0.04615 0.50001 lineto
0.04585 0.50001 lineto
0.04573 0.5 lineto
0.04563 0.5 lineto
0.04555 0.5 lineto
0.0455 0.5 lineto
0.04547 0.5 lineto
0.04545 0.5 lineto
0.04547 0.5 lineto
0.0455 0.5 lineto
0.04555 0.5 lineto
0.04563 0.5 lineto
0.04585 0.49999 lineto
0.04615 0.49999 lineto
0.04655 0.49997 lineto
0.04703 0.49995 lineto
0.04825 0.49988 lineto
0.04982 0.49977 lineto
0.05173 0.4996 lineto
0.05656 0.49905 lineto
0.06271 0.49815 lineto
0.07014 0.49682 lineto
0.08861 0.49258 lineto
0.11145 0.48578 lineto
0.16757 0.46287 lineto
Mistroke
0.23242 0.4262 lineto
0.29932 0.37619 lineto
0.36188 0.3156 lineto
0.41488 0.24922 lineto
0.45502 0.18322 lineto
0.48128 0.1243 lineto
0.48953 0.09952 lineto
0.49499 0.07879 lineto
0.49682 0.07014 lineto
0.49815 0.06271 lineto
0.49905 0.05656 lineto
0.4996 0.05173 lineto
0.49977 0.04982 lineto
0.49988 0.04825 lineto
0.49995 0.04703 lineto
0.49997 0.04655 lineto
0.49999 0.04615 lineto
0.49999 0.04585 lineto
0.5 0.04573 lineto
0.5 0.04563 lineto
0.5 0.04555 lineto
0.5 0.0455 lineto
0.5 0.04547 lineto
0.5 0.04545 lineto
0.5 0.04547 lineto
0.5 0.0455 lineto
0.5 0.04555 lineto
0.5 0.04563 lineto
0.50001 0.04585 lineto
0.50001 0.04615 lineto
0.50003 0.04655 lineto
0.50005 0.04703 lineto
0.50012 0.04825 lineto
0.50023 0.04982 lineto
0.5004 0.05173 lineto
0.50095 0.05656 lineto
0.50185 0.06271 lineto
0.50501 0.07879 lineto
0.51047 0.09952 lineto
0.53015 0.15246 lineto
0.56332 0.21575 lineto
0.61017 0.28277 lineto
0.66849 0.34696 lineto
0.73396 0.40274 lineto
0.80068 0.44629 lineto
0.83243 0.46287 lineto
0.86199 0.47598 lineto
0.88855 0.48578 lineto
0.91139 0.49258 lineto
0.92986 0.49682 lineto
Mistroke
0.93729 0.49815 lineto
0.94344 0.49905 lineto
0.94827 0.4996 lineto
0.95018 0.49977 lineto
0.95175 0.49988 lineto
0.95297 0.49995 lineto
0.95345 0.49997 lineto
0.95385 0.49999 lineto
0.95415 0.49999 lineto
0.95427 0.5 lineto
0.95437 0.5 lineto
0.95445 0.5 lineto
0.9545 0.5 lineto
0.95453 0.5 lineto
0.95455 0.5 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1.007092 141 196.191498 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.010638 -147 -93.712738 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -147 -91] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.454545 0.5 0.454545 [
[(-1)] 0.04545 0.5 0 2 Msboxa
[(-0.5)] 0.27273 0.5 0 2 Msboxa
[(0.5)] 0.72727 0.5 0 2 Msboxa
[(1)] 0.95455 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.2)] 0.5 1 0 -2 Msboxa
grestore
[(-1)] 0.4875 0.04545 1 0 Msboxa
[(-0.5)] 0.4875 0.27273 1 0 Msboxa
[(0.5)] 0.4875 0.72727 1 0 Msboxa
[(1)] 0.4875 0.95455 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.04545 0.5 moveto
0.04545 0.50625 lineto
stroke
grestore
[(-1)] 0.04545 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.27273 0.5 moveto
0.27273 0.50625 lineto
stroke
grestore
[(-0.5)] 0.27273 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.72727 0.5 moveto
0.72727 0.50625 lineto
stroke
grestore
[(0.5)] 0.72727 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.95455 0.5 moveto
0.95455 0.50625 lineto
stroke
grestore
[(1)] 0.95455 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.09091 0.5 moveto
0.09091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.13636 0.5 moveto
0.13636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18182 0.5 moveto
0.18182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22727 0.5 moveto
0.22727 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31818 0.5 moveto
0.31818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36364 0.5 moveto
0.36364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40909 0.5 moveto
0.40909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45455 0.5 moveto
0.45455 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54545 0.5 moveto
0.54545 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59091 0.5 moveto
0.59091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63636 0.5 moveto
0.63636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.68182 0.5 moveto
0.68182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77273 0.5 moveto
0.77273 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81818 0.5 moveto
0.81818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.86364 0.5 moveto
0.86364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90909 0.5 moveto
0.90909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.5 moveto
0 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
1 0.5 moveto
1 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.2)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.04545 moveto
0.50625 0.04545 lineto
stroke
grestore
[(-1)] 0.4875 0.04545 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.27273 moveto
0.50625 0.27273 lineto
stroke
grestore
[(-0.5)] 0.4875 0.27273 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.72727 moveto
0.50625 0.72727 lineto
stroke
grestore
[(0.5)] 0.4875 0.72727 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.95455 moveto
0.50625 0.95455 lineto
stroke
grestore
[(1)] 0.4875 0.95455 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.09091 moveto
0.50375 0.09091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13636 moveto
0.50375 0.13636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18182 moveto
0.50375 0.18182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22727 moveto
0.50375 0.22727 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31818 moveto
0.50375 0.31818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36364 moveto
0.50375 0.36364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40909 moveto
0.50375 0.40909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45455 moveto
0.50375 0.45455 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54545 moveto
0.50375 0.54545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59091 moveto
0.50375 0.59091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.63636 moveto
0.50375 0.63636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.68182 moveto
0.50375 0.68182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.77273 moveto
0.50375 0.77273 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.81818 moveto
0.50375 0.81818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.86364 moveto
0.50375 0.86364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90909 moveto
0.50375 0.90909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0 moveto
0.50375 0 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1 moveto
0.50375 1 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.95455 0.5 moveto
0.95453 0.5 lineto
0.95449 0.5 lineto
0.95441 0.5 lineto
0.95431 0.5 lineto
0.95402 0.50001 lineto
0.95361 0.50003 lineto
0.95309 0.50006 lineto
0.95245 0.5001 lineto
0.95083 0.50024 lineto
0.94875 0.50047 lineto
0.94622 0.5008 lineto
0.93986 0.50189 lineto
0.93183 0.50366 lineto
0.92224 0.50627 lineto
0.89887 0.5145 lineto
0.87098 0.52743 lineto
0.83997 0.5456 lineto
0.8074 0.56915 lineto
0.77479 0.59784 lineto
0.71523 0.6679 lineto
0.69061 0.70707 lineto
0.6705 0.74715 lineto
0.65524 0.78657 lineto
0.64944 0.80554 lineto
0.64482 0.82375 lineto
0.6413 0.84102 lineto
0.63994 0.84925 lineto
0.63882 0.85717 lineto
0.63793 0.86478 lineto
0.63726 0.87206 lineto
0.637 0.87556 lineto
0.63679 0.87898 lineto
0.63662 0.8823 lineto
0.63655 0.88392 lineto
0.6365 0.88552 lineto
0.63645 0.8871 lineto
0.63641 0.88865 lineto
0.63639 0.89018 lineto
0.63637 0.89168 lineto
0.63636 0.89316 lineto
0.63637 0.89461 lineto
0.63638 0.89604 lineto
0.63639 0.89744 lineto
0.63642 0.89882 lineto
0.63645 0.90017 lineto
0.63654 0.90279 lineto
0.63666 0.90531 lineto
0.6368 0.90772 lineto
0.63714 0.91221 lineto
Mistroke
0.63755 0.91625 lineto
0.63846 0.923 lineto
0.63937 0.92792 lineto
0.6401 0.93101 lineto
0.64033 0.93186 lineto
0.64041 0.93212 lineto
0.64045 0.93226 lineto
0.64046 0.93229 lineto
0.64046 0.9323 lineto
0.64044 0.93222 lineto
0.64026 0.93173 lineto
0.63936 0.92948 lineto
0.6376 0.92559 lineto
0.63089 0.91335 lineto
0.61918 0.89607 lineto
0.60182 0.87507 lineto
0.54935 0.82784 lineto
0.51482 0.8046 lineto
0.47576 0.78344 lineto
0.43333 0.76548 lineto
0.41128 0.75796 lineto
0.38892 0.75152 lineto
0.36645 0.7462 lineto
0.34408 0.74202 lineto
0.33299 0.74037 lineto
0.32199 0.739 lineto
0.31113 0.7379 lineto
0.30575 0.73746 lineto
0.30041 0.73708 lineto
0.29511 0.73678 lineto
0.28986 0.73653 lineto
0.28466 0.73636 lineto
0.28208 0.73629 lineto
0.27951 0.73624 lineto
0.27695 0.73621 lineto
0.27441 0.73619 lineto
0.27189 0.73619 lineto
0.26938 0.7362 lineto
0.26688 0.73623 lineto
0.2644 0.73627 lineto
0.26193 0.73633 lineto
0.25948 0.7364 lineto
0.25463 0.73658 lineto
0.24985 0.73682 lineto
0.24051 0.73746 lineto
0.23146 0.7383 lineto
0.22274 0.73931 lineto
0.20632 0.74183 lineto
0.19137 0.74486 lineto
0.16629 0.75181 lineto
Mistroke
0.14806 0.7588 lineto
0.13683 0.76437 lineto
0.13379 0.76617 lineto
0.13289 0.76675 lineto
0.13239 0.76709 lineto
0.13228 0.76716 lineto
0.13227 0.76717 lineto
0.13227 0.76717 lineto
0.13236 0.76711 lineto
0.13253 0.76697 lineto
0.13412 0.76567 lineto
0.14111 0.75904 lineto
0.15215 0.74641 lineto
0.16585 0.72732 lineto
0.18075 0.70174 lineto
0.19538 0.66998 lineto
0.20216 0.65199 lineto
0.20837 0.63276 lineto
0.21388 0.61241 lineto
0.21856 0.59111 lineto
0.22231 0.56903 lineto
0.22381 0.55776 lineto
0.22505 0.54636 lineto
0.22602 0.53486 lineto
0.2264 0.52908 lineto
0.22671 0.52328 lineto
0.22696 0.51747 lineto
0.22705 0.51456 lineto
0.22713 0.51165 lineto
0.22719 0.50874 lineto
0.22724 0.50583 lineto
0.22726 0.50291 lineto
0.22727 0.5 lineto
0.22726 0.49709 lineto
0.22724 0.49417 lineto
0.22719 0.49126 lineto
0.22713 0.48835 lineto
0.22696 0.48253 lineto
0.22671 0.47672 lineto
0.2264 0.47092 lineto
0.22602 0.46514 lineto
0.22505 0.45364 lineto
0.22381 0.44224 lineto
0.22231 0.43097 lineto
0.21856 0.40889 lineto
0.21388 0.38759 lineto
0.20837 0.36724 lineto
0.19538 0.33002 lineto
0.18075 0.29826 lineto
0.16585 0.27268 lineto
Mistroke
0.15215 0.25359 lineto
0.14111 0.24096 lineto
0.13412 0.23433 lineto
0.13253 0.23303 lineto
0.13236 0.23289 lineto
0.1323 0.23285 lineto
0.13227 0.23283 lineto
0.13228 0.23284 lineto
0.13239 0.23291 lineto
0.13379 0.23383 lineto
0.13683 0.23563 lineto
0.14806 0.2412 lineto
0.16629 0.24819 lineto
0.178 0.25176 lineto
0.19137 0.25514 lineto
0.20632 0.25817 lineto
0.21435 0.2595 lineto
0.22274 0.26069 lineto
0.23146 0.2617 lineto
0.24051 0.26254 lineto
0.24985 0.26318 lineto
0.25463 0.26342 lineto
0.25705 0.26351 lineto
0.25948 0.2636 lineto
0.26193 0.26367 lineto
0.2644 0.26373 lineto
0.26688 0.26377 lineto
0.26938 0.2638 lineto
0.27189 0.26381 lineto
0.27441 0.26381 lineto
0.27695 0.26379 lineto
0.27951 0.26376 lineto
0.28208 0.26371 lineto
0.28466 0.26364 lineto
0.28986 0.26347 lineto
0.29511 0.26322 lineto
0.30041 0.26292 lineto
0.31113 0.2621 lineto
0.32199 0.261 lineto
0.34408 0.25798 lineto
0.36645 0.2538 lineto
0.38892 0.24848 lineto
0.43333 0.23452 lineto
0.47576 0.21656 lineto
0.51482 0.1954 lineto
0.54935 0.17216 lineto
0.57851 0.14818 lineto
0.60182 0.12493 lineto
0.63089 0.08665 lineto
0.6376 0.07441 lineto
Mistroke
0.63936 0.07052 lineto
0.64026 0.06827 lineto
0.64044 0.06778 lineto
0.64045 0.06773 lineto
0.64046 0.0677 lineto
0.64045 0.06774 lineto
0.64033 0.06814 lineto
0.6401 0.06899 lineto
0.63937 0.07208 lineto
0.63846 0.077 lineto
0.638 0.08014 lineto
0.63755 0.08375 lineto
0.63714 0.08779 lineto
0.63696 0.08998 lineto
0.6368 0.09228 lineto
0.63666 0.09469 lineto
0.63654 0.09721 lineto
0.63649 0.09851 lineto
0.63645 0.09983 lineto
0.63642 0.10118 lineto
0.63639 0.10256 lineto
0.63638 0.10396 lineto
0.63637 0.10539 lineto
0.63636 0.10684 lineto
0.63637 0.10832 lineto
0.63639 0.10982 lineto
0.63641 0.11135 lineto
0.63645 0.1129 lineto
0.6365 0.11448 lineto
0.63662 0.1177 lineto
0.63679 0.12102 lineto
0.63726 0.12794 lineto
0.63793 0.13522 lineto
0.63882 0.14283 lineto
0.6413 0.15898 lineto
0.64482 0.17625 lineto
0.65524 0.21343 lineto
0.6705 0.25285 lineto
0.69061 0.29293 lineto
0.71523 0.3321 lineto
0.77479 0.40216 lineto
0.8074 0.43085 lineto
0.83997 0.4544 lineto
0.87098 0.47257 lineto
0.89887 0.4855 lineto
0.92224 0.49373 lineto
0.93183 0.49634 lineto
0.93986 0.49811 lineto
0.94622 0.4992 lineto
0.94875 0.49953 lineto
Mistroke
0.95083 0.49976 lineto
0.95245 0.4999 lineto
0.95309 0.49994 lineto
0.95361 0.49997 lineto
0.95402 0.49999 lineto
0.95418 0.49999 lineto
0.95431 0.5 lineto
0.95441 0.5 lineto
0.95449 0.5 lineto
0.95453 0.5 lineto
0.95455 0.5 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1.010638 -147 -93.712738 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.010638 141 -93.712738 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 141 -91] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.454545 0.5 0.454545 [
[(-1)] 0.04545 0.5 0 2 Msboxa
[(-0.5)] 0.27273 0.5 0 2 Msboxa
[(0.5)] 0.72727 0.5 0 2 Msboxa
[(1)] 0.95455 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.166667)] 0.5 1 0 -2 Msboxa
grestore
[(-1)] 0.4875 0.04545 1 0 Msboxa
[(-0.5)] 0.4875 0.27273 1 0 Msboxa
[(0.5)] 0.4875 0.72727 1 0 Msboxa
[(1)] 0.4875 0.95455 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.04545 0.5 moveto
0.04545 0.50625 lineto
stroke
grestore
[(-1)] 0.04545 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.27273 0.5 moveto
0.27273 0.50625 lineto
stroke
grestore
[(-0.5)] 0.27273 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.72727 0.5 moveto
0.72727 0.50625 lineto
stroke
grestore
[(0.5)] 0.72727 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.95455 0.5 moveto
0.95455 0.50625 lineto
stroke
grestore
[(1)] 0.95455 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.09091 0.5 moveto
0.09091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.13636 0.5 moveto
0.13636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18182 0.5 moveto
0.18182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22727 0.5 moveto
0.22727 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31818 0.5 moveto
0.31818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36364 0.5 moveto
0.36364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40909 0.5 moveto
0.40909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45455 0.5 moveto
0.45455 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54545 0.5 moveto
0.54545 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59091 0.5 moveto
0.59091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63636 0.5 moveto
0.63636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.68182 0.5 moveto
0.68182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77273 0.5 moveto
0.77273 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81818 0.5 moveto
0.81818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.86364 0.5 moveto
0.86364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90909 0.5 moveto
0.90909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.5 moveto
0 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
1 0.5 moveto
1 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.166667)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.04545 moveto
0.50625 0.04545 lineto
stroke
grestore
[(-1)] 0.4875 0.04545 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.27273 moveto
0.50625 0.27273 lineto
stroke
grestore
[(-0.5)] 0.4875 0.27273 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.72727 moveto
0.50625 0.72727 lineto
stroke
grestore
[(0.5)] 0.4875 0.72727 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.95455 moveto
0.50625 0.95455 lineto
stroke
grestore
[(1)] 0.4875 0.95455 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.09091 moveto
0.50375 0.09091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13636 moveto
0.50375 0.13636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18182 moveto
0.50375 0.18182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22727 moveto
0.50375 0.22727 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31818 moveto
0.50375 0.31818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36364 moveto
0.50375 0.36364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40909 moveto
0.50375 0.40909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45455 moveto
0.50375 0.45455 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54545 moveto
0.50375 0.54545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59091 moveto
0.50375 0.59091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.63636 moveto
0.50375 0.63636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.68182 moveto
0.50375 0.68182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.77273 moveto
0.50375 0.77273 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.81818 moveto
0.50375 0.81818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.86364 moveto
0.50375 0.86364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90909 moveto
0.50375 0.90909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0 moveto
0.50375 0 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1 moveto
0.50375 1 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.95455 0.5 moveto
0.95453 0.5 lineto
0.95447 0.5 lineto
0.95438 0.5 lineto
0.95425 0.50001 lineto
0.95389 0.50002 lineto
0.95338 0.50005 lineto
0.95273 0.5001 lineto
0.95193 0.50017 lineto
0.94991 0.5004 lineto
0.94733 0.50077 lineto
0.9442 0.50133 lineto
0.93639 0.50313 lineto
0.92664 0.50603 lineto
0.91514 0.51027 lineto
0.88795 0.52345 lineto
0.85706 0.54364 lineto
0.82494 0.57105 lineto
0.79404 0.60512 lineto
0.76655 0.64455 lineto
0.74418 0.68743 lineto
0.73526 0.70944 lineto
0.72796 0.73141 lineto
0.72229 0.75303 lineto
0.71821 0.77397 lineto
0.71673 0.78409 lineto
0.71562 0.79393 lineto
0.7152 0.79873 lineto
0.71486 0.80345 lineto
0.7146 0.80808 lineto
0.7145 0.81037 lineto
0.71442 0.81262 lineto
0.71435 0.81486 lineto
0.71431 0.81707 lineto
0.71428 0.81925 lineto
0.71427 0.82141 lineto
0.71428 0.82355 lineto
0.71431 0.82565 lineto
0.71435 0.82773 lineto
0.71441 0.82979 lineto
0.71457 0.83381 lineto
0.71479 0.83772 lineto
0.71506 0.84152 lineto
0.71539 0.84519 lineto
0.71617 0.85217 lineto
0.71711 0.85865 lineto
0.71931 0.87001 lineto
0.7217 0.87917 lineto
0.72399 0.88608 lineto
0.72586 0.89074 lineto
Mistroke
0.72703 0.89319 lineto
0.72717 0.89347 lineto
0.72726 0.89362 lineto
0.72727 0.89365 lineto
0.72727 0.89364 lineto
0.72721 0.89354 lineto
0.72684 0.89296 lineto
0.72614 0.89191 lineto
0.71934 0.88354 lineto
0.70518 0.86996 lineto
0.68291 0.85344 lineto
0.65254 0.83642 lineto
0.63454 0.82846 lineto
0.61487 0.82123 lineto
0.59375 0.81496 lineto
0.57141 0.80987 lineto
0.55988 0.80782 lineto
0.54814 0.80611 lineto
0.53625 0.80477 lineto
0.53025 0.80424 lineto
0.52423 0.80381 lineto
0.51819 0.80347 lineto
0.51517 0.80333 lineto
0.51214 0.80322 lineto
0.5091 0.80314 lineto
0.50607 0.80308 lineto
0.50304 0.80304 lineto
0.5 0.80303 lineto
0.49696 0.80304 lineto
0.49393 0.80308 lineto
0.4909 0.80314 lineto
0.48786 0.80322 lineto
0.48181 0.80347 lineto
0.47577 0.80381 lineto
0.46975 0.80424 lineto
0.46375 0.80477 lineto
0.45186 0.80611 lineto
0.44012 0.80782 lineto
0.42859 0.80987 lineto
0.40625 0.81496 lineto
0.38513 0.82123 lineto
0.34746 0.83642 lineto
0.31709 0.85344 lineto
0.29482 0.86996 lineto
0.28066 0.88354 lineto
0.27386 0.89191 lineto
0.27316 0.89296 lineto
0.27279 0.89354 lineto
0.27275 0.8936 lineto
0.27273 0.89364 lineto
Mistroke
0.27274 0.89362 lineto
0.27297 0.89319 lineto
0.27414 0.89074 lineto
0.27601 0.88608 lineto
0.2783 0.87917 lineto
0.28069 0.87001 lineto
0.28183 0.8646 lineto
0.28289 0.85865 lineto
0.28383 0.85217 lineto
0.28461 0.84519 lineto
0.28494 0.84152 lineto
0.28521 0.83772 lineto
0.28543 0.83381 lineto
0.28552 0.83181 lineto
0.28559 0.82979 lineto
0.28565 0.82773 lineto
0.28569 0.82565 lineto
0.28572 0.82355 lineto
0.28573 0.82141 lineto
0.28572 0.81925 lineto
0.28569 0.81707 lineto
0.28565 0.81486 lineto
0.28558 0.81262 lineto
0.2854 0.80808 lineto
0.28514 0.80345 lineto
0.2848 0.79873 lineto
0.28438 0.79393 lineto
0.28327 0.78409 lineto
0.28179 0.77397 lineto
0.27771 0.75303 lineto
0.27204 0.73141 lineto
0.25582 0.68743 lineto
0.23345 0.64455 lineto
0.20596 0.60512 lineto
0.17506 0.57105 lineto
0.14294 0.54364 lineto
0.11205 0.52345 lineto
0.09784 0.51603 lineto
0.08486 0.51027 lineto
0.07336 0.50603 lineto
0.06361 0.50313 lineto
0.0558 0.50133 lineto
0.05267 0.50077 lineto
0.05009 0.5004 lineto
0.04807 0.50017 lineto
0.04727 0.5001 lineto
0.04662 0.50005 lineto
0.04611 0.50002 lineto
0.04591 0.50001 lineto
0.04575 0.50001 lineto
Mistroke
0.04562 0.5 lineto
0.04553 0.5 lineto
0.04547 0.5 lineto
0.04545 0.5 lineto
0.04547 0.5 lineto
0.04553 0.5 lineto
0.04562 0.5 lineto
0.04575 0.49999 lineto
0.04611 0.49998 lineto
0.04662 0.49995 lineto
0.04727 0.4999 lineto
0.04807 0.49983 lineto
0.05009 0.4996 lineto
0.05267 0.49923 lineto
0.0558 0.49867 lineto
0.06361 0.49687 lineto
0.07336 0.49397 lineto
0.08486 0.48973 lineto
0.11205 0.47655 lineto
0.14294 0.45636 lineto
0.17506 0.42895 lineto
0.20596 0.39488 lineto
0.23345 0.35545 lineto
0.25582 0.31257 lineto
0.26474 0.29056 lineto
0.27204 0.26859 lineto
0.27771 0.24697 lineto
0.27995 0.2364 lineto
0.28179 0.22603 lineto
0.28327 0.21591 lineto
0.28438 0.20607 lineto
0.2848 0.20127 lineto
0.28514 0.19655 lineto
0.2854 0.19192 lineto
0.2855 0.18963 lineto
0.28558 0.18738 lineto
0.28565 0.18514 lineto
0.28569 0.18293 lineto
0.28572 0.18075 lineto
0.28573 0.17859 lineto
0.28572 0.17645 lineto
0.28569 0.17435 lineto
0.28565 0.17227 lineto
0.28559 0.17021 lineto
0.28543 0.16619 lineto
0.28521 0.16228 lineto
0.28494 0.15848 lineto
0.28461 0.15481 lineto
0.28383 0.14783 lineto
0.28289 0.14135 lineto
Mistroke
0.28069 0.12999 lineto
0.2783 0.12083 lineto
0.27601 0.11392 lineto
0.27297 0.10681 lineto
0.27283 0.10653 lineto
0.27274 0.10638 lineto
0.27273 0.10635 lineto
0.27273 0.10636 lineto
0.27279 0.10646 lineto
0.27386 0.10809 lineto
0.28066 0.11646 lineto
0.29482 0.13004 lineto
0.31709 0.14656 lineto
0.34746 0.16358 lineto
0.36546 0.17154 lineto
0.38513 0.17877 lineto
0.40625 0.18504 lineto
0.42859 0.19013 lineto
0.44012 0.19218 lineto
0.45186 0.19389 lineto
0.46375 0.19523 lineto
0.46975 0.19576 lineto
0.47577 0.19619 lineto
0.48181 0.19653 lineto
0.48483 0.19667 lineto
0.48786 0.19678 lineto
0.4909 0.19686 lineto
0.49393 0.19692 lineto
0.49696 0.19696 lineto
0.5 0.19697 lineto
0.50304 0.19696 lineto
0.50607 0.19692 lineto
0.5091 0.19686 lineto
0.51214 0.19678 lineto
0.51819 0.19653 lineto
0.52423 0.19619 lineto
0.53025 0.19576 lineto
0.53625 0.19523 lineto
0.54814 0.19389 lineto
0.55988 0.19218 lineto
0.57141 0.19013 lineto
0.59375 0.18504 lineto
0.61487 0.17877 lineto
0.65254 0.16358 lineto
0.68291 0.14656 lineto
0.70518 0.13004 lineto
0.71934 0.11646 lineto
0.72614 0.10809 lineto
0.72684 0.10704 lineto
0.72721 0.10646 lineto
Mistroke
0.72725 0.1064 lineto
0.72727 0.10636 lineto
0.72726 0.10638 lineto
0.72703 0.10681 lineto
0.72586 0.10926 lineto
0.72399 0.11392 lineto
0.7217 0.12083 lineto
0.71931 0.12999 lineto
0.71817 0.1354 lineto
0.71711 0.14135 lineto
0.71617 0.14783 lineto
0.71539 0.15481 lineto
0.71506 0.15848 lineto
0.71479 0.16228 lineto
0.71457 0.16619 lineto
0.71448 0.16819 lineto
0.71441 0.17021 lineto
0.71435 0.17227 lineto
0.71431 0.17435 lineto
0.71428 0.17645 lineto
0.71427 0.17859 lineto
0.71428 0.18075 lineto
0.71431 0.18293 lineto
0.71435 0.18514 lineto
0.71442 0.18738 lineto
0.7146 0.19192 lineto
0.71486 0.19655 lineto
0.7152 0.20127 lineto
0.71562 0.20607 lineto
0.71673 0.21591 lineto
0.71821 0.22603 lineto
0.72229 0.24697 lineto
0.72796 0.26859 lineto
0.74418 0.31257 lineto
0.76655 0.35545 lineto
0.79404 0.39488 lineto
0.82494 0.42895 lineto
0.85706 0.45636 lineto
0.88795 0.47655 lineto
0.91514 0.48973 lineto
0.92664 0.49397 lineto
0.93639 0.49687 lineto
0.9442 0.49867 lineto
0.94733 0.49923 lineto
0.94991 0.4996 lineto
0.95193 0.49983 lineto
0.95273 0.4999 lineto
0.95338 0.49995 lineto
0.95389 0.49998 lineto
0.95409 0.49999 lineto
Mistroke
0.95425 0.49999 lineto
0.95438 0.5 lineto
0.95447 0.5 lineto
0.95453 0.5 lineto
0.95455 0.5 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1.010638 141 -93.712738 sc6mt astore rstroke
end
grestore
grestore
%%EndDocument
 @endspecial 662 1106 a Fi(Fig)p Fq(.)15 b(69.)k(Figures)c(for)g(Exercise)h
(2.)563 2348 y @beginspecial 0 @llx 0 @lly 570 @urx 575 @ury
1975 @rwi @setspecial
%%BeginDocument: Par.ex3.eps


/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /TDeps_dict 20 dict def TDeps_dict begin /showpage {
    
} def /copypage {
    
} def /grestoreall {
    
} def /erasepage {
    
} def /nulldevice {
    
} def /exitserver {
    
} def /initgraphics {
    
} def /renderbands {
    
} def /initmatrix {
    
} def /banddevice {
    
} def /setpageparams {
    
} def /framedevice {
    
} def /note {
    
} def end end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
gsave
0 0 570 575 rectclip
-19 -163 translate
19 163 570 575 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
gsave clpmt currentmatrix pop newpath
1 0 0 1.007092 -146 197.191498 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -146 199] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.454545 0.5 0.454545 [
[(-1)] 0.04545 0.5 0 2 Msboxa
[(-0.5)] 0.27273 0.5 0 2 Msboxa
[(0.5)] 0.72727 0.5 0 2 Msboxa
[(1)] 0.95455 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.125)] 0.5 1 0 -2 Msboxa
grestore
[(-1)] 0.4875 0.04545 1 0 Msboxa
[(-0.5)] 0.4875 0.27273 1 0 Msboxa
[(0.5)] 0.4875 0.72727 1 0 Msboxa
[(1)] 0.4875 0.95455 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.04545 0.5 moveto
0.04545 0.50625 lineto
stroke
grestore
[(-1)] 0.04545 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.27273 0.5 moveto
0.27273 0.50625 lineto
stroke
grestore
[(-0.5)] 0.27273 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.72727 0.5 moveto
0.72727 0.50625 lineto
stroke
grestore
[(0.5)] 0.72727 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.95455 0.5 moveto
0.95455 0.50625 lineto
stroke
grestore
[(1)] 0.95455 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.09091 0.5 moveto
0.09091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.13636 0.5 moveto
0.13636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18182 0.5 moveto
0.18182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22727 0.5 moveto
0.22727 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31818 0.5 moveto
0.31818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36364 0.5 moveto
0.36364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40909 0.5 moveto
0.40909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45455 0.5 moveto
0.45455 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54545 0.5 moveto
0.54545 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59091 0.5 moveto
0.59091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63636 0.5 moveto
0.63636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.68182 0.5 moveto
0.68182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77273 0.5 moveto
0.77273 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81818 0.5 moveto
0.81818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.86364 0.5 moveto
0.86364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90909 0.5 moveto
0.90909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.5 moveto
0 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
1 0.5 moveto
1 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.125)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.04545 moveto
0.50625 0.04545 lineto
stroke
grestore
[(-1)] 0.4875 0.04545 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.27273 moveto
0.50625 0.27273 lineto
stroke
grestore
[(-0.5)] 0.4875 0.27273 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.72727 moveto
0.50625 0.72727 lineto
stroke
grestore
[(0.5)] 0.4875 0.72727 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.95455 moveto
0.50625 0.95455 lineto
stroke
grestore
[(1)] 0.4875 0.95455 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.09091 moveto
0.50375 0.09091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13636 moveto
0.50375 0.13636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18182 moveto
0.50375 0.18182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22727 moveto
0.50375 0.22727 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31818 moveto
0.50375 0.31818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36364 moveto
0.50375 0.36364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40909 moveto
0.50375 0.40909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45455 moveto
0.50375 0.45455 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54545 moveto
0.50375 0.54545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59091 moveto
0.50375 0.59091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.63636 moveto
0.50375 0.63636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.68182 moveto
0.50375 0.68182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.77273 moveto
0.50375 0.77273 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.81818 moveto
0.50375 0.81818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.86364 moveto
0.50375 0.86364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90909 moveto
0.50375 0.90909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0 moveto
0.50375 0 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1 moveto
0.50375 1 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.95455 0.5 moveto
0.95454 0.5 lineto
0.95452 0.5 lineto
0.95449 0.5 lineto
0.95445 0.5 lineto
0.95439 0.5 lineto
0.95432 0.50001 lineto
0.95415 0.50001 lineto
0.95392 0.50002 lineto
0.95365 0.50004 lineto
0.95295 0.5001 lineto
0.95206 0.5002 lineto
0.95097 0.50034 lineto
0.94823 0.50081 lineto
0.94476 0.50156 lineto
0.94059 0.50268 lineto
0.93035 0.50625 lineto
0.91796 0.51193 lineto
0.90394 0.52005 lineto
0.88886 0.53081 lineto
0.87334 0.54427 lineto
0.84346 0.57889 lineto
0.83022 0.59951 lineto
0.81874 0.62178 lineto
0.80936 0.64519 lineto
0.80555 0.65714 lineto
0.80233 0.66914 lineto
0.79972 0.68112 lineto
0.79772 0.693 lineto
0.79695 0.69888 lineto
0.79632 0.70471 lineto
0.79584 0.71047 lineto
0.79565 0.71332 lineto
0.7955 0.71615 lineto
0.79538 0.71897 lineto
0.79534 0.72037 lineto
0.7953 0.72176 lineto
0.79527 0.72315 lineto
0.79525 0.72453 lineto
0.79524 0.7259 lineto
0.79524 0.72727 lineto
0.79524 0.72864 lineto
0.79525 0.72999 lineto
0.79527 0.73134 lineto
0.7953 0.73269 lineto
0.79538 0.73535 lineto
0.79549 0.73799 lineto
0.79563 0.7406 lineto
0.7958 0.74318 lineto
0.79622 0.74824 lineto
Mistroke
0.79675 0.75318 lineto
0.79738 0.75797 lineto
0.79892 0.76711 lineto
0.80077 0.77562 lineto
0.80514 0.79058 lineto
0.80993 0.80261 lineto
0.81454 0.81161 lineto
0.81836 0.8176 lineto
0.82081 0.82075 lineto
0.82134 0.82134 lineto
0.82139 0.82139 lineto
0.82141 0.82141 lineto
0.82141 0.82141 lineto
0.82141 0.82141 lineto
0.82139 0.82139 lineto
0.82134 0.82134 lineto
0.81951 0.81979 lineto
0.81497 0.81659 lineto
0.80749 0.8123 lineto
0.79697 0.80752 lineto
0.79058 0.80514 lineto
0.78345 0.80286 lineto
0.77562 0.80077 lineto
0.76711 0.79892 lineto
0.75797 0.79738 lineto
0.75318 0.79675 lineto
0.74824 0.79622 lineto
0.74318 0.7958 lineto
0.7406 0.79563 lineto
0.73799 0.79549 lineto
0.73535 0.79538 lineto
0.73402 0.79534 lineto
0.73269 0.7953 lineto
0.73134 0.79527 lineto
0.72999 0.79525 lineto
0.72864 0.79524 lineto
0.72727 0.79524 lineto
0.7259 0.79524 lineto
0.72453 0.79525 lineto
0.72315 0.79527 lineto
0.72176 0.7953 lineto
0.71897 0.79538 lineto
0.71615 0.7955 lineto
0.71332 0.79565 lineto
0.71047 0.79584 lineto
0.70471 0.79632 lineto
0.69888 0.79695 lineto
0.693 0.79772 lineto
0.68112 0.79972 lineto
0.66914 0.80233 lineto
Mistroke
0.65714 0.80555 lineto
0.63338 0.81377 lineto
0.61047 0.82423 lineto
0.58896 0.83664 lineto
0.56934 0.8506 lineto
0.552 0.86562 lineto
0.53721 0.88112 lineto
0.5251 0.89649 lineto
0.51567 0.91112 lineto
0.5088 0.9244 lineto
0.50423 0.93577 lineto
0.50268 0.94059 lineto
0.50156 0.94476 lineto
0.50081 0.94823 lineto
0.50034 0.95097 lineto
0.5002 0.95206 lineto
0.5001 0.95295 lineto
0.50004 0.95365 lineto
0.50002 0.95392 lineto
0.50001 0.95415 lineto
0.50001 0.95432 lineto
0.5 0.95439 lineto
0.5 0.95445 lineto
0.5 0.95449 lineto
0.5 0.95452 lineto
0.5 0.95454 lineto
0.5 0.95455 lineto
0.5 0.95454 lineto
0.5 0.95452 lineto
0.5 0.95449 lineto
0.5 0.95445 lineto
0.49999 0.95432 lineto
0.49999 0.95415 lineto
0.49998 0.95392 lineto
0.49996 0.95365 lineto
0.4999 0.95295 lineto
0.4998 0.95206 lineto
0.49966 0.95097 lineto
0.49919 0.94823 lineto
0.49844 0.94476 lineto
0.49577 0.93577 lineto
0.4912 0.9244 lineto
0.48433 0.91112 lineto
0.4749 0.89649 lineto
0.46279 0.88112 lineto
0.448 0.86562 lineto
0.43066 0.8506 lineto
0.41104 0.83664 lineto
0.38953 0.82423 lineto
0.36662 0.81377 lineto
Mistroke
0.35481 0.80936 lineto
0.34286 0.80555 lineto
0.33086 0.80233 lineto
0.31888 0.79972 lineto
0.307 0.79772 lineto
0.30112 0.79695 lineto
0.29529 0.79632 lineto
0.28953 0.79584 lineto
0.28668 0.79565 lineto
0.28385 0.7955 lineto
0.28103 0.79538 lineto
0.27963 0.79534 lineto
0.27824 0.7953 lineto
0.27685 0.79527 lineto
0.27547 0.79525 lineto
0.2741 0.79524 lineto
0.27273 0.79524 lineto
0.27136 0.79524 lineto
0.27001 0.79525 lineto
0.26866 0.79527 lineto
0.26731 0.7953 lineto
0.26598 0.79534 lineto
0.26465 0.79538 lineto
0.26201 0.79549 lineto
0.2594 0.79563 lineto
0.25682 0.7958 lineto
0.25176 0.79622 lineto
0.24682 0.79675 lineto
0.24203 0.79738 lineto
0.23289 0.79892 lineto
0.22438 0.80077 lineto
0.21655 0.80286 lineto
0.20303 0.80752 lineto
0.19251 0.8123 lineto
0.18503 0.81659 lineto
0.18049 0.81979 lineto
0.17925 0.82081 lineto
0.17888 0.82114 lineto
0.17866 0.82134 lineto
0.17861 0.82139 lineto
0.17859 0.82141 lineto
0.17859 0.82141 lineto
0.17859 0.82141 lineto
0.17861 0.82139 lineto
0.17866 0.82134 lineto
0.17919 0.82075 lineto
0.18164 0.8176 lineto
0.18546 0.81161 lineto
0.19007 0.80261 lineto
0.19486 0.79058 lineto
Mistroke
0.19923 0.77562 lineto
0.20108 0.76711 lineto
0.20262 0.75797 lineto
0.20325 0.75318 lineto
0.20378 0.74824 lineto
0.2042 0.74318 lineto
0.20437 0.7406 lineto
0.20451 0.73799 lineto
0.20462 0.73535 lineto
0.20466 0.73402 lineto
0.2047 0.73269 lineto
0.20473 0.73134 lineto
0.20475 0.72999 lineto
0.20476 0.72864 lineto
0.20476 0.72727 lineto
0.20476 0.7259 lineto
0.20475 0.72453 lineto
0.20473 0.72315 lineto
0.2047 0.72176 lineto
0.20462 0.71897 lineto
0.2045 0.71615 lineto
0.20435 0.71332 lineto
0.20416 0.71047 lineto
0.20368 0.70471 lineto
0.20305 0.69888 lineto
0.20228 0.693 lineto
0.20028 0.68112 lineto
0.19767 0.66914 lineto
0.19064 0.64519 lineto
0.18126 0.62178 lineto
0.16978 0.59951 lineto
0.15654 0.57889 lineto
0.14199 0.56037 lineto
0.11114 0.53081 lineto
0.09606 0.52005 lineto
0.08204 0.51193 lineto
0.06965 0.50625 lineto
0.05941 0.50268 lineto
0.05524 0.50156 lineto
0.05177 0.50081 lineto
0.04903 0.50034 lineto
0.04794 0.5002 lineto
0.04705 0.5001 lineto
0.04635 0.50004 lineto
0.04608 0.50002 lineto
0.04585 0.50001 lineto
0.04568 0.50001 lineto
0.04561 0.5 lineto
0.04555 0.5 lineto
0.04551 0.5 lineto
Mistroke
0.04548 0.5 lineto
0.04546 0.5 lineto
0.04545 0.5 lineto
0.04546 0.5 lineto
0.04548 0.5 lineto
0.04551 0.5 lineto
0.04555 0.5 lineto
0.04568 0.49999 lineto
0.04585 0.49999 lineto
0.04608 0.49998 lineto
0.04635 0.49996 lineto
0.04705 0.4999 lineto
0.04794 0.4998 lineto
0.04903 0.49966 lineto
0.05177 0.49919 lineto
0.05524 0.49844 lineto
0.05941 0.49732 lineto
0.06965 0.49375 lineto
0.08204 0.48807 lineto
0.11114 0.46919 lineto
0.12666 0.45573 lineto
0.14199 0.43963 lineto
0.16978 0.40049 lineto
0.18126 0.37822 lineto
0.19064 0.35481 lineto
0.19445 0.34286 lineto
0.19767 0.33086 lineto
0.20028 0.31888 lineto
0.20228 0.307 lineto
0.20305 0.30112 lineto
0.20368 0.29529 lineto
0.20416 0.28953 lineto
0.20435 0.28668 lineto
0.2045 0.28385 lineto
0.20462 0.28103 lineto
0.20466 0.27963 lineto
0.2047 0.27824 lineto
0.20473 0.27685 lineto
0.20475 0.27547 lineto
0.20476 0.2741 lineto
0.20476 0.27273 lineto
0.20476 0.27136 lineto
0.20475 0.27001 lineto
0.20473 0.26866 lineto
0.2047 0.26731 lineto
0.20466 0.26598 lineto
0.20462 0.26465 lineto
0.20451 0.26201 lineto
0.20437 0.2594 lineto
0.2042 0.25682 lineto
Mistroke
0.20378 0.25176 lineto
0.20325 0.24682 lineto
0.20262 0.24203 lineto
0.20108 0.23289 lineto
0.19923 0.22438 lineto
0.19486 0.20942 lineto
0.19007 0.19739 lineto
0.18164 0.1824 lineto
0.17919 0.17925 lineto
0.17886 0.17888 lineto
0.17866 0.17866 lineto
0.17861 0.17861 lineto
0.17859 0.17859 lineto
0.17859 0.17859 lineto
0.17859 0.17859 lineto
0.17861 0.17861 lineto
0.17866 0.17866 lineto
0.18049 0.18021 lineto
0.18503 0.18341 lineto
0.19251 0.1877 lineto
0.20303 0.19248 lineto
0.20942 0.19486 lineto
0.21655 0.19714 lineto
0.22438 0.19923 lineto
0.23289 0.20108 lineto
0.24203 0.20262 lineto
0.24682 0.20325 lineto
0.25176 0.20378 lineto
0.25682 0.2042 lineto
0.2594 0.20437 lineto
0.26201 0.20451 lineto
0.26465 0.20462 lineto
0.26598 0.20466 lineto
0.26731 0.2047 lineto
0.26866 0.20473 lineto
0.27001 0.20475 lineto
0.27136 0.20476 lineto
0.27273 0.20476 lineto
0.2741 0.20476 lineto
0.27547 0.20475 lineto
0.27685 0.20473 lineto
0.27824 0.2047 lineto
0.28103 0.20462 lineto
0.28385 0.2045 lineto
0.28668 0.20435 lineto
0.28953 0.20416 lineto
0.29529 0.20368 lineto
0.30112 0.20305 lineto
0.307 0.20228 lineto
0.31888 0.20028 lineto
Mistroke
0.33086 0.19767 lineto
0.34286 0.19445 lineto
0.36662 0.18623 lineto
0.38953 0.17577 lineto
0.41104 0.16336 lineto
0.43066 0.1494 lineto
0.448 0.13438 lineto
0.46279 0.11888 lineto
0.4749 0.10351 lineto
0.48433 0.08888 lineto
0.4912 0.0756 lineto
0.49577 0.06423 lineto
0.49732 0.05941 lineto
0.49844 0.05524 lineto
0.49919 0.05177 lineto
0.49966 0.04903 lineto
0.4998 0.04794 lineto
0.4999 0.04705 lineto
0.49996 0.04635 lineto
0.49998 0.04608 lineto
0.49999 0.04585 lineto
0.49999 0.04568 lineto
0.5 0.04561 lineto
0.5 0.04555 lineto
0.5 0.04551 lineto
0.5 0.04548 lineto
0.5 0.04546 lineto
0.5 0.04545 lineto
0.5 0.04546 lineto
0.5 0.04548 lineto
0.5 0.04551 lineto
0.5 0.04555 lineto
0.50001 0.04568 lineto
0.50001 0.04585 lineto
0.50002 0.04608 lineto
0.50004 0.04635 lineto
0.5001 0.04705 lineto
0.5002 0.04794 lineto
0.50034 0.04903 lineto
0.50081 0.05177 lineto
0.50156 0.05524 lineto
0.50423 0.06423 lineto
0.5088 0.0756 lineto
0.51567 0.08888 lineto
0.5251 0.10351 lineto
0.53721 0.11888 lineto
0.552 0.13438 lineto
0.56934 0.1494 lineto
0.61047 0.17577 lineto
0.63338 0.18623 lineto
Mistroke
0.64519 0.19064 lineto
0.65714 0.19445 lineto
0.66914 0.19767 lineto
0.68112 0.20028 lineto
0.693 0.20228 lineto
0.69888 0.20305 lineto
0.70471 0.20368 lineto
0.71047 0.20416 lineto
0.71332 0.20435 lineto
0.71615 0.2045 lineto
0.71897 0.20462 lineto
0.72037 0.20466 lineto
0.72176 0.2047 lineto
0.72315 0.20473 lineto
0.72453 0.20475 lineto
0.7259 0.20476 lineto
0.72727 0.20476 lineto
0.72864 0.20476 lineto
0.72999 0.20475 lineto
0.73134 0.20473 lineto
0.73269 0.2047 lineto
0.73402 0.20466 lineto
0.73535 0.20462 lineto
0.73799 0.20451 lineto
0.7406 0.20437 lineto
0.74318 0.2042 lineto
0.74824 0.20378 lineto
0.75318 0.20325 lineto
0.75797 0.20262 lineto
0.76711 0.20108 lineto
0.77562 0.19923 lineto
0.78345 0.19714 lineto
0.79697 0.19248 lineto
0.80749 0.1877 lineto
0.81951 0.18021 lineto
0.82075 0.17919 lineto
0.82112 0.17886 lineto
0.82134 0.17866 lineto
0.82139 0.17861 lineto
0.82141 0.17859 lineto
0.82141 0.17859 lineto
0.82139 0.17861 lineto
0.82134 0.17866 lineto
0.82081 0.17925 lineto
0.81454 0.18839 lineto
0.80993 0.19739 lineto
0.80514 0.20942 lineto
0.80286 0.21655 lineto
0.80077 0.22438 lineto
0.79892 0.23289 lineto
Mistroke
0.79738 0.24203 lineto
0.79675 0.24682 lineto
0.79622 0.25176 lineto
0.7958 0.25682 lineto
0.79563 0.2594 lineto
0.79549 0.26201 lineto
0.79538 0.26465 lineto
0.79534 0.26598 lineto
0.7953 0.26731 lineto
0.79527 0.26866 lineto
0.79525 0.27001 lineto
0.79524 0.27136 lineto
0.79524 0.27273 lineto
0.79524 0.2741 lineto
0.79525 0.27547 lineto
0.79527 0.27685 lineto
0.7953 0.27824 lineto
0.79538 0.28103 lineto
0.7955 0.28385 lineto
0.79565 0.28668 lineto
0.79584 0.28953 lineto
0.79632 0.29529 lineto
0.79695 0.30112 lineto
0.79772 0.307 lineto
0.79972 0.31888 lineto
0.80233 0.33086 lineto
0.80936 0.35481 lineto
0.81874 0.37822 lineto
0.83022 0.40049 lineto
0.84346 0.42111 lineto
0.87334 0.45573 lineto
0.88886 0.46919 lineto
0.90394 0.47995 lineto
0.91796 0.48807 lineto
0.93035 0.49375 lineto
0.94059 0.49732 lineto
0.94476 0.49844 lineto
0.94823 0.49919 lineto
0.95097 0.49966 lineto
0.95206 0.4998 lineto
0.95295 0.4999 lineto
0.95365 0.49996 lineto
0.95392 0.49998 lineto
0.95415 0.49999 lineto
0.95432 0.49999 lineto
0.95439 0.5 lineto
0.95445 0.5 lineto
0.95449 0.5 lineto
0.95452 0.5 lineto
0.95454 0.5 lineto
Mistroke
0.95455 0.5 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1.007092 -146 197.191498 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.007092 141 197.191498 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 141 199] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.454545 0.5 0.454545 [
[(-1)] 0.04545 0.5 0 2 Msboxa
[(-0.5)] 0.27273 0.5 0 2 Msboxa
[(0.5)] 0.72727 0.5 0 2 Msboxa
[(1)] 0.95455 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.0625)] 0.5 1 0 -2 Msboxa
grestore
[(-1)] 0.4875 0.04545 1 0 Msboxa
[(-0.5)] 0.4875 0.27273 1 0 Msboxa
[(0.5)] 0.4875 0.72727 1 0 Msboxa
[(1)] 0.4875 0.95455 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.04545 0.5 moveto
0.04545 0.50625 lineto
stroke
grestore
[(-1)] 0.04545 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.27273 0.5 moveto
0.27273 0.50625 lineto
stroke
grestore
[(-0.5)] 0.27273 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.72727 0.5 moveto
0.72727 0.50625 lineto
stroke
grestore
[(0.5)] 0.72727 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.95455 0.5 moveto
0.95455 0.50625 lineto
stroke
grestore
[(1)] 0.95455 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.09091 0.5 moveto
0.09091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.13636 0.5 moveto
0.13636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18182 0.5 moveto
0.18182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22727 0.5 moveto
0.22727 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31818 0.5 moveto
0.31818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36364 0.5 moveto
0.36364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40909 0.5 moveto
0.40909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45455 0.5 moveto
0.45455 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54545 0.5 moveto
0.54545 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59091 0.5 moveto
0.59091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63636 0.5 moveto
0.63636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.68182 0.5 moveto
0.68182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77273 0.5 moveto
0.77273 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81818 0.5 moveto
0.81818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.86364 0.5 moveto
0.86364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90909 0.5 moveto
0.90909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.5 moveto
0 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
1 0.5 moveto
1 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.0625)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.04545 moveto
0.50625 0.04545 lineto
stroke
grestore
[(-1)] 0.4875 0.04545 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.27273 moveto
0.50625 0.27273 lineto
stroke
grestore
[(-0.5)] 0.4875 0.27273 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.72727 moveto
0.50625 0.72727 lineto
stroke
grestore
[(0.5)] 0.4875 0.72727 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.95455 moveto
0.50625 0.95455 lineto
stroke
grestore
[(1)] 0.4875 0.95455 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.09091 moveto
0.50375 0.09091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13636 moveto
0.50375 0.13636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18182 moveto
0.50375 0.18182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22727 moveto
0.50375 0.22727 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31818 moveto
0.50375 0.31818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36364 moveto
0.50375 0.36364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40909 moveto
0.50375 0.40909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45455 moveto
0.50375 0.45455 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54545 moveto
0.50375 0.54545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59091 moveto
0.50375 0.59091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.63636 moveto
0.50375 0.63636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.68182 moveto
0.50375 0.68182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.77273 moveto
0.50375 0.77273 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.81818 moveto
0.50375 0.81818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.86364 moveto
0.50375 0.86364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90909 moveto
0.50375 0.90909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0 moveto
0.50375 0 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1 moveto
0.50375 1 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.95455 0.5 moveto
0.95453 0.5 lineto
0.95449 0.5 lineto
0.95442 0.5 lineto
0.95433 0.50001 lineto
0.95421 0.50002 lineto
0.95406 0.50003 lineto
0.95369 0.50006 lineto
0.95321 0.50012 lineto
0.95263 0.50021 lineto
0.95117 0.5005 lineto
0.94933 0.50098 lineto
0.94712 0.50167 lineto
0.94176 0.50389 lineto
0.93535 0.5074 lineto
0.92825 0.51239 lineto
0.91342 0.5271 lineto
0.90644 0.53675 lineto
0.90022 0.54773 lineto
0.89506 0.55979 lineto
0.89295 0.56614 lineto
0.89118 0.57264 lineto
0.88977 0.57925 lineto
0.8892 0.58258 lineto
0.88873 0.58592 lineto
0.88835 0.58927 lineto
0.88819 0.59094 lineto
0.88806 0.59261 lineto
0.88795 0.59428 lineto
0.88787 0.59594 lineto
0.88781 0.5976 lineto
0.88777 0.59926 lineto
0.88776 0.60091 lineto
0.88776 0.60256 lineto
0.88779 0.6042 lineto
0.88785 0.60583 lineto
0.88792 0.60745 lineto
0.88802 0.60907 lineto
0.88828 0.61227 lineto
0.88863 0.61542 lineto
0.88906 0.61853 lineto
0.89015 0.62458 lineto
0.89153 0.63038 lineto
0.89317 0.63589 lineto
0.89707 0.6459 lineto
0.90154 0.65442 lineto
0.90621 0.66135 lineto
0.9107 0.66663 lineto
0.91464 0.67035 lineto
0.91768 0.67264 lineto
Mistroke
0.91951 0.67374 lineto
0.9199 0.67393 lineto
0.91993 0.67394 lineto
0.91995 0.67395 lineto
0.91993 0.67394 lineto
0.9199 0.67393 lineto
0.91949 0.67379 lineto
0.91867 0.67355 lineto
0.91742 0.67327 lineto
0.91664 0.67312 lineto
0.91575 0.67298 lineto
0.91475 0.67285 lineto
0.91365 0.67274 lineto
0.91306 0.67269 lineto
0.91245 0.67265 lineto
0.91181 0.67262 lineto
0.91114 0.67259 lineto
0.91045 0.67258 lineto
0.90974 0.67257 lineto
0.909 0.67257 lineto
0.90824 0.67258 lineto
0.90745 0.67261 lineto
0.90664 0.67264 lineto
0.90581 0.67269 lineto
0.90496 0.67275 lineto
0.90318 0.67292 lineto
0.90132 0.67315 lineto
0.89737 0.6738 lineto
0.89313 0.67474 lineto
0.88864 0.676 lineto
0.87908 0.67958 lineto
0.86904 0.68466 lineto
0.85892 0.69129 lineto
0.84908 0.69942 lineto
0.83988 0.70892 lineto
0.83165 0.71957 lineto
0.82462 0.73109 lineto
0.819 0.74314 lineto
0.81675 0.74925 lineto
0.81487 0.75536 lineto
0.81338 0.76141 lineto
0.81277 0.7644 lineto
0.81226 0.76736 lineto
0.81183 0.77029 lineto
0.81149 0.77317 lineto
0.81135 0.77459 lineto
0.81124 0.776 lineto
0.81114 0.7774 lineto
0.81107 0.77878 lineto
0.81101 0.78015 lineto
Mistroke
0.81097 0.7815 lineto
0.81096 0.78284 lineto
0.81096 0.78416 lineto
0.81098 0.78546 lineto
0.81102 0.78675 lineto
0.81107 0.78801 lineto
0.81114 0.78926 lineto
0.81133 0.7917 lineto
0.81158 0.79406 lineto
0.81223 0.79852 lineto
0.81307 0.80261 lineto
0.81405 0.80632 lineto
0.81623 0.81251 lineto
0.81841 0.81703 lineto
0.82021 0.81991 lineto
0.82127 0.82126 lineto
0.82137 0.82137 lineto
0.8214 0.8214 lineto
0.82141 0.82141 lineto
0.8214 0.8214 lineto
0.82137 0.82137 lineto
0.82126 0.82127 lineto
0.81991 0.82021 lineto
0.81703 0.81841 lineto
0.81251 0.81623 lineto
0.80962 0.81512 lineto
0.80632 0.81405 lineto
0.80261 0.81307 lineto
0.79852 0.81223 lineto
0.79633 0.81188 lineto
0.79406 0.81158 lineto
0.7917 0.81133 lineto
0.79049 0.81123 lineto
0.78926 0.81114 lineto
0.78801 0.81107 lineto
0.78675 0.81102 lineto
0.78546 0.81098 lineto
0.78416 0.81096 lineto
0.78284 0.81096 lineto
0.7815 0.81097 lineto
0.78015 0.81101 lineto
0.77878 0.81107 lineto
0.7774 0.81114 lineto
0.776 0.81124 lineto
0.77317 0.81149 lineto
0.77029 0.81183 lineto
0.76736 0.81226 lineto
0.76141 0.81338 lineto
0.75536 0.81487 lineto
0.74314 0.819 lineto
Mistroke
0.73109 0.82462 lineto
0.71957 0.83165 lineto
0.69942 0.84908 lineto
0.69129 0.85892 lineto
0.68466 0.86904 lineto
0.67958 0.87908 lineto
0.67761 0.88394 lineto
0.676 0.88864 lineto
0.67474 0.89313 lineto
0.6738 0.89737 lineto
0.67344 0.89938 lineto
0.67315 0.90132 lineto
0.67292 0.90318 lineto
0.67283 0.90408 lineto
0.67275 0.90496 lineto
0.67269 0.90581 lineto
0.67264 0.90664 lineto
0.67261 0.90745 lineto
0.67258 0.90824 lineto
0.67257 0.909 lineto
0.67257 0.90974 lineto
0.67258 0.91045 lineto
0.67259 0.91114 lineto
0.67262 0.91181 lineto
0.67265 0.91245 lineto
0.67274 0.91365 lineto
0.67285 0.91475 lineto
0.67298 0.91575 lineto
0.67327 0.91742 lineto
0.67355 0.91867 lineto
0.67379 0.91949 lineto
0.67387 0.91974 lineto
0.67393 0.9199 lineto
0.67394 0.91993 lineto
0.67395 0.91995 lineto
0.67394 0.91993 lineto
0.67393 0.9199 lineto
0.67374 0.91951 lineto
0.67264 0.91768 lineto
0.67035 0.91464 lineto
0.66663 0.9107 lineto
0.66135 0.90621 lineto
0.65442 0.90154 lineto
0.6459 0.89707 lineto
0.64107 0.89503 lineto
0.63589 0.89317 lineto
0.63038 0.89153 lineto
0.62458 0.89015 lineto
0.62159 0.88956 lineto
0.61853 0.88906 lineto
Mistroke
0.61542 0.88863 lineto
0.61227 0.88828 lineto
0.60907 0.88802 lineto
0.60745 0.88792 lineto
0.60583 0.88785 lineto
0.6042 0.88779 lineto
0.60256 0.88776 lineto
0.60091 0.88776 lineto
0.59926 0.88777 lineto
0.5976 0.88781 lineto
0.59594 0.88787 lineto
0.59428 0.88795 lineto
0.59261 0.88806 lineto
0.58927 0.88835 lineto
0.58592 0.88873 lineto
0.57925 0.88977 lineto
0.57264 0.89118 lineto
0.55979 0.89506 lineto
0.54773 0.90022 lineto
0.53675 0.90644 lineto
0.5271 0.91342 lineto
0.51895 0.92081 lineto
0.51239 0.92825 lineto
0.5074 0.93535 lineto
0.50389 0.94176 lineto
0.50263 0.94459 lineto
0.50167 0.94712 lineto
0.50098 0.94933 lineto
0.5005 0.95117 lineto
0.50021 0.95263 lineto
0.50012 0.95321 lineto
0.50006 0.95369 lineto
0.50003 0.95406 lineto
0.50002 0.95421 lineto
0.50001 0.95433 lineto
0.5 0.95442 lineto
0.5 0.95449 lineto
0.5 0.95453 lineto
0.5 0.95455 lineto
0.5 0.95453 lineto
0.5 0.95449 lineto
0.5 0.95442 lineto
0.49999 0.95433 lineto
0.49997 0.95406 lineto
0.49994 0.95369 lineto
0.49988 0.95321 lineto
0.49979 0.95263 lineto
0.4995 0.95117 lineto
0.49902 0.94933 lineto
0.49833 0.94712 lineto
Mistroke
0.49611 0.94176 lineto
0.4926 0.93535 lineto
0.48761 0.92825 lineto
0.48105 0.92081 lineto
0.4729 0.91342 lineto
0.46325 0.90644 lineto
0.45227 0.90022 lineto
0.44021 0.89506 lineto
0.43386 0.89295 lineto
0.42736 0.89118 lineto
0.42075 0.88977 lineto
0.41742 0.8892 lineto
0.41408 0.88873 lineto
0.41073 0.88835 lineto
0.40906 0.88819 lineto
0.40739 0.88806 lineto
0.40572 0.88795 lineto
0.40406 0.88787 lineto
0.4024 0.88781 lineto
0.40074 0.88777 lineto
0.39909 0.88776 lineto
0.39744 0.88776 lineto
0.3958 0.88779 lineto
0.39417 0.88785 lineto
0.39255 0.88792 lineto
0.39093 0.88802 lineto
0.38773 0.88828 lineto
0.38458 0.88863 lineto
0.38147 0.88906 lineto
0.37542 0.89015 lineto
0.36962 0.89153 lineto
0.36411 0.89317 lineto
0.3541 0.89707 lineto
0.34558 0.90154 lineto
0.33865 0.90621 lineto
0.33337 0.9107 lineto
0.32965 0.91464 lineto
0.32736 0.91768 lineto
0.32626 0.91951 lineto
0.32614 0.91975 lineto
0.32607 0.9199 lineto
0.32606 0.91993 lineto
0.32605 0.91995 lineto
0.32606 0.91993 lineto
0.32607 0.9199 lineto
0.32621 0.91949 lineto
0.32645 0.91867 lineto
0.32673 0.91742 lineto
0.32702 0.91575 lineto
0.32715 0.91475 lineto
Mistroke
0.32726 0.91365 lineto
0.32731 0.91306 lineto
0.32735 0.91245 lineto
0.32738 0.91181 lineto
0.32741 0.91114 lineto
0.32742 0.91045 lineto
0.32743 0.90974 lineto
0.32743 0.909 lineto
0.32742 0.90824 lineto
0.32739 0.90745 lineto
0.32736 0.90664 lineto
0.32731 0.90581 lineto
0.32725 0.90496 lineto
0.32708 0.90318 lineto
0.32685 0.90132 lineto
0.3262 0.89737 lineto
0.32526 0.89313 lineto
0.324 0.88864 lineto
0.32042 0.87908 lineto
0.31534 0.86904 lineto
0.30871 0.85892 lineto
0.30058 0.84908 lineto
0.29108 0.83988 lineto
0.28043 0.83165 lineto
0.26891 0.82462 lineto
0.25686 0.819 lineto
0.25075 0.81675 lineto
0.24464 0.81487 lineto
0.23859 0.81338 lineto
0.2356 0.81277 lineto
0.23264 0.81226 lineto
0.22971 0.81183 lineto
0.22683 0.81149 lineto
0.22541 0.81135 lineto
0.224 0.81124 lineto
0.2226 0.81114 lineto
0.22122 0.81107 lineto
0.21985 0.81101 lineto
0.2185 0.81097 lineto
0.21716 0.81096 lineto
0.21584 0.81096 lineto
0.21454 0.81098 lineto
0.21325 0.81102 lineto
0.21199 0.81107 lineto
0.21074 0.81114 lineto
0.2083 0.81133 lineto
0.20594 0.81158 lineto
0.20148 0.81223 lineto
0.19739 0.81307 lineto
0.19368 0.81405 lineto
Mistroke
0.18749 0.81623 lineto
0.18297 0.81841 lineto
0.18009 0.82021 lineto
0.17924 0.82085 lineto
0.17874 0.82127 lineto
0.17863 0.82137 lineto
0.1786 0.8214 lineto
0.17859 0.82141 lineto
0.1786 0.8214 lineto
0.17863 0.82137 lineto
0.17873 0.82126 lineto
0.17979 0.81991 lineto
0.18159 0.81703 lineto
0.18377 0.81251 lineto
0.18488 0.80962 lineto
0.18595 0.80632 lineto
0.18693 0.80261 lineto
0.18777 0.79852 lineto
0.18812 0.79633 lineto
0.18842 0.79406 lineto
0.18867 0.7917 lineto
0.18877 0.79049 lineto
0.18886 0.78926 lineto
0.18893 0.78801 lineto
0.18898 0.78675 lineto
0.18902 0.78546 lineto
0.18904 0.78416 lineto
0.18904 0.78284 lineto
0.18903 0.7815 lineto
0.18899 0.78015 lineto
0.18893 0.77878 lineto
0.18876 0.776 lineto
0.18865 0.77459 lineto
0.18851 0.77317 lineto
0.18817 0.77029 lineto
0.18774 0.76736 lineto
0.18662 0.76141 lineto
0.18513 0.75536 lineto
0.181 0.74314 lineto
0.17538 0.73109 lineto
0.16835 0.71957 lineto
0.16012 0.70892 lineto
0.15092 0.69942 lineto
0.14108 0.69129 lineto
0.13096 0.68466 lineto
0.12092 0.67958 lineto
0.11606 0.67761 lineto
0.11136 0.676 lineto
0.10687 0.67474 lineto
0.10263 0.6738 lineto
Mistroke
0.09868 0.67315 lineto
0.09682 0.67292 lineto
0.09592 0.67283 lineto
0.09504 0.67275 lineto
0.09419 0.67269 lineto
0.09336 0.67264 lineto
0.09255 0.67261 lineto
0.09176 0.67258 lineto
0.091 0.67257 lineto
0.09026 0.67257 lineto
0.08955 0.67258 lineto
0.08886 0.67259 lineto
0.08819 0.67262 lineto
0.08755 0.67265 lineto
0.08635 0.67274 lineto
0.08525 0.67285 lineto
0.08425 0.67298 lineto
0.08258 0.67327 lineto
0.08133 0.67355 lineto
0.08051 0.67379 lineto
0.08026 0.67387 lineto
0.0801 0.67393 lineto
0.08007 0.67394 lineto
0.08005 0.67395 lineto
0.0801 0.67393 lineto
0.08049 0.67374 lineto
0.08232 0.67264 lineto
0.08536 0.67035 lineto
0.0893 0.66663 lineto
0.09379 0.66135 lineto
0.09846 0.65442 lineto
0.10293 0.6459 lineto
0.10497 0.64107 lineto
0.10683 0.63589 lineto
0.10847 0.63038 lineto
0.10985 0.62458 lineto
0.11094 0.61853 lineto
0.11137 0.61542 lineto
0.11172 0.61227 lineto
0.11198 0.60907 lineto
0.11208 0.60745 lineto
0.11215 0.60583 lineto
0.11221 0.6042 lineto
0.11224 0.60256 lineto
0.11224 0.60091 lineto
0.11223 0.59926 lineto
0.11219 0.5976 lineto
0.11213 0.59594 lineto
0.11194 0.59261 lineto
0.11181 0.59094 lineto
Mistroke
0.11165 0.58927 lineto
0.11127 0.58592 lineto
0.11023 0.57925 lineto
0.10882 0.57264 lineto
0.10494 0.55979 lineto
0.09978 0.54773 lineto
0.09356 0.53675 lineto
0.08658 0.5271 lineto
0.07919 0.51895 lineto
0.07175 0.51239 lineto
0.06465 0.5074 lineto
0.05824 0.50389 lineto
0.05541 0.50263 lineto
0.05288 0.50167 lineto
0.05067 0.50098 lineto
0.04883 0.5005 lineto
0.04737 0.50021 lineto
0.04679 0.50012 lineto
0.04631 0.50006 lineto
0.04594 0.50003 lineto
0.04579 0.50002 lineto
0.04567 0.50001 lineto
0.04558 0.5 lineto
0.04551 0.5 lineto
0.04547 0.5 lineto
0.04545 0.5 lineto
0.04547 0.5 lineto
0.04551 0.5 lineto
0.04558 0.5 lineto
0.04567 0.49999 lineto
0.04594 0.49997 lineto
0.04631 0.49994 lineto
0.04679 0.49988 lineto
0.04737 0.49979 lineto
0.04883 0.4995 lineto
0.05067 0.49902 lineto
0.05288 0.49833 lineto
0.05824 0.49611 lineto
0.06465 0.4926 lineto
0.07175 0.48761 lineto
0.07919 0.48105 lineto
0.08658 0.4729 lineto
0.09356 0.46325 lineto
0.09978 0.45227 lineto
0.10494 0.44021 lineto
0.10705 0.43386 lineto
0.10882 0.42736 lineto
0.11023 0.42075 lineto
0.1108 0.41742 lineto
0.11127 0.41408 lineto
Mistroke
0.11165 0.41073 lineto
0.11181 0.40906 lineto
0.11194 0.40739 lineto
0.11205 0.40572 lineto
0.11213 0.40406 lineto
0.11219 0.4024 lineto
0.11223 0.40074 lineto
0.11224 0.39909 lineto
0.11224 0.39744 lineto
0.11221 0.3958 lineto
0.11215 0.39417 lineto
0.11208 0.39255 lineto
0.11198 0.39093 lineto
0.11172 0.38773 lineto
0.11137 0.38458 lineto
0.11094 0.38147 lineto
0.10985 0.37542 lineto
0.10847 0.36962 lineto
0.10683 0.36411 lineto
0.10293 0.3541 lineto
0.09846 0.34558 lineto
0.09379 0.33865 lineto
0.08536 0.32965 lineto
0.08232 0.32736 lineto
0.08049 0.32626 lineto
0.0801 0.32607 lineto
0.08007 0.32606 lineto
0.08005 0.32605 lineto
0.0801 0.32607 lineto
0.08051 0.32621 lineto
0.08133 0.32645 lineto
0.08258 0.32673 lineto
0.08336 0.32688 lineto
0.08425 0.32702 lineto
0.08525 0.32715 lineto
0.08635 0.32726 lineto
0.08694 0.32731 lineto
0.08755 0.32735 lineto
0.08819 0.32738 lineto
0.08886 0.32741 lineto
0.08955 0.32742 lineto
0.09026 0.32743 lineto
0.091 0.32743 lineto
0.09176 0.32742 lineto
0.09255 0.32739 lineto
0.09336 0.32736 lineto
0.09419 0.32731 lineto
0.09504 0.32725 lineto
0.09682 0.32708 lineto
0.09868 0.32685 lineto
Mistroke
0.10263 0.3262 lineto
0.10687 0.32526 lineto
0.11136 0.324 lineto
0.12092 0.32042 lineto
0.13096 0.31534 lineto
0.14108 0.30871 lineto
0.15092 0.30058 lineto
0.16012 0.29108 lineto
0.16835 0.28043 lineto
0.17538 0.26891 lineto
0.181 0.25686 lineto
0.18325 0.25075 lineto
0.18513 0.24464 lineto
0.18662 0.23859 lineto
0.18723 0.2356 lineto
0.18774 0.23264 lineto
0.18817 0.22971 lineto
0.18851 0.22683 lineto
0.18865 0.22541 lineto
0.18876 0.224 lineto
0.18886 0.2226 lineto
0.18893 0.22122 lineto
0.18899 0.21985 lineto
0.18903 0.2185 lineto
0.18904 0.21716 lineto
0.18904 0.21584 lineto
0.18902 0.21454 lineto
0.18898 0.21325 lineto
0.18893 0.21199 lineto
0.18886 0.21074 lineto
0.18867 0.2083 lineto
0.18842 0.20594 lineto
0.18777 0.20148 lineto
0.18693 0.19739 lineto
0.18595 0.19368 lineto
0.18377 0.18749 lineto
0.18159 0.18297 lineto
0.17979 0.18009 lineto
0.17915 0.17924 lineto
0.17873 0.17874 lineto
0.17863 0.17863 lineto
0.1786 0.1786 lineto
0.17859 0.17859 lineto
0.1786 0.1786 lineto
0.17863 0.17863 lineto
0.17874 0.17873 lineto
0.18009 0.17979 lineto
0.18297 0.18159 lineto
0.18749 0.18377 lineto
0.19038 0.18488 lineto
Mistroke
0.19368 0.18595 lineto
0.19739 0.18693 lineto
0.20148 0.18777 lineto
0.20594 0.18842 lineto
0.2083 0.18867 lineto
0.20951 0.18877 lineto
0.21074 0.18886 lineto
0.21199 0.18893 lineto
0.21325 0.18898 lineto
0.21454 0.18902 lineto
0.21584 0.18904 lineto
0.21716 0.18904 lineto
0.2185 0.18903 lineto
0.21985 0.18899 lineto
0.22122 0.18893 lineto
0.2226 0.18886 lineto
0.224 0.18876 lineto
0.22683 0.18851 lineto
0.22971 0.18817 lineto
0.23264 0.18774 lineto
0.23859 0.18662 lineto
0.24464 0.18513 lineto
0.25686 0.181 lineto
0.26891 0.17538 lineto
0.28043 0.16835 lineto
0.30058 0.15092 lineto
0.30871 0.14108 lineto
0.31534 0.13096 lineto
0.32042 0.12092 lineto
0.32239 0.11606 lineto
0.324 0.11136 lineto
0.32526 0.10687 lineto
0.3262 0.10263 lineto
0.32656 0.10062 lineto
0.32685 0.09868 lineto
0.32708 0.09682 lineto
0.32717 0.09592 lineto
0.32725 0.09504 lineto
0.32731 0.09419 lineto
0.32736 0.09336 lineto
0.32739 0.09255 lineto
0.32742 0.09176 lineto
0.32743 0.091 lineto
0.32743 0.09026 lineto
0.32742 0.08955 lineto
0.32741 0.08886 lineto
0.32738 0.08819 lineto
0.32735 0.08755 lineto
0.32726 0.08635 lineto
0.32715 0.08525 lineto
Mistroke
0.32702 0.08425 lineto
0.32673 0.08258 lineto
0.32645 0.08133 lineto
0.32621 0.08051 lineto
0.32613 0.08026 lineto
0.32607 0.0801 lineto
0.32606 0.08007 lineto
0.32605 0.08005 lineto
0.32606 0.08007 lineto
0.32607 0.0801 lineto
0.32626 0.08049 lineto
0.32736 0.08232 lineto
0.32965 0.08536 lineto
0.33337 0.0893 lineto
0.33865 0.09379 lineto
0.34558 0.09846 lineto
0.3541 0.10293 lineto
0.35893 0.10497 lineto
0.36411 0.10683 lineto
0.36962 0.10847 lineto
0.37542 0.10985 lineto
0.37841 0.11044 lineto
0.38147 0.11094 lineto
0.38458 0.11137 lineto
0.38773 0.11172 lineto
0.39093 0.11198 lineto
0.39255 0.11208 lineto
0.39417 0.11215 lineto
0.3958 0.11221 lineto
0.39744 0.11224 lineto
0.39909 0.11224 lineto
0.40074 0.11223 lineto
0.4024 0.11219 lineto
0.40406 0.11213 lineto
0.40572 0.11205 lineto
0.40739 0.11194 lineto
0.41073 0.11165 lineto
0.41408 0.11127 lineto
0.42075 0.11023 lineto
0.42736 0.10882 lineto
0.44021 0.10494 lineto
0.45227 0.09978 lineto
0.46325 0.09356 lineto
0.4729 0.08658 lineto
0.48105 0.07919 lineto
0.48761 0.07175 lineto
0.4926 0.06465 lineto
0.49611 0.05824 lineto
0.49833 0.05288 lineto
0.49902 0.05067 lineto
Mistroke
0.4995 0.04883 lineto
0.49979 0.04737 lineto
0.49988 0.04679 lineto
0.49994 0.04631 lineto
0.49997 0.04594 lineto
0.49998 0.04579 lineto
0.49999 0.04567 lineto
0.5 0.04558 lineto
0.5 0.04551 lineto
0.5 0.04547 lineto
0.5 0.04545 lineto
0.5 0.04547 lineto
0.5 0.04551 lineto
0.5 0.04558 lineto
0.50001 0.04567 lineto
0.50003 0.04594 lineto
0.50006 0.04631 lineto
0.50012 0.04679 lineto
0.50021 0.04737 lineto
0.5005 0.04883 lineto
0.50098 0.05067 lineto
0.50167 0.05288 lineto
0.50389 0.05824 lineto
0.5074 0.06465 lineto
0.51239 0.07175 lineto
0.51895 0.07919 lineto
0.5271 0.08658 lineto
0.53675 0.09356 lineto
0.54773 0.09978 lineto
0.55979 0.10494 lineto
0.56614 0.10705 lineto
0.57264 0.10882 lineto
0.57925 0.11023 lineto
0.58258 0.1108 lineto
0.58592 0.11127 lineto
0.58927 0.11165 lineto
0.59094 0.11181 lineto
0.59261 0.11194 lineto
0.59428 0.11205 lineto
0.59594 0.11213 lineto
0.5976 0.11219 lineto
0.59926 0.11223 lineto
0.60091 0.11224 lineto
0.60256 0.11224 lineto
0.6042 0.11221 lineto
0.60583 0.11215 lineto
0.60907 0.11198 lineto
0.61067 0.11186 lineto
0.61227 0.11172 lineto
0.61853 0.11094 lineto
Mistroke
0.62159 0.11044 lineto
0.62458 0.10985 lineto
0.63038 0.10847 lineto
0.63589 0.10683 lineto
0.6459 0.10293 lineto
0.65442 0.09846 lineto
0.66135 0.09379 lineto
0.66663 0.0893 lineto
0.67035 0.08536 lineto
0.67264 0.08232 lineto
0.67374 0.08049 lineto
0.67386 0.08025 lineto
0.67393 0.0801 lineto
0.67394 0.08007 lineto
0.67395 0.08005 lineto
0.67393 0.0801 lineto
0.67379 0.08051 lineto
0.67355 0.08133 lineto
0.67327 0.08258 lineto
0.67312 0.08336 lineto
0.67298 0.08425 lineto
0.67285 0.08525 lineto
0.67274 0.08635 lineto
0.67269 0.08694 lineto
0.67265 0.08755 lineto
0.67262 0.08819 lineto
0.67259 0.08886 lineto
0.67258 0.08955 lineto
0.67257 0.09026 lineto
0.67257 0.091 lineto
0.67258 0.09176 lineto
0.67261 0.09255 lineto
0.67264 0.09336 lineto
0.67269 0.09419 lineto
0.67275 0.09504 lineto
0.67315 0.09868 lineto
0.67344 0.10062 lineto
0.6738 0.10263 lineto
0.67474 0.10687 lineto
0.676 0.11136 lineto
0.67958 0.12092 lineto
0.68466 0.13096 lineto
0.69129 0.14108 lineto
0.69942 0.15092 lineto
0.70892 0.16012 lineto
0.71957 0.16835 lineto
0.73109 0.17538 lineto
0.74314 0.181 lineto
0.74925 0.18325 lineto
0.75536 0.18513 lineto
Mistroke
0.76141 0.18662 lineto
0.7644 0.18723 lineto
0.76736 0.18774 lineto
0.77029 0.18817 lineto
0.77317 0.18851 lineto
0.77459 0.18865 lineto
0.776 0.18876 lineto
0.7774 0.18886 lineto
0.77878 0.18893 lineto
0.78015 0.18899 lineto
0.7815 0.18903 lineto
0.78284 0.18904 lineto
0.78416 0.18904 lineto
0.78546 0.18902 lineto
0.78675 0.18898 lineto
0.78801 0.18893 lineto
0.78926 0.18886 lineto
0.7917 0.18867 lineto
0.79406 0.18842 lineto
0.79633 0.18812 lineto
0.79852 0.18777 lineto
0.80261 0.18693 lineto
0.80632 0.18595 lineto
0.81251 0.18377 lineto
0.81703 0.18159 lineto
0.81991 0.17979 lineto
0.82076 0.17915 lineto
0.82126 0.17873 lineto
0.82137 0.17863 lineto
0.8214 0.1786 lineto
0.82141 0.17859 lineto
0.82137 0.17863 lineto
0.82127 0.17874 lineto
0.82021 0.18009 lineto
0.81841 0.18297 lineto
0.81623 0.18749 lineto
0.81405 0.19368 lineto
0.81307 0.19739 lineto
0.81223 0.20148 lineto
0.81158 0.20594 lineto
0.81133 0.2083 lineto
0.81123 0.20951 lineto
0.81114 0.21074 lineto
0.81107 0.21199 lineto
0.81102 0.21325 lineto
0.81098 0.21454 lineto
0.81096 0.21584 lineto
0.81096 0.21716 lineto
0.81097 0.2185 lineto
0.81101 0.21985 lineto
Mistroke
0.81107 0.22122 lineto
0.81114 0.2226 lineto
0.81124 0.224 lineto
0.81149 0.22683 lineto
0.81183 0.22971 lineto
0.81226 0.23264 lineto
0.81338 0.23859 lineto
0.81487 0.24464 lineto
0.819 0.25686 lineto
0.82462 0.26891 lineto
0.83165 0.28043 lineto
0.83988 0.29108 lineto
0.84908 0.30058 lineto
0.85892 0.30871 lineto
0.86904 0.31534 lineto
0.87908 0.32042 lineto
0.88864 0.324 lineto
0.89313 0.32526 lineto
0.89737 0.3262 lineto
0.90132 0.32685 lineto
0.90318 0.32708 lineto
0.90408 0.32717 lineto
0.90496 0.32725 lineto
0.90581 0.32731 lineto
0.90664 0.32736 lineto
0.90745 0.32739 lineto
0.90824 0.32742 lineto
0.909 0.32743 lineto
0.90974 0.32743 lineto
0.91045 0.32742 lineto
0.91114 0.32741 lineto
0.91181 0.32738 lineto
0.91245 0.32735 lineto
0.91365 0.32726 lineto
0.91475 0.32715 lineto
0.91575 0.32702 lineto
0.91742 0.32673 lineto
0.91867 0.32645 lineto
0.91949 0.32621 lineto
0.9199 0.32607 lineto
0.91993 0.32606 lineto
0.91995 0.32605 lineto
0.9199 0.32607 lineto
0.91951 0.32626 lineto
0.91768 0.32736 lineto
0.91464 0.32965 lineto
0.9107 0.33337 lineto
0.90621 0.33865 lineto
0.90154 0.34558 lineto
0.89707 0.3541 lineto
Mistroke
0.89317 0.36411 lineto
0.89153 0.36962 lineto
0.89015 0.37542 lineto
0.88906 0.38147 lineto
0.88863 0.38458 lineto
0.88828 0.38773 lineto
0.88802 0.39093 lineto
0.88792 0.39255 lineto
0.88785 0.39417 lineto
0.88779 0.3958 lineto
0.88776 0.39744 lineto
0.88776 0.39909 lineto
0.88777 0.40074 lineto
0.88781 0.4024 lineto
0.88787 0.40406 lineto
0.88795 0.40572 lineto
0.88806 0.40739 lineto
0.88835 0.41073 lineto
0.88873 0.41408 lineto
0.88977 0.42075 lineto
0.89118 0.42736 lineto
0.89506 0.44021 lineto
0.90022 0.45227 lineto
0.90644 0.46325 lineto
0.91342 0.4729 lineto
0.92081 0.48105 lineto
0.92825 0.48761 lineto
0.93535 0.4926 lineto
0.94176 0.49611 lineto
0.94712 0.49833 lineto
0.94933 0.49902 lineto
0.95117 0.4995 lineto
0.95263 0.49979 lineto
0.95321 0.49988 lineto
0.95369 0.49994 lineto
0.95406 0.49997 lineto
0.95421 0.49998 lineto
0.95433 0.49999 lineto
0.95442 0.5 lineto
0.95449 0.5 lineto
0.95453 0.5 lineto
0.95455 0.5 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1.007092 141 197.191498 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.010638 -146 -93.712738 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -146 -91] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.454545 0.5 0.454545 [
[(-1)] 0.04545 0.5 0 2 Msboxa
[(-0.5)] 0.27273 0.5 0 2 Msboxa
[(0.5)] 0.72727 0.5 0 2 Msboxa
[(1)] 0.95455 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.03125)] 0.5 1 0 -2 Msboxa
grestore
[(-1)] 0.4875 0.04545 1 0 Msboxa
[(-0.5)] 0.4875 0.27273 1 0 Msboxa
[(0.5)] 0.4875 0.72727 1 0 Msboxa
[(1)] 0.4875 0.95455 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.04545 0.5 moveto
0.04545 0.50625 lineto
stroke
grestore
[(-1)] 0.04545 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.27273 0.5 moveto
0.27273 0.50625 lineto
stroke
grestore
[(-0.5)] 0.27273 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.72727 0.5 moveto
0.72727 0.50625 lineto
stroke
grestore
[(0.5)] 0.72727 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.95455 0.5 moveto
0.95455 0.50625 lineto
stroke
grestore
[(1)] 0.95455 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.09091 0.5 moveto
0.09091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.13636 0.5 moveto
0.13636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18182 0.5 moveto
0.18182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22727 0.5 moveto
0.22727 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31818 0.5 moveto
0.31818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36364 0.5 moveto
0.36364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40909 0.5 moveto
0.40909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45455 0.5 moveto
0.45455 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54545 0.5 moveto
0.54545 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59091 0.5 moveto
0.59091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63636 0.5 moveto
0.63636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.68182 0.5 moveto
0.68182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77273 0.5 moveto
0.77273 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81818 0.5 moveto
0.81818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.86364 0.5 moveto
0.86364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90909 0.5 moveto
0.90909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.5 moveto
0 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
1 0.5 moveto
1 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.03125)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.04545 moveto
0.50625 0.04545 lineto
stroke
grestore
[(-1)] 0.4875 0.04545 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.27273 moveto
0.50625 0.27273 lineto
stroke
grestore
[(-0.5)] 0.4875 0.27273 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.72727 moveto
0.50625 0.72727 lineto
stroke
grestore
[(0.5)] 0.4875 0.72727 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.95455 moveto
0.50625 0.95455 lineto
stroke
grestore
[(1)] 0.4875 0.95455 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.09091 moveto
0.50375 0.09091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13636 moveto
0.50375 0.13636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18182 moveto
0.50375 0.18182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22727 moveto
0.50375 0.22727 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31818 moveto
0.50375 0.31818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36364 moveto
0.50375 0.36364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40909 moveto
0.50375 0.40909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45455 moveto
0.50375 0.45455 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54545 moveto
0.50375 0.54545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59091 moveto
0.50375 0.59091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.63636 moveto
0.50375 0.63636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.68182 moveto
0.50375 0.68182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.77273 moveto
0.50375 0.77273 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.81818 moveto
0.50375 0.81818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.86364 moveto
0.50375 0.86364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90909 moveto
0.50375 0.90909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0 moveto
0.50375 0 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1 moveto
0.50375 1 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.95455 0.5 moveto
0.95452 0.5 lineto
0.95443 0.5 lineto
0.9543 0.50001 lineto
0.9541 0.50004 lineto
0.95386 0.50007 lineto
0.95356 0.50012 lineto
0.95281 0.50028 lineto
0.95186 0.50054 lineto
0.95073 0.50092 lineto
0.94799 0.50214 lineto
0.94475 0.50408 lineto
0.94119 0.50681 lineto
0.93753 0.5104 lineto
0.93397 0.51483 lineto
0.93071 0.52004 lineto
0.92793 0.52594 lineto
0.92677 0.5291 lineto
0.92579 0.53238 lineto
0.925 0.53574 lineto
0.92467 0.53745 lineto
0.9244 0.53917 lineto
0.92418 0.5409 lineto
0.92401 0.54264 lineto
0.92389 0.54438 lineto
0.92382 0.54612 lineto
0.9238 0.54786 lineto
0.92384 0.54959 lineto
0.92393 0.55131 lineto
0.92406 0.55302 lineto
0.92425 0.55472 lineto
0.92449 0.55639 lineto
0.9251 0.55967 lineto
0.92589 0.56284 lineto
0.92683 0.56587 lineto
0.92914 0.57145 lineto
0.93186 0.5763 lineto
0.93478 0.58032 lineto
0.93772 0.58348 lineto
0.94045 0.5858 lineto
0.94278 0.58735 lineto
0.94454 0.58823 lineto
0.94557 0.58861 lineto
0.94578 0.58867 lineto
0.94581 0.58868 lineto
0.94578 0.58867 lineto
0.9457 0.58866 lineto
0.94556 0.58864 lineto
0.94537 0.58863 lineto
0.94512 0.58861 lineto
Mistroke
0.94482 0.5886 lineto
0.94446 0.5886 lineto
0.94405 0.58861 lineto
0.94359 0.58864 lineto
0.94307 0.58868 lineto
0.9425 0.58875 lineto
0.94122 0.58896 lineto
0.93976 0.58929 lineto
0.93813 0.58976 lineto
0.93444 0.59119 lineto
0.93033 0.59338 lineto
0.926 0.59639 lineto
0.92166 0.60025 lineto
0.91751 0.60493 lineto
0.91375 0.61034 lineto
0.91055 0.61638 lineto
0.90921 0.61958 lineto
0.90805 0.62287 lineto
0.90708 0.62622 lineto
0.90632 0.62962 lineto
0.90602 0.63133 lineto
0.90577 0.63303 lineto
0.90557 0.63474 lineto
0.90542 0.63643 lineto
0.90533 0.63812 lineto
0.90528 0.6398 lineto
0.90529 0.64146 lineto
0.90534 0.6431 lineto
0.90544 0.64471 lineto
0.90559 0.64631 lineto
0.90578 0.64787 lineto
0.90602 0.64941 lineto
0.90661 0.65237 lineto
0.90734 0.65519 lineto
0.90917 0.66029 lineto
0.91132 0.66459 lineto
0.91359 0.66805 lineto
0.91578 0.67065 lineto
0.91767 0.67242 lineto
0.91908 0.67346 lineto
0.91984 0.6739 lineto
0.91992 0.67394 lineto
0.91995 0.67395 lineto
0.91992 0.67394 lineto
0.91984 0.67391 lineto
0.91952 0.67381 lineto
0.91899 0.67368 lineto
0.91864 0.67361 lineto
0.91823 0.67354 lineto
0.91777 0.67347 lineto
Mistroke
0.91726 0.67342 lineto
0.91669 0.67337 lineto
0.91606 0.67334 lineto
0.91539 0.67333 lineto
0.91466 0.67333 lineto
0.91389 0.67336 lineto
0.91307 0.67342 lineto
0.9122 0.6735 lineto
0.91128 0.67362 lineto
0.90933 0.67396 lineto
0.90723 0.67446 lineto
0.90266 0.67599 lineto
0.89777 0.6783 lineto
0.89274 0.68145 lineto
0.8878 0.68544 lineto
0.88315 0.69021 lineto
0.87897 0.69566 lineto
0.87541 0.70165 lineto
0.87391 0.7048 lineto
0.8726 0.70801 lineto
0.87149 0.71127 lineto
0.87059 0.71454 lineto
0.8699 0.71781 lineto
0.86964 0.71942 lineto
0.86942 0.72103 lineto
0.86925 0.72262 lineto
0.86914 0.7242 lineto
0.86907 0.72575 lineto
0.86904 0.72727 lineto
0.86907 0.72877 lineto
0.86913 0.73024 lineto
0.86924 0.73167 lineto
0.86939 0.73307 lineto
0.86979 0.73575 lineto
0.87032 0.73826 lineto
0.87095 0.74059 lineto
0.87167 0.74271 lineto
0.87327 0.74633 lineto
0.87489 0.74909 lineto
0.87634 0.75099 lineto
0.87741 0.75209 lineto
0.87774 0.75238 lineto
0.87785 0.75247 lineto
0.87792 0.75252 lineto
0.87794 0.75253 lineto
0.87792 0.75252 lineto
0.87773 0.75241 lineto
0.87672 0.75194 lineto
0.8759 0.75164 lineto
0.87486 0.75133 lineto
Mistroke
0.87359 0.75103 lineto
0.87288 0.7509 lineto
0.87211 0.75078 lineto
0.8713 0.75067 lineto
0.87043 0.75059 lineto
0.86951 0.75052 lineto
0.86854 0.75049 lineto
0.86753 0.75048 lineto
0.86647 0.7505 lineto
0.86537 0.75056 lineto
0.86423 0.75065 lineto
0.86184 0.75095 lineto
0.86059 0.75116 lineto
0.85932 0.75142 lineto
0.85669 0.75207 lineto
0.85397 0.75293 lineto
0.84839 0.75524 lineto
0.84278 0.7584 lineto
0.83735 0.76236 lineto
0.8323 0.76707 lineto
0.82779 0.7724 lineto
0.82397 0.77819 lineto
0.82094 0.78425 lineto
0.81973 0.78732 lineto
0.81873 0.79038 lineto
0.81794 0.79341 lineto
0.81762 0.7949 lineto
0.81734 0.79638 lineto
0.81712 0.79783 lineto
0.81695 0.79926 lineto
0.81682 0.80066 lineto
0.81673 0.80203 lineto
0.81669 0.80336 lineto
0.81668 0.80467 lineto
0.81672 0.80593 lineto
0.81679 0.80715 lineto
0.81689 0.80833 lineto
0.81702 0.80947 lineto
0.81737 0.8116 lineto
0.8178 0.81353 lineto
0.81829 0.81526 lineto
0.81937 0.81806 lineto
0.82038 0.81999 lineto
0.82112 0.82108 lineto
0.82134 0.82133 lineto
0.82139 0.82139 lineto
0.82141 0.82141 lineto
0.82139 0.82139 lineto
0.82133 0.82134 lineto
0.82108 0.82112 lineto
Mistroke
0.81999 0.82038 lineto
0.81806 0.81937 lineto
0.81677 0.81882 lineto
0.81526 0.81829 lineto
0.81353 0.8178 lineto
0.8116 0.81737 lineto
0.81056 0.81718 lineto
0.80947 0.81702 lineto
0.80833 0.81689 lineto
0.80715 0.81679 lineto
0.80593 0.81672 lineto
0.80467 0.81668 lineto
0.80336 0.81669 lineto
0.80203 0.81673 lineto
0.80066 0.81682 lineto
0.79926 0.81695 lineto
0.79638 0.81734 lineto
0.7949 0.81762 lineto
0.79341 0.81794 lineto
0.79038 0.81873 lineto
0.78425 0.82094 lineto
0.77819 0.82397 lineto
0.7724 0.82779 lineto
0.76707 0.8323 lineto
0.76236 0.83735 lineto
0.7584 0.84278 lineto
0.75524 0.84839 lineto
0.75398 0.8512 lineto
0.75293 0.85397 lineto
0.75207 0.85669 lineto
0.75142 0.85932 lineto
0.75116 0.86059 lineto
0.75095 0.86184 lineto
0.75078 0.86305 lineto
0.75065 0.86423 lineto
0.75056 0.86537 lineto
0.7505 0.86647 lineto
0.75048 0.86753 lineto
0.75049 0.86854 lineto
0.75052 0.86951 lineto
0.75059 0.87043 lineto
0.75067 0.8713 lineto
0.75078 0.87211 lineto
0.75103 0.87359 lineto
0.75133 0.87486 lineto
0.75194 0.87672 lineto
0.75241 0.87773 lineto
0.75247 0.87785 lineto
0.75252 0.87792 lineto
0.75253 0.87794 lineto
Mistroke
0.75252 0.87792 lineto
0.75238 0.87774 lineto
0.75209 0.87741 lineto
0.75099 0.87634 lineto
0.74909 0.87489 lineto
0.74633 0.87327 lineto
0.74271 0.87167 lineto
0.74059 0.87095 lineto
0.73826 0.87032 lineto
0.73575 0.86979 lineto
0.73443 0.86957 lineto
0.73307 0.86939 lineto
0.73167 0.86924 lineto
0.73024 0.86913 lineto
0.72877 0.86907 lineto
0.72727 0.86904 lineto
0.72575 0.86907 lineto
0.7242 0.86914 lineto
0.72262 0.86925 lineto
0.72103 0.86942 lineto
0.71781 0.8699 lineto
0.71454 0.87059 lineto
0.71127 0.87149 lineto
0.70801 0.8726 lineto
0.70165 0.87541 lineto
0.69566 0.87897 lineto
0.69021 0.88315 lineto
0.68544 0.8878 lineto
0.68145 0.89274 lineto
0.6783 0.89777 lineto
0.67599 0.90266 lineto
0.67513 0.905 lineto
0.67446 0.90723 lineto
0.67396 0.90933 lineto
0.67377 0.91033 lineto
0.67362 0.91128 lineto
0.6735 0.9122 lineto
0.67342 0.91307 lineto
0.67336 0.91389 lineto
0.67333 0.91466 lineto
0.67333 0.91539 lineto
0.67334 0.91606 lineto
0.67337 0.91669 lineto
0.67342 0.91726 lineto
0.67354 0.91823 lineto
0.67361 0.91864 lineto
0.67368 0.91899 lineto
0.67381 0.91952 lineto
0.67391 0.91984 lineto
0.67394 0.91992 lineto
Mistroke
0.67395 0.91995 lineto
0.67394 0.91992 lineto
0.6739 0.91984 lineto
0.67346 0.91908 lineto
0.67242 0.91767 lineto
0.67065 0.91578 lineto
0.66805 0.91359 lineto
0.66459 0.91132 lineto
0.66029 0.90917 lineto
0.65783 0.9082 lineto
0.65519 0.90734 lineto
0.65237 0.90661 lineto
0.65091 0.90629 lineto
0.64941 0.90602 lineto
0.64787 0.90578 lineto
0.64631 0.90559 lineto
0.64471 0.90544 lineto
0.6431 0.90534 lineto
0.64146 0.90529 lineto
0.6398 0.90528 lineto
0.63812 0.90533 lineto
0.63643 0.90542 lineto
0.63474 0.90557 lineto
0.63303 0.90577 lineto
0.63133 0.90602 lineto
0.62962 0.90632 lineto
0.62287 0.90805 lineto
0.61958 0.90921 lineto
0.61638 0.91055 lineto
0.61034 0.91375 lineto
0.60493 0.91751 lineto
0.60025 0.92166 lineto
0.59639 0.926 lineto
0.59338 0.93033 lineto
0.59119 0.93444 lineto
0.59038 0.93635 lineto
0.58976 0.93813 lineto
0.58929 0.93976 lineto
0.58896 0.94122 lineto
0.58875 0.9425 lineto
0.58868 0.94307 lineto
0.58864 0.94359 lineto
0.58861 0.94405 lineto
0.5886 0.94446 lineto
0.5886 0.94482 lineto
0.58861 0.94512 lineto
0.58863 0.94537 lineto
0.58864 0.94556 lineto
0.58866 0.9457 lineto
0.58867 0.94578 lineto
Mistroke
0.58861 0.94557 lineto
0.58823 0.94454 lineto
0.58735 0.94278 lineto
0.5858 0.94045 lineto
0.58348 0.93772 lineto
0.58032 0.93478 lineto
0.5763 0.93186 lineto
0.57145 0.92914 lineto
0.56875 0.92793 lineto
0.56587 0.92683 lineto
0.56284 0.92589 lineto
0.55967 0.9251 lineto
0.55804 0.92477 lineto
0.55639 0.92449 lineto
0.55472 0.92425 lineto
0.55302 0.92406 lineto
0.55131 0.92393 lineto
0.54959 0.92384 lineto
0.54786 0.9238 lineto
0.54612 0.92382 lineto
0.54438 0.92389 lineto
0.54264 0.92401 lineto
0.53917 0.9244 lineto
0.53745 0.92467 lineto
0.53574 0.925 lineto
0.53238 0.92579 lineto
0.52594 0.92793 lineto
0.52004 0.93071 lineto
0.51483 0.93397 lineto
0.5104 0.93753 lineto
0.50681 0.94119 lineto
0.50408 0.94475 lineto
0.50214 0.94799 lineto
0.50145 0.94943 lineto
0.50092 0.95073 lineto
0.50054 0.95186 lineto
0.50028 0.95281 lineto
0.50012 0.95356 lineto
0.50007 0.95386 lineto
0.50004 0.9541 lineto
0.50001 0.9543 lineto
0.5 0.95443 lineto
0.5 0.95452 lineto
0.5 0.95455 lineto
0.5 0.95452 lineto
0.5 0.95443 lineto
0.49999 0.9543 lineto
0.49996 0.9541 lineto
0.49988 0.95356 lineto
0.49972 0.95281 lineto
Mistroke
0.49946 0.95186 lineto
0.49908 0.95073 lineto
0.49786 0.94799 lineto
0.49592 0.94475 lineto
0.49319 0.94119 lineto
0.4896 0.93753 lineto
0.48517 0.93397 lineto
0.47996 0.93071 lineto
0.47406 0.92793 lineto
0.4709 0.92677 lineto
0.46762 0.92579 lineto
0.46426 0.925 lineto
0.46255 0.92467 lineto
0.46083 0.9244 lineto
0.4591 0.92418 lineto
0.45736 0.92401 lineto
0.45562 0.92389 lineto
0.45388 0.92382 lineto
0.45214 0.9238 lineto
0.45041 0.92384 lineto
0.44869 0.92393 lineto
0.44698 0.92406 lineto
0.44361 0.92449 lineto
0.44196 0.92477 lineto
0.44033 0.9251 lineto
0.43413 0.92683 lineto
0.43125 0.92793 lineto
0.42855 0.92914 lineto
0.4237 0.93186 lineto
0.41968 0.93478 lineto
0.41652 0.93772 lineto
0.41265 0.94278 lineto
0.41177 0.94454 lineto
0.41139 0.94557 lineto
0.41133 0.94578 lineto
0.41132 0.94581 lineto
0.41133 0.94578 lineto
0.41134 0.9457 lineto
0.41136 0.94556 lineto
0.41137 0.94537 lineto
0.41139 0.94512 lineto
0.4114 0.94482 lineto
0.4114 0.94446 lineto
0.41139 0.94405 lineto
0.41136 0.94359 lineto
0.41132 0.94307 lineto
0.41125 0.9425 lineto
0.41104 0.94122 lineto
0.41071 0.93976 lineto
0.41024 0.93813 lineto
Mistroke
0.40881 0.93444 lineto
0.40662 0.93033 lineto
0.40361 0.926 lineto
0.39975 0.92166 lineto
0.39507 0.91751 lineto
0.38966 0.91375 lineto
0.38362 0.91055 lineto
0.38042 0.90921 lineto
0.37713 0.90805 lineto
0.37378 0.90708 lineto
0.37038 0.90632 lineto
0.36697 0.90577 lineto
0.36526 0.90557 lineto
0.36357 0.90542 lineto
0.36188 0.90533 lineto
0.3602 0.90528 lineto
0.35854 0.90529 lineto
0.3569 0.90534 lineto
0.35529 0.90544 lineto
0.35369 0.90559 lineto
0.35213 0.90578 lineto
0.35059 0.90602 lineto
0.34763 0.90661 lineto
0.34481 0.90734 lineto
0.33971 0.90917 lineto
0.33541 0.91132 lineto
0.33195 0.91359 lineto
0.32935 0.91578 lineto
0.32758 0.91767 lineto
0.32654 0.91908 lineto
0.32625 0.91955 lineto
0.3261 0.91984 lineto
0.32606 0.91992 lineto
0.32605 0.91995 lineto
0.32606 0.91992 lineto
0.32609 0.91984 lineto
0.32619 0.91952 lineto
0.32632 0.91899 lineto
0.32639 0.91864 lineto
0.32646 0.91823 lineto
0.32653 0.91777 lineto
0.32658 0.91726 lineto
0.32663 0.91669 lineto
0.32666 0.91606 lineto
0.32667 0.91539 lineto
0.32667 0.91466 lineto
0.32664 0.91389 lineto
0.32658 0.91307 lineto
0.3265 0.9122 lineto
0.32638 0.91128 lineto
Mistroke
0.32604 0.90933 lineto
0.32554 0.90723 lineto
0.32401 0.90266 lineto
0.3217 0.89777 lineto
0.31855 0.89274 lineto
0.31456 0.8878 lineto
0.30979 0.88315 lineto
0.30434 0.87897 lineto
0.29835 0.87541 lineto
0.29199 0.8726 lineto
0.28873 0.87149 lineto
0.28546 0.87059 lineto
0.28219 0.8699 lineto
0.28058 0.86964 lineto
0.27897 0.86942 lineto
0.27738 0.86925 lineto
0.2758 0.86914 lineto
0.27425 0.86907 lineto
0.27273 0.86904 lineto
0.27123 0.86907 lineto
0.26976 0.86913 lineto
0.26833 0.86924 lineto
0.26693 0.86939 lineto
0.26557 0.86957 lineto
0.26425 0.86979 lineto
0.26174 0.87032 lineto
0.25941 0.87095 lineto
0.25729 0.87167 lineto
0.25367 0.87327 lineto
0.25091 0.87489 lineto
0.24901 0.87634 lineto
0.24791 0.87741 lineto
0.24762 0.87774 lineto
0.24753 0.87785 lineto
0.24748 0.87792 lineto
0.24747 0.87794 lineto
0.24748 0.87792 lineto
0.24759 0.87773 lineto
0.24806 0.87672 lineto
0.24836 0.8759 lineto
0.24867 0.87486 lineto
0.24897 0.87359 lineto
0.24922 0.87211 lineto
0.24933 0.8713 lineto
0.24941 0.87043 lineto
0.24948 0.86951 lineto
0.24951 0.86854 lineto
0.24952 0.86753 lineto
0.2495 0.86647 lineto
0.24944 0.86537 lineto
Mistroke
0.24935 0.86423 lineto
0.24922 0.86305 lineto
0.24905 0.86184 lineto
0.24858 0.85932 lineto
0.24793 0.85669 lineto
0.24707 0.85397 lineto
0.24476 0.84839 lineto
0.2416 0.84278 lineto
0.23764 0.83735 lineto
0.23293 0.8323 lineto
0.2276 0.82779 lineto
0.22181 0.82397 lineto
0.21575 0.82094 lineto
0.21268 0.81973 lineto
0.20962 0.81873 lineto
0.20659 0.81794 lineto
0.2051 0.81762 lineto
0.20362 0.81734 lineto
0.20217 0.81712 lineto
0.20074 0.81695 lineto
0.19934 0.81682 lineto
0.19797 0.81673 lineto
0.19664 0.81669 lineto
0.19533 0.81668 lineto
0.19407 0.81672 lineto
0.19285 0.81679 lineto
0.19167 0.81689 lineto
0.19053 0.81702 lineto
0.18944 0.81718 lineto
0.1884 0.81737 lineto
0.18474 0.81829 lineto
0.18323 0.81882 lineto
0.18194 0.81937 lineto
0.18001 0.82038 lineto
0.17892 0.82112 lineto
0.17867 0.82134 lineto
0.17861 0.82139 lineto
0.17859 0.82141 lineto
0.17861 0.82139 lineto
0.17866 0.82133 lineto
0.17888 0.82108 lineto
0.17962 0.81999 lineto
0.18063 0.81806 lineto
0.18171 0.81526 lineto
0.1822 0.81353 lineto
0.18263 0.8116 lineto
0.18298 0.80947 lineto
0.18311 0.80833 lineto
0.18321 0.80715 lineto
0.18328 0.80593 lineto
Mistroke
0.18332 0.80467 lineto
0.18331 0.80336 lineto
0.18327 0.80203 lineto
0.18318 0.80066 lineto
0.18305 0.79926 lineto
0.18266 0.79638 lineto
0.18238 0.7949 lineto
0.18206 0.79341 lineto
0.18127 0.79038 lineto
0.17906 0.78425 lineto
0.17603 0.77819 lineto
0.17221 0.7724 lineto
0.1677 0.76707 lineto
0.16265 0.76236 lineto
0.15722 0.7584 lineto
0.15161 0.75524 lineto
0.1488 0.75398 lineto
0.14603 0.75293 lineto
0.14331 0.75207 lineto
0.14068 0.75142 lineto
0.13941 0.75116 lineto
0.13816 0.75095 lineto
0.13695 0.75078 lineto
0.13577 0.75065 lineto
0.13463 0.75056 lineto
0.13353 0.7505 lineto
0.13247 0.75048 lineto
0.13146 0.75049 lineto
0.13049 0.75052 lineto
0.12957 0.75059 lineto
0.1287 0.75067 lineto
0.12789 0.75078 lineto
0.12641 0.75103 lineto
0.12514 0.75133 lineto
0.12328 0.75194 lineto
0.12227 0.75241 lineto
0.12215 0.75247 lineto
0.12208 0.75252 lineto
0.12206 0.75253 lineto
0.12208 0.75252 lineto
0.12215 0.75247 lineto
0.12226 0.75238 lineto
0.12259 0.75209 lineto
0.12366 0.75099 lineto
0.12511 0.74909 lineto
0.12673 0.74633 lineto
0.12755 0.74463 lineto
0.12833 0.74271 lineto
0.12905 0.74059 lineto
0.12968 0.73826 lineto
Mistroke
0.13021 0.73575 lineto
0.13043 0.73443 lineto
0.13061 0.73307 lineto
0.13076 0.73167 lineto
0.13087 0.73024 lineto
0.13093 0.72877 lineto
0.13096 0.72727 lineto
0.13093 0.72575 lineto
0.13086 0.7242 lineto
0.13075 0.72262 lineto
0.13058 0.72103 lineto
0.1301 0.71781 lineto
0.12941 0.71454 lineto
0.12851 0.71127 lineto
0.1274 0.70801 lineto
0.12459 0.70165 lineto
0.12103 0.69566 lineto
0.11685 0.69021 lineto
0.1122 0.68544 lineto
0.10726 0.68145 lineto
0.10223 0.6783 lineto
0.09734 0.67599 lineto
0.095 0.67513 lineto
0.09277 0.67446 lineto
0.09067 0.67396 lineto
0.08967 0.67377 lineto
0.08872 0.67362 lineto
0.0878 0.6735 lineto
0.08693 0.67342 lineto
0.08611 0.67336 lineto
0.08534 0.67333 lineto
0.08461 0.67333 lineto
0.08394 0.67334 lineto
0.08331 0.67337 lineto
0.08274 0.67342 lineto
0.08177 0.67354 lineto
0.08136 0.67361 lineto
0.08101 0.67368 lineto
0.08048 0.67381 lineto
0.08016 0.67391 lineto
0.08008 0.67394 lineto
0.08005 0.67395 lineto
0.08016 0.6739 lineto
0.08092 0.67346 lineto
0.08233 0.67242 lineto
0.08422 0.67065 lineto
0.08641 0.66805 lineto
0.08868 0.66459 lineto
0.09083 0.66029 lineto
0.09266 0.65519 lineto
Mistroke
0.09339 0.65237 lineto
0.09371 0.65091 lineto
0.09398 0.64941 lineto
0.09422 0.64787 lineto
0.09441 0.64631 lineto
0.09456 0.64471 lineto
0.09466 0.6431 lineto
0.09471 0.64146 lineto
0.09472 0.6398 lineto
0.09467 0.63812 lineto
0.09458 0.63643 lineto
0.09443 0.63474 lineto
0.09423 0.63303 lineto
0.09368 0.62962 lineto
0.09292 0.62622 lineto
0.09195 0.62287 lineto
0.08945 0.61638 lineto
0.08625 0.61034 lineto
0.08249 0.60493 lineto
0.07834 0.60025 lineto
0.074 0.59639 lineto
0.06967 0.59338 lineto
0.06556 0.59119 lineto
0.06365 0.59038 lineto
0.06187 0.58976 lineto
0.06024 0.58929 lineto
0.05878 0.58896 lineto
0.05811 0.58884 lineto
0.0575 0.58875 lineto
0.05693 0.58868 lineto
0.05641 0.58864 lineto
0.05595 0.58861 lineto
0.05554 0.5886 lineto
0.05518 0.5886 lineto
0.05488 0.58861 lineto
0.05463 0.58863 lineto
0.05444 0.58864 lineto
0.0543 0.58866 lineto
0.05422 0.58867 lineto
0.05443 0.58861 lineto
0.05546 0.58823 lineto
0.05722 0.58735 lineto
0.05955 0.5858 lineto
0.06228 0.58348 lineto
0.06522 0.58032 lineto
0.06814 0.5763 lineto
0.07086 0.57145 lineto
0.07207 0.56875 lineto
0.07317 0.56587 lineto
0.07411 0.56284 lineto
Mistroke
0.0749 0.55967 lineto
0.07523 0.55804 lineto
0.07551 0.55639 lineto
0.07575 0.55472 lineto
0.07594 0.55302 lineto
0.07607 0.55131 lineto
0.07616 0.54959 lineto
0.0762 0.54786 lineto
0.07618 0.54612 lineto
0.07611 0.54438 lineto
0.07599 0.54264 lineto
0.07582 0.5409 lineto
0.0756 0.53917 lineto
0.075 0.53574 lineto
0.07421 0.53238 lineto
0.07207 0.52594 lineto
0.06929 0.52004 lineto
0.06603 0.51483 lineto
0.06247 0.5104 lineto
0.05881 0.50681 lineto
0.05525 0.50408 lineto
0.05201 0.50214 lineto
0.04927 0.50092 lineto
0.04814 0.50054 lineto
0.04719 0.50028 lineto
0.04644 0.50012 lineto
0.04614 0.50007 lineto
0.0459 0.50004 lineto
0.0457 0.50001 lineto
0.04557 0.5 lineto
0.04548 0.5 lineto
0.04545 0.5 lineto
0.04548 0.5 lineto
0.04557 0.5 lineto
0.0457 0.49999 lineto
0.0459 0.49996 lineto
0.04644 0.49988 lineto
0.04719 0.49972 lineto
0.04814 0.49946 lineto
0.04927 0.49908 lineto
0.05201 0.49786 lineto
0.05525 0.49592 lineto
0.05881 0.49319 lineto
0.06247 0.4896 lineto
0.06603 0.48517 lineto
0.06929 0.47996 lineto
0.07207 0.47406 lineto
0.07421 0.46762 lineto
0.075 0.46426 lineto
0.07533 0.46255 lineto
Mistroke
0.0756 0.46083 lineto
0.07582 0.4591 lineto
0.07599 0.45736 lineto
0.07611 0.45562 lineto
0.07618 0.45388 lineto
0.0762 0.45214 lineto
0.07616 0.45041 lineto
0.07607 0.44869 lineto
0.07594 0.44698 lineto
0.07575 0.44528 lineto
0.07551 0.44361 lineto
0.0749 0.44033 lineto
0.07411 0.43716 lineto
0.07317 0.43413 lineto
0.07086 0.42855 lineto
0.06814 0.4237 lineto
0.06522 0.41968 lineto
0.06228 0.41652 lineto
0.05955 0.4142 lineto
0.05722 0.41265 lineto
0.05546 0.41177 lineto
0.05443 0.41139 lineto
0.0543 0.41135 lineto
0.05422 0.41133 lineto
0.05419 0.41132 lineto
0.05422 0.41133 lineto
0.0543 0.41134 lineto
0.05444 0.41136 lineto
0.05463 0.41137 lineto
0.05488 0.41139 lineto
0.05518 0.4114 lineto
0.05554 0.4114 lineto
0.05595 0.41139 lineto
0.05641 0.41136 lineto
0.05693 0.41132 lineto
0.0575 0.41125 lineto
0.05878 0.41104 lineto
0.06024 0.41071 lineto
0.06187 0.41024 lineto
0.06556 0.40881 lineto
0.06967 0.40662 lineto
0.074 0.40361 lineto
0.07834 0.39975 lineto
0.08249 0.39507 lineto
0.08625 0.38966 lineto
0.08945 0.38362 lineto
0.09079 0.38042 lineto
0.09195 0.37713 lineto
0.09292 0.37378 lineto
0.09368 0.37038 lineto
Mistroke
0.09398 0.36867 lineto
0.09423 0.36697 lineto
0.09443 0.36526 lineto
0.09458 0.36357 lineto
0.09467 0.36188 lineto
0.09472 0.3602 lineto
0.09471 0.35854 lineto
0.09466 0.3569 lineto
0.09456 0.35529 lineto
0.09441 0.35369 lineto
0.09422 0.35213 lineto
0.09398 0.35059 lineto
0.09339 0.34763 lineto
0.09266 0.34481 lineto
0.09083 0.33971 lineto
0.08868 0.33541 lineto
0.08641 0.33195 lineto
0.08422 0.32935 lineto
0.08233 0.32758 lineto
0.08092 0.32654 lineto
0.08016 0.3261 lineto
0.08008 0.32606 lineto
0.08005 0.32605 lineto
0.08016 0.32609 lineto
0.08048 0.32619 lineto
0.08101 0.32632 lineto
0.08136 0.32639 lineto
0.08177 0.32646 lineto
0.08223 0.32653 lineto
0.08274 0.32658 lineto
0.08331 0.32663 lineto
0.08394 0.32666 lineto
0.08461 0.32667 lineto
0.08534 0.32667 lineto
0.08611 0.32664 lineto
0.08693 0.32658 lineto
0.0878 0.3265 lineto
0.08872 0.32638 lineto
0.09067 0.32604 lineto
0.09277 0.32554 lineto
0.09734 0.32401 lineto
0.10223 0.3217 lineto
0.10726 0.31855 lineto
0.1122 0.31456 lineto
0.11685 0.30979 lineto
0.12103 0.30434 lineto
0.12459 0.29835 lineto
0.12609 0.2952 lineto
0.1274 0.29199 lineto
0.12851 0.28873 lineto
Mistroke
0.12941 0.28546 lineto
0.1301 0.28219 lineto
0.13036 0.28058 lineto
0.13058 0.27897 lineto
0.13075 0.27738 lineto
0.13086 0.2758 lineto
0.13093 0.27425 lineto
0.13096 0.27273 lineto
0.13093 0.27123 lineto
0.13087 0.26976 lineto
0.13076 0.26833 lineto
0.13061 0.26693 lineto
0.13043 0.26557 lineto
0.13021 0.26425 lineto
0.12968 0.26174 lineto
0.12905 0.25941 lineto
0.12833 0.25729 lineto
0.12673 0.25367 lineto
0.12511 0.25091 lineto
0.12366 0.24901 lineto
0.12259 0.24791 lineto
0.12226 0.24762 lineto
0.12215 0.24753 lineto
0.12208 0.24748 lineto
0.12206 0.24747 lineto
0.12208 0.24748 lineto
0.12227 0.24759 lineto
0.12328 0.24806 lineto
0.1241 0.24836 lineto
0.12514 0.24867 lineto
0.12641 0.24897 lineto
0.12789 0.24922 lineto
0.1287 0.24933 lineto
0.12957 0.24941 lineto
0.13049 0.24948 lineto
0.13146 0.24951 lineto
0.13247 0.24952 lineto
0.13353 0.2495 lineto
0.13463 0.24944 lineto
0.13577 0.24935 lineto
0.13695 0.24922 lineto
0.13816 0.24905 lineto
0.14068 0.24858 lineto
0.14331 0.24793 lineto
0.14603 0.24707 lineto
0.15161 0.24476 lineto
0.15722 0.2416 lineto
0.16265 0.23764 lineto
0.1677 0.23293 lineto
0.17221 0.2276 lineto
Mistroke
0.17603 0.22181 lineto
0.17906 0.21575 lineto
0.18027 0.21268 lineto
0.18127 0.20962 lineto
0.18206 0.20659 lineto
0.18238 0.2051 lineto
0.18266 0.20362 lineto
0.18288 0.20217 lineto
0.18305 0.20074 lineto
0.18318 0.19934 lineto
0.18327 0.19797 lineto
0.18331 0.19664 lineto
0.18332 0.19533 lineto
0.18328 0.19407 lineto
0.18321 0.19285 lineto
0.18311 0.19167 lineto
0.18298 0.19053 lineto
0.18263 0.1884 lineto
0.1822 0.18647 lineto
0.18171 0.18474 lineto
0.18063 0.18194 lineto
0.17962 0.18001 lineto
0.17888 0.17892 lineto
0.17866 0.17867 lineto
0.17861 0.17861 lineto
0.17859 0.17859 lineto
0.17861 0.17861 lineto
0.17867 0.17866 lineto
0.17892 0.17888 lineto
0.18001 0.17962 lineto
0.18194 0.18063 lineto
0.18474 0.18171 lineto
0.18647 0.1822 lineto
0.1884 0.18263 lineto
0.19053 0.18298 lineto
0.19167 0.18311 lineto
0.19285 0.18321 lineto
0.19407 0.18328 lineto
0.19533 0.18332 lineto
0.19664 0.18331 lineto
0.19797 0.18327 lineto
0.19934 0.18318 lineto
0.20074 0.18305 lineto
0.20362 0.18266 lineto
0.2051 0.18238 lineto
0.20659 0.18206 lineto
0.20962 0.18127 lineto
0.21575 0.17906 lineto
0.22181 0.17603 lineto
0.2276 0.17221 lineto
Mistroke
0.23293 0.1677 lineto
0.23764 0.16265 lineto
0.2416 0.15722 lineto
0.24476 0.15161 lineto
0.24602 0.1488 lineto
0.24707 0.14603 lineto
0.24793 0.14331 lineto
0.24858 0.14068 lineto
0.24884 0.13941 lineto
0.24905 0.13816 lineto
0.24922 0.13695 lineto
0.24935 0.13577 lineto
0.24944 0.13463 lineto
0.2495 0.13353 lineto
0.24952 0.13247 lineto
0.24951 0.13146 lineto
0.24948 0.13049 lineto
0.24941 0.12957 lineto
0.24933 0.1287 lineto
0.24922 0.12789 lineto
0.24897 0.12641 lineto
0.24867 0.12514 lineto
0.24806 0.12328 lineto
0.24759 0.12227 lineto
0.24748 0.12208 lineto
0.24747 0.12206 lineto
0.24748 0.12208 lineto
0.24791 0.12259 lineto
0.24901 0.12366 lineto
0.25091 0.12511 lineto
0.25367 0.12673 lineto
0.25537 0.12755 lineto
0.25729 0.12833 lineto
0.25941 0.12905 lineto
0.26174 0.12968 lineto
0.26425 0.13021 lineto
0.26557 0.13043 lineto
0.26693 0.13061 lineto
0.26833 0.13076 lineto
0.26976 0.13087 lineto
0.27123 0.13093 lineto
0.27273 0.13096 lineto
0.27425 0.13093 lineto
0.2758 0.13086 lineto
0.27738 0.13075 lineto
0.27897 0.13058 lineto
0.28219 0.1301 lineto
0.28546 0.12941 lineto
0.28873 0.12851 lineto
0.29199 0.1274 lineto
Mistroke
0.29835 0.12459 lineto
0.30434 0.12103 lineto
0.30979 0.11685 lineto
0.31456 0.1122 lineto
0.31855 0.10726 lineto
0.3217 0.10223 lineto
0.32401 0.09734 lineto
0.32487 0.095 lineto
0.32554 0.09277 lineto
0.32604 0.09067 lineto
0.32623 0.08967 lineto
0.32638 0.08872 lineto
0.3265 0.0878 lineto
0.32658 0.08693 lineto
0.32664 0.08611 lineto
0.32667 0.08534 lineto
0.32667 0.08461 lineto
0.32666 0.08394 lineto
0.32663 0.08331 lineto
0.32658 0.08274 lineto
0.32646 0.08177 lineto
0.32639 0.08136 lineto
0.32632 0.08101 lineto
0.32619 0.08048 lineto
0.32609 0.08016 lineto
0.32606 0.08008 lineto
0.32605 0.08005 lineto
0.32606 0.08008 lineto
0.3261 0.08016 lineto
0.32654 0.08092 lineto
0.32758 0.08233 lineto
0.32935 0.08422 lineto
0.33195 0.08641 lineto
0.33541 0.08868 lineto
0.33971 0.09083 lineto
0.34481 0.09266 lineto
0.34763 0.09339 lineto
0.34909 0.09371 lineto
0.35059 0.09398 lineto
0.35213 0.09422 lineto
0.35369 0.09441 lineto
0.35529 0.09456 lineto
0.3569 0.09466 lineto
0.35854 0.09471 lineto
0.3602 0.09472 lineto
0.36188 0.09467 lineto
0.36357 0.09458 lineto
0.36526 0.09443 lineto
0.36697 0.09423 lineto
0.37038 0.09368 lineto
Mistroke
0.37378 0.09292 lineto
0.37713 0.09195 lineto
0.38362 0.08945 lineto
0.38966 0.08625 lineto
0.39507 0.08249 lineto
0.39975 0.07834 lineto
0.40361 0.074 lineto
0.40662 0.06967 lineto
0.40881 0.06556 lineto
0.40962 0.06365 lineto
0.41024 0.06187 lineto
0.41071 0.06024 lineto
0.41104 0.05878 lineto
0.41116 0.05811 lineto
0.41125 0.0575 lineto
0.41132 0.05693 lineto
0.41136 0.05641 lineto
0.41139 0.05595 lineto
0.4114 0.05554 lineto
0.4114 0.05518 lineto
0.41139 0.05488 lineto
0.41137 0.05463 lineto
0.41136 0.05444 lineto
0.41133 0.05422 lineto
0.41132 0.05419 lineto
0.41133 0.05422 lineto
0.41139 0.05443 lineto
0.41177 0.05546 lineto
0.41265 0.05722 lineto
0.4142 0.05955 lineto
0.41652 0.06228 lineto
0.41968 0.06522 lineto
0.4237 0.06814 lineto
0.42855 0.07086 lineto
0.43125 0.07207 lineto
0.43413 0.07317 lineto
0.43716 0.07411 lineto
0.44033 0.0749 lineto
0.44196 0.07523 lineto
0.44361 0.07551 lineto
0.44528 0.07575 lineto
0.44698 0.07594 lineto
0.44869 0.07607 lineto
0.45041 0.07616 lineto
0.45214 0.0762 lineto
0.45388 0.07618 lineto
0.45562 0.07611 lineto
0.45736 0.07599 lineto
0.46083 0.0756 lineto
0.46255 0.07533 lineto
Mistroke
0.46426 0.075 lineto
0.46762 0.07421 lineto
0.47406 0.07207 lineto
0.47996 0.06929 lineto
0.48517 0.06603 lineto
0.4896 0.06247 lineto
0.49319 0.05881 lineto
0.49592 0.05525 lineto
0.49786 0.05201 lineto
0.49908 0.04927 lineto
0.49946 0.04814 lineto
0.49972 0.04719 lineto
0.49988 0.04644 lineto
0.49993 0.04614 lineto
0.49996 0.0459 lineto
0.49999 0.0457 lineto
0.5 0.04557 lineto
0.5 0.04548 lineto
0.5 0.04545 lineto
0.5 0.04548 lineto
0.5 0.04557 lineto
0.50001 0.0457 lineto
0.50004 0.0459 lineto
0.50012 0.04644 lineto
0.50028 0.04719 lineto
0.50054 0.04814 lineto
0.50092 0.04927 lineto
0.50214 0.05201 lineto
0.50408 0.05525 lineto
0.50681 0.05881 lineto
0.5104 0.06247 lineto
0.51483 0.06603 lineto
0.52004 0.06929 lineto
0.52594 0.07207 lineto
0.53238 0.07421 lineto
0.53574 0.075 lineto
0.53745 0.07533 lineto
0.53917 0.0756 lineto
0.5409 0.07582 lineto
0.54264 0.07599 lineto
0.54438 0.07611 lineto
0.54612 0.07618 lineto
0.54786 0.0762 lineto
0.54959 0.07616 lineto
0.55131 0.07607 lineto
0.55302 0.07594 lineto
0.55639 0.07551 lineto
0.55804 0.07523 lineto
0.55967 0.0749 lineto
0.56587 0.07317 lineto
Mistroke
0.56875 0.07207 lineto
0.57145 0.07086 lineto
0.5763 0.06814 lineto
0.58032 0.06522 lineto
0.58348 0.06228 lineto
0.58735 0.05722 lineto
0.58823 0.05546 lineto
0.58861 0.05443 lineto
0.58865 0.0543 lineto
0.58867 0.05422 lineto
0.58868 0.05419 lineto
0.58867 0.05422 lineto
0.58866 0.0543 lineto
0.58864 0.05444 lineto
0.58863 0.05463 lineto
0.58861 0.05488 lineto
0.5886 0.05518 lineto
0.5886 0.05554 lineto
0.58861 0.05595 lineto
0.58864 0.05641 lineto
0.58868 0.05693 lineto
0.58875 0.0575 lineto
0.58896 0.05878 lineto
0.58929 0.06024 lineto
0.58976 0.06187 lineto
0.59119 0.06556 lineto
0.59338 0.06967 lineto
0.59639 0.074 lineto
0.60025 0.07834 lineto
0.60493 0.08249 lineto
0.61034 0.08625 lineto
0.61638 0.08945 lineto
0.61958 0.09079 lineto
0.62287 0.09195 lineto
0.62622 0.09292 lineto
0.62962 0.09368 lineto
0.63133 0.09398 lineto
0.63303 0.09423 lineto
0.63474 0.09443 lineto
0.63643 0.09458 lineto
0.63812 0.09467 lineto
0.6398 0.09472 lineto
0.64146 0.09471 lineto
0.6431 0.09466 lineto
0.64471 0.09456 lineto
0.64631 0.09441 lineto
0.64787 0.09422 lineto
0.64941 0.09398 lineto
0.65237 0.09339 lineto
0.65519 0.09266 lineto
Mistroke
0.66029 0.09083 lineto
0.66459 0.08868 lineto
0.66805 0.08641 lineto
0.67065 0.08422 lineto
0.67242 0.08233 lineto
0.67346 0.08092 lineto
0.67375 0.08045 lineto
0.6739 0.08016 lineto
0.67394 0.08008 lineto
0.67395 0.08005 lineto
0.67391 0.08016 lineto
0.67381 0.08048 lineto
0.67368 0.08101 lineto
0.67354 0.08177 lineto
0.67347 0.08223 lineto
0.67342 0.08274 lineto
0.67337 0.08331 lineto
0.67334 0.08394 lineto
0.67333 0.08461 lineto
0.67333 0.08534 lineto
0.67336 0.08611 lineto
0.67342 0.08693 lineto
0.6735 0.0878 lineto
0.67362 0.08872 lineto
0.67396 0.09067 lineto
0.67446 0.09277 lineto
0.67599 0.09734 lineto
0.6783 0.10223 lineto
0.68145 0.10726 lineto
0.68544 0.1122 lineto
0.69021 0.11685 lineto
0.69566 0.12103 lineto
0.70165 0.12459 lineto
0.7048 0.12609 lineto
0.70801 0.1274 lineto
0.71127 0.12851 lineto
0.71454 0.12941 lineto
0.71781 0.1301 lineto
0.71942 0.13036 lineto
0.72103 0.13058 lineto
0.72262 0.13075 lineto
0.7242 0.13086 lineto
0.72575 0.13093 lineto
0.72727 0.13096 lineto
0.72877 0.13093 lineto
0.73024 0.13087 lineto
0.73167 0.13076 lineto
0.73307 0.13061 lineto
0.73443 0.13043 lineto
0.73575 0.13021 lineto
Mistroke
0.73826 0.12968 lineto
0.74059 0.12905 lineto
0.74271 0.12833 lineto
0.74633 0.12673 lineto
0.74909 0.12511 lineto
0.75099 0.12366 lineto
0.75209 0.12259 lineto
0.75238 0.12226 lineto
0.75247 0.12215 lineto
0.75252 0.12208 lineto
0.75253 0.12206 lineto
0.75252 0.12208 lineto
0.75241 0.12227 lineto
0.75194 0.12328 lineto
0.75164 0.1241 lineto
0.75133 0.12514 lineto
0.75103 0.12641 lineto
0.75078 0.12789 lineto
0.75067 0.1287 lineto
0.75059 0.12957 lineto
0.75052 0.13049 lineto
0.75049 0.13146 lineto
0.75048 0.13247 lineto
0.7505 0.13353 lineto
0.75056 0.13463 lineto
0.75065 0.13577 lineto
0.75078 0.13695 lineto
0.75095 0.13816 lineto
0.75142 0.14068 lineto
0.75207 0.14331 lineto
0.75293 0.14603 lineto
0.75524 0.15161 lineto
0.7584 0.15722 lineto
0.76236 0.16265 lineto
0.76707 0.1677 lineto
0.7724 0.17221 lineto
0.77819 0.17603 lineto
0.78425 0.17906 lineto
0.78732 0.18027 lineto
0.79038 0.18127 lineto
0.79341 0.18206 lineto
0.7949 0.18238 lineto
0.79638 0.18266 lineto
0.79783 0.18288 lineto
0.79926 0.18305 lineto
0.80066 0.18318 lineto
0.80203 0.18327 lineto
0.80336 0.18331 lineto
0.80467 0.18332 lineto
0.80593 0.18328 lineto
Mistroke
0.80715 0.18321 lineto
0.80833 0.18311 lineto
0.80947 0.18298 lineto
0.81056 0.18282 lineto
0.8116 0.18263 lineto
0.81526 0.18171 lineto
0.81677 0.18118 lineto
0.81806 0.18063 lineto
0.81999 0.17962 lineto
0.82108 0.17888 lineto
0.82133 0.17866 lineto
0.82139 0.17861 lineto
0.82141 0.17859 lineto
0.82134 0.17867 lineto
0.82112 0.17892 lineto
0.82038 0.18001 lineto
0.81937 0.18194 lineto
0.81829 0.18474 lineto
0.8178 0.18647 lineto
0.81737 0.1884 lineto
0.81702 0.19053 lineto
0.81689 0.19167 lineto
0.81679 0.19285 lineto
0.81672 0.19407 lineto
0.81668 0.19533 lineto
0.81669 0.19664 lineto
0.81673 0.19797 lineto
0.81682 0.19934 lineto
0.81695 0.20074 lineto
0.81712 0.20217 lineto
0.81734 0.20362 lineto
0.81873 0.20962 lineto
0.81973 0.21268 lineto
0.82094 0.21575 lineto
0.82397 0.22181 lineto
0.82779 0.2276 lineto
0.8323 0.23293 lineto
0.83735 0.23764 lineto
0.84278 0.2416 lineto
0.84839 0.24476 lineto
0.8512 0.24602 lineto
0.85397 0.24707 lineto
0.85669 0.24793 lineto
0.85932 0.24858 lineto
0.86059 0.24884 lineto
0.86184 0.24905 lineto
0.86305 0.24922 lineto
0.86423 0.24935 lineto
0.86537 0.24944 lineto
0.86647 0.2495 lineto
Mistroke
0.86753 0.24952 lineto
0.86854 0.24951 lineto
0.86951 0.24948 lineto
0.87043 0.24941 lineto
0.87211 0.24922 lineto
0.87288 0.2491 lineto
0.87359 0.24897 lineto
0.87486 0.24867 lineto
0.87672 0.24806 lineto
0.87773 0.24759 lineto
0.87785 0.24753 lineto
0.87792 0.24748 lineto
0.87794 0.24747 lineto
0.87792 0.24748 lineto
0.87774 0.24762 lineto
0.87741 0.24791 lineto
0.87634 0.24901 lineto
0.87489 0.25091 lineto
0.87327 0.25367 lineto
0.87245 0.25537 lineto
0.87167 0.25729 lineto
0.87095 0.25941 lineto
0.87032 0.26174 lineto
0.86979 0.26425 lineto
0.86957 0.26557 lineto
0.86939 0.26693 lineto
0.86924 0.26833 lineto
0.86913 0.26976 lineto
0.86907 0.27123 lineto
0.86904 0.27273 lineto
0.86907 0.27425 lineto
0.86914 0.2758 lineto
0.86925 0.27738 lineto
0.86942 0.27897 lineto
0.8699 0.28219 lineto
0.87059 0.28546 lineto
0.87149 0.28873 lineto
0.8726 0.29199 lineto
0.87541 0.29835 lineto
0.87897 0.30434 lineto
0.88315 0.30979 lineto
0.8878 0.31456 lineto
0.89274 0.31855 lineto
0.89777 0.3217 lineto
0.90266 0.32401 lineto
0.905 0.32487 lineto
0.90723 0.32554 lineto
0.90933 0.32604 lineto
0.91033 0.32623 lineto
0.91128 0.32638 lineto
Mistroke
0.9122 0.3265 lineto
0.91307 0.32658 lineto
0.91389 0.32664 lineto
0.91466 0.32667 lineto
0.91539 0.32667 lineto
0.91606 0.32666 lineto
0.91669 0.32663 lineto
0.91726 0.32658 lineto
0.91823 0.32646 lineto
0.91864 0.32639 lineto
0.91899 0.32632 lineto
0.91984 0.32609 lineto
0.91992 0.32606 lineto
0.91995 0.32605 lineto
0.91984 0.3261 lineto
0.91908 0.32654 lineto
0.91767 0.32758 lineto
0.91578 0.32935 lineto
0.91359 0.33195 lineto
0.91132 0.33541 lineto
0.90917 0.33971 lineto
0.90734 0.34481 lineto
0.90661 0.34763 lineto
0.90629 0.34909 lineto
0.90602 0.35059 lineto
0.90578 0.35213 lineto
0.90559 0.35369 lineto
0.90544 0.35529 lineto
0.90534 0.3569 lineto
0.90529 0.35854 lineto
0.90528 0.3602 lineto
0.90533 0.36188 lineto
0.90542 0.36357 lineto
0.90557 0.36526 lineto
0.90577 0.36697 lineto
0.90632 0.37038 lineto
0.90708 0.37378 lineto
0.90805 0.37713 lineto
0.91055 0.38362 lineto
0.91375 0.38966 lineto
0.91751 0.39507 lineto
0.92166 0.39975 lineto
0.926 0.40361 lineto
0.93033 0.40662 lineto
0.93444 0.40881 lineto
0.93635 0.40962 lineto
0.93813 0.41024 lineto
0.93976 0.41071 lineto
0.94122 0.41104 lineto
0.94189 0.41116 lineto
Mistroke
0.9425 0.41125 lineto
0.94307 0.41132 lineto
0.94359 0.41136 lineto
0.94405 0.41139 lineto
0.94446 0.4114 lineto
0.94482 0.4114 lineto
0.94512 0.41139 lineto
0.94537 0.41137 lineto
0.94556 0.41136 lineto
0.94578 0.41133 lineto
0.94581 0.41132 lineto
0.94578 0.41133 lineto
0.94557 0.41139 lineto
0.94454 0.41177 lineto
0.94278 0.41265 lineto
0.94045 0.4142 lineto
0.93772 0.41652 lineto
0.93478 0.41968 lineto
0.93186 0.4237 lineto
0.92914 0.42855 lineto
0.92793 0.43125 lineto
0.92683 0.43413 lineto
0.92589 0.43716 lineto
0.9251 0.44033 lineto
0.92477 0.44196 lineto
0.92449 0.44361 lineto
0.92425 0.44528 lineto
0.92406 0.44698 lineto
0.92393 0.44869 lineto
0.92384 0.45041 lineto
0.9238 0.45214 lineto
0.92382 0.45388 lineto
0.92389 0.45562 lineto
0.92401 0.45736 lineto
0.92418 0.4591 lineto
0.9244 0.46083 lineto
0.925 0.46426 lineto
0.92579 0.46762 lineto
0.92677 0.4709 lineto
0.92793 0.47406 lineto
0.93071 0.47996 lineto
0.93397 0.48517 lineto
0.93753 0.4896 lineto
0.94119 0.49319 lineto
0.94475 0.49592 lineto
0.94799 0.49786 lineto
0.95073 0.49908 lineto
0.95186 0.49946 lineto
0.95281 0.49972 lineto
0.95356 0.49988 lineto
Mistroke
0.95386 0.49993 lineto
0.9541 0.49996 lineto
0.9543 0.49999 lineto
0.95443 0.5 lineto
0.95452 0.5 lineto
0.95455 0.5 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1.010638 -146 -93.712738 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.010638 141 -93.712746 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 141 -91] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.454545 0.5 0.454545 [
[(-1)] 0.04545 0.5 0 2 Msboxa
[(-0.5)] 0.27273 0.5 0 2 Msboxa
[(0.5)] 0.72727 0.5 0 2 Msboxa
[(1)] 0.95455 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.015625)] 0.5 1 0 -2 Msboxa
grestore
[(-1)] 0.4875 0.04545 1 0 Msboxa
[(-0.5)] 0.4875 0.27273 1 0 Msboxa
[(0.5)] 0.4875 0.72727 1 0 Msboxa
[(1)] 0.4875 0.95455 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.04545 0.5 moveto
0.04545 0.50625 lineto
stroke
grestore
[(-1)] 0.04545 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.27273 0.5 moveto
0.27273 0.50625 lineto
stroke
grestore
[(-0.5)] 0.27273 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.72727 0.5 moveto
0.72727 0.50625 lineto
stroke
grestore
[(0.5)] 0.72727 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.95455 0.5 moveto
0.95455 0.50625 lineto
stroke
grestore
[(1)] 0.95455 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.09091 0.5 moveto
0.09091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.13636 0.5 moveto
0.13636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18182 0.5 moveto
0.18182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22727 0.5 moveto
0.22727 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31818 0.5 moveto
0.31818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36364 0.5 moveto
0.36364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40909 0.5 moveto
0.40909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45455 0.5 moveto
0.45455 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54545 0.5 moveto
0.54545 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59091 0.5 moveto
0.59091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63636 0.5 moveto
0.63636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.68182 0.5 moveto
0.68182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77273 0.5 moveto
0.77273 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81818 0.5 moveto
0.81818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.86364 0.5 moveto
0.86364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90909 0.5 moveto
0.90909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.5 moveto
0 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
1 0.5 moveto
1 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.015625)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.04545 moveto
0.50625 0.04545 lineto
stroke
grestore
[(-1)] 0.4875 0.04545 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.27273 moveto
0.50625 0.27273 lineto
stroke
grestore
[(-0.5)] 0.4875 0.27273 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.72727 moveto
0.50625 0.72727 lineto
stroke
grestore
[(0.5)] 0.4875 0.72727 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.95455 moveto
0.50625 0.95455 lineto
stroke
grestore
[(1)] 0.4875 0.95455 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.09091 moveto
0.50375 0.09091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13636 moveto
0.50375 0.13636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18182 moveto
0.50375 0.18182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22727 moveto
0.50375 0.22727 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31818 moveto
0.50375 0.31818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36364 moveto
0.50375 0.36364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40909 moveto
0.50375 0.40909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45455 moveto
0.50375 0.45455 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54545 moveto
0.50375 0.54545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59091 moveto
0.50375 0.59091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.63636 moveto
0.50375 0.63636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.68182 moveto
0.50375 0.68182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.77273 moveto
0.50375 0.77273 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.81818 moveto
0.50375 0.81818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.86364 moveto
0.50375 0.86364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90909 moveto
0.50375 0.90909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0 moveto
0.50375 0 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1 moveto
0.50375 1 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.95455 0.5 moveto
0.95449 0.5 lineto
0.95432 0.50002 lineto
0.95404 0.50006 lineto
0.95366 0.50015 lineto
0.95318 0.50028 lineto
0.95261 0.50048 lineto
0.95123 0.50112 lineto
0.9496 0.50213 lineto
0.94782 0.50356 lineto
0.94601 0.50543 lineto
0.94427 0.50774 lineto
0.9427 0.51044 lineto
0.94201 0.51193 lineto
0.94141 0.51349 lineto
0.94088 0.51512 lineto
0.94046 0.5168 lineto
0.94013 0.51852 lineto
0.93991 0.52028 lineto
0.93979 0.52205 lineto
0.93979 0.52382 lineto
0.93989 0.52558 lineto
0.9401 0.52732 lineto
0.94041 0.52901 lineto
0.94082 0.53066 lineto
0.94189 0.53375 lineto
0.94325 0.5365 lineto
0.94479 0.53886 lineto
0.94643 0.54079 lineto
0.94804 0.54227 lineto
0.94952 0.54334 lineto
0.95076 0.54402 lineto
0.95127 0.54424 lineto
0.95169 0.54439 lineto
0.95201 0.54448 lineto
0.95223 0.54453 lineto
0.95234 0.54455 lineto
0.95234 0.54455 lineto
0.95223 0.54455 lineto
0.95201 0.54455 lineto
0.95167 0.54458 lineto
0.95123 0.54465 lineto
0.95069 0.54477 lineto
0.95005 0.54494 lineto
0.94854 0.54552 lineto
0.94676 0.54647 lineto
0.94482 0.54782 lineto
0.94283 0.54961 lineto
0.9409 0.55184 lineto
0.93912 0.55448 lineto
Mistroke
0.93761 0.55746 lineto
0.93697 0.55907 lineto
0.93643 0.56073 lineto
0.93598 0.56243 lineto
0.93564 0.56417 lineto
0.93541 0.56593 lineto
0.93529 0.5677 lineto
0.93527 0.56945 lineto
0.93536 0.57119 lineto
0.93556 0.57289 lineto
0.93585 0.57454 lineto
0.9367 0.57765 lineto
0.93724 0.57908 lineto
0.93784 0.58043 lineto
0.93919 0.58283 lineto
0.94065 0.5848 lineto
0.94209 0.58633 lineto
0.94342 0.58742 lineto
0.94453 0.58813 lineto
0.94533 0.58852 lineto
0.94576 0.58866 lineto
0.94581 0.58868 lineto
0.94576 0.58867 lineto
0.94559 0.58865 lineto
0.94531 0.58864 lineto
0.94492 0.58865 lineto
0.94442 0.58869 lineto
0.94382 0.58878 lineto
0.94312 0.58892 lineto
0.94234 0.58913 lineto
0.94147 0.58943 lineto
0.93955 0.59028 lineto
0.93746 0.59155 lineto
0.9353 0.59325 lineto
0.93317 0.59538 lineto
0.93119 0.59793 lineto
0.92946 0.60084 lineto
0.92806 0.60403 lineto
0.9275 0.60571 lineto
0.92704 0.60743 lineto
0.92669 0.60916 lineto
0.92645 0.61091 lineto
0.92631 0.61265 lineto
0.92629 0.61438 lineto
0.92637 0.61607 lineto
0.92654 0.61772 lineto
0.92682 0.61931 lineto
0.92717 0.62083 lineto
0.92761 0.62227 lineto
0.92811 0.62363 lineto
Mistroke
0.92926 0.62605 lineto
0.93053 0.62804 lineto
0.93181 0.62959 lineto
0.93299 0.63071 lineto
0.93397 0.63143 lineto
0.93465 0.63181 lineto
0.93485 0.6319 lineto
0.93496 0.63194 lineto
0.93496 0.63194 lineto
0.93485 0.63192 lineto
0.93463 0.63188 lineto
0.93429 0.63184 lineto
0.93385 0.63182 lineto
0.9333 0.63183 lineto
0.93264 0.63188 lineto
0.93188 0.63198 lineto
0.93011 0.6324 lineto
0.92911 0.63273 lineto
0.92805 0.63316 lineto
0.92581 0.63431 lineto
0.92348 0.6359 lineto
0.92117 0.63793 lineto
0.91899 0.64037 lineto
0.91705 0.64318 lineto
0.91543 0.64629 lineto
0.91475 0.64793 lineto
0.91418 0.64961 lineto
0.91371 0.65132 lineto
0.91336 0.65303 lineto
0.91311 0.65475 lineto
0.91297 0.65646 lineto
0.91293 0.65813 lineto
0.913 0.65977 lineto
0.91316 0.66135 lineto
0.91341 0.66287 lineto
0.91374 0.66431 lineto
0.91414 0.66566 lineto
0.9151 0.66808 lineto
0.91619 0.67008 lineto
0.91731 0.67164 lineto
0.91834 0.67276 lineto
0.91919 0.67347 lineto
0.91975 0.67384 lineto
0.91989 0.67392 lineto
0.91995 0.67395 lineto
0.91989 0.67393 lineto
0.91973 0.67388 lineto
0.91946 0.67381 lineto
0.91907 0.67374 lineto
0.91858 0.67369 lineto
Mistroke
0.91797 0.67365 lineto
0.91726 0.67366 lineto
0.91645 0.67372 lineto
0.91555 0.67383 lineto
0.91456 0.67403 lineto
0.9135 0.6743 lineto
0.91237 0.67467 lineto
0.90998 0.6757 lineto
0.90749 0.67716 lineto
0.90501 0.67906 lineto
0.90264 0.68138 lineto
0.9005 0.68408 lineto
0.89866 0.68708 lineto
0.89788 0.68867 lineto
0.89719 0.69031 lineto
0.89662 0.69197 lineto
0.89614 0.69366 lineto
0.89578 0.69534 lineto
0.89553 0.69702 lineto
0.89538 0.69867 lineto
0.89534 0.70028 lineto
0.89539 0.70184 lineto
0.89554 0.70335 lineto
0.89577 0.70477 lineto
0.89606 0.70612 lineto
0.89643 0.70737 lineto
0.89684 0.70852 lineto
0.89775 0.71051 lineto
0.89871 0.71206 lineto
0.8996 0.71317 lineto
0.90032 0.71386 lineto
0.90077 0.7142 lineto
0.90086 0.71426 lineto
0.90086 0.71426 lineto
0.90076 0.71422 lineto
0.90055 0.71414 lineto
0.90023 0.71404 lineto
0.8998 0.71393 lineto
0.89925 0.71383 lineto
0.8986 0.71375 lineto
0.89784 0.7137 lineto
0.89697 0.71371 lineto
0.89602 0.71377 lineto
0.89497 0.7139 lineto
0.89385 0.71411 lineto
0.89266 0.71441 lineto
0.89014 0.7153 lineto
0.8875 0.71662 lineto
0.88485 0.71838 lineto
0.88231 0.72056 lineto
Mistroke
0.87997 0.72312 lineto
0.87792 0.726 lineto
0.87625 0.72912 lineto
0.87556 0.73074 lineto
0.87498 0.73237 lineto
0.87451 0.73402 lineto
0.87415 0.73565 lineto
0.87389 0.73727 lineto
0.87374 0.73885 lineto
0.87369 0.74039 lineto
0.87373 0.74187 lineto
0.87386 0.74327 lineto
0.87406 0.7446 lineto
0.87433 0.74583 lineto
0.87465 0.74697 lineto
0.8754 0.74894 lineto
0.87621 0.75046 lineto
0.87696 0.75154 lineto
0.87756 0.7522 lineto
0.87776 0.75239 lineto
0.8779 0.7525 lineto
0.87794 0.75253 lineto
0.87789 0.7525 lineto
0.87749 0.75231 lineto
0.87713 0.75216 lineto
0.87665 0.75201 lineto
0.87606 0.75186 lineto
0.87536 0.75173 lineto
0.87456 0.75162 lineto
0.87365 0.75156 lineto
0.87264 0.75156 lineto
0.87155 0.75162 lineto
0.87037 0.75176 lineto
0.86913 0.75199 lineto
0.86783 0.75231 lineto
0.86648 0.75273 lineto
0.8637 0.75389 lineto
0.8609 0.75549 lineto
0.85818 0.75751 lineto
0.85566 0.75993 lineto
0.85342 0.76267 lineto
0.85154 0.76566 lineto
0.85075 0.76722 lineto
0.85007 0.7688 lineto
0.84949 0.7704 lineto
0.84903 0.77199 lineto
0.84867 0.77356 lineto
0.84842 0.7751 lineto
0.84827 0.7766 lineto
0.84821 0.77805 lineto
Mistroke
0.84824 0.77943 lineto
0.84835 0.78072 lineto
0.84876 0.78305 lineto
0.84904 0.78407 lineto
0.84935 0.78497 lineto
0.85002 0.78646 lineto
0.85064 0.7875 lineto
0.85112 0.78811 lineto
0.85128 0.78827 lineto
0.85136 0.78835 lineto
0.85127 0.78829 lineto
0.85078 0.78801 lineto
0.85038 0.78782 lineto
0.84986 0.78761 lineto
0.84924 0.78741 lineto
0.8485 0.78721 lineto
0.84765 0.78704 lineto
0.8467 0.78692 lineto
0.84565 0.78684 lineto
0.84451 0.78683 lineto
0.84329 0.78689 lineto
0.84199 0.78704 lineto
0.84064 0.78728 lineto
0.83923 0.78761 lineto
0.83779 0.78805 lineto
0.83633 0.7886 lineto
0.83338 0.79003 lineto
0.83051 0.79188 lineto
0.82782 0.79413 lineto
0.8254 0.79672 lineto
0.82333 0.79957 lineto
0.82166 0.80258 lineto
0.82042 0.80566 lineto
0.81996 0.80718 lineto
0.81961 0.80867 lineto
0.81937 0.81013 lineto
0.81922 0.81153 lineto
0.81916 0.81287 lineto
0.81918 0.81414 lineto
0.81927 0.81532 lineto
0.81942 0.8164 lineto
0.81962 0.81739 lineto
0.81986 0.81827 lineto
0.82039 0.8197 lineto
0.82089 0.82068 lineto
0.82127 0.82124 lineto
0.82137 0.82137 lineto
0.82141 0.82141 lineto
0.82137 0.82137 lineto
0.82124 0.82127 lineto
Mistroke
0.82068 0.82089 lineto
0.8197 0.82039 lineto
0.81904 0.82012 lineto
0.81827 0.81986 lineto
0.81739 0.81962 lineto
0.8164 0.81942 lineto
0.81532 0.81927 lineto
0.81414 0.81918 lineto
0.81287 0.81916 lineto
0.81153 0.81922 lineto
0.81013 0.81937 lineto
0.80867 0.81961 lineto
0.80718 0.81996 lineto
0.80566 0.82042 lineto
0.80258 0.82166 lineto
0.79957 0.82333 lineto
0.79672 0.8254 lineto
0.79413 0.82782 lineto
0.79188 0.83051 lineto
0.79003 0.83338 lineto
0.7886 0.83633 lineto
0.78805 0.83779 lineto
0.78761 0.83923 lineto
0.78728 0.84064 lineto
0.78704 0.84199 lineto
0.78689 0.84329 lineto
0.78683 0.84451 lineto
0.78684 0.84565 lineto
0.78692 0.8467 lineto
0.78704 0.84765 lineto
0.78721 0.8485 lineto
0.78741 0.84924 lineto
0.78761 0.84986 lineto
0.78801 0.85078 lineto
0.78829 0.85127 lineto
0.78835 0.85136 lineto
0.78835 0.85136 lineto
0.78811 0.85112 lineto
0.7875 0.85064 lineto
0.78646 0.85002 lineto
0.78577 0.84968 lineto
0.78497 0.84935 lineto
0.78407 0.84904 lineto
0.78305 0.84876 lineto
0.78194 0.84853 lineto
0.78072 0.84835 lineto
0.77943 0.84824 lineto
0.77805 0.84821 lineto
0.7766 0.84827 lineto
0.7751 0.84842 lineto
Mistroke
0.77356 0.84867 lineto
0.77199 0.84903 lineto
0.7688 0.85007 lineto
0.76722 0.85075 lineto
0.76566 0.85154 lineto
0.76267 0.85342 lineto
0.75993 0.85566 lineto
0.75751 0.85818 lineto
0.75549 0.8609 lineto
0.75389 0.8637 lineto
0.75325 0.8651 lineto
0.75273 0.86648 lineto
0.75231 0.86783 lineto
0.75199 0.86913 lineto
0.75176 0.87037 lineto
0.75162 0.87155 lineto
0.75156 0.87264 lineto
0.75156 0.87365 lineto
0.75162 0.87456 lineto
0.75173 0.87536 lineto
0.75186 0.87606 lineto
0.75201 0.87665 lineto
0.75231 0.87749 lineto
0.75242 0.87774 lineto
0.7525 0.87789 lineto
0.75253 0.87794 lineto
0.7525 0.8779 lineto
0.7522 0.87756 lineto
0.75154 0.87696 lineto
0.75046 0.87621 lineto
0.74894 0.8754 lineto
0.74801 0.87501 lineto
0.74697 0.87465 lineto
0.74583 0.87433 lineto
0.7446 0.87406 lineto
0.74327 0.87386 lineto
0.74187 0.87373 lineto
0.74039 0.87369 lineto
0.73885 0.87374 lineto
0.73727 0.87389 lineto
0.73565 0.87415 lineto
0.73237 0.87498 lineto
0.73074 0.87556 lineto
0.72912 0.87625 lineto
0.726 0.87792 lineto
0.72312 0.87997 lineto
0.72056 0.88231 lineto
0.71838 0.88485 lineto
0.71662 0.8875 lineto
0.7153 0.89014 lineto
Mistroke
0.7148 0.89142 lineto
0.71441 0.89266 lineto
0.71411 0.89385 lineto
0.7139 0.89497 lineto
0.71377 0.89602 lineto
0.71371 0.89697 lineto
0.7137 0.89784 lineto
0.71375 0.8986 lineto
0.71383 0.89925 lineto
0.71393 0.8998 lineto
0.71404 0.90023 lineto
0.71414 0.90055 lineto
0.71422 0.90076 lineto
0.71426 0.90086 lineto
0.7142 0.90077 lineto
0.71386 0.90032 lineto
0.71317 0.8996 lineto
0.71206 0.89871 lineto
0.71051 0.89775 lineto
0.70957 0.89728 lineto
0.70852 0.89684 lineto
0.70737 0.89643 lineto
0.70612 0.89606 lineto
0.70477 0.89577 lineto
0.70335 0.89554 lineto
0.70184 0.89539 lineto
0.70028 0.89534 lineto
0.69867 0.89538 lineto
0.69702 0.89553 lineto
0.69534 0.89578 lineto
0.69366 0.89614 lineto
0.69031 0.89719 lineto
0.68867 0.89788 lineto
0.68708 0.89866 lineto
0.68408 0.9005 lineto
0.68138 0.90264 lineto
0.67906 0.90501 lineto
0.67716 0.90749 lineto
0.6757 0.90998 lineto
0.67513 0.91119 lineto
0.67467 0.91237 lineto
0.6743 0.9135 lineto
0.67403 0.91456 lineto
0.67383 0.91555 lineto
0.67372 0.91645 lineto
0.67366 0.91726 lineto
0.67365 0.91797 lineto
0.67369 0.91858 lineto
0.67374 0.91907 lineto
0.67381 0.91946 lineto
Mistroke
0.67388 0.91973 lineto
0.67393 0.91989 lineto
0.67395 0.91995 lineto
0.67392 0.91989 lineto
0.67384 0.91975 lineto
0.67347 0.91919 lineto
0.67276 0.91834 lineto
0.67164 0.91731 lineto
0.67008 0.91619 lineto
0.66808 0.9151 lineto
0.66692 0.9146 lineto
0.66566 0.91414 lineto
0.66431 0.91374 lineto
0.66287 0.91341 lineto
0.66135 0.91316 lineto
0.65977 0.913 lineto
0.65813 0.91293 lineto
0.65646 0.91297 lineto
0.65475 0.91311 lineto
0.65303 0.91336 lineto
0.64961 0.91418 lineto
0.64793 0.91475 lineto
0.64629 0.91543 lineto
0.64318 0.91705 lineto
0.64037 0.91899 lineto
0.63793 0.92117 lineto
0.6359 0.92348 lineto
0.63431 0.92581 lineto
0.63316 0.92805 lineto
0.63273 0.92911 lineto
0.6324 0.93011 lineto
0.63215 0.93104 lineto
0.63198 0.93188 lineto
0.63188 0.93264 lineto
0.63183 0.9333 lineto
0.63182 0.93385 lineto
0.63184 0.93429 lineto
0.63143 0.93397 lineto
0.63071 0.93299 lineto
0.62959 0.93181 lineto
0.62804 0.93053 lineto
0.62605 0.92926 lineto
0.62363 0.92811 lineto
0.62227 0.92761 lineto
0.62083 0.92717 lineto
0.61931 0.92682 lineto
0.61772 0.92654 lineto
0.61607 0.92637 lineto
0.61438 0.92629 lineto
0.61265 0.92631 lineto
Mistroke
0.61091 0.92645 lineto
0.60916 0.92669 lineto
0.60743 0.92704 lineto
0.60571 0.9275 lineto
0.60403 0.92806 lineto
0.60084 0.92946 lineto
0.59793 0.93119 lineto
0.59538 0.93317 lineto
0.59325 0.9353 lineto
0.59155 0.93746 lineto
0.59028 0.93955 lineto
0.58981 0.94054 lineto
0.58943 0.94147 lineto
0.58913 0.94234 lineto
0.58892 0.94312 lineto
0.58869 0.94442 lineto
0.58865 0.94492 lineto
0.58864 0.94531 lineto
0.58865 0.94559 lineto
0.58867 0.94576 lineto
0.58852 0.94533 lineto
0.58813 0.94453 lineto
0.58742 0.94342 lineto
0.58633 0.94209 lineto
0.5848 0.94065 lineto
0.58283 0.93919 lineto
0.58043 0.93784 lineto
0.57908 0.93724 lineto
0.57765 0.9367 lineto
0.57613 0.93623 lineto
0.57454 0.93585 lineto
0.57289 0.93556 lineto
0.57119 0.93536 lineto
0.56945 0.93527 lineto
0.5677 0.93529 lineto
0.56593 0.93541 lineto
0.56417 0.93564 lineto
0.56243 0.93598 lineto
0.56073 0.93643 lineto
0.55746 0.93761 lineto
0.55448 0.93912 lineto
0.55184 0.9409 lineto
0.54961 0.94283 lineto
0.54782 0.94482 lineto
0.54647 0.94676 lineto
0.54552 0.94854 lineto
0.54519 0.94933 lineto
0.54494 0.95005 lineto
0.54477 0.95069 lineto
0.54465 0.95123 lineto
Mistroke
0.54458 0.95167 lineto
0.54455 0.95201 lineto
0.54455 0.95223 lineto
0.54455 0.95234 lineto
0.54453 0.95223 lineto
0.54448 0.95201 lineto
0.54439 0.95169 lineto
0.54402 0.95076 lineto
0.54334 0.94952 lineto
0.54227 0.94804 lineto
0.54079 0.94643 lineto
0.53886 0.94479 lineto
0.5365 0.94325 lineto
0.53375 0.94189 lineto
0.53066 0.94082 lineto
0.52901 0.94041 lineto
0.52732 0.9401 lineto
0.52558 0.93989 lineto
0.52382 0.93979 lineto
0.52205 0.93979 lineto
0.52028 0.93991 lineto
0.51852 0.94013 lineto
0.5168 0.94046 lineto
0.51512 0.94088 lineto
0.51349 0.94141 lineto
0.51044 0.9427 lineto
0.50774 0.94427 lineto
0.50543 0.94601 lineto
0.50356 0.94782 lineto
0.50213 0.9496 lineto
0.50112 0.95123 lineto
0.50048 0.95261 lineto
0.50028 0.95318 lineto
0.50015 0.95366 lineto
0.50006 0.95404 lineto
0.50002 0.95432 lineto
0.5 0.95449 lineto
0.5 0.95455 lineto
0.5 0.95449 lineto
0.49998 0.95432 lineto
0.49994 0.95404 lineto
0.49985 0.95366 lineto
0.49952 0.95261 lineto
0.49924 0.95195 lineto
0.49888 0.95123 lineto
0.49787 0.9496 lineto
0.49644 0.94782 lineto
0.49457 0.94601 lineto
0.49226 0.94427 lineto
0.48956 0.9427 lineto
Mistroke
0.48807 0.94201 lineto
0.48651 0.94141 lineto
0.48488 0.94088 lineto
0.4832 0.94046 lineto
0.48148 0.94013 lineto
0.47972 0.93991 lineto
0.47795 0.93979 lineto
0.47618 0.93979 lineto
0.47442 0.93989 lineto
0.47268 0.9401 lineto
0.47099 0.94041 lineto
0.46934 0.94082 lineto
0.46625 0.94189 lineto
0.4635 0.94325 lineto
0.46114 0.94479 lineto
0.45921 0.94643 lineto
0.45773 0.94804 lineto
0.45666 0.94952 lineto
0.45598 0.95076 lineto
0.45576 0.95127 lineto
0.45561 0.95169 lineto
0.45552 0.95201 lineto
0.45547 0.95223 lineto
0.45545 0.95234 lineto
0.45545 0.95234 lineto
0.45545 0.95223 lineto
0.45545 0.95201 lineto
0.45542 0.95167 lineto
0.45535 0.95123 lineto
0.45523 0.95069 lineto
0.45506 0.95005 lineto
0.45448 0.94854 lineto
0.45353 0.94676 lineto
0.45218 0.94482 lineto
0.45039 0.94283 lineto
0.44816 0.9409 lineto
0.44552 0.93912 lineto
0.44254 0.93761 lineto
0.44093 0.93697 lineto
0.43927 0.93643 lineto
0.43757 0.93598 lineto
0.43583 0.93564 lineto
0.43407 0.93541 lineto
0.4323 0.93529 lineto
0.43055 0.93527 lineto
0.42881 0.93536 lineto
0.42711 0.93556 lineto
0.42546 0.93585 lineto
0.42235 0.9367 lineto
0.42092 0.93724 lineto
Mistroke
0.41957 0.93784 lineto
0.41717 0.93919 lineto
0.4152 0.94065 lineto
0.41367 0.94209 lineto
0.41258 0.94342 lineto
0.41187 0.94453 lineto
0.41148 0.94533 lineto
0.41134 0.94576 lineto
0.41132 0.94581 lineto
0.41133 0.94576 lineto
0.41135 0.94559 lineto
0.41136 0.94531 lineto
0.41135 0.94492 lineto
0.41131 0.94442 lineto
0.41122 0.94382 lineto
0.41108 0.94312 lineto
0.41087 0.94234 lineto
0.41057 0.94147 lineto
0.40972 0.93955 lineto
0.40845 0.93746 lineto
0.40675 0.9353 lineto
0.40462 0.93317 lineto
0.40207 0.93119 lineto
0.39916 0.92946 lineto
0.39597 0.92806 lineto
0.39429 0.9275 lineto
0.39257 0.92704 lineto
0.39084 0.92669 lineto
0.38909 0.92645 lineto
0.38735 0.92631 lineto
0.38562 0.92629 lineto
0.38393 0.92637 lineto
0.38228 0.92654 lineto
0.38069 0.92682 lineto
0.37917 0.92717 lineto
0.37637 0.92811 lineto
0.37511 0.92867 lineto
0.37395 0.92926 lineto
0.36857 0.93397 lineto
0.36819 0.93465 lineto
0.3681 0.93485 lineto
0.36806 0.93496 lineto
0.36806 0.93496 lineto
0.36808 0.93485 lineto
0.36812 0.93463 lineto
0.36816 0.93429 lineto
0.36818 0.93385 lineto
0.36817 0.9333 lineto
0.36812 0.93264 lineto
0.36802 0.93188 lineto
Mistroke
0.36785 0.93104 lineto
0.3676 0.93011 lineto
0.36684 0.92805 lineto
0.36569 0.92581 lineto
0.3641 0.92348 lineto
0.36207 0.92117 lineto
0.35963 0.91899 lineto
0.35682 0.91705 lineto
0.35371 0.91543 lineto
0.35207 0.91475 lineto
0.35039 0.91418 lineto
0.34868 0.91371 lineto
0.34697 0.91336 lineto
0.34525 0.91311 lineto
0.34354 0.91297 lineto
0.34187 0.91293 lineto
0.34023 0.913 lineto
0.33865 0.91316 lineto
0.33713 0.91341 lineto
0.33569 0.91374 lineto
0.33434 0.91414 lineto
0.33192 0.9151 lineto
0.32992 0.91619 lineto
0.32836 0.91731 lineto
0.32724 0.91834 lineto
0.32653 0.91919 lineto
0.32616 0.91975 lineto
0.32608 0.91989 lineto
0.32605 0.91995 lineto
0.32607 0.91989 lineto
0.32612 0.91973 lineto
0.32619 0.91946 lineto
0.32626 0.91907 lineto
0.32631 0.91858 lineto
0.32635 0.91797 lineto
0.32634 0.91726 lineto
0.32628 0.91645 lineto
0.32617 0.91555 lineto
0.32597 0.91456 lineto
0.32533 0.91237 lineto
0.32487 0.91119 lineto
0.3243 0.90998 lineto
0.32284 0.90749 lineto
0.32094 0.90501 lineto
0.31862 0.90264 lineto
0.31592 0.9005 lineto
0.31292 0.89866 lineto
0.31133 0.89788 lineto
0.30969 0.89719 lineto
0.30803 0.89662 lineto
Mistroke
0.30634 0.89614 lineto
0.30466 0.89578 lineto
0.30298 0.89553 lineto
0.30133 0.89538 lineto
0.29972 0.89534 lineto
0.29816 0.89539 lineto
0.29665 0.89554 lineto
0.29523 0.89577 lineto
0.29388 0.89606 lineto
0.29263 0.89643 lineto
0.29148 0.89684 lineto
0.28949 0.89775 lineto
0.28794 0.89871 lineto
0.28683 0.8996 lineto
0.28614 0.90032 lineto
0.2858 0.90077 lineto
0.28574 0.90086 lineto
0.28574 0.90086 lineto
0.28578 0.90076 lineto
0.28586 0.90055 lineto
0.28596 0.90023 lineto
0.28607 0.8998 lineto
0.28617 0.89925 lineto
0.28625 0.8986 lineto
0.2863 0.89784 lineto
0.28629 0.89697 lineto
0.28623 0.89602 lineto
0.2861 0.89497 lineto
0.28589 0.89385 lineto
0.28559 0.89266 lineto
0.2847 0.89014 lineto
0.28338 0.8875 lineto
0.28162 0.88485 lineto
0.27944 0.88231 lineto
0.27688 0.87997 lineto
0.274 0.87792 lineto
0.27088 0.87625 lineto
0.26926 0.87556 lineto
0.26763 0.87498 lineto
0.26598 0.87451 lineto
0.26435 0.87415 lineto
0.26273 0.87389 lineto
0.26115 0.87374 lineto
0.25961 0.87369 lineto
0.25813 0.87373 lineto
0.25673 0.87386 lineto
0.2554 0.87406 lineto
0.25417 0.87433 lineto
0.25303 0.87465 lineto
0.25106 0.8754 lineto
Mistroke
0.24954 0.87621 lineto
0.24846 0.87696 lineto
0.2478 0.87756 lineto
0.24761 0.87776 lineto
0.2475 0.8779 lineto
0.24747 0.87794 lineto
0.2475 0.87789 lineto
0.24769 0.87749 lineto
0.24784 0.87713 lineto
0.24799 0.87665 lineto
0.24814 0.87606 lineto
0.24827 0.87536 lineto
0.24838 0.87456 lineto
0.24844 0.87365 lineto
0.24844 0.87264 lineto
0.24838 0.87155 lineto
0.24824 0.87037 lineto
0.24801 0.86913 lineto
0.24727 0.86648 lineto
0.24675 0.8651 lineto
0.24611 0.8637 lineto
0.24451 0.8609 lineto
0.24249 0.85818 lineto
0.24007 0.85566 lineto
0.23733 0.85342 lineto
0.23434 0.85154 lineto
0.23278 0.85075 lineto
0.2312 0.85007 lineto
0.2296 0.84949 lineto
0.22801 0.84903 lineto
0.22644 0.84867 lineto
0.2249 0.84842 lineto
0.2234 0.84827 lineto
0.22195 0.84821 lineto
0.22057 0.84824 lineto
0.21928 0.84835 lineto
0.21806 0.84853 lineto
0.21695 0.84876 lineto
0.21593 0.84904 lineto
0.21503 0.84935 lineto
0.21354 0.85002 lineto
0.2125 0.85064 lineto
0.21189 0.85112 lineto
0.21173 0.85128 lineto
0.21165 0.85136 lineto
0.21165 0.85136 lineto
0.21171 0.85127 lineto
0.21199 0.85078 lineto
0.21218 0.85038 lineto
0.21239 0.84986 lineto
Mistroke
0.21259 0.84924 lineto
0.21279 0.8485 lineto
0.21296 0.84765 lineto
0.21308 0.8467 lineto
0.21316 0.84565 lineto
0.21317 0.84451 lineto
0.21311 0.84329 lineto
0.21296 0.84199 lineto
0.21272 0.84064 lineto
0.21239 0.83923 lineto
0.21195 0.83779 lineto
0.2114 0.83633 lineto
0.20997 0.83338 lineto
0.20812 0.83051 lineto
0.20587 0.82782 lineto
0.20328 0.8254 lineto
0.20043 0.82333 lineto
0.19742 0.82166 lineto
0.19588 0.82098 lineto
0.19434 0.82042 lineto
0.19282 0.81996 lineto
0.19133 0.81961 lineto
0.18987 0.81937 lineto
0.18847 0.81922 lineto
0.18713 0.81916 lineto
0.18586 0.81918 lineto
0.18468 0.81927 lineto
0.1836 0.81942 lineto
0.18261 0.81962 lineto
0.18173 0.81986 lineto
0.1803 0.82039 lineto
0.17932 0.82089 lineto
0.17876 0.82127 lineto
0.17863 0.82137 lineto
0.17859 0.82141 lineto
0.17863 0.82137 lineto
0.17873 0.82124 lineto
0.17911 0.82068 lineto
0.17961 0.8197 lineto
0.17988 0.81904 lineto
0.18014 0.81827 lineto
0.18038 0.81739 lineto
0.18058 0.8164 lineto
0.18073 0.81532 lineto
0.18082 0.81414 lineto
0.18084 0.81287 lineto
0.18078 0.81153 lineto
0.18063 0.81013 lineto
0.18039 0.80867 lineto
0.18004 0.80718 lineto
Mistroke
0.17958 0.80566 lineto
0.17834 0.80258 lineto
0.17667 0.79957 lineto
0.1746 0.79672 lineto
0.17218 0.79413 lineto
0.16949 0.79188 lineto
0.16662 0.79003 lineto
0.16367 0.7886 lineto
0.16221 0.78805 lineto
0.16077 0.78761 lineto
0.15936 0.78728 lineto
0.15801 0.78704 lineto
0.15671 0.78689 lineto
0.15549 0.78683 lineto
0.15435 0.78684 lineto
0.1533 0.78692 lineto
0.15235 0.78704 lineto
0.1515 0.78721 lineto
0.15014 0.78761 lineto
0.14962 0.78782 lineto
0.14922 0.78801 lineto
0.14873 0.78829 lineto
0.14864 0.78835 lineto
0.14864 0.78835 lineto
0.14872 0.78827 lineto
0.14888 0.78811 lineto
0.14936 0.7875 lineto
0.14998 0.78646 lineto
0.15032 0.78577 lineto
0.15065 0.78497 lineto
0.15096 0.78407 lineto
0.15124 0.78305 lineto
0.15147 0.78194 lineto
0.15165 0.78072 lineto
0.15176 0.77943 lineto
0.15179 0.77805 lineto
0.15173 0.7766 lineto
0.15158 0.7751 lineto
0.15133 0.77356 lineto
0.15097 0.77199 lineto
0.15051 0.7704 lineto
0.14993 0.7688 lineto
0.14846 0.76566 lineto
0.14658 0.76267 lineto
0.14434 0.75993 lineto
0.14182 0.75751 lineto
0.1391 0.75549 lineto
0.1363 0.75389 lineto
0.1349 0.75325 lineto
0.13352 0.75273 lineto
Mistroke
0.13217 0.75231 lineto
0.13087 0.75199 lineto
0.12963 0.75176 lineto
0.12845 0.75162 lineto
0.12736 0.75156 lineto
0.12635 0.75156 lineto
0.12544 0.75162 lineto
0.12464 0.75173 lineto
0.12394 0.75186 lineto
0.12335 0.75201 lineto
0.12287 0.75216 lineto
0.12251 0.75231 lineto
0.12226 0.75242 lineto
0.12211 0.7525 lineto
0.12206 0.75253 lineto
0.1221 0.7525 lineto
0.12224 0.75239 lineto
0.12244 0.7522 lineto
0.12304 0.75154 lineto
0.12379 0.75046 lineto
0.1246 0.74894 lineto
0.12499 0.74801 lineto
0.12535 0.74697 lineto
0.12567 0.74583 lineto
0.12594 0.7446 lineto
0.12614 0.74327 lineto
0.12627 0.74187 lineto
0.12631 0.74039 lineto
0.12626 0.73885 lineto
0.12611 0.73727 lineto
0.12585 0.73565 lineto
0.12549 0.73402 lineto
0.12502 0.73237 lineto
0.12375 0.72912 lineto
0.12208 0.726 lineto
0.12003 0.72312 lineto
0.11769 0.72056 lineto
0.11515 0.71838 lineto
0.1125 0.71662 lineto
0.10986 0.7153 lineto
0.10858 0.7148 lineto
0.10734 0.71441 lineto
0.10615 0.71411 lineto
0.10503 0.7139 lineto
0.10398 0.71377 lineto
0.10303 0.71371 lineto
0.10216 0.7137 lineto
0.1014 0.71375 lineto
0.10075 0.71383 lineto
0.1002 0.71393 lineto
Mistroke
0.09977 0.71404 lineto
0.09945 0.71414 lineto
0.09924 0.71422 lineto
0.09914 0.71426 lineto
0.09923 0.7142 lineto
0.09968 0.71386 lineto
0.1004 0.71317 lineto
0.10129 0.71206 lineto
0.10225 0.71051 lineto
0.10316 0.70852 lineto
0.10357 0.70737 lineto
0.10394 0.70612 lineto
0.10423 0.70477 lineto
0.10446 0.70335 lineto
0.10461 0.70184 lineto
0.10466 0.70028 lineto
0.10462 0.69867 lineto
0.10447 0.69702 lineto
0.10422 0.69534 lineto
0.10386 0.69366 lineto
0.10281 0.69031 lineto
0.10212 0.68867 lineto
0.10134 0.68708 lineto
0.0995 0.68408 lineto
0.09736 0.68138 lineto
0.09499 0.67906 lineto
0.09251 0.67716 lineto
0.09002 0.6757 lineto
0.08881 0.67513 lineto
0.08763 0.67467 lineto
0.08544 0.67403 lineto
0.08445 0.67383 lineto
0.08355 0.67372 lineto
0.08274 0.67366 lineto
0.08203 0.67365 lineto
0.08142 0.67369 lineto
0.08093 0.67374 lineto
0.08054 0.67381 lineto
0.08027 0.67388 lineto
0.08011 0.67393 lineto
0.08005 0.67395 lineto
0.08025 0.67384 lineto
0.08081 0.67347 lineto
0.08166 0.67276 lineto
0.08269 0.67164 lineto
0.08381 0.67008 lineto
0.0849 0.66808 lineto
0.0854 0.66692 lineto
0.08586 0.66566 lineto
0.08626 0.66431 lineto
Mistroke
0.08659 0.66287 lineto
0.08684 0.66135 lineto
0.087 0.65977 lineto
0.08707 0.65813 lineto
0.08703 0.65646 lineto
0.08689 0.65475 lineto
0.08664 0.65303 lineto
0.08582 0.64961 lineto
0.08525 0.64793 lineto
0.08457 0.64629 lineto
0.08295 0.64318 lineto
0.08101 0.64037 lineto
0.07883 0.63793 lineto
0.07652 0.6359 lineto
0.07419 0.63431 lineto
0.07195 0.63316 lineto
0.07089 0.63273 lineto
0.06989 0.6324 lineto
0.06896 0.63215 lineto
0.06812 0.63198 lineto
0.06736 0.63188 lineto
0.0667 0.63183 lineto
0.06615 0.63182 lineto
0.06571 0.63184 lineto
0.06537 0.63188 lineto
0.06515 0.63192 lineto
0.06504 0.63194 lineto
0.06504 0.63194 lineto
0.06535 0.63181 lineto
0.06603 0.63143 lineto
0.06701 0.63071 lineto
0.06819 0.62959 lineto
0.06947 0.62804 lineto
0.07074 0.62605 lineto
0.07189 0.62363 lineto
0.07239 0.62227 lineto
0.07283 0.62083 lineto
0.07318 0.61931 lineto
0.07346 0.61772 lineto
0.07363 0.61607 lineto
0.07371 0.61438 lineto
0.07369 0.61265 lineto
0.07355 0.61091 lineto
0.07331 0.60916 lineto
0.07296 0.60743 lineto
0.0725 0.60571 lineto
0.07194 0.60403 lineto
0.07054 0.60084 lineto
0.06881 0.59793 lineto
0.06683 0.59538 lineto
Mistroke
0.0647 0.59325 lineto
0.06254 0.59155 lineto
0.06045 0.59028 lineto
0.05853 0.58943 lineto
0.05766 0.58913 lineto
0.05688 0.58892 lineto
0.05558 0.58869 lineto
0.05508 0.58865 lineto
0.05469 0.58864 lineto
0.05441 0.58865 lineto
0.05424 0.58867 lineto
0.05467 0.58852 lineto
0.05547 0.58813 lineto
0.05658 0.58742 lineto
0.05791 0.58633 lineto
0.05935 0.5848 lineto
0.06081 0.58283 lineto
0.06216 0.58043 lineto
0.06276 0.57908 lineto
0.0633 0.57765 lineto
0.06377 0.57613 lineto
0.06415 0.57454 lineto
0.06444 0.57289 lineto
0.06464 0.57119 lineto
0.06473 0.56945 lineto
0.06471 0.5677 lineto
0.06459 0.56593 lineto
0.06436 0.56417 lineto
0.06402 0.56243 lineto
0.06357 0.56073 lineto
0.06303 0.55907 lineto
0.06239 0.55746 lineto
0.06088 0.55448 lineto
0.0591 0.55184 lineto
0.05717 0.54961 lineto
0.05518 0.54782 lineto
0.05324 0.54647 lineto
0.05146 0.54552 lineto
0.05067 0.54519 lineto
0.04995 0.54494 lineto
0.04931 0.54477 lineto
0.04877 0.54465 lineto
0.04833 0.54458 lineto
0.04799 0.54455 lineto
0.04777 0.54455 lineto
0.04766 0.54455 lineto
0.04766 0.54455 lineto
0.04777 0.54453 lineto
0.04799 0.54448 lineto
0.04831 0.54439 lineto
Mistroke
0.04924 0.54402 lineto
0.05048 0.54334 lineto
0.05196 0.54227 lineto
0.05357 0.54079 lineto
0.05521 0.53886 lineto
0.05675 0.5365 lineto
0.05811 0.53375 lineto
0.05869 0.53224 lineto
0.05918 0.53066 lineto
0.05959 0.52901 lineto
0.0599 0.52732 lineto
0.06011 0.52558 lineto
0.06021 0.52382 lineto
0.06021 0.52205 lineto
0.06009 0.52028 lineto
0.05987 0.51852 lineto
0.05954 0.5168 lineto
0.05912 0.51512 lineto
0.05859 0.51349 lineto
0.0573 0.51044 lineto
0.05573 0.50774 lineto
0.05399 0.50543 lineto
0.05218 0.50356 lineto
0.0504 0.50213 lineto
0.04877 0.50112 lineto
0.04739 0.50048 lineto
0.04682 0.50028 lineto
0.04634 0.50015 lineto
0.04596 0.50006 lineto
0.04568 0.50002 lineto
0.04551 0.5 lineto
0.04545 0.5 lineto
0.04551 0.5 lineto
0.04568 0.49998 lineto
0.04596 0.49994 lineto
0.04634 0.49985 lineto
0.04739 0.49952 lineto
0.04805 0.49924 lineto
0.04877 0.49888 lineto
0.0504 0.49787 lineto
0.05218 0.49644 lineto
0.05399 0.49457 lineto
0.05573 0.49226 lineto
0.0573 0.48956 lineto
0.05799 0.48807 lineto
0.05859 0.48651 lineto
0.05912 0.48488 lineto
0.05954 0.4832 lineto
0.05987 0.48148 lineto
0.06009 0.47972 lineto
Mistroke
0.06021 0.47795 lineto
0.06021 0.47618 lineto
0.06011 0.47442 lineto
0.0599 0.47268 lineto
0.05959 0.47099 lineto
0.05918 0.46934 lineto
0.05811 0.46625 lineto
0.05675 0.4635 lineto
0.05521 0.46114 lineto
0.05357 0.45921 lineto
0.05196 0.45773 lineto
0.05048 0.45666 lineto
0.04924 0.45598 lineto
0.04873 0.45576 lineto
0.04831 0.45561 lineto
0.04799 0.45552 lineto
0.04777 0.45547 lineto
0.04766 0.45545 lineto
0.04766 0.45545 lineto
0.04777 0.45545 lineto
0.04799 0.45545 lineto
0.04833 0.45542 lineto
0.04877 0.45535 lineto
0.04995 0.45506 lineto
0.05067 0.45481 lineto
0.05146 0.45448 lineto
0.05324 0.45353 lineto
0.05518 0.45218 lineto
0.05717 0.45039 lineto
0.0591 0.44816 lineto
0.06088 0.44552 lineto
0.06239 0.44254 lineto
0.06303 0.44093 lineto
0.06357 0.43927 lineto
0.06402 0.43757 lineto
0.06436 0.43583 lineto
0.06459 0.43407 lineto
0.06471 0.4323 lineto
0.06415 0.42546 lineto
0.06377 0.42387 lineto
0.0633 0.42235 lineto
0.06216 0.41957 lineto
0.06081 0.41717 lineto
0.05935 0.4152 lineto
0.05791 0.41367 lineto
0.05658 0.41258 lineto
0.05547 0.41187 lineto
0.05467 0.41148 lineto
0.0544 0.41138 lineto
0.05424 0.41134 lineto
Mistroke
0.05419 0.41132 lineto
0.05424 0.41133 lineto
0.05441 0.41135 lineto
0.05469 0.41136 lineto
0.05508 0.41135 lineto
0.05558 0.41131 lineto
0.05618 0.41122 lineto
0.05688 0.41108 lineto
0.05766 0.41087 lineto
0.05853 0.41057 lineto
0.06045 0.40972 lineto
0.06254 0.40845 lineto
0.0647 0.40675 lineto
0.06683 0.40462 lineto
0.06881 0.40207 lineto
0.07054 0.39916 lineto
0.07194 0.39597 lineto
0.0725 0.39429 lineto
0.07296 0.39257 lineto
0.07331 0.39084 lineto
0.07355 0.38909 lineto
0.07369 0.38735 lineto
0.07371 0.38562 lineto
0.07363 0.38393 lineto
0.07346 0.38228 lineto
0.07318 0.38069 lineto
0.07283 0.37917 lineto
0.07189 0.37637 lineto
0.07133 0.37511 lineto
0.07074 0.37395 lineto
0.06603 0.36857 lineto
0.06535 0.36819 lineto
0.06515 0.3681 lineto
0.06504 0.36806 lineto
0.06504 0.36806 lineto
0.06515 0.36808 lineto
0.06537 0.36812 lineto
0.06571 0.36816 lineto
0.06615 0.36818 lineto
0.0667 0.36817 lineto
0.06736 0.36812 lineto
0.06812 0.36802 lineto
0.06896 0.36785 lineto
0.06989 0.3676 lineto
0.07195 0.36684 lineto
0.07419 0.36569 lineto
0.07652 0.3641 lineto
0.07883 0.36207 lineto
0.08101 0.35963 lineto
0.08295 0.35682 lineto
Mistroke
0.08457 0.35371 lineto
0.08525 0.35207 lineto
0.08582 0.35039 lineto
0.08629 0.34868 lineto
0.08664 0.34697 lineto
0.08689 0.34525 lineto
0.08703 0.34354 lineto
0.08707 0.34187 lineto
0.087 0.34023 lineto
0.08684 0.33865 lineto
0.08659 0.33713 lineto
0.08586 0.33434 lineto
0.0854 0.33308 lineto
0.0849 0.33192 lineto
0.08381 0.32992 lineto
0.08269 0.32836 lineto
0.08166 0.32724 lineto
0.08081 0.32653 lineto
0.08025 0.32616 lineto
0.08011 0.32608 lineto
0.08005 0.32605 lineto
0.08011 0.32607 lineto
0.08027 0.32612 lineto
0.08054 0.32619 lineto
0.08093 0.32626 lineto
0.08142 0.32631 lineto
0.08203 0.32635 lineto
0.08274 0.32634 lineto
0.08355 0.32628 lineto
0.08445 0.32617 lineto
0.08544 0.32597 lineto
0.0865 0.3257 lineto
0.08763 0.32533 lineto
0.09002 0.3243 lineto
0.09251 0.32284 lineto
0.09499 0.32094 lineto
0.09736 0.31862 lineto
0.0995 0.31592 lineto
0.10134 0.31292 lineto
0.10212 0.31133 lineto
0.10281 0.30969 lineto
0.10338 0.30803 lineto
0.10386 0.30634 lineto
0.10422 0.30466 lineto
0.10447 0.30298 lineto
0.10462 0.30133 lineto
0.10466 0.29972 lineto
0.10461 0.29816 lineto
0.10446 0.29665 lineto
0.10423 0.29523 lineto
Mistroke
0.10394 0.29388 lineto
0.10357 0.29263 lineto
0.10316 0.29148 lineto
0.10225 0.28949 lineto
0.10129 0.28794 lineto
0.1004 0.28683 lineto
0.09968 0.28614 lineto
0.09923 0.2858 lineto
0.09914 0.28574 lineto
0.09914 0.28574 lineto
0.09945 0.28586 lineto
0.09977 0.28596 lineto
0.1002 0.28607 lineto
0.10075 0.28617 lineto
0.1014 0.28625 lineto
0.10216 0.2863 lineto
0.10303 0.28629 lineto
0.10398 0.28623 lineto
0.10503 0.2861 lineto
0.10615 0.28589 lineto
0.10734 0.28559 lineto
0.10986 0.2847 lineto
0.1125 0.28338 lineto
0.11515 0.28162 lineto
0.11769 0.27944 lineto
0.12003 0.27688 lineto
0.12208 0.274 lineto
0.12375 0.27088 lineto
0.12444 0.26926 lineto
0.12502 0.26763 lineto
0.12549 0.26598 lineto
0.12585 0.26435 lineto
0.12611 0.26273 lineto
0.12626 0.26115 lineto
0.12631 0.25961 lineto
0.12627 0.25813 lineto
0.12614 0.25673 lineto
0.12594 0.2554 lineto
0.12567 0.25417 lineto
0.12535 0.25303 lineto
0.1246 0.25106 lineto
0.12379 0.24954 lineto
0.12304 0.24846 lineto
0.12244 0.2478 lineto
0.12224 0.24761 lineto
0.1221 0.2475 lineto
0.12206 0.24747 lineto
0.12211 0.2475 lineto
0.12251 0.24769 lineto
0.12287 0.24784 lineto
Mistroke
0.12335 0.24799 lineto
0.12394 0.24814 lineto
0.12464 0.24827 lineto
0.12544 0.24838 lineto
0.12635 0.24844 lineto
0.12736 0.24844 lineto
0.12845 0.24838 lineto
0.12963 0.24824 lineto
0.13087 0.24801 lineto
0.13352 0.24727 lineto
0.1349 0.24675 lineto
0.1363 0.24611 lineto
0.1391 0.24451 lineto
0.14182 0.24249 lineto
0.14434 0.24007 lineto
0.14658 0.23733 lineto
0.14846 0.23434 lineto
0.14925 0.23278 lineto
0.14993 0.2312 lineto
0.15051 0.2296 lineto
0.15097 0.22801 lineto
0.15133 0.22644 lineto
0.15158 0.2249 lineto
0.15173 0.2234 lineto
0.15179 0.22195 lineto
0.15176 0.22057 lineto
0.15165 0.21928 lineto
0.15147 0.21806 lineto
0.15124 0.21695 lineto
0.15096 0.21593 lineto
0.15065 0.21503 lineto
0.14998 0.21354 lineto
0.14936 0.2125 lineto
0.14888 0.21189 lineto
0.14872 0.21173 lineto
0.14864 0.21165 lineto
0.14864 0.21165 lineto
0.14873 0.21171 lineto
0.14922 0.21199 lineto
0.14962 0.21218 lineto
0.15014 0.21239 lineto
0.15076 0.21259 lineto
0.1515 0.21279 lineto
0.15235 0.21296 lineto
0.1533 0.21308 lineto
0.15435 0.21316 lineto
0.15549 0.21317 lineto
0.15671 0.21311 lineto
0.15801 0.21296 lineto
0.15936 0.21272 lineto
Mistroke
0.16077 0.21239 lineto
0.16221 0.21195 lineto
0.16367 0.2114 lineto
0.16662 0.20997 lineto
0.16949 0.20812 lineto
0.17218 0.20587 lineto
0.1746 0.20328 lineto
0.17667 0.20043 lineto
0.17834 0.19742 lineto
0.17958 0.19434 lineto
0.18004 0.19282 lineto
0.18039 0.19133 lineto
0.18063 0.18987 lineto
0.18078 0.18847 lineto
0.18084 0.18713 lineto
0.18082 0.18586 lineto
0.18073 0.18468 lineto
0.18058 0.1836 lineto
0.18038 0.18261 lineto
0.18014 0.18173 lineto
0.17961 0.1803 lineto
0.17911 0.17932 lineto
0.17873 0.17876 lineto
0.17863 0.17863 lineto
0.17859 0.17859 lineto
0.17863 0.17863 lineto
0.17876 0.17873 lineto
0.17932 0.17911 lineto
0.1803 0.17961 lineto
0.18096 0.17988 lineto
0.18173 0.18014 lineto
0.18261 0.18038 lineto
0.1836 0.18058 lineto
0.18468 0.18073 lineto
0.18586 0.18082 lineto
0.18713 0.18084 lineto
0.18847 0.18078 lineto
0.18987 0.18063 lineto
0.19133 0.18039 lineto
0.19282 0.18004 lineto
0.19434 0.17958 lineto
0.19742 0.17834 lineto
0.20043 0.17667 lineto
0.20328 0.1746 lineto
0.20587 0.17218 lineto
0.20812 0.16949 lineto
0.20997 0.16662 lineto
0.2114 0.16367 lineto
0.21195 0.16221 lineto
0.21239 0.16077 lineto
Mistroke
0.21272 0.15936 lineto
0.21296 0.15801 lineto
0.21311 0.15671 lineto
0.21317 0.15549 lineto
0.21316 0.15435 lineto
0.21308 0.1533 lineto
0.21296 0.15235 lineto
0.21279 0.1515 lineto
0.21259 0.15076 lineto
0.21239 0.15014 lineto
0.21199 0.14922 lineto
0.21171 0.14873 lineto
0.21165 0.14864 lineto
0.21165 0.14864 lineto
0.21189 0.14888 lineto
0.2125 0.14936 lineto
0.21354 0.14998 lineto
0.21423 0.15032 lineto
0.21503 0.15065 lineto
0.21593 0.15096 lineto
0.21695 0.15124 lineto
0.21806 0.15147 lineto
0.21928 0.15165 lineto
0.22057 0.15176 lineto
0.22195 0.15179 lineto
0.2234 0.15173 lineto
0.2249 0.15158 lineto
0.22644 0.15133 lineto
0.22801 0.15097 lineto
0.2296 0.15051 lineto
0.2312 0.14993 lineto
0.23434 0.14846 lineto
0.23733 0.14658 lineto
0.24007 0.14434 lineto
0.24249 0.14182 lineto
0.24451 0.1391 lineto
0.24611 0.1363 lineto
0.24675 0.1349 lineto
0.24727 0.13352 lineto
0.24769 0.13217 lineto
0.24801 0.13087 lineto
0.24824 0.12963 lineto
0.24838 0.12845 lineto
0.24844 0.12736 lineto
0.24844 0.12635 lineto
0.24838 0.12544 lineto
0.24827 0.12464 lineto
0.24814 0.12394 lineto
0.24799 0.12335 lineto
0.24769 0.12251 lineto
Mistroke
0.2475 0.12211 lineto
0.24747 0.12206 lineto
0.2475 0.1221 lineto
0.24846 0.12304 lineto
0.24954 0.12379 lineto
0.25106 0.1246 lineto
0.25303 0.12535 lineto
0.25417 0.12567 lineto
0.2554 0.12594 lineto
0.25673 0.12614 lineto
0.25813 0.12627 lineto
0.25961 0.12631 lineto
0.26115 0.12626 lineto
0.26273 0.12611 lineto
0.26435 0.12585 lineto
0.26598 0.12549 lineto
0.26763 0.12502 lineto
0.27088 0.12375 lineto
0.274 0.12208 lineto
0.27688 0.12003 lineto
0.27944 0.11769 lineto
0.28162 0.11515 lineto
0.28338 0.1125 lineto
0.2847 0.10986 lineto
0.2852 0.10858 lineto
0.28559 0.10734 lineto
0.28589 0.10615 lineto
0.2861 0.10503 lineto
0.28623 0.10398 lineto
0.28629 0.10303 lineto
0.2863 0.10216 lineto
0.28625 0.1014 lineto
0.28617 0.10075 lineto
0.28607 0.1002 lineto
0.28586 0.09945 lineto
0.28578 0.09924 lineto
0.28574 0.09914 lineto
0.28614 0.09968 lineto
0.28683 0.1004 lineto
0.28794 0.10129 lineto
0.28949 0.10225 lineto
0.29043 0.10272 lineto
0.29148 0.10316 lineto
0.29263 0.10357 lineto
0.29388 0.10394 lineto
0.29523 0.10423 lineto
0.29665 0.10446 lineto
0.29816 0.10461 lineto
0.29972 0.10466 lineto
0.30133 0.10462 lineto
Mistroke
0.30298 0.10447 lineto
0.30466 0.10422 lineto
0.30634 0.10386 lineto
0.30969 0.10281 lineto
0.31133 0.10212 lineto
0.31292 0.10134 lineto
0.31592 0.0995 lineto
0.31862 0.09736 lineto
0.32094 0.09499 lineto
0.32284 0.09251 lineto
0.3243 0.09002 lineto
0.32487 0.08881 lineto
0.32533 0.08763 lineto
0.3257 0.0865 lineto
0.32597 0.08544 lineto
0.32617 0.08445 lineto
0.32628 0.08355 lineto
0.32634 0.08274 lineto
0.32635 0.08203 lineto
0.32631 0.08142 lineto
0.32626 0.08093 lineto
0.32619 0.08054 lineto
0.32612 0.08027 lineto
0.32607 0.08011 lineto
0.32605 0.08005 lineto
0.32608 0.08011 lineto
0.32616 0.08025 lineto
0.32724 0.08166 lineto
0.32836 0.08269 lineto
0.32992 0.08381 lineto
0.33192 0.0849 lineto
0.33308 0.0854 lineto
0.33434 0.08586 lineto
0.33569 0.08626 lineto
0.33713 0.08659 lineto
0.33865 0.08684 lineto
0.34023 0.087 lineto
0.34187 0.08707 lineto
0.34354 0.08703 lineto
0.34525 0.08689 lineto
0.34697 0.08664 lineto
0.35039 0.08582 lineto
0.35207 0.08525 lineto
0.35371 0.08457 lineto
0.35963 0.08101 lineto
0.36207 0.07883 lineto
0.3641 0.07652 lineto
0.36569 0.07419 lineto
0.36684 0.07195 lineto
0.36727 0.07089 lineto
Mistroke
0.3676 0.06989 lineto
0.36785 0.06896 lineto
0.36802 0.06812 lineto
0.36812 0.06736 lineto
0.36817 0.0667 lineto
0.36818 0.06615 lineto
0.36816 0.06571 lineto
0.36812 0.06537 lineto
0.36808 0.06515 lineto
0.36806 0.06504 lineto
0.36806 0.06504 lineto
0.36857 0.06603 lineto
0.36929 0.06701 lineto
0.37041 0.06819 lineto
0.37196 0.06947 lineto
0.37395 0.07074 lineto
0.37511 0.07133 lineto
0.37637 0.07189 lineto
0.37917 0.07283 lineto
0.38069 0.07318 lineto
0.38228 0.07346 lineto
0.38393 0.07363 lineto
0.38562 0.07371 lineto
0.38735 0.07369 lineto
0.38909 0.07355 lineto
0.39084 0.07331 lineto
0.39257 0.07296 lineto
0.39429 0.0725 lineto
0.39597 0.07194 lineto
0.39916 0.07054 lineto
0.40207 0.06881 lineto
0.40462 0.06683 lineto
0.40675 0.0647 lineto
0.40845 0.06254 lineto
0.40972 0.06045 lineto
0.41019 0.05946 lineto
0.41057 0.05853 lineto
0.41087 0.05766 lineto
0.41108 0.05688 lineto
0.41122 0.05618 lineto
0.41131 0.05558 lineto
0.41135 0.05508 lineto
0.41136 0.05469 lineto
0.41135 0.05441 lineto
0.41133 0.05424 lineto
0.41132 0.05419 lineto
0.41134 0.05424 lineto
0.41148 0.05467 lineto
0.41187 0.05547 lineto
0.41258 0.05658 lineto
Mistroke
0.41367 0.05791 lineto
0.4152 0.05935 lineto
0.41717 0.06081 lineto
0.41957 0.06216 lineto
0.42092 0.06276 lineto
0.42235 0.0633 lineto
0.42387 0.06377 lineto
0.42546 0.06415 lineto
0.42711 0.06444 lineto
0.42881 0.06464 lineto
0.43055 0.06473 lineto
0.4323 0.06471 lineto
0.43407 0.06459 lineto
0.43583 0.06436 lineto
0.43757 0.06402 lineto
0.43927 0.06357 lineto
0.44254 0.06239 lineto
0.44552 0.06088 lineto
0.44816 0.0591 lineto
0.45039 0.05717 lineto
0.45218 0.05518 lineto
0.45353 0.05324 lineto
0.45448 0.05146 lineto
0.45481 0.05067 lineto
0.45506 0.04995 lineto
0.45523 0.04931 lineto
0.45535 0.04877 lineto
0.45542 0.04833 lineto
0.45545 0.04799 lineto
0.45545 0.04777 lineto
0.45545 0.04766 lineto
0.45547 0.04777 lineto
0.45552 0.04799 lineto
0.45561 0.04831 lineto
0.45598 0.04924 lineto
0.45666 0.05048 lineto
0.45773 0.05196 lineto
0.45921 0.05357 lineto
0.46114 0.05521 lineto
0.4635 0.05675 lineto
0.46625 0.05811 lineto
0.46934 0.05918 lineto
0.47099 0.05959 lineto
0.47268 0.0599 lineto
0.47442 0.06011 lineto
0.47618 0.06021 lineto
0.47795 0.06021 lineto
0.47972 0.06009 lineto
0.48148 0.05987 lineto
0.4832 0.05954 lineto
Mistroke
0.48488 0.05912 lineto
0.48651 0.05859 lineto
0.48956 0.0573 lineto
0.49226 0.05573 lineto
0.49457 0.05399 lineto
0.49644 0.05218 lineto
0.49787 0.0504 lineto
0.49888 0.04877 lineto
0.49952 0.04739 lineto
0.49972 0.04682 lineto
0.49985 0.04634 lineto
0.49994 0.04596 lineto
0.49998 0.04568 lineto
0.5 0.04551 lineto
0.5 0.04545 lineto
0.5 0.04551 lineto
0.50002 0.04568 lineto
0.50006 0.04596 lineto
0.50015 0.04634 lineto
0.50048 0.04739 lineto
0.50076 0.04805 lineto
0.50112 0.04877 lineto
0.50213 0.0504 lineto
0.50356 0.05218 lineto
0.50543 0.05399 lineto
0.50774 0.05573 lineto
0.51044 0.0573 lineto
0.51193 0.05799 lineto
0.51349 0.05859 lineto
0.51512 0.05912 lineto
0.5168 0.05954 lineto
0.51852 0.05987 lineto
0.52028 0.06009 lineto
0.52205 0.06021 lineto
0.52382 0.06021 lineto
0.52558 0.06011 lineto
0.52732 0.0599 lineto
0.52901 0.05959 lineto
0.53066 0.05918 lineto
0.53375 0.05811 lineto
0.5365 0.05675 lineto
0.53886 0.05521 lineto
0.54079 0.05357 lineto
0.54227 0.05196 lineto
0.54334 0.05048 lineto
0.54402 0.04924 lineto
0.54424 0.04873 lineto
0.54439 0.04831 lineto
0.54448 0.04799 lineto
0.54453 0.04777 lineto
Mistroke
0.54455 0.04766 lineto
0.54455 0.04766 lineto
0.54455 0.04777 lineto
0.54455 0.04799 lineto
0.54458 0.04833 lineto
0.54465 0.04877 lineto
0.54477 0.04931 lineto
0.54494 0.04995 lineto
0.54552 0.05146 lineto
0.54647 0.05324 lineto
0.54782 0.05518 lineto
0.54961 0.05717 lineto
0.55184 0.0591 lineto
0.55448 0.06088 lineto
0.55746 0.06239 lineto
0.55907 0.06303 lineto
0.56073 0.06357 lineto
0.56243 0.06402 lineto
0.56417 0.06436 lineto
0.56593 0.06459 lineto
0.5677 0.06471 lineto
0.56945 0.06473 lineto
0.57119 0.06464 lineto
0.57289 0.06444 lineto
0.57454 0.06415 lineto
0.57765 0.0633 lineto
0.57908 0.06276 lineto
0.58043 0.06216 lineto
0.58283 0.06081 lineto
0.5848 0.05935 lineto
0.58633 0.05791 lineto
0.58742 0.05658 lineto
0.58813 0.05547 lineto
0.58852 0.05467 lineto
0.58862 0.0544 lineto
0.58866 0.05424 lineto
0.58868 0.05419 lineto
0.58867 0.05424 lineto
0.58865 0.05441 lineto
0.58864 0.05469 lineto
0.58865 0.05508 lineto
0.58869 0.05558 lineto
0.58878 0.05618 lineto
0.58892 0.05688 lineto
0.58913 0.05766 lineto
0.58943 0.05853 lineto
0.59028 0.06045 lineto
0.59155 0.06254 lineto
0.59325 0.0647 lineto
0.59538 0.06683 lineto
Mistroke
0.59793 0.06881 lineto
0.60084 0.07054 lineto
0.60241 0.07128 lineto
0.60403 0.07194 lineto
0.60571 0.0725 lineto
0.60743 0.07296 lineto
0.60916 0.07331 lineto
0.61091 0.07355 lineto
0.61265 0.07369 lineto
0.61438 0.07371 lineto
0.61607 0.07363 lineto
0.61772 0.07346 lineto
0.61931 0.07318 lineto
0.62083 0.07283 lineto
0.62227 0.07239 lineto
0.62363 0.07189 lineto
0.62605 0.07074 lineto
0.62804 0.06947 lineto
0.62959 0.06819 lineto
0.63071 0.06701 lineto
0.63143 0.06603 lineto
0.63181 0.06535 lineto
0.6319 0.06515 lineto
0.63194 0.06504 lineto
0.63192 0.06515 lineto
0.63188 0.06537 lineto
0.63184 0.06571 lineto
0.66566 0.08586 lineto
0.66808 0.0849 lineto
0.67008 0.08381 lineto
0.67164 0.08269 lineto
0.67276 0.08166 lineto
0.67347 0.08081 lineto
0.67384 0.08025 lineto
0.67392 0.08011 lineto
0.67395 0.08005 lineto
0.67388 0.08027 lineto
0.67381 0.08054 lineto
0.67374 0.08093 lineto
0.67369 0.08142 lineto
0.67365 0.08203 lineto
0.67366 0.08274 lineto
0.67372 0.08355 lineto
0.67383 0.08445 lineto
0.67403 0.08544 lineto
0.6743 0.0865 lineto
0.67467 0.08763 lineto
0.6757 0.09002 lineto
0.67716 0.09251 lineto
0.67906 0.09499 lineto
Mistroke
0.68138 0.09736 lineto
0.68408 0.0995 lineto
0.68708 0.10134 lineto
0.69031 0.10281 lineto
0.69197 0.10338 lineto
0.69366 0.10386 lineto
0.69534 0.10422 lineto
0.69702 0.10447 lineto
0.69867 0.10462 lineto
0.70028 0.10466 lineto
0.70184 0.10461 lineto
0.70335 0.10446 lineto
0.70477 0.10423 lineto
0.70612 0.10394 lineto
0.70852 0.10316 lineto
0.70957 0.10272 lineto
0.71051 0.10225 lineto
0.71206 0.10129 lineto
0.71317 0.1004 lineto
0.71386 0.09968 lineto
0.7142 0.09923 lineto
0.71426 0.09914 lineto
0.71426 0.09914 lineto
0.71414 0.09945 lineto
0.71404 0.09977 lineto
0.71393 0.1002 lineto
0.71383 0.10075 lineto
0.71375 0.1014 lineto
0.7137 0.10216 lineto
0.71371 0.10303 lineto
0.71377 0.10398 lineto
0.7139 0.10503 lineto
0.71411 0.10615 lineto
0.71441 0.10734 lineto
0.7153 0.10986 lineto
0.71662 0.1125 lineto
0.71838 0.11515 lineto
0.72056 0.11769 lineto
0.72312 0.12003 lineto
0.726 0.12208 lineto
0.72912 0.12375 lineto
0.73074 0.12444 lineto
0.73237 0.12502 lineto
0.73402 0.12549 lineto
0.73565 0.12585 lineto
0.73727 0.12611 lineto
0.73885 0.12626 lineto
0.74039 0.12631 lineto
0.74187 0.12627 lineto
0.74327 0.12614 lineto
Mistroke
0.7446 0.12594 lineto
0.74583 0.12567 lineto
0.74697 0.12535 lineto
0.74894 0.1246 lineto
0.75046 0.12379 lineto
0.75154 0.12304 lineto
0.7522 0.12244 lineto
0.75239 0.12224 lineto
0.7525 0.1221 lineto
0.75253 0.12206 lineto
0.7525 0.12211 lineto
0.75231 0.12251 lineto
0.75216 0.12287 lineto
0.75201 0.12335 lineto
0.75186 0.12394 lineto
0.75173 0.12464 lineto
0.75162 0.12544 lineto
0.75156 0.12635 lineto
0.75156 0.12736 lineto
0.75162 0.12845 lineto
0.75176 0.12963 lineto
0.75199 0.13087 lineto
0.75273 0.13352 lineto
0.75325 0.1349 lineto
0.75389 0.1363 lineto
0.75549 0.1391 lineto
0.75751 0.14182 lineto
0.75993 0.14434 lineto
0.76267 0.14658 lineto
0.76566 0.14846 lineto
0.76722 0.14925 lineto
0.7688 0.14993 lineto
0.7704 0.15051 lineto
0.77199 0.15097 lineto
0.77356 0.15133 lineto
0.7751 0.15158 lineto
0.7766 0.15173 lineto
0.77805 0.15179 lineto
0.77943 0.15176 lineto
0.78072 0.15165 lineto
0.78194 0.15147 lineto
0.78305 0.15124 lineto
0.78407 0.15096 lineto
0.78497 0.15065 lineto
0.78646 0.14998 lineto
0.7875 0.14936 lineto
0.78811 0.14888 lineto
0.78827 0.14872 lineto
0.78835 0.14864 lineto
0.78829 0.14873 lineto
Mistroke
0.78801 0.14922 lineto
0.78782 0.14962 lineto
0.78761 0.15014 lineto
0.78741 0.15076 lineto
0.78721 0.1515 lineto
0.78704 0.15235 lineto
0.78692 0.1533 lineto
0.78684 0.15435 lineto
0.78683 0.15549 lineto
0.78689 0.15671 lineto
0.78704 0.15801 lineto
0.78728 0.15936 lineto
0.78761 0.16077 lineto
0.78805 0.16221 lineto
0.7886 0.16367 lineto
0.79003 0.16662 lineto
0.79188 0.16949 lineto
0.79413 0.17218 lineto
0.79672 0.1746 lineto
0.79957 0.17667 lineto
0.80258 0.17834 lineto
0.80412 0.17902 lineto
0.80566 0.17958 lineto
0.80718 0.18004 lineto
0.80867 0.18039 lineto
0.81013 0.18063 lineto
0.81153 0.18078 lineto
0.81287 0.18084 lineto
0.81414 0.18082 lineto
0.81532 0.18073 lineto
0.8164 0.18058 lineto
0.81739 0.18038 lineto
0.81827 0.18014 lineto
0.8197 0.17961 lineto
0.82068 0.17911 lineto
0.82124 0.17873 lineto
0.82137 0.17863 lineto
0.82141 0.17859 lineto
0.82127 0.17876 lineto
0.82089 0.17932 lineto
0.82039 0.1803 lineto
0.82012 0.18096 lineto
0.81986 0.18173 lineto
0.81962 0.18261 lineto
0.81942 0.1836 lineto
0.81927 0.18468 lineto
0.81918 0.18586 lineto
0.81916 0.18713 lineto
0.81922 0.18847 lineto
0.81937 0.18987 lineto
Mistroke
0.81961 0.19133 lineto
0.81996 0.19282 lineto
0.82042 0.19434 lineto
0.82166 0.19742 lineto
0.82333 0.20043 lineto
0.8254 0.20328 lineto
0.82782 0.20587 lineto
0.83051 0.20812 lineto
0.83338 0.20997 lineto
0.83485 0.21074 lineto
0.83633 0.2114 lineto
0.83779 0.21195 lineto
0.83923 0.21239 lineto
0.84064 0.21272 lineto
0.84199 0.21296 lineto
0.84329 0.21311 lineto
0.84451 0.21317 lineto
0.84565 0.21316 lineto
0.8467 0.21308 lineto
0.84765 0.21296 lineto
0.8485 0.21279 lineto
0.84924 0.21259 lineto
0.84986 0.21239 lineto
0.85078 0.21199 lineto
0.85127 0.21171 lineto
0.85136 0.21165 lineto
0.85136 0.21165 lineto
0.85112 0.21189 lineto
0.85064 0.2125 lineto
0.85002 0.21354 lineto
0.84968 0.21423 lineto
0.84935 0.21503 lineto
0.84904 0.21593 lineto
0.84876 0.21695 lineto
0.84853 0.21806 lineto
0.84835 0.21928 lineto
0.84824 0.22057 lineto
0.84821 0.22195 lineto
0.84827 0.2234 lineto
0.84842 0.2249 lineto
0.84867 0.22644 lineto
0.84903 0.22801 lineto
0.84949 0.2296 lineto
0.85007 0.2312 lineto
0.85154 0.23434 lineto
0.85342 0.23733 lineto
0.85566 0.24007 lineto
0.85818 0.24249 lineto
0.8609 0.24451 lineto
0.8637 0.24611 lineto
Mistroke
0.86648 0.24727 lineto
0.86783 0.24769 lineto
0.86913 0.24801 lineto
0.87037 0.24824 lineto
0.87155 0.24838 lineto
0.87264 0.24844 lineto
0.87365 0.24844 lineto
0.87456 0.24838 lineto
0.87536 0.24827 lineto
0.87606 0.24814 lineto
0.87665 0.24799 lineto
0.87749 0.24769 lineto
0.87774 0.24758 lineto
0.87789 0.2475 lineto
0.87794 0.24747 lineto
0.8779 0.2475 lineto
0.87756 0.2478 lineto
0.87696 0.24846 lineto
0.87621 0.24954 lineto
0.8754 0.25106 lineto
0.87465 0.25303 lineto
0.87433 0.25417 lineto
0.87406 0.2554 lineto
0.87386 0.25673 lineto
0.87373 0.25813 lineto
0.87369 0.25961 lineto
0.87374 0.26115 lineto
0.87389 0.26273 lineto
0.87415 0.26435 lineto
0.87451 0.26598 lineto
0.87498 0.26763 lineto
0.87625 0.27088 lineto
0.87792 0.274 lineto
0.87997 0.27688 lineto
0.88231 0.27944 lineto
0.88485 0.28162 lineto
0.8875 0.28338 lineto
0.89014 0.2847 lineto
0.89142 0.2852 lineto
0.89266 0.28559 lineto
0.89385 0.28589 lineto
0.89497 0.2861 lineto
0.89602 0.28623 lineto
0.89697 0.28629 lineto
0.89784 0.2863 lineto
0.8986 0.28625 lineto
0.89925 0.28617 lineto
0.8998 0.28607 lineto
0.90023 0.28596 lineto
0.90055 0.28586 lineto
Mistroke
0.90076 0.28578 lineto
0.90086 0.28574 lineto
0.90086 0.28574 lineto
0.90077 0.2858 lineto
0.90032 0.28614 lineto
0.8996 0.28683 lineto
0.89871 0.28794 lineto
0.89775 0.28949 lineto
0.89684 0.29148 lineto
0.89643 0.29263 lineto
0.89606 0.29388 lineto
0.89577 0.29523 lineto
0.89554 0.29665 lineto
0.89539 0.29816 lineto
0.89534 0.29972 lineto
0.89538 0.30133 lineto
0.89553 0.30298 lineto
0.89578 0.30466 lineto
0.89614 0.30634 lineto
0.89719 0.30969 lineto
0.89788 0.31133 lineto
0.89866 0.31292 lineto
0.9005 0.31592 lineto
0.90264 0.31862 lineto
0.90501 0.32094 lineto
0.90749 0.32284 lineto
0.90998 0.3243 lineto
0.91119 0.32487 lineto
0.91237 0.32533 lineto
0.91456 0.32597 lineto
0.91555 0.32617 lineto
0.91645 0.32628 lineto
0.91726 0.32634 lineto
0.91797 0.32635 lineto
0.91858 0.32631 lineto
0.91907 0.32626 lineto
0.91946 0.32619 lineto
0.91973 0.32612 lineto
0.91989 0.32607 lineto
0.91995 0.32605 lineto
0.91975 0.32616 lineto
0.91919 0.32653 lineto
0.91834 0.32724 lineto
0.91731 0.32836 lineto
0.91619 0.32992 lineto
0.9151 0.33192 lineto
0.9146 0.33308 lineto
0.91414 0.33434 lineto
0.91374 0.33569 lineto
0.91341 0.33713 lineto
Mistroke
0.91316 0.33865 lineto
0.913 0.34023 lineto
0.91293 0.34187 lineto
0.91297 0.34354 lineto
0.91311 0.34525 lineto
0.91336 0.34697 lineto
0.91418 0.35039 lineto
0.91475 0.35207 lineto
0.91543 0.35371 lineto
0.91705 0.35682 lineto
0.91899 0.35963 lineto
0.92117 0.36207 lineto
0.92348 0.3641 lineto
0.92581 0.36569 lineto
0.92805 0.36684 lineto
0.92911 0.36727 lineto
0.93011 0.3676 lineto
0.93104 0.36785 lineto
0.93188 0.36802 lineto
0.93264 0.36812 lineto
0.9333 0.36817 lineto
0.93385 0.36818 lineto
0.93429 0.36816 lineto
0.93463 0.36812 lineto
0.93485 0.36808 lineto
0.93496 0.36806 lineto
0.93496 0.36806 lineto
0.93465 0.36819 lineto
0.93397 0.36857 lineto
0.93299 0.36929 lineto
0.93181 0.37041 lineto
0.93053 0.37196 lineto
0.92926 0.37395 lineto
0.92867 0.37511 lineto
0.92811 0.37637 lineto
0.92761 0.37773 lineto
0.92717 0.37917 lineto
0.92682 0.38069 lineto
0.92654 0.38228 lineto
0.92637 0.38393 lineto
0.92629 0.38562 lineto
0.92631 0.38735 lineto
0.92645 0.38909 lineto
0.92669 0.39084 lineto
0.92704 0.39257 lineto
0.9275 0.39429 lineto
0.92806 0.39597 lineto
0.92946 0.39916 lineto
0.93119 0.40207 lineto
0.93317 0.40462 lineto
Mistroke
0.9353 0.40675 lineto
0.93746 0.40845 lineto
0.93955 0.40972 lineto
0.94054 0.41019 lineto
0.94147 0.41057 lineto
0.94234 0.41087 lineto
0.94312 0.41108 lineto
0.94382 0.41122 lineto
0.94442 0.41131 lineto
0.94492 0.41135 lineto
0.94531 0.41136 lineto
0.94559 0.41135 lineto
0.94576 0.41133 lineto
0.94581 0.41132 lineto
0.94576 0.41134 lineto
0.94533 0.41148 lineto
0.94453 0.41187 lineto
0.94342 0.41258 lineto
0.94209 0.41367 lineto
0.94065 0.4152 lineto
0.93919 0.41717 lineto
0.93784 0.41957 lineto
0.9367 0.42235 lineto
0.93623 0.42387 lineto
0.93585 0.42546 lineto
0.93556 0.42711 lineto
0.93536 0.42881 lineto
0.93527 0.43055 lineto
0.93529 0.4323 lineto
0.93541 0.43407 lineto
0.93564 0.43583 lineto
0.93598 0.43757 lineto
0.93643 0.43927 lineto
0.93761 0.44254 lineto
0.93912 0.44552 lineto
0.9409 0.44816 lineto
0.94283 0.45039 lineto
0.94482 0.45218 lineto
0.94676 0.45353 lineto
0.94854 0.45448 lineto
0.95005 0.45506 lineto
0.95069 0.45523 lineto
0.95123 0.45535 lineto
0.95201 0.45545 lineto
0.95223 0.45545 lineto
0.95234 0.45545 lineto
0.95234 0.45545 lineto
0.95223 0.45547 lineto
0.95201 0.45552 lineto
0.95169 0.45561 lineto
Mistroke
0.95076 0.45598 lineto
0.94952 0.45666 lineto
0.94804 0.45773 lineto
0.94643 0.45921 lineto
0.94479 0.46114 lineto
0.94325 0.4635 lineto
0.94189 0.46625 lineto
0.94082 0.46934 lineto
0.94041 0.47099 lineto
0.9401 0.47268 lineto
0.93989 0.47442 lineto
0.93979 0.47618 lineto
0.93979 0.47795 lineto
0.93991 0.47972 lineto
0.94013 0.48148 lineto
0.94046 0.4832 lineto
0.94088 0.48488 lineto
0.94141 0.48651 lineto
0.9427 0.48956 lineto
0.94427 0.49226 lineto
0.94601 0.49457 lineto
0.94782 0.49644 lineto
0.9496 0.49787 lineto
0.95123 0.49888 lineto
0.95261 0.49952 lineto
0.95318 0.49972 lineto
0.95366 0.49985 lineto
0.95404 0.49994 lineto
0.95432 0.49998 lineto
0.95449 0.5 lineto
0.95455 0.5 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1.010638 141 -93.712746 sc6mt astore rstroke
end
grestore
grestore
%%EndDocument
 @endspecial 662 2435 a Fi(Fig)p Fq(.)f(70.)k(Figures)c(for)g(Exercise)h(3.)p
eop
%%Page: 107 107
107 106 bop 75 -100 a Fm(P)n(arametric)22 b(Curv)n(es)h(in)f(2D)p
75 -93 756 2 v 976 w Fq(107)75 49 y Fj(a)g(=)f(1;)h(\(*)f(scale)g(factor)f
(*\))75 99 y(b)i(=)f(1/k;)75 199 y(ds)g(=)h(Sqrt[x'[t]^2)d(+)j
(y'[t]^2]//Simplif)o(y)489 298 y(2)109 b(k)21 b(t)h(2)315 348
y(\(-1)f(+)g(k\))44 b(Sin[---])642 398 y(2)162 448 y(2)22 b(Sqrt[-----------)
o(-----)o(---])511 498 y(2)489 547 y(k)75 647 y(\(*)f(On)h(first)f(lobe,)f
(can)h(PowerExpand:)f(*\))75 697 y(ds)h(=)h(Sqrt[x'[t]^2)d(+)j
(y'[t]^2]//Simplif)o(y//Po)o(werE)o(xpand)489 796 y(k)g(t)162
846 y(2)g(\(-1)f(+)h(k\))f(Sin[---])511 896 y(2)162 946 y(------------------)
o(-)358 996 y(k)75 1095 y(length)g(=)g(k)h(Integrate[ds,)d({t,)i(0,)g
(2Pi/k}]//Together//)o(Simpl)o(ify)249 1145 y(8)162 1195 y(8)h(-)f(-)249
1245 y(k)75 1404 y Fn(Exercise)14 b(5.)k Fq(The)13 b(p)q(erio)q(ds)g(are)f
(giv)o(en)g(b)o(y)g(2)p Fh(\031)r(j)s Fq(.)17 b(The)c(3-fold)f(rotation)f
(e\013ect)h(for)f Fh(j)k Fq(=)e(3)f(\()p Fh(b=a)f Fq(=)i(3)p
Fh(=)p Fq(16\))75 1460 y(is)h(clear.)19 b(And)14 b Fh(j)h Fq(=)e(5)g(and)g(7)
g(sho)o(w)g(a)g(corresp)q(onding)h(5-fold)f(and)h(7-fold)f(e\013ect)g(\(see)g
(Figure)h(71\).)k(But)75 1517 y(the)d(graph)g(for)f Fh(j)h
Fq(=)e(9)h(is)i(the)f(same)f(as)h(the)g(graph)f(for)h Fh(j)g
Fq(=)e(7,)h(and)h(so)f(on,)h(un)o(til)h(w)o(e)e(reac)o(h)h(the)g(graph)75
1573 y(for)g Fh(j)g Fq(=)d(15)j(whic)o(h)h(is)g(the)f(same)g(as)g(that)f(for)
h Fh(j)g Fq(=)e(1)i(\(see)g(Figure)g(72\).)562 2474 y @beginspecial
0 @llx 0 @lly 571 @urx 574 @ury 1982 @rwi @setspecial
%%BeginDocument: Par.ex5a.eps


/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /TDeps_dict 20 dict def TDeps_dict begin /showpage {
    
} def /copypage {
    
} def /grestoreall {
    
} def /erasepage {
    
} def /nulldevice {
    
} def /exitserver {
    
} def /initgraphics {
    
} def /renderbands {
    
} def /initmatrix {
    
} def /banddevice {
    
} def /setpageparams {
    
} def /framedevice {
    
} def /note {
    
} def end end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
gsave
0 0 571 574 rectclip
-19 -163 translate
19 163 571 574 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
gsave clpmt currentmatrix pop newpath
1 0 0 1.010638 -146 194.287262 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -146 197] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.454545 0.5 0.454545 [
[(-1)] 0.04545 0.5 0 2 Msboxa
[(-0.5)] 0.27273 0.5 0 2 Msboxa
[(0.5)] 0.72727 0.5 0 2 Msboxa
[(1)] 0.95455 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.0625)] 0.5 1 0 -2 Msboxa
grestore
[(-1)] 0.4875 0.04545 1 0 Msboxa
[(-0.5)] 0.4875 0.27273 1 0 Msboxa
[(0.5)] 0.4875 0.72727 1 0 Msboxa
[(1)] 0.4875 0.95455 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.04545 0.5 moveto
0.04545 0.50625 lineto
stroke
grestore
[(-1)] 0.04545 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.27273 0.5 moveto
0.27273 0.50625 lineto
stroke
grestore
[(-0.5)] 0.27273 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.72727 0.5 moveto
0.72727 0.50625 lineto
stroke
grestore
[(0.5)] 0.72727 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.95455 0.5 moveto
0.95455 0.50625 lineto
stroke
grestore
[(1)] 0.95455 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.09091 0.5 moveto
0.09091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.13636 0.5 moveto
0.13636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18182 0.5 moveto
0.18182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22727 0.5 moveto
0.22727 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31818 0.5 moveto
0.31818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36364 0.5 moveto
0.36364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40909 0.5 moveto
0.40909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45455 0.5 moveto
0.45455 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54545 0.5 moveto
0.54545 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59091 0.5 moveto
0.59091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63636 0.5 moveto
0.63636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.68182 0.5 moveto
0.68182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77273 0.5 moveto
0.77273 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81818 0.5 moveto
0.81818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.86364 0.5 moveto
0.86364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90909 0.5 moveto
0.90909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.5 moveto
0 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
1 0.5 moveto
1 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.0625)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.04545 moveto
0.50625 0.04545 lineto
stroke
grestore
[(-1)] 0.4875 0.04545 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.27273 moveto
0.50625 0.27273 lineto
stroke
grestore
[(-0.5)] 0.4875 0.27273 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.72727 moveto
0.50625 0.72727 lineto
stroke
grestore
[(0.5)] 0.4875 0.72727 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.95455 moveto
0.50625 0.95455 lineto
stroke
grestore
[(1)] 0.4875 0.95455 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.09091 moveto
0.50375 0.09091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13636 moveto
0.50375 0.13636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18182 moveto
0.50375 0.18182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22727 moveto
0.50375 0.22727 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31818 moveto
0.50375 0.31818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36364 moveto
0.50375 0.36364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40909 moveto
0.50375 0.40909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45455 moveto
0.50375 0.45455 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54545 moveto
0.50375 0.54545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59091 moveto
0.50375 0.59091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.63636 moveto
0.50375 0.63636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.68182 moveto
0.50375 0.68182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.77273 moveto
0.50375 0.77273 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.81818 moveto
0.50375 0.81818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.86364 moveto
0.50375 0.86364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90909 moveto
0.50375 0.90909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0 moveto
0.50375 0 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1 moveto
0.50375 1 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.95455 0.5 moveto
0.95453 0.5 lineto
0.95449 0.5 lineto
0.95442 0.5 lineto
0.95433 0.50001 lineto
0.95421 0.50002 lineto
0.95406 0.50003 lineto
0.95369 0.50006 lineto
0.95321 0.50012 lineto
0.95263 0.50021 lineto
0.95117 0.5005 lineto
0.94933 0.50098 lineto
0.94712 0.50167 lineto
0.94176 0.50389 lineto
0.93535 0.5074 lineto
0.92825 0.51239 lineto
0.91342 0.5271 lineto
0.90644 0.53675 lineto
0.90022 0.54773 lineto
0.89506 0.55979 lineto
0.89295 0.56614 lineto
0.89118 0.57264 lineto
0.88977 0.57925 lineto
0.8892 0.58258 lineto
0.88873 0.58592 lineto
0.88835 0.58927 lineto
0.88819 0.59094 lineto
0.88806 0.59261 lineto
0.88795 0.59428 lineto
0.88787 0.59594 lineto
0.88781 0.5976 lineto
0.88777 0.59926 lineto
0.88776 0.60091 lineto
0.88776 0.60256 lineto
0.88779 0.6042 lineto
0.88785 0.60583 lineto
0.88792 0.60745 lineto
0.88802 0.60907 lineto
0.88828 0.61227 lineto
0.88863 0.61542 lineto
0.88906 0.61853 lineto
0.89015 0.62458 lineto
0.89153 0.63038 lineto
0.89317 0.63589 lineto
0.89707 0.6459 lineto
0.90154 0.65442 lineto
0.90621 0.66135 lineto
0.9107 0.66663 lineto
0.91464 0.67035 lineto
0.91768 0.67264 lineto
Mistroke
0.91951 0.67374 lineto
0.9199 0.67393 lineto
0.91993 0.67394 lineto
0.91995 0.67395 lineto
0.91993 0.67394 lineto
0.9199 0.67393 lineto
0.91949 0.67379 lineto
0.91867 0.67355 lineto
0.91742 0.67327 lineto
0.91664 0.67312 lineto
0.91575 0.67298 lineto
0.91475 0.67285 lineto
0.91365 0.67274 lineto
0.91306 0.67269 lineto
0.91245 0.67265 lineto
0.91181 0.67262 lineto
0.91114 0.67259 lineto
0.91045 0.67258 lineto
0.90974 0.67257 lineto
0.909 0.67257 lineto
0.90824 0.67258 lineto
0.90745 0.67261 lineto
0.90664 0.67264 lineto
0.90581 0.67269 lineto
0.90496 0.67275 lineto
0.90318 0.67292 lineto
0.90132 0.67315 lineto
0.89737 0.6738 lineto
0.89313 0.67474 lineto
0.88864 0.676 lineto
0.87908 0.67958 lineto
0.86904 0.68466 lineto
0.85892 0.69129 lineto
0.84908 0.69942 lineto
0.83988 0.70892 lineto
0.83165 0.71957 lineto
0.82462 0.73109 lineto
0.819 0.74314 lineto
0.81675 0.74925 lineto
0.81487 0.75536 lineto
0.81338 0.76141 lineto
0.81277 0.7644 lineto
0.81226 0.76736 lineto
0.81183 0.77029 lineto
0.81149 0.77317 lineto
0.81135 0.77459 lineto
0.81124 0.776 lineto
0.81114 0.7774 lineto
0.81107 0.77878 lineto
0.81101 0.78015 lineto
Mistroke
0.81097 0.7815 lineto
0.81096 0.78284 lineto
0.81096 0.78416 lineto
0.81098 0.78546 lineto
0.81102 0.78675 lineto
0.81107 0.78801 lineto
0.81114 0.78926 lineto
0.81133 0.7917 lineto
0.81158 0.79406 lineto
0.81223 0.79852 lineto
0.81307 0.80261 lineto
0.81405 0.80632 lineto
0.81623 0.81251 lineto
0.81841 0.81703 lineto
0.82021 0.81991 lineto
0.82127 0.82126 lineto
0.82137 0.82137 lineto
0.8214 0.8214 lineto
0.82141 0.82141 lineto
0.8214 0.8214 lineto
0.82137 0.82137 lineto
0.82126 0.82127 lineto
0.81991 0.82021 lineto
0.81703 0.81841 lineto
0.81251 0.81623 lineto
0.80962 0.81512 lineto
0.80632 0.81405 lineto
0.80261 0.81307 lineto
0.79852 0.81223 lineto
0.79633 0.81188 lineto
0.79406 0.81158 lineto
0.7917 0.81133 lineto
0.79049 0.81123 lineto
0.78926 0.81114 lineto
0.78801 0.81107 lineto
0.78675 0.81102 lineto
0.78546 0.81098 lineto
0.78416 0.81096 lineto
0.78284 0.81096 lineto
0.7815 0.81097 lineto
0.78015 0.81101 lineto
0.77878 0.81107 lineto
0.7774 0.81114 lineto
0.776 0.81124 lineto
0.77317 0.81149 lineto
0.77029 0.81183 lineto
0.76736 0.81226 lineto
0.76141 0.81338 lineto
0.75536 0.81487 lineto
0.74314 0.819 lineto
Mistroke
0.73109 0.82462 lineto
0.71957 0.83165 lineto
0.69942 0.84908 lineto
0.69129 0.85892 lineto
0.68466 0.86904 lineto
0.67958 0.87908 lineto
0.67761 0.88394 lineto
0.676 0.88864 lineto
0.67474 0.89313 lineto
0.6738 0.89737 lineto
0.67344 0.89938 lineto
0.67315 0.90132 lineto
0.67292 0.90318 lineto
0.67283 0.90408 lineto
0.67275 0.90496 lineto
0.67269 0.90581 lineto
0.67264 0.90664 lineto
0.67261 0.90745 lineto
0.67258 0.90824 lineto
0.67257 0.909 lineto
0.67257 0.90974 lineto
0.67258 0.91045 lineto
0.67259 0.91114 lineto
0.67262 0.91181 lineto
0.67265 0.91245 lineto
0.67274 0.91365 lineto
0.67285 0.91475 lineto
0.67298 0.91575 lineto
0.67327 0.91742 lineto
0.67355 0.91867 lineto
0.67379 0.91949 lineto
0.67387 0.91974 lineto
0.67393 0.9199 lineto
0.67394 0.91993 lineto
0.67395 0.91995 lineto
0.67394 0.91993 lineto
0.67393 0.9199 lineto
0.67374 0.91951 lineto
0.67264 0.91768 lineto
0.67035 0.91464 lineto
0.66663 0.9107 lineto
0.66135 0.90621 lineto
0.65442 0.90154 lineto
0.6459 0.89707 lineto
0.64107 0.89503 lineto
0.63589 0.89317 lineto
0.63038 0.89153 lineto
0.62458 0.89015 lineto
0.62159 0.88956 lineto
0.61853 0.88906 lineto
Mistroke
0.61542 0.88863 lineto
0.61227 0.88828 lineto
0.60907 0.88802 lineto
0.60745 0.88792 lineto
0.60583 0.88785 lineto
0.6042 0.88779 lineto
0.60256 0.88776 lineto
0.60091 0.88776 lineto
0.59926 0.88777 lineto
0.5976 0.88781 lineto
0.59594 0.88787 lineto
0.59428 0.88795 lineto
0.59261 0.88806 lineto
0.58927 0.88835 lineto
0.58592 0.88873 lineto
0.57925 0.88977 lineto
0.57264 0.89118 lineto
0.55979 0.89506 lineto
0.54773 0.90022 lineto
0.53675 0.90644 lineto
0.5271 0.91342 lineto
0.51895 0.92081 lineto
0.51239 0.92825 lineto
0.5074 0.93535 lineto
0.50389 0.94176 lineto
0.50263 0.94459 lineto
0.50167 0.94712 lineto
0.50098 0.94933 lineto
0.5005 0.95117 lineto
0.50021 0.95263 lineto
0.50012 0.95321 lineto
0.50006 0.95369 lineto
0.50003 0.95406 lineto
0.50002 0.95421 lineto
0.50001 0.95433 lineto
0.5 0.95442 lineto
0.5 0.95449 lineto
0.5 0.95453 lineto
0.5 0.95455 lineto
0.5 0.95453 lineto
0.5 0.95449 lineto
0.5 0.95442 lineto
0.49999 0.95433 lineto
0.49997 0.95406 lineto
0.49994 0.95369 lineto
0.49988 0.95321 lineto
0.49979 0.95263 lineto
0.4995 0.95117 lineto
0.49902 0.94933 lineto
0.49833 0.94712 lineto
Mistroke
0.49611 0.94176 lineto
0.4926 0.93535 lineto
0.48761 0.92825 lineto
0.48105 0.92081 lineto
0.4729 0.91342 lineto
0.46325 0.90644 lineto
0.45227 0.90022 lineto
0.44021 0.89506 lineto
0.43386 0.89295 lineto
0.42736 0.89118 lineto
0.42075 0.88977 lineto
0.41742 0.8892 lineto
0.41408 0.88873 lineto
0.41073 0.88835 lineto
0.40906 0.88819 lineto
0.40739 0.88806 lineto
0.40572 0.88795 lineto
0.40406 0.88787 lineto
0.4024 0.88781 lineto
0.40074 0.88777 lineto
0.39909 0.88776 lineto
0.39744 0.88776 lineto
0.3958 0.88779 lineto
0.39417 0.88785 lineto
0.39255 0.88792 lineto
0.39093 0.88802 lineto
0.38773 0.88828 lineto
0.38458 0.88863 lineto
0.38147 0.88906 lineto
0.37542 0.89015 lineto
0.36962 0.89153 lineto
0.36411 0.89317 lineto
0.3541 0.89707 lineto
0.34558 0.90154 lineto
0.33865 0.90621 lineto
0.33337 0.9107 lineto
0.32965 0.91464 lineto
0.32736 0.91768 lineto
0.32626 0.91951 lineto
0.32614 0.91975 lineto
0.32607 0.9199 lineto
0.32606 0.91993 lineto
0.32605 0.91995 lineto
0.32606 0.91993 lineto
0.32607 0.9199 lineto
0.32621 0.91949 lineto
0.32645 0.91867 lineto
0.32673 0.91742 lineto
0.32702 0.91575 lineto
0.32715 0.91475 lineto
Mistroke
0.32726 0.91365 lineto
0.32731 0.91306 lineto
0.32735 0.91245 lineto
0.32738 0.91181 lineto
0.32741 0.91114 lineto
0.32742 0.91045 lineto
0.32743 0.90974 lineto
0.32743 0.909 lineto
0.32742 0.90824 lineto
0.32739 0.90745 lineto
0.32736 0.90664 lineto
0.32731 0.90581 lineto
0.32725 0.90496 lineto
0.32708 0.90318 lineto
0.32685 0.90132 lineto
0.3262 0.89737 lineto
0.32526 0.89313 lineto
0.324 0.88864 lineto
0.32042 0.87908 lineto
0.31534 0.86904 lineto
0.30871 0.85892 lineto
0.30058 0.84908 lineto
0.29108 0.83988 lineto
0.28043 0.83165 lineto
0.26891 0.82462 lineto
0.25686 0.819 lineto
0.25075 0.81675 lineto
0.24464 0.81487 lineto
0.23859 0.81338 lineto
0.2356 0.81277 lineto
0.23264 0.81226 lineto
0.22971 0.81183 lineto
0.22683 0.81149 lineto
0.22541 0.81135 lineto
0.224 0.81124 lineto
0.2226 0.81114 lineto
0.22122 0.81107 lineto
0.21985 0.81101 lineto
0.2185 0.81097 lineto
0.21716 0.81096 lineto
0.21584 0.81096 lineto
0.21454 0.81098 lineto
0.21325 0.81102 lineto
0.21199 0.81107 lineto
0.21074 0.81114 lineto
0.2083 0.81133 lineto
0.20594 0.81158 lineto
0.20148 0.81223 lineto
0.19739 0.81307 lineto
0.19368 0.81405 lineto
Mistroke
0.18749 0.81623 lineto
0.18297 0.81841 lineto
0.18009 0.82021 lineto
0.17924 0.82085 lineto
0.17874 0.82127 lineto
0.17863 0.82137 lineto
0.1786 0.8214 lineto
0.17859 0.82141 lineto
0.1786 0.8214 lineto
0.17863 0.82137 lineto
0.17873 0.82126 lineto
0.17979 0.81991 lineto
0.18159 0.81703 lineto
0.18377 0.81251 lineto
0.18488 0.80962 lineto
0.18595 0.80632 lineto
0.18693 0.80261 lineto
0.18777 0.79852 lineto
0.18812 0.79633 lineto
0.18842 0.79406 lineto
0.18867 0.7917 lineto
0.18877 0.79049 lineto
0.18886 0.78926 lineto
0.18893 0.78801 lineto
0.18898 0.78675 lineto
0.18902 0.78546 lineto
0.18904 0.78416 lineto
0.18904 0.78284 lineto
0.18903 0.7815 lineto
0.18899 0.78015 lineto
0.18893 0.77878 lineto
0.18876 0.776 lineto
0.18865 0.77459 lineto
0.18851 0.77317 lineto
0.18817 0.77029 lineto
0.18774 0.76736 lineto
0.18662 0.76141 lineto
0.18513 0.75536 lineto
0.181 0.74314 lineto
0.17538 0.73109 lineto
0.16835 0.71957 lineto
0.16012 0.70892 lineto
0.15092 0.69942 lineto
0.14108 0.69129 lineto
0.13096 0.68466 lineto
0.12092 0.67958 lineto
0.11606 0.67761 lineto
0.11136 0.676 lineto
0.10687 0.67474 lineto
0.10263 0.6738 lineto
Mistroke
0.09868 0.67315 lineto
0.09682 0.67292 lineto
0.09592 0.67283 lineto
0.09504 0.67275 lineto
0.09419 0.67269 lineto
0.09336 0.67264 lineto
0.09255 0.67261 lineto
0.09176 0.67258 lineto
0.091 0.67257 lineto
0.09026 0.67257 lineto
0.08955 0.67258 lineto
0.08886 0.67259 lineto
0.08819 0.67262 lineto
0.08755 0.67265 lineto
0.08635 0.67274 lineto
0.08525 0.67285 lineto
0.08425 0.67298 lineto
0.08258 0.67327 lineto
0.08133 0.67355 lineto
0.08051 0.67379 lineto
0.08026 0.67387 lineto
0.0801 0.67393 lineto
0.08007 0.67394 lineto
0.08005 0.67395 lineto
0.0801 0.67393 lineto
0.08049 0.67374 lineto
0.08232 0.67264 lineto
0.08536 0.67035 lineto
0.0893 0.66663 lineto
0.09379 0.66135 lineto
0.09846 0.65442 lineto
0.10293 0.6459 lineto
0.10497 0.64107 lineto
0.10683 0.63589 lineto
0.10847 0.63038 lineto
0.10985 0.62458 lineto
0.11094 0.61853 lineto
0.11137 0.61542 lineto
0.11172 0.61227 lineto
0.11198 0.60907 lineto
0.11208 0.60745 lineto
0.11215 0.60583 lineto
0.11221 0.6042 lineto
0.11224 0.60256 lineto
0.11224 0.60091 lineto
0.11223 0.59926 lineto
0.11219 0.5976 lineto
0.11213 0.59594 lineto
0.11194 0.59261 lineto
0.11181 0.59094 lineto
Mistroke
0.11165 0.58927 lineto
0.11127 0.58592 lineto
0.11023 0.57925 lineto
0.10882 0.57264 lineto
0.10494 0.55979 lineto
0.09978 0.54773 lineto
0.09356 0.53675 lineto
0.08658 0.5271 lineto
0.07919 0.51895 lineto
0.07175 0.51239 lineto
0.06465 0.5074 lineto
0.05824 0.50389 lineto
0.05541 0.50263 lineto
0.05288 0.50167 lineto
0.05067 0.50098 lineto
0.04883 0.5005 lineto
0.04737 0.50021 lineto
0.04679 0.50012 lineto
0.04631 0.50006 lineto
0.04594 0.50003 lineto
0.04579 0.50002 lineto
0.04567 0.50001 lineto
0.04558 0.5 lineto
0.04551 0.5 lineto
0.04547 0.5 lineto
0.04545 0.5 lineto
0.04547 0.5 lineto
0.04551 0.5 lineto
0.04558 0.5 lineto
0.04567 0.49999 lineto
0.04594 0.49997 lineto
0.04631 0.49994 lineto
0.04679 0.49988 lineto
0.04737 0.49979 lineto
0.04883 0.4995 lineto
0.05067 0.49902 lineto
0.05288 0.49833 lineto
0.05824 0.49611 lineto
0.06465 0.4926 lineto
0.07175 0.48761 lineto
0.07919 0.48105 lineto
0.08658 0.4729 lineto
0.09356 0.46325 lineto
0.09978 0.45227 lineto
0.10494 0.44021 lineto
0.10705 0.43386 lineto
0.10882 0.42736 lineto
0.11023 0.42075 lineto
0.1108 0.41742 lineto
0.11127 0.41408 lineto
Mistroke
0.11165 0.41073 lineto
0.11181 0.40906 lineto
0.11194 0.40739 lineto
0.11205 0.40572 lineto
0.11213 0.40406 lineto
0.11219 0.4024 lineto
0.11223 0.40074 lineto
0.11224 0.39909 lineto
0.11224 0.39744 lineto
0.11221 0.3958 lineto
0.11215 0.39417 lineto
0.11208 0.39255 lineto
0.11198 0.39093 lineto
0.11172 0.38773 lineto
0.11137 0.38458 lineto
0.11094 0.38147 lineto
0.10985 0.37542 lineto
0.10847 0.36962 lineto
0.10683 0.36411 lineto
0.10293 0.3541 lineto
0.09846 0.34558 lineto
0.09379 0.33865 lineto
0.08536 0.32965 lineto
0.08232 0.32736 lineto
0.08049 0.32626 lineto
0.0801 0.32607 lineto
0.08007 0.32606 lineto
0.08005 0.32605 lineto
0.0801 0.32607 lineto
0.08051 0.32621 lineto
0.08133 0.32645 lineto
0.08258 0.32673 lineto
0.08336 0.32688 lineto
0.08425 0.32702 lineto
0.08525 0.32715 lineto
0.08635 0.32726 lineto
0.08694 0.32731 lineto
0.08755 0.32735 lineto
0.08819 0.32738 lineto
0.08886 0.32741 lineto
0.08955 0.32742 lineto
0.09026 0.32743 lineto
0.091 0.32743 lineto
0.09176 0.32742 lineto
0.09255 0.32739 lineto
0.09336 0.32736 lineto
0.09419 0.32731 lineto
0.09504 0.32725 lineto
0.09682 0.32708 lineto
0.09868 0.32685 lineto
Mistroke
0.10263 0.3262 lineto
0.10687 0.32526 lineto
0.11136 0.324 lineto
0.12092 0.32042 lineto
0.13096 0.31534 lineto
0.14108 0.30871 lineto
0.15092 0.30058 lineto
0.16012 0.29108 lineto
0.16835 0.28043 lineto
0.17538 0.26891 lineto
0.181 0.25686 lineto
0.18325 0.25075 lineto
0.18513 0.24464 lineto
0.18662 0.23859 lineto
0.18723 0.2356 lineto
0.18774 0.23264 lineto
0.18817 0.22971 lineto
0.18851 0.22683 lineto
0.18865 0.22541 lineto
0.18876 0.224 lineto
0.18886 0.2226 lineto
0.18893 0.22122 lineto
0.18899 0.21985 lineto
0.18903 0.2185 lineto
0.18904 0.21716 lineto
0.18904 0.21584 lineto
0.18902 0.21454 lineto
0.18898 0.21325 lineto
0.18893 0.21199 lineto
0.18886 0.21074 lineto
0.18867 0.2083 lineto
0.18842 0.20594 lineto
0.18777 0.20148 lineto
0.18693 0.19739 lineto
0.18595 0.19368 lineto
0.18377 0.18749 lineto
0.18159 0.18297 lineto
0.17979 0.18009 lineto
0.17915 0.17924 lineto
0.17873 0.17874 lineto
0.17863 0.17863 lineto
0.1786 0.1786 lineto
0.17859 0.17859 lineto
0.1786 0.1786 lineto
0.17863 0.17863 lineto
0.17874 0.17873 lineto
0.18009 0.17979 lineto
0.18297 0.18159 lineto
0.18749 0.18377 lineto
0.19038 0.18488 lineto
Mistroke
0.19368 0.18595 lineto
0.19739 0.18693 lineto
0.20148 0.18777 lineto
0.20594 0.18842 lineto
0.2083 0.18867 lineto
0.20951 0.18877 lineto
0.21074 0.18886 lineto
0.21199 0.18893 lineto
0.21325 0.18898 lineto
0.21454 0.18902 lineto
0.21584 0.18904 lineto
0.21716 0.18904 lineto
0.2185 0.18903 lineto
0.21985 0.18899 lineto
0.22122 0.18893 lineto
0.2226 0.18886 lineto
0.224 0.18876 lineto
0.22683 0.18851 lineto
0.22971 0.18817 lineto
0.23264 0.18774 lineto
0.23859 0.18662 lineto
0.24464 0.18513 lineto
0.25686 0.181 lineto
0.26891 0.17538 lineto
0.28043 0.16835 lineto
0.30058 0.15092 lineto
0.30871 0.14108 lineto
0.31534 0.13096 lineto
0.32042 0.12092 lineto
0.32239 0.11606 lineto
0.324 0.11136 lineto
0.32526 0.10687 lineto
0.3262 0.10263 lineto
0.32656 0.10062 lineto
0.32685 0.09868 lineto
0.32708 0.09682 lineto
0.32717 0.09592 lineto
0.32725 0.09504 lineto
0.32731 0.09419 lineto
0.32736 0.09336 lineto
0.32739 0.09255 lineto
0.32742 0.09176 lineto
0.32743 0.091 lineto
0.32743 0.09026 lineto
0.32742 0.08955 lineto
0.32741 0.08886 lineto
0.32738 0.08819 lineto
0.32735 0.08755 lineto
0.32726 0.08635 lineto
0.32715 0.08525 lineto
Mistroke
0.32702 0.08425 lineto
0.32673 0.08258 lineto
0.32645 0.08133 lineto
0.32621 0.08051 lineto
0.32613 0.08026 lineto
0.32607 0.0801 lineto
0.32606 0.08007 lineto
0.32605 0.08005 lineto
0.32606 0.08007 lineto
0.32607 0.0801 lineto
0.32626 0.08049 lineto
0.32736 0.08232 lineto
0.32965 0.08536 lineto
0.33337 0.0893 lineto
0.33865 0.09379 lineto
0.34558 0.09846 lineto
0.3541 0.10293 lineto
0.35893 0.10497 lineto
0.36411 0.10683 lineto
0.36962 0.10847 lineto
0.37542 0.10985 lineto
0.37841 0.11044 lineto
0.38147 0.11094 lineto
0.38458 0.11137 lineto
0.38773 0.11172 lineto
0.39093 0.11198 lineto
0.39255 0.11208 lineto
0.39417 0.11215 lineto
0.3958 0.11221 lineto
0.39744 0.11224 lineto
0.39909 0.11224 lineto
0.40074 0.11223 lineto
0.4024 0.11219 lineto
0.40406 0.11213 lineto
0.40572 0.11205 lineto
0.40739 0.11194 lineto
0.41073 0.11165 lineto
0.41408 0.11127 lineto
0.42075 0.11023 lineto
0.42736 0.10882 lineto
0.44021 0.10494 lineto
0.45227 0.09978 lineto
0.46325 0.09356 lineto
0.4729 0.08658 lineto
0.48105 0.07919 lineto
0.48761 0.07175 lineto
0.4926 0.06465 lineto
0.49611 0.05824 lineto
0.49833 0.05288 lineto
0.49902 0.05067 lineto
Mistroke
0.4995 0.04883 lineto
0.49979 0.04737 lineto
0.49988 0.04679 lineto
0.49994 0.04631 lineto
0.49997 0.04594 lineto
0.49998 0.04579 lineto
0.49999 0.04567 lineto
0.5 0.04558 lineto
0.5 0.04551 lineto
0.5 0.04547 lineto
0.5 0.04545 lineto
0.5 0.04547 lineto
0.5 0.04551 lineto
0.5 0.04558 lineto
0.50001 0.04567 lineto
0.50003 0.04594 lineto
0.50006 0.04631 lineto
0.50012 0.04679 lineto
0.50021 0.04737 lineto
0.5005 0.04883 lineto
0.50098 0.05067 lineto
0.50167 0.05288 lineto
0.50389 0.05824 lineto
0.5074 0.06465 lineto
0.51239 0.07175 lineto
0.51895 0.07919 lineto
0.5271 0.08658 lineto
0.53675 0.09356 lineto
0.54773 0.09978 lineto
0.55979 0.10494 lineto
0.56614 0.10705 lineto
0.57264 0.10882 lineto
0.57925 0.11023 lineto
0.58258 0.1108 lineto
0.58592 0.11127 lineto
0.58927 0.11165 lineto
0.59094 0.11181 lineto
0.59261 0.11194 lineto
0.59428 0.11205 lineto
0.59594 0.11213 lineto
0.5976 0.11219 lineto
0.59926 0.11223 lineto
0.60091 0.11224 lineto
0.60256 0.11224 lineto
0.6042 0.11221 lineto
0.60583 0.11215 lineto
0.60907 0.11198 lineto
0.61067 0.11186 lineto
0.61227 0.11172 lineto
0.61853 0.11094 lineto
Mistroke
0.62159 0.11044 lineto
0.62458 0.10985 lineto
0.63038 0.10847 lineto
0.63589 0.10683 lineto
0.6459 0.10293 lineto
0.65442 0.09846 lineto
0.66135 0.09379 lineto
0.66663 0.0893 lineto
0.67035 0.08536 lineto
0.67264 0.08232 lineto
0.67374 0.08049 lineto
0.67386 0.08025 lineto
0.67393 0.0801 lineto
0.67394 0.08007 lineto
0.67395 0.08005 lineto
0.67393 0.0801 lineto
0.67379 0.08051 lineto
0.67355 0.08133 lineto
0.67327 0.08258 lineto
0.67312 0.08336 lineto
0.67298 0.08425 lineto
0.67285 0.08525 lineto
0.67274 0.08635 lineto
0.67269 0.08694 lineto
0.67265 0.08755 lineto
0.67262 0.08819 lineto
0.67259 0.08886 lineto
0.67258 0.08955 lineto
0.67257 0.09026 lineto
0.67257 0.091 lineto
0.67258 0.09176 lineto
0.67261 0.09255 lineto
0.67264 0.09336 lineto
0.67269 0.09419 lineto
0.67275 0.09504 lineto
0.67315 0.09868 lineto
0.67344 0.10062 lineto
0.6738 0.10263 lineto
0.67474 0.10687 lineto
0.676 0.11136 lineto
0.67958 0.12092 lineto
0.68466 0.13096 lineto
0.69129 0.14108 lineto
0.69942 0.15092 lineto
0.70892 0.16012 lineto
0.71957 0.16835 lineto
0.73109 0.17538 lineto
0.74314 0.181 lineto
0.74925 0.18325 lineto
0.75536 0.18513 lineto
Mistroke
0.76141 0.18662 lineto
0.7644 0.18723 lineto
0.76736 0.18774 lineto
0.77029 0.18817 lineto
0.77317 0.18851 lineto
0.77459 0.18865 lineto
0.776 0.18876 lineto
0.7774 0.18886 lineto
0.77878 0.18893 lineto
0.78015 0.18899 lineto
0.7815 0.18903 lineto
0.78284 0.18904 lineto
0.78416 0.18904 lineto
0.78546 0.18902 lineto
0.78675 0.18898 lineto
0.78801 0.18893 lineto
0.78926 0.18886 lineto
0.7917 0.18867 lineto
0.79406 0.18842 lineto
0.79633 0.18812 lineto
0.79852 0.18777 lineto
0.80261 0.18693 lineto
0.80632 0.18595 lineto
0.81251 0.18377 lineto
0.81703 0.18159 lineto
0.81991 0.17979 lineto
0.82076 0.17915 lineto
0.82126 0.17873 lineto
0.82137 0.17863 lineto
0.8214 0.1786 lineto
0.82141 0.17859 lineto
0.82137 0.17863 lineto
0.82127 0.17874 lineto
0.82021 0.18009 lineto
0.81841 0.18297 lineto
0.81623 0.18749 lineto
0.81405 0.19368 lineto
0.81307 0.19739 lineto
0.81223 0.20148 lineto
0.81158 0.20594 lineto
0.81133 0.2083 lineto
0.81123 0.20951 lineto
0.81114 0.21074 lineto
0.81107 0.21199 lineto
0.81102 0.21325 lineto
0.81098 0.21454 lineto
0.81096 0.21584 lineto
0.81096 0.21716 lineto
0.81097 0.2185 lineto
0.81101 0.21985 lineto
Mistroke
0.81107 0.22122 lineto
0.81114 0.2226 lineto
0.81124 0.224 lineto
0.81149 0.22683 lineto
0.81183 0.22971 lineto
0.81226 0.23264 lineto
0.81338 0.23859 lineto
0.81487 0.24464 lineto
0.819 0.25686 lineto
0.82462 0.26891 lineto
0.83165 0.28043 lineto
0.83988 0.29108 lineto
0.84908 0.30058 lineto
0.85892 0.30871 lineto
0.86904 0.31534 lineto
0.87908 0.32042 lineto
0.88864 0.324 lineto
0.89313 0.32526 lineto
0.89737 0.3262 lineto
0.90132 0.32685 lineto
0.90318 0.32708 lineto
0.90408 0.32717 lineto
0.90496 0.32725 lineto
0.90581 0.32731 lineto
0.90664 0.32736 lineto
0.90745 0.32739 lineto
0.90824 0.32742 lineto
0.909 0.32743 lineto
0.90974 0.32743 lineto
0.91045 0.32742 lineto
0.91114 0.32741 lineto
0.91181 0.32738 lineto
0.91245 0.32735 lineto
0.91365 0.32726 lineto
0.91475 0.32715 lineto
0.91575 0.32702 lineto
0.91742 0.32673 lineto
0.91867 0.32645 lineto
0.91949 0.32621 lineto
0.9199 0.32607 lineto
0.91993 0.32606 lineto
0.91995 0.32605 lineto
0.9199 0.32607 lineto
0.91951 0.32626 lineto
0.91768 0.32736 lineto
0.91464 0.32965 lineto
0.9107 0.33337 lineto
0.90621 0.33865 lineto
0.90154 0.34558 lineto
0.89707 0.3541 lineto
Mistroke
0.89317 0.36411 lineto
0.89153 0.36962 lineto
0.89015 0.37542 lineto
0.88906 0.38147 lineto
0.88863 0.38458 lineto
0.88828 0.38773 lineto
0.88802 0.39093 lineto
0.88792 0.39255 lineto
0.88785 0.39417 lineto
0.88779 0.3958 lineto
0.88776 0.39744 lineto
0.88776 0.39909 lineto
0.88777 0.40074 lineto
0.88781 0.4024 lineto
0.88787 0.40406 lineto
0.88795 0.40572 lineto
0.88806 0.40739 lineto
0.88835 0.41073 lineto
0.88873 0.41408 lineto
0.88977 0.42075 lineto
0.89118 0.42736 lineto
0.89506 0.44021 lineto
0.90022 0.45227 lineto
0.90644 0.46325 lineto
0.91342 0.4729 lineto
0.92081 0.48105 lineto
0.92825 0.48761 lineto
0.93535 0.4926 lineto
0.94176 0.49611 lineto
0.94712 0.49833 lineto
0.94933 0.49902 lineto
0.95117 0.4995 lineto
0.95263 0.49979 lineto
0.95321 0.49988 lineto
0.95369 0.49994 lineto
0.95406 0.49997 lineto
0.95421 0.49998 lineto
0.95433 0.49999 lineto
0.95442 0.5 lineto
0.95449 0.5 lineto
0.95453 0.5 lineto
0.95455 0.5 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1.010638 -146 194.287262 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.010638 142 194.287262 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 142 197] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.454545 0.5 0.454545 [
[(-1)] 0.04545 0.5 0 2 Msboxa
[(-0.5)] 0.27273 0.5 0 2 Msboxa
[(0.5)] 0.72727 0.5 0 2 Msboxa
[(1)] 0.95455 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.1875)] 0.5 1 0 -2 Msboxa
grestore
[(-1)] 0.4875 0.04545 1 0 Msboxa
[(-0.5)] 0.4875 0.27273 1 0 Msboxa
[(0.5)] 0.4875 0.72727 1 0 Msboxa
[(1)] 0.4875 0.95455 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.04545 0.5 moveto
0.04545 0.50625 lineto
stroke
grestore
[(-1)] 0.04545 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.27273 0.5 moveto
0.27273 0.50625 lineto
stroke
grestore
[(-0.5)] 0.27273 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.72727 0.5 moveto
0.72727 0.50625 lineto
stroke
grestore
[(0.5)] 0.72727 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.95455 0.5 moveto
0.95455 0.50625 lineto
stroke
grestore
[(1)] 0.95455 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.09091 0.5 moveto
0.09091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.13636 0.5 moveto
0.13636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18182 0.5 moveto
0.18182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22727 0.5 moveto
0.22727 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31818 0.5 moveto
0.31818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36364 0.5 moveto
0.36364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40909 0.5 moveto
0.40909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45455 0.5 moveto
0.45455 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54545 0.5 moveto
0.54545 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59091 0.5 moveto
0.59091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63636 0.5 moveto
0.63636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.68182 0.5 moveto
0.68182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77273 0.5 moveto
0.77273 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81818 0.5 moveto
0.81818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.86364 0.5 moveto
0.86364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90909 0.5 moveto
0.90909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.5 moveto
0 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
1 0.5 moveto
1 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.1875)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.04545 moveto
0.50625 0.04545 lineto
stroke
grestore
[(-1)] 0.4875 0.04545 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.27273 moveto
0.50625 0.27273 lineto
stroke
grestore
[(-0.5)] 0.4875 0.27273 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.72727 moveto
0.50625 0.72727 lineto
stroke
grestore
[(0.5)] 0.4875 0.72727 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.95455 moveto
0.50625 0.95455 lineto
stroke
grestore
[(1)] 0.4875 0.95455 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.09091 moveto
0.50375 0.09091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13636 moveto
0.50375 0.13636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18182 moveto
0.50375 0.18182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22727 moveto
0.50375 0.22727 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31818 moveto
0.50375 0.31818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36364 moveto
0.50375 0.36364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40909 moveto
0.50375 0.40909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45455 moveto
0.50375 0.45455 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54545 moveto
0.50375 0.54545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59091 moveto
0.50375 0.59091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.63636 moveto
0.50375 0.63636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.68182 moveto
0.50375 0.68182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.77273 moveto
0.50375 0.77273 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.81818 moveto
0.50375 0.81818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.86364 moveto
0.50375 0.86364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90909 moveto
0.50375 0.90909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0 moveto
0.50375 0 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1 moveto
0.50375 1 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.95455 0.5 moveto
0.95451 0.5 lineto
0.95441 0.5 lineto
0.95423 0.50001 lineto
0.95399 0.50001 lineto
0.95367 0.50003 lineto
0.95329 0.50005 lineto
0.95232 0.50012 lineto
0.95107 0.50023 lineto
0.94956 0.5004 lineto
0.94572 0.50094 lineto
0.94085 0.50182 lineto
0.93498 0.50312 lineto
0.92047 0.50729 lineto
0.90269 0.51395 lineto
0.88223 0.52351 lineto
0.83611 0.5523 lineto
0.78801 0.59411 lineto
0.7437 0.64698 lineto
0.72447 0.67638 lineto
0.70781 0.70689 lineto
0.69398 0.7378 lineto
0.68313 0.76832 lineto
0.67524 0.7977 lineto
0.67237 0.81173 lineto
0.67015 0.82519 lineto
0.66929 0.83168 lineto
0.66857 0.838 lineto
0.66799 0.84414 lineto
0.66756 0.85009 lineto
0.66739 0.85299 lineto
0.66725 0.85584 lineto
0.66714 0.85863 lineto
0.66706 0.86137 lineto
0.66701 0.86406 lineto
0.66699 0.8667 lineto
0.66699 0.86927 lineto
0.66702 0.8718 lineto
0.66707 0.87426 lineto
0.66714 0.87666 lineto
0.66724 0.87901 lineto
0.66735 0.88129 lineto
0.66799 0.88981 lineto
0.6684 0.89369 lineto
0.66886 0.89732 lineto
0.66986 0.90377 lineto
0.67194 0.91345 lineto
0.67351 0.91877 lineto
0.6739 0.91982 lineto
0.67393 0.91991 lineto
Mistroke
0.67395 0.91995 lineto
0.67389 0.91982 lineto
0.67241 0.91683 lineto
0.66155 0.90034 lineto
0.6374 0.87366 lineto
0.59854 0.84231 lineto
0.54594 0.81207 lineto
0.51543 0.79901 lineto
0.48285 0.78803 lineto
0.46599 0.78345 lineto
0.44888 0.77951 lineto
0.43161 0.77625 lineto
0.41428 0.77369 lineto
0.40562 0.77267 lineto
0.39699 0.77183 lineto
0.38838 0.77116 lineto
0.38409 0.7709 lineto
0.37982 0.77067 lineto
0.37556 0.77049 lineto
0.37132 0.77035 lineto
0.36709 0.77025 lineto
0.36289 0.7702 lineto
0.3587 0.77019 lineto
0.35454 0.77022 lineto
0.3504 0.77029 lineto
0.34628 0.7704 lineto
0.33813 0.77074 lineto
0.33409 0.77096 lineto
0.33009 0.77123 lineto
0.32218 0.77187 lineto
0.31441 0.77266 lineto
0.29932 0.77465 lineto
0.2849 0.77713 lineto
0.25835 0.78333 lineto
0.23525 0.79069 lineto
0.21597 0.79856 lineto
0.20072 0.80624 lineto
0.1824 0.81817 lineto
0.17899 0.82103 lineto
0.17869 0.82131 lineto
0.17861 0.82139 lineto
0.17859 0.82141 lineto
0.17869 0.82131 lineto
0.17897 0.82101 lineto
0.18699 0.81044 lineto
0.19376 0.79928 lineto
0.20144 0.78403 lineto
0.20931 0.76475 lineto
0.21667 0.74165 lineto
0.21995 0.72878 lineto
Mistroke
0.22287 0.7151 lineto
0.22535 0.70068 lineto
0.22641 0.69322 lineto
0.22734 0.68559 lineto
0.22813 0.67782 lineto
0.22877 0.66991 lineto
0.22904 0.66591 lineto
0.22926 0.66187 lineto
0.22945 0.65781 lineto
0.2296 0.65372 lineto
0.22971 0.6496 lineto
0.22978 0.64546 lineto
0.22981 0.6413 lineto
0.2298 0.63711 lineto
0.22975 0.63291 lineto
0.22965 0.62868 lineto
0.22951 0.62444 lineto
0.22933 0.62018 lineto
0.22884 0.61162 lineto
0.22817 0.60301 lineto
0.22631 0.58572 lineto
0.22375 0.56839 lineto
0.22049 0.55112 lineto
0.21197 0.51715 lineto
0.20099 0.48457 lineto
0.18793 0.45406 lineto
0.1733 0.42619 lineto
0.1418 0.38019 lineto
0.11205 0.34872 lineto
0.08983 0.33154 lineto
0.08317 0.32759 lineto
0.08119 0.32658 lineto
0.08056 0.32628 lineto
0.08018 0.32611 lineto
0.08009 0.32607 lineto
0.08005 0.32605 lineto
0.08009 0.32607 lineto
0.08018 0.3261 lineto
0.08123 0.32649 lineto
0.08655 0.32806 lineto
0.09085 0.32908 lineto
0.09623 0.33014 lineto
0.10268 0.33114 lineto
0.10631 0.3316 lineto
0.11019 0.33201 lineto
0.11432 0.33236 lineto
0.11649 0.33251 lineto
0.11871 0.33265 lineto
0.12099 0.33276 lineto
0.12334 0.33286 lineto
Mistroke
0.12574 0.33293 lineto
0.1282 0.33298 lineto
0.13073 0.33301 lineto
0.1333 0.33301 lineto
0.13594 0.33299 lineto
0.13863 0.33294 lineto
0.14137 0.33286 lineto
0.14416 0.33275 lineto
0.14991 0.33244 lineto
0.15586 0.33201 lineto
0.162 0.33143 lineto
0.17481 0.32985 lineto
0.18827 0.32763 lineto
0.2023 0.32476 lineto
0.23168 0.31687 lineto
0.2622 0.30602 lineto
0.29311 0.29219 lineto
0.32362 0.27553 lineto
0.38063 0.23494 lineto
0.42835 0.18807 lineto
0.4477 0.16389 lineto
0.46375 0.1402 lineto
0.47649 0.11777 lineto
0.48605 0.09731 lineto
0.49271 0.07953 lineto
0.49688 0.06502 lineto
0.49818 0.05915 lineto
0.49906 0.05428 lineto
0.4996 0.05044 lineto
0.49977 0.04893 lineto
0.49988 0.04768 lineto
0.49995 0.04671 lineto
0.49997 0.04633 lineto
0.49999 0.04601 lineto
0.49999 0.04577 lineto
0.5 0.04559 lineto
0.5 0.04549 lineto
0.5 0.04545 lineto
0.5 0.04549 lineto
0.5 0.04559 lineto
0.50001 0.04577 lineto
0.50001 0.04601 lineto
0.50005 0.04671 lineto
0.50012 0.04768 lineto
0.50023 0.04893 lineto
0.5004 0.05044 lineto
0.50094 0.05428 lineto
0.50182 0.05915 lineto
0.50312 0.06502 lineto
0.50729 0.07953 lineto
Mistroke
0.51395 0.09731 lineto
0.52351 0.11777 lineto
0.53625 0.1402 lineto
0.57165 0.18807 lineto
0.61937 0.23494 lineto
0.64698 0.2563 lineto
0.67638 0.27553 lineto
0.70689 0.29219 lineto
0.7378 0.30602 lineto
0.76832 0.31687 lineto
0.78321 0.32118 lineto
0.7977 0.32476 lineto
0.81173 0.32763 lineto
0.82519 0.32985 lineto
0.83168 0.33071 lineto
0.838 0.33143 lineto
0.84414 0.33201 lineto
0.85009 0.33244 lineto
0.85299 0.33261 lineto
0.85584 0.33275 lineto
0.85863 0.33286 lineto
0.86137 0.33294 lineto
0.86406 0.33299 lineto
0.8667 0.33301 lineto
0.86927 0.33301 lineto
0.8718 0.33298 lineto
0.87426 0.33293 lineto
0.87666 0.33286 lineto
0.87901 0.33276 lineto
0.88129 0.33265 lineto
0.88568 0.33236 lineto
0.88981 0.33201 lineto
0.89732 0.33114 lineto
0.90377 0.33014 lineto
0.91345 0.32806 lineto
0.91877 0.32649 lineto
0.91942 0.32625 lineto
0.91982 0.3261 lineto
0.91991 0.32607 lineto
0.91995 0.32605 lineto
0.91982 0.32611 lineto
0.91683 0.32759 lineto
0.91017 0.33154 lineto
0.88795 0.34872 lineto
0.8582 0.38019 lineto
0.84231 0.40146 lineto
0.8267 0.42619 lineto
0.81207 0.45406 lineto
0.79901 0.48457 lineto
0.78803 0.51715 lineto
Mistroke
0.78345 0.53401 lineto
0.77951 0.55112 lineto
0.77625 0.56839 lineto
0.77369 0.58572 lineto
0.77267 0.59438 lineto
0.77183 0.60301 lineto
0.77116 0.61162 lineto
0.7709 0.61591 lineto
0.77067 0.62018 lineto
0.77049 0.62444 lineto
0.77035 0.62868 lineto
0.77025 0.63291 lineto
0.7702 0.63711 lineto
0.77019 0.6413 lineto
0.77022 0.64546 lineto
0.77029 0.6496 lineto
0.7704 0.65372 lineto
0.77055 0.65781 lineto
0.77074 0.66187 lineto
0.77123 0.66991 lineto
0.77187 0.67782 lineto
0.77266 0.68559 lineto
0.77465 0.70068 lineto
0.77713 0.7151 lineto
0.78333 0.74165 lineto
0.79069 0.76475 lineto
0.79856 0.78403 lineto
0.81301 0.81044 lineto
0.81817 0.8176 lineto
0.81992 0.81976 lineto
0.82103 0.82101 lineto
0.82131 0.82131 lineto
0.82139 0.82139 lineto
0.82141 0.82141 lineto
0.82131 0.82131 lineto
0.82101 0.82103 lineto
0.8176 0.81817 lineto
0.81044 0.81301 lineto
0.79928 0.80624 lineto
0.78403 0.79856 lineto
0.76475 0.79069 lineto
0.74165 0.78333 lineto
0.72878 0.78005 lineto
0.7151 0.77713 lineto
0.70068 0.77465 lineto
0.69322 0.77359 lineto
0.68559 0.77266 lineto
0.67782 0.77187 lineto
0.66991 0.77123 lineto
0.66591 0.77096 lineto
Mistroke
0.66187 0.77074 lineto
0.65781 0.77055 lineto
0.65372 0.7704 lineto
0.6496 0.77029 lineto
0.64546 0.77022 lineto
0.6413 0.77019 lineto
0.63711 0.7702 lineto
0.63291 0.77025 lineto
0.62868 0.77035 lineto
0.62444 0.77049 lineto
0.62018 0.77067 lineto
0.61162 0.77116 lineto
0.60301 0.77183 lineto
0.58572 0.77369 lineto
0.56839 0.77625 lineto
0.55112 0.77951 lineto
0.51715 0.78803 lineto
0.48457 0.79901 lineto
0.45406 0.81207 lineto
0.40146 0.84231 lineto
0.3626 0.87366 lineto
0.33845 0.90034 lineto
0.32759 0.91683 lineto
0.32658 0.91881 lineto
0.32628 0.91944 lineto
0.32611 0.91982 lineto
0.32607 0.91991 lineto
0.32605 0.91995 lineto
0.3261 0.91982 lineto
0.32649 0.91877 lineto
0.32806 0.91345 lineto
0.33014 0.90377 lineto
0.33114 0.89732 lineto
0.3316 0.89369 lineto
0.33201 0.88981 lineto
0.33236 0.88568 lineto
0.33251 0.88351 lineto
0.33265 0.88129 lineto
0.33276 0.87901 lineto
0.33286 0.87666 lineto
0.33293 0.87426 lineto
0.33298 0.8718 lineto
0.33301 0.86927 lineto
0.33301 0.8667 lineto
0.33299 0.86406 lineto
0.33294 0.86137 lineto
0.33286 0.85863 lineto
0.33275 0.85584 lineto
0.33244 0.85009 lineto
0.33201 0.84414 lineto
Mistroke
0.33143 0.838 lineto
0.32985 0.82519 lineto
0.32763 0.81173 lineto
0.32476 0.7977 lineto
0.31687 0.76832 lineto
0.30602 0.7378 lineto
0.29219 0.70689 lineto
0.2563 0.64698 lineto
0.21199 0.59411 lineto
0.16389 0.5523 lineto
0.1402 0.53625 lineto
0.11777 0.52351 lineto
0.09731 0.51395 lineto
0.07953 0.50729 lineto
0.06502 0.50312 lineto
0.05915 0.50182 lineto
0.05428 0.50094 lineto
0.05044 0.5004 lineto
0.04893 0.50023 lineto
0.04768 0.50012 lineto
0.04671 0.50005 lineto
0.04633 0.50003 lineto
0.04601 0.50001 lineto
0.04577 0.50001 lineto
0.04559 0.5 lineto
0.04549 0.5 lineto
0.04545 0.5 lineto
0.04549 0.5 lineto
0.04559 0.5 lineto
0.04577 0.49999 lineto
0.04601 0.49999 lineto
0.04671 0.49995 lineto
0.04768 0.49988 lineto
0.04893 0.49977 lineto
0.05044 0.4996 lineto
0.05428 0.49906 lineto
0.05915 0.49818 lineto
0.06502 0.49688 lineto
0.07953 0.49271 lineto
0.09731 0.48605 lineto
0.11777 0.47649 lineto
0.16389 0.4477 lineto
0.21199 0.40589 lineto
0.2563 0.35302 lineto
0.27553 0.32362 lineto
0.29219 0.29311 lineto
0.30602 0.2622 lineto
0.31687 0.23168 lineto
0.32118 0.21679 lineto
0.32476 0.2023 lineto
Mistroke
0.32763 0.18827 lineto
0.32985 0.17481 lineto
0.33143 0.162 lineto
0.33201 0.15586 lineto
0.33244 0.14991 lineto
0.33261 0.14701 lineto
0.33275 0.14416 lineto
0.33286 0.14137 lineto
0.33294 0.13863 lineto
0.33299 0.13594 lineto
0.33301 0.1333 lineto
0.33301 0.13073 lineto
0.33298 0.1282 lineto
0.33293 0.12574 lineto
0.33286 0.12334 lineto
0.33276 0.12099 lineto
0.33265 0.11871 lineto
0.33236 0.11432 lineto
0.33201 0.11019 lineto
0.33114 0.10268 lineto
0.33014 0.09623 lineto
0.32806 0.08655 lineto
0.32649 0.08123 lineto
0.32625 0.08058 lineto
0.3261 0.08018 lineto
0.32607 0.08009 lineto
0.32605 0.08005 lineto
0.32611 0.08018 lineto
0.32759 0.08317 lineto
0.33845 0.09966 lineto
0.3626 0.12634 lineto
0.40146 0.15769 lineto
0.42619 0.1733 lineto
0.45406 0.18793 lineto
0.48457 0.20099 lineto
0.51715 0.21197 lineto
0.53401 0.21655 lineto
0.55112 0.22049 lineto
0.56839 0.22375 lineto
0.58572 0.22631 lineto
0.59438 0.22733 lineto
0.60301 0.22817 lineto
0.61162 0.22884 lineto
0.61591 0.2291 lineto
0.62018 0.22933 lineto
0.62444 0.22951 lineto
0.62868 0.22965 lineto
0.63291 0.22975 lineto
0.63711 0.2298 lineto
0.6413 0.22981 lineto
Mistroke
0.64546 0.22978 lineto
0.6496 0.22971 lineto
0.65372 0.2296 lineto
0.65781 0.22945 lineto
0.66187 0.22926 lineto
0.66991 0.22877 lineto
0.67782 0.22813 lineto
0.68559 0.22734 lineto
0.70068 0.22535 lineto
0.7151 0.22287 lineto
0.74165 0.21667 lineto
0.76475 0.20931 lineto
0.78403 0.20144 lineto
0.79928 0.19376 lineto
0.8176 0.18183 lineto
0.81976 0.18008 lineto
0.82101 0.17897 lineto
0.82131 0.17869 lineto
0.82139 0.17861 lineto
0.82141 0.17859 lineto
0.82131 0.17869 lineto
0.82103 0.17899 lineto
0.81301 0.18956 lineto
0.80624 0.20072 lineto
0.79856 0.21597 lineto
0.79069 0.23525 lineto
0.78333 0.25835 lineto
0.78005 0.27122 lineto
0.77713 0.2849 lineto
0.77465 0.29932 lineto
0.77359 0.30678 lineto
0.77266 0.31441 lineto
0.77187 0.32218 lineto
0.77123 0.33009 lineto
0.77096 0.33409 lineto
0.77074 0.33813 lineto
0.77055 0.34219 lineto
0.7704 0.34628 lineto
0.77029 0.3504 lineto
0.77022 0.35454 lineto
0.77019 0.3587 lineto
0.7702 0.36289 lineto
0.77025 0.36709 lineto
0.77035 0.37132 lineto
0.77049 0.37556 lineto
0.77067 0.37982 lineto
0.77116 0.38838 lineto
0.77183 0.39699 lineto
0.77369 0.41428 lineto
0.77625 0.43161 lineto
Mistroke
0.77951 0.44888 lineto
0.78803 0.48285 lineto
0.79901 0.51543 lineto
0.81207 0.54594 lineto
0.8267 0.57381 lineto
0.8582 0.61981 lineto
0.88795 0.65128 lineto
0.91017 0.66846 lineto
0.91683 0.67241 lineto
0.91881 0.67342 lineto
0.91944 0.67372 lineto
0.91982 0.67389 lineto
0.91991 0.67393 lineto
0.91995 0.67395 lineto
0.91991 0.67393 lineto
0.91982 0.6739 lineto
0.91877 0.67351 lineto
0.91345 0.67194 lineto
0.90915 0.67092 lineto
0.90377 0.66986 lineto
0.89732 0.66886 lineto
0.89369 0.6684 lineto
0.88981 0.66799 lineto
0.88568 0.66764 lineto
0.88351 0.66749 lineto
0.88129 0.66735 lineto
0.87901 0.66724 lineto
0.87666 0.66714 lineto
0.87426 0.66707 lineto
0.8718 0.66702 lineto
0.86927 0.66699 lineto
0.8667 0.66699 lineto
0.86406 0.66701 lineto
0.86137 0.66706 lineto
0.85863 0.66714 lineto
0.85584 0.66725 lineto
0.85009 0.66756 lineto
0.84414 0.66799 lineto
0.838 0.66857 lineto
0.82519 0.67015 lineto
0.81173 0.67237 lineto
0.7977 0.67524 lineto
0.76832 0.68313 lineto
0.7378 0.69398 lineto
0.70689 0.70781 lineto
0.67638 0.72447 lineto
0.61937 0.76506 lineto
0.57165 0.81193 lineto
0.5523 0.83611 lineto
0.53625 0.8598 lineto
Mistroke
0.52351 0.88223 lineto
0.51395 0.90269 lineto
0.50729 0.92047 lineto
0.50312 0.93498 lineto
0.50182 0.94085 lineto
0.50094 0.94572 lineto
0.5004 0.94956 lineto
0.50023 0.95107 lineto
0.50012 0.95232 lineto
0.50005 0.95329 lineto
0.50003 0.95367 lineto
0.50001 0.95399 lineto
0.50001 0.95423 lineto
0.5 0.95441 lineto
0.5 0.95451 lineto
0.5 0.95455 lineto
0.5 0.95451 lineto
0.5 0.95441 lineto
0.49999 0.95423 lineto
0.49999 0.95399 lineto
0.49995 0.95329 lineto
0.49988 0.95232 lineto
0.49977 0.95107 lineto
0.4996 0.94956 lineto
0.49906 0.94572 lineto
0.49818 0.94085 lineto
0.49688 0.93498 lineto
0.49271 0.92047 lineto
0.48605 0.90269 lineto
0.47649 0.88223 lineto
0.46375 0.8598 lineto
0.42835 0.81193 lineto
0.38063 0.76506 lineto
0.32362 0.72447 lineto
0.29311 0.70781 lineto
0.2622 0.69398 lineto
0.23168 0.68313 lineto
0.21679 0.67882 lineto
0.2023 0.67524 lineto
0.18827 0.67237 lineto
0.17481 0.67015 lineto
0.16832 0.66929 lineto
0.162 0.66857 lineto
0.15586 0.66799 lineto
0.14991 0.66756 lineto
0.14701 0.66739 lineto
0.14416 0.66725 lineto
0.14137 0.66714 lineto
0.13863 0.66706 lineto
0.13594 0.66701 lineto
Mistroke
0.1333 0.66699 lineto
0.13073 0.66699 lineto
0.1282 0.66702 lineto
0.12574 0.66707 lineto
0.12334 0.66714 lineto
0.12099 0.66724 lineto
0.11871 0.66735 lineto
0.11432 0.66764 lineto
0.11019 0.66799 lineto
0.10268 0.66886 lineto
0.09623 0.66986 lineto
0.08655 0.67194 lineto
0.08123 0.67351 lineto
0.08058 0.67375 lineto
0.08018 0.6739 lineto
0.08009 0.67393 lineto
0.08005 0.67395 lineto
0.08018 0.67389 lineto
0.08317 0.67241 lineto
0.08983 0.66846 lineto
0.11205 0.65128 lineto
0.1418 0.61981 lineto
0.15769 0.59854 lineto
0.1733 0.57381 lineto
0.20099 0.51543 lineto
0.21197 0.48285 lineto
0.21655 0.46599 lineto
0.22049 0.44888 lineto
0.22375 0.43161 lineto
0.22631 0.41428 lineto
0.22733 0.40562 lineto
0.22817 0.39699 lineto
0.22884 0.38838 lineto
0.2291 0.38409 lineto
0.22933 0.37982 lineto
0.22951 0.37556 lineto
0.22965 0.37132 lineto
0.22975 0.36709 lineto
0.2298 0.36289 lineto
0.22981 0.3587 lineto
0.22978 0.35454 lineto
0.22971 0.3504 lineto
0.2296 0.34628 lineto
0.22945 0.34219 lineto
0.22926 0.33813 lineto
0.22877 0.33009 lineto
0.22813 0.32218 lineto
0.22734 0.31441 lineto
0.22535 0.29932 lineto
0.22287 0.2849 lineto
Mistroke
0.21667 0.25835 lineto
0.20931 0.23525 lineto
0.20144 0.21597 lineto
0.18699 0.18956 lineto
0.18183 0.1824 lineto
0.18008 0.18024 lineto
0.17897 0.17899 lineto
0.17869 0.17869 lineto
0.17861 0.17861 lineto
0.17859 0.17859 lineto
0.17869 0.17869 lineto
0.17899 0.17897 lineto
0.1824 0.18183 lineto
0.18956 0.18699 lineto
0.20072 0.19376 lineto
0.21597 0.20144 lineto
0.23525 0.20931 lineto
0.25835 0.21667 lineto
0.27122 0.21995 lineto
0.2849 0.22287 lineto
0.29932 0.22535 lineto
0.30678 0.22641 lineto
0.31441 0.22734 lineto
0.32218 0.22813 lineto
0.33009 0.22877 lineto
0.33409 0.22904 lineto
0.33813 0.22926 lineto
0.34219 0.22945 lineto
0.34628 0.2296 lineto
0.3504 0.22971 lineto
0.35454 0.22978 lineto
0.3587 0.22981 lineto
0.36289 0.2298 lineto
0.36709 0.22975 lineto
0.37132 0.22965 lineto
0.37556 0.22951 lineto
0.37982 0.22933 lineto
0.38838 0.22884 lineto
0.39699 0.22817 lineto
0.41428 0.22631 lineto
0.43161 0.22375 lineto
0.44888 0.22049 lineto
0.48285 0.21197 lineto
0.51543 0.20099 lineto
0.54594 0.18793 lineto
0.59854 0.15769 lineto
0.6374 0.12634 lineto
0.66155 0.09966 lineto
0.67241 0.08317 lineto
0.67342 0.08119 lineto
Mistroke
0.67372 0.08056 lineto
0.67389 0.08018 lineto
0.67393 0.08009 lineto
0.67395 0.08005 lineto
0.6739 0.08018 lineto
0.67351 0.08123 lineto
0.67194 0.08655 lineto
0.67092 0.09085 lineto
0.66986 0.09623 lineto
0.66886 0.10268 lineto
0.6684 0.10631 lineto
0.66799 0.11019 lineto
0.66764 0.11432 lineto
0.66749 0.11649 lineto
0.66735 0.11871 lineto
0.66724 0.12099 lineto
0.66714 0.12334 lineto
0.66707 0.12574 lineto
0.66702 0.1282 lineto
0.66699 0.13073 lineto
0.66699 0.1333 lineto
0.66701 0.13594 lineto
0.66706 0.13863 lineto
0.66714 0.14137 lineto
0.66725 0.14416 lineto
0.66756 0.14991 lineto
0.66799 0.15586 lineto
0.66857 0.162 lineto
0.67015 0.17481 lineto
0.67237 0.18827 lineto
0.67524 0.2023 lineto
0.68313 0.23168 lineto
0.69398 0.2622 lineto
0.70781 0.29311 lineto
0.7437 0.35302 lineto
0.78801 0.40589 lineto
0.83611 0.4477 lineto
0.8598 0.46375 lineto
0.88223 0.47649 lineto
0.90269 0.48605 lineto
0.92047 0.49271 lineto
0.93498 0.49688 lineto
0.94085 0.49818 lineto
0.94572 0.49906 lineto
0.94956 0.4996 lineto
0.95107 0.49977 lineto
0.95232 0.49988 lineto
0.95329 0.49995 lineto
0.95367 0.49997 lineto
0.95399 0.49999 lineto
Mistroke
0.95423 0.49999 lineto
0.95441 0.5 lineto
0.95451 0.5 lineto
0.95455 0.5 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1.010638 142 194.287262 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.010638 -146 -93.712738 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -146 -91] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.454545 0.5 0.454545 [
[(-1)] 0.04545 0.5 0 2 Msboxa
[(-0.5)] 0.27273 0.5 0 2 Msboxa
[(0.5)] 0.72727 0.5 0 2 Msboxa
[(1)] 0.95455 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.3125)] 0.5 1 0 -2 Msboxa
grestore
[(-1)] 0.4875 0.04545 1 0 Msboxa
[(-0.5)] 0.4875 0.27273 1 0 Msboxa
[(0.5)] 0.4875 0.72727 1 0 Msboxa
[(1)] 0.4875 0.95455 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.04545 0.5 moveto
0.04545 0.50625 lineto
stroke
grestore
[(-1)] 0.04545 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.27273 0.5 moveto
0.27273 0.50625 lineto
stroke
grestore
[(-0.5)] 0.27273 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.72727 0.5 moveto
0.72727 0.50625 lineto
stroke
grestore
[(0.5)] 0.72727 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.95455 0.5 moveto
0.95455 0.50625 lineto
stroke
grestore
[(1)] 0.95455 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.09091 0.5 moveto
0.09091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.13636 0.5 moveto
0.13636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18182 0.5 moveto
0.18182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22727 0.5 moveto
0.22727 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31818 0.5 moveto
0.31818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36364 0.5 moveto
0.36364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40909 0.5 moveto
0.40909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45455 0.5 moveto
0.45455 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54545 0.5 moveto
0.54545 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59091 0.5 moveto
0.59091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63636 0.5 moveto
0.63636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.68182 0.5 moveto
0.68182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77273 0.5 moveto
0.77273 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81818 0.5 moveto
0.81818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.86364 0.5 moveto
0.86364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90909 0.5 moveto
0.90909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.5 moveto
0 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
1 0.5 moveto
1 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.3125)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.04545 moveto
0.50625 0.04545 lineto
stroke
grestore
[(-1)] 0.4875 0.04545 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.27273 moveto
0.50625 0.27273 lineto
stroke
grestore
[(-0.5)] 0.4875 0.27273 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.72727 moveto
0.50625 0.72727 lineto
stroke
grestore
[(0.5)] 0.4875 0.72727 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.95455 moveto
0.50625 0.95455 lineto
stroke
grestore
[(1)] 0.4875 0.95455 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.09091 moveto
0.50375 0.09091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13636 moveto
0.50375 0.13636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18182 moveto
0.50375 0.18182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22727 moveto
0.50375 0.22727 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31818 moveto
0.50375 0.31818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36364 moveto
0.50375 0.36364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40909 moveto
0.50375 0.40909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45455 moveto
0.50375 0.45455 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54545 moveto
0.50375 0.54545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59091 moveto
0.50375 0.59091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.63636 moveto
0.50375 0.63636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.68182 moveto
0.50375 0.68182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.77273 moveto
0.50375 0.77273 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.81818 moveto
0.50375 0.81818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.86364 moveto
0.50375 0.86364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90909 moveto
0.50375 0.90909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0 moveto
0.50375 0 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1 moveto
0.50375 1 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.95455 0.5 moveto
0.9545 0.5 lineto
0.95435 0.5 lineto
0.9541 0.50001 lineto
0.95376 0.50001 lineto
0.95332 0.50002 lineto
0.95278 0.50004 lineto
0.9514 0.5001 lineto
0.94964 0.50019 lineto
0.9475 0.50034 lineto
0.94205 0.50079 lineto
0.93511 0.50154 lineto
0.92671 0.50265 lineto
0.90571 0.50621 lineto
0.87954 0.51192 lineto
0.84878 0.52018 lineto
0.77631 0.5454 lineto
0.69454 0.58283 lineto
0.61025 0.63154 lineto
0.52996 0.68869 lineto
0.45931 0.74982 lineto
0.36156 0.86104 lineto
0.33692 0.89906 lineto
0.33021 0.9113 lineto
0.32677 0.91833 lineto
0.32637 0.91922 lineto
0.32613 0.91976 lineto
0.32607 0.9199 lineto
0.32605 0.91995 lineto
0.32607 0.9199 lineto
0.32613 0.91976 lineto
0.32775 0.91534 lineto
0.33541 0.88856 lineto
0.34022 0.86637 lineto
0.34486 0.83866 lineto
0.34693 0.82287 lineto
0.34876 0.80586 lineto
0.35027 0.78772 lineto
0.35089 0.77824 lineto
0.35141 0.76851 lineto
0.35183 0.75854 lineto
0.352 0.75346 lineto
0.35213 0.74833 lineto
0.35224 0.74315 lineto
0.35232 0.73791 lineto
0.35237 0.73262 lineto
0.35238 0.72727 lineto
0.35237 0.72188 lineto
0.35232 0.71644 lineto
0.35224 0.71096 lineto
Mistroke
0.35212 0.70543 lineto
0.35179 0.69424 lineto
0.35131 0.68289 lineto
0.3507 0.6714 lineto
0.34994 0.65978 lineto
0.34797 0.63619 lineto
0.34539 0.61224 lineto
0.3422 0.58804 lineto
0.33401 0.53934 lineto
0.32349 0.49098 lineto
0.29647 0.39878 lineto
0.26417 0.31784 lineto
0.23101 0.25323 lineto
0.20226 0.20818 lineto
0.18334 0.18381 lineto
0.18074 0.18088 lineto
0.17914 0.17915 lineto
0.17873 0.17873 lineto
0.17862 0.17862 lineto
0.17859 0.17859 lineto
0.17873 0.17873 lineto
0.17915 0.17914 lineto
0.19342 0.19124 lineto
0.28325 0.24738 lineto
0.35655 0.28073 lineto
0.39878 0.29647 lineto
0.44385 0.31087 lineto
0.49098 0.32349 lineto
0.53934 0.33401 lineto
0.58804 0.3422 lineto
0.61224 0.34539 lineto
0.63619 0.34797 lineto
0.65978 0.34994 lineto
0.6714 0.3507 lineto
0.68289 0.35131 lineto
0.69424 0.35179 lineto
0.69985 0.35197 lineto
0.70543 0.35212 lineto
0.71096 0.35224 lineto
0.71644 0.35232 lineto
0.72188 0.35237 lineto
0.72727 0.35238 lineto
0.73262 0.35237 lineto
0.73791 0.35232 lineto
0.74315 0.35224 lineto
0.74833 0.35213 lineto
0.75346 0.352 lineto
0.75854 0.35183 lineto
0.76851 0.35141 lineto
0.77824 0.35089 lineto
Mistroke
0.78772 0.35027 lineto
0.80586 0.34876 lineto
0.82287 0.34693 lineto
0.83866 0.34486 lineto
0.86637 0.34022 lineto
0.90494 0.33105 lineto
0.91534 0.32775 lineto
0.9183 0.32669 lineto
0.91921 0.32634 lineto
0.91976 0.32613 lineto
0.9199 0.32607 lineto
0.91995 0.32605 lineto
0.91976 0.32613 lineto
0.91833 0.32677 lineto
0.9113 0.33021 lineto
0.83654 0.37993 lineto
0.78016 0.42896 lineto
0.71909 0.49313 lineto
0.65931 0.56922 lineto
0.60591 0.65229 lineto
0.5626 0.73617 lineto
0.53128 0.81412 lineto
0.52018 0.84878 lineto
0.51192 0.87954 lineto
0.50621 0.90571 lineto
0.50265 0.92671 lineto
0.50154 0.93511 lineto
0.50079 0.94205 lineto
0.50034 0.9475 lineto
0.50019 0.94964 lineto
0.5001 0.9514 lineto
0.50004 0.95278 lineto
0.50002 0.95332 lineto
0.50001 0.95376 lineto
0.50001 0.9541 lineto
0.5 0.95435 lineto
0.5 0.9545 lineto
0.5 0.95455 lineto
0.5 0.9545 lineto
0.5 0.95435 lineto
0.49999 0.9541 lineto
0.49999 0.95376 lineto
0.49998 0.95332 lineto
0.49996 0.95278 lineto
0.4999 0.9514 lineto
0.49981 0.94964 lineto
0.49966 0.9475 lineto
0.49921 0.94205 lineto
0.49846 0.93511 lineto
0.49735 0.92671 lineto
Mistroke
0.49379 0.90571 lineto
0.48808 0.87954 lineto
0.46872 0.81412 lineto
0.4374 0.73617 lineto
0.39409 0.65229 lineto
0.34069 0.56922 lineto
0.28091 0.49313 lineto
0.21984 0.42896 lineto
0.16346 0.37993 lineto
0.11789 0.34728 lineto
0.0887 0.33021 lineto
0.08167 0.32677 lineto
0.08078 0.32637 lineto
0.08024 0.32613 lineto
0.0801 0.32607 lineto
0.08005 0.32605 lineto
0.0801 0.32607 lineto
0.08024 0.32613 lineto
0.08466 0.32775 lineto
0.09506 0.33105 lineto
0.11144 0.33541 lineto
0.13363 0.34022 lineto
0.16134 0.34486 lineto
0.17713 0.34693 lineto
0.19414 0.34876 lineto
0.21228 0.35027 lineto
0.22176 0.35089 lineto
0.23149 0.35141 lineto
0.24146 0.35183 lineto
0.24654 0.352 lineto
0.25167 0.35213 lineto
0.25685 0.35224 lineto
0.26209 0.35232 lineto
0.26738 0.35237 lineto
0.27273 0.35238 lineto
0.27812 0.35237 lineto
0.28356 0.35232 lineto
0.28904 0.35224 lineto
0.29457 0.35212 lineto
0.30015 0.35197 lineto
0.30576 0.35179 lineto
0.31711 0.35131 lineto
0.3286 0.3507 lineto
0.34022 0.34994 lineto
0.36381 0.34797 lineto
0.38776 0.34539 lineto
0.41196 0.3422 lineto
0.46066 0.33401 lineto
0.50902 0.32349 lineto
0.55615 0.31087 lineto
Mistroke
0.64345 0.28073 lineto
0.71675 0.24738 lineto
0.77186 0.21574 lineto
0.80658 0.19124 lineto
0.81619 0.18334 lineto
0.81912 0.18074 lineto
0.82085 0.17914 lineto
0.82127 0.17873 lineto
0.82138 0.17862 lineto
0.82141 0.17859 lineto
0.82138 0.17862 lineto
0.82127 0.17873 lineto
0.82086 0.17915 lineto
0.81666 0.18381 lineto
0.79774 0.20818 lineto
0.76899 0.25323 lineto
0.73583 0.31784 lineto
0.70353 0.39878 lineto
0.67651 0.49098 lineto
0.66599 0.53934 lineto
0.6578 0.58804 lineto
0.65461 0.61224 lineto
0.65203 0.63619 lineto
0.65006 0.65978 lineto
0.6493 0.6714 lineto
0.64869 0.68289 lineto
0.64821 0.69424 lineto
0.64803 0.69985 lineto
0.64788 0.70543 lineto
0.64776 0.71096 lineto
0.64768 0.71644 lineto
0.64763 0.72188 lineto
0.64762 0.72727 lineto
0.64763 0.73262 lineto
0.64768 0.73791 lineto
0.64776 0.74315 lineto
0.64787 0.74833 lineto
0.64817 0.75854 lineto
0.64859 0.76851 lineto
0.64911 0.77824 lineto
0.64973 0.78772 lineto
0.65124 0.80586 lineto
0.65307 0.82287 lineto
0.65514 0.83866 lineto
0.65978 0.86637 lineto
0.66459 0.88856 lineto
0.67225 0.91534 lineto
0.67331 0.9183 lineto
0.67366 0.91921 lineto
0.67387 0.91976 lineto
Mistroke
0.67393 0.9199 lineto
0.67395 0.91995 lineto
0.67393 0.9199 lineto
0.67387 0.91976 lineto
0.67323 0.91833 lineto
0.66308 0.89906 lineto
0.63844 0.86104 lineto
0.59757 0.80932 lineto
0.47004 0.68869 lineto
0.38975 0.63154 lineto
0.30546 0.58283 lineto
0.22369 0.5454 lineto
0.15122 0.52018 lineto
0.12046 0.51192 lineto
0.09429 0.50621 lineto
0.07329 0.50265 lineto
0.06489 0.50154 lineto
0.05795 0.50079 lineto
0.0525 0.50034 lineto
0.05036 0.50019 lineto
0.0486 0.5001 lineto
0.04722 0.50004 lineto
0.04668 0.50002 lineto
0.04624 0.50001 lineto
0.0459 0.50001 lineto
0.04565 0.5 lineto
0.0455 0.5 lineto
0.04545 0.5 lineto
0.0455 0.5 lineto
0.04565 0.5 lineto
0.0459 0.49999 lineto
0.04624 0.49999 lineto
0.04722 0.49996 lineto
0.0486 0.4999 lineto
0.05036 0.49981 lineto
0.0525 0.49966 lineto
0.05795 0.49921 lineto
0.06489 0.49846 lineto
0.07329 0.49735 lineto
0.09429 0.49379 lineto
0.12046 0.48808 lineto
0.15122 0.47982 lineto
0.22369 0.4546 lineto
0.30546 0.41717 lineto
0.38975 0.36846 lineto
0.47004 0.31131 lineto
0.54069 0.25018 lineto
0.59757 0.19068 lineto
0.66308 0.10094 lineto
0.66979 0.0887 lineto
Mistroke
0.67323 0.08167 lineto
0.67387 0.08024 lineto
0.67393 0.0801 lineto
0.67395 0.08005 lineto
0.67393 0.0801 lineto
0.67387 0.08024 lineto
0.67225 0.08466 lineto
0.66459 0.11144 lineto
0.65978 0.13363 lineto
0.65514 0.16134 lineto
0.65307 0.17713 lineto
0.65124 0.19414 lineto
0.64973 0.21228 lineto
0.64911 0.22176 lineto
0.64859 0.23149 lineto
0.64817 0.24146 lineto
0.648 0.24654 lineto
0.64787 0.25167 lineto
0.64776 0.25685 lineto
0.64768 0.26209 lineto
0.64763 0.26738 lineto
0.64762 0.27273 lineto
0.64763 0.27812 lineto
0.64768 0.28356 lineto
0.64776 0.28904 lineto
0.64788 0.29457 lineto
0.64821 0.30576 lineto
0.64869 0.31711 lineto
0.6493 0.3286 lineto
0.65006 0.34022 lineto
0.65203 0.36381 lineto
0.65461 0.38776 lineto
0.6578 0.41196 lineto
0.66599 0.46066 lineto
0.67651 0.50902 lineto
0.70353 0.60122 lineto
0.73583 0.68216 lineto
0.79774 0.79182 lineto
0.81666 0.81619 lineto
0.81926 0.81912 lineto
0.82086 0.82085 lineto
0.82127 0.82127 lineto
0.82138 0.82138 lineto
0.82141 0.82141 lineto
0.82127 0.82127 lineto
0.82085 0.82086 lineto
0.81619 0.81666 lineto
0.80658 0.80876 lineto
0.77186 0.78426 lineto
0.71675 0.75262 lineto
Mistroke
0.64345 0.71927 lineto
0.60122 0.70353 lineto
0.55615 0.68913 lineto
0.50902 0.67651 lineto
0.46066 0.66599 lineto
0.41196 0.6578 lineto
0.38776 0.65461 lineto
0.36381 0.65203 lineto
0.34022 0.65006 lineto
0.3286 0.6493 lineto
0.31711 0.64869 lineto
0.30576 0.64821 lineto
0.30015 0.64803 lineto
0.29457 0.64788 lineto
0.28904 0.64776 lineto
0.28356 0.64768 lineto
0.27812 0.64763 lineto
0.27273 0.64762 lineto
0.26738 0.64763 lineto
0.26209 0.64768 lineto
0.25685 0.64776 lineto
0.25167 0.64787 lineto
0.24146 0.64817 lineto
0.23149 0.64859 lineto
0.22176 0.64911 lineto
0.21228 0.64973 lineto
0.19414 0.65124 lineto
0.17713 0.65307 lineto
0.16134 0.65514 lineto
0.13363 0.65978 lineto
0.09506 0.66895 lineto
0.08466 0.67225 lineto
0.0817 0.67331 lineto
0.08079 0.67366 lineto
0.08024 0.67387 lineto
0.0801 0.67393 lineto
0.08005 0.67395 lineto
0.08024 0.67387 lineto
0.08167 0.67323 lineto
0.0887 0.66979 lineto
0.11789 0.65272 lineto
0.16346 0.62007 lineto
0.21984 0.57104 lineto
0.28091 0.50687 lineto
0.34069 0.43078 lineto
0.39409 0.34771 lineto
0.4374 0.26383 lineto
0.46872 0.18588 lineto
0.47982 0.15122 lineto
0.48808 0.12046 lineto
Mistroke
0.49379 0.09429 lineto
0.49735 0.07329 lineto
0.49846 0.06489 lineto
0.49921 0.05795 lineto
0.49966 0.0525 lineto
0.49981 0.05036 lineto
0.4999 0.0486 lineto
0.49996 0.04722 lineto
0.49998 0.04668 lineto
0.49999 0.04624 lineto
0.49999 0.0459 lineto
0.5 0.04565 lineto
0.5 0.0455 lineto
0.5 0.04545 lineto
0.5 0.0455 lineto
0.5 0.04565 lineto
0.50001 0.0459 lineto
0.50001 0.04624 lineto
0.50004 0.04722 lineto
0.5001 0.0486 lineto
0.50019 0.05036 lineto
0.50034 0.0525 lineto
0.50079 0.05795 lineto
0.50154 0.06489 lineto
0.50265 0.07329 lineto
0.50621 0.09429 lineto
0.51192 0.12046 lineto
0.53128 0.18588 lineto
0.5626 0.26383 lineto
0.60591 0.34771 lineto
0.65931 0.43078 lineto
0.71909 0.50687 lineto
0.83654 0.62007 lineto
0.88211 0.65272 lineto
0.9113 0.66979 lineto
0.91833 0.67323 lineto
0.91922 0.67363 lineto
0.91976 0.67387 lineto
0.9199 0.67393 lineto
0.91995 0.67395 lineto
0.91976 0.67387 lineto
0.9183 0.67331 lineto
0.91534 0.67225 lineto
0.90494 0.66895 lineto
0.88856 0.66459 lineto
0.86637 0.65978 lineto
0.83866 0.65514 lineto
0.82287 0.65307 lineto
0.80586 0.65124 lineto
0.78772 0.64973 lineto
Mistroke
0.77824 0.64911 lineto
0.76851 0.64859 lineto
0.75854 0.64817 lineto
0.75346 0.648 lineto
0.74833 0.64787 lineto
0.74315 0.64776 lineto
0.73791 0.64768 lineto
0.73262 0.64763 lineto
0.72727 0.64762 lineto
0.72188 0.64763 lineto
0.71644 0.64768 lineto
0.71096 0.64776 lineto
0.70543 0.64788 lineto
0.69424 0.64821 lineto
0.68289 0.64869 lineto
0.6714 0.6493 lineto
0.65978 0.65006 lineto
0.63619 0.65203 lineto
0.61224 0.65461 lineto
0.58804 0.6578 lineto
0.53934 0.66599 lineto
0.49098 0.67651 lineto
0.44385 0.68913 lineto
0.35655 0.71927 lineto
0.28325 0.75262 lineto
0.19342 0.80876 lineto
0.18381 0.81666 lineto
0.18088 0.81926 lineto
0.17915 0.82086 lineto
0.17873 0.82127 lineto
0.17862 0.82138 lineto
0.17859 0.82141 lineto
0.17873 0.82127 lineto
0.17914 0.82085 lineto
0.18334 0.81619 lineto
0.20226 0.79182 lineto
0.23101 0.74677 lineto
0.26417 0.68216 lineto
0.29647 0.60122 lineto
0.32349 0.50902 lineto
0.33401 0.46066 lineto
0.3422 0.41196 lineto
0.34539 0.38776 lineto
0.34797 0.36381 lineto
0.34994 0.34022 lineto
0.3507 0.3286 lineto
0.35131 0.31711 lineto
0.35179 0.30576 lineto
0.35197 0.30015 lineto
0.35212 0.29457 lineto
Mistroke
0.35224 0.28904 lineto
0.35232 0.28356 lineto
0.35237 0.27812 lineto
0.35238 0.27273 lineto
0.35237 0.26738 lineto
0.35232 0.26209 lineto
0.35224 0.25685 lineto
0.35213 0.25167 lineto
0.35183 0.24146 lineto
0.35141 0.23149 lineto
0.35089 0.22176 lineto
0.35027 0.21228 lineto
0.34876 0.19414 lineto
0.34693 0.17713 lineto
0.34486 0.16134 lineto
0.34022 0.13363 lineto
0.33541 0.11144 lineto
0.32775 0.08466 lineto
0.32669 0.0817 lineto
0.32634 0.08079 lineto
0.32613 0.08024 lineto
0.32607 0.0801 lineto
0.32605 0.08005 lineto
0.32613 0.08024 lineto
0.32677 0.08167 lineto
0.33692 0.10094 lineto
0.36156 0.13896 lineto
0.40243 0.19068 lineto
0.45931 0.25018 lineto
0.52996 0.31131 lineto
0.61025 0.36846 lineto
0.69454 0.41717 lineto
0.77631 0.4546 lineto
0.84878 0.47982 lineto
0.87954 0.48808 lineto
0.90571 0.49379 lineto
0.92671 0.49735 lineto
0.93511 0.49846 lineto
0.94205 0.49921 lineto
0.9475 0.49966 lineto
0.94964 0.49981 lineto
0.9514 0.4999 lineto
0.95278 0.49996 lineto
0.95332 0.49998 lineto
0.95376 0.49999 lineto
0.9541 0.49999 lineto
0.95435 0.5 lineto
0.9545 0.5 lineto
0.95455 0.5 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1.010638 -146 -93.712738 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.010638 141 -93.712746 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 141 -91] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.454545 0.5 0.454545 [
[(-1)] 0.04545 0.5 0 2 Msboxa
[(-0.5)] 0.27273 0.5 0 2 Msboxa
[(0.5)] 0.72727 0.5 0 2 Msboxa
[(1)] 0.95455 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.4375)] 0.5 1 0 -2 Msboxa
grestore
[(-1)] 0.4875 0.04545 1 0 Msboxa
[(-0.5)] 0.4875 0.27273 1 0 Msboxa
[(0.5)] 0.4875 0.72727 1 0 Msboxa
[(1)] 0.4875 0.95455 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.04545 0.5 moveto
0.04545 0.50625 lineto
stroke
grestore
[(-1)] 0.04545 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.27273 0.5 moveto
0.27273 0.50625 lineto
stroke
grestore
[(-0.5)] 0.27273 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.72727 0.5 moveto
0.72727 0.50625 lineto
stroke
grestore
[(0.5)] 0.72727 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.95455 0.5 moveto
0.95455 0.50625 lineto
stroke
grestore
[(1)] 0.95455 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.09091 0.5 moveto
0.09091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.13636 0.5 moveto
0.13636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18182 0.5 moveto
0.18182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22727 0.5 moveto
0.22727 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31818 0.5 moveto
0.31818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36364 0.5 moveto
0.36364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40909 0.5 moveto
0.40909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45455 0.5 moveto
0.45455 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54545 0.5 moveto
0.54545 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59091 0.5 moveto
0.59091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63636 0.5 moveto
0.63636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.68182 0.5 moveto
0.68182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77273 0.5 moveto
0.77273 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81818 0.5 moveto
0.81818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.86364 0.5 moveto
0.86364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90909 0.5 moveto
0.90909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.5 moveto
0 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
1 0.5 moveto
1 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.4375)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.04545 moveto
0.50625 0.04545 lineto
stroke
grestore
[(-1)] 0.4875 0.04545 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.27273 moveto
0.50625 0.27273 lineto
stroke
grestore
[(-0.5)] 0.4875 0.27273 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.72727 moveto
0.50625 0.72727 lineto
stroke
grestore
[(0.5)] 0.4875 0.72727 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.95455 moveto
0.50625 0.95455 lineto
stroke
grestore
[(1)] 0.4875 0.95455 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.09091 moveto
0.50375 0.09091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13636 moveto
0.50375 0.13636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18182 moveto
0.50375 0.18182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22727 moveto
0.50375 0.22727 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31818 moveto
0.50375 0.31818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36364 moveto
0.50375 0.36364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40909 moveto
0.50375 0.40909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45455 moveto
0.50375 0.45455 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54545 moveto
0.50375 0.54545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59091 moveto
0.50375 0.59091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.63636 moveto
0.50375 0.63636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.68182 moveto
0.50375 0.68182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.77273 moveto
0.50375 0.77273 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.81818 moveto
0.50375 0.81818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.86364 moveto
0.50375 0.86364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90909 moveto
0.50375 0.90909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0 moveto
0.50375 0 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1 moveto
0.50375 1 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.95455 0.5 moveto
0.95449 0.5 lineto
0.95432 0.5 lineto
0.95404 0.5 lineto
0.95364 0.5 lineto
0.95314 0.50001 lineto
0.95252 0.50002 lineto
0.95095 0.50004 lineto
0.94893 0.50007 lineto
0.94646 0.50013 lineto
0.94021 0.5003 lineto
0.93221 0.50059 lineto
0.92251 0.50101 lineto
0.89816 0.50238 lineto
0.86755 0.50457 lineto
0.83121 0.50776 lineto
0.74383 0.51755 lineto
0.64184 0.53225 lineto
0.53198 0.55164 lineto
0.31741 0.59997 lineto
0.15435 0.64744 lineto
0.10527 0.66435 lineto
0.09029 0.66993 lineto
0.08193 0.67319 lineto
0.08089 0.67361 lineto
0.08026 0.67386 lineto
0.08011 0.67393 lineto
0.08005 0.67395 lineto
0.08026 0.67386 lineto
0.08522 0.67173 lineto
0.11422 0.6584 lineto
0.23747 0.59433 lineto
0.41517 0.48766 lineto
0.59916 0.36108 lineto
0.74326 0.2482 lineto
0.78959 0.20814 lineto
0.8156 0.18421 lineto
0.81884 0.18111 lineto
0.82077 0.17922 lineto
0.82125 0.17875 lineto
0.82137 0.17863 lineto
0.82141 0.17859 lineto
0.82125 0.17875 lineto
0.82078 0.17923 lineto
0.80604 0.1948 lineto
0.72687 0.28694 lineto
0.60714 0.44474 lineto
0.48267 0.6318 lineto
0.38511 0.80018 lineto
0.33338 0.90337 lineto
Mistroke
0.32827 0.91478 lineto
0.32684 0.91808 lineto
0.3264 0.91911 lineto
0.32614 0.91974 lineto
0.32607 0.91989 lineto
0.32605 0.91995 lineto
0.32614 0.91974 lineto
0.32681 0.91807 lineto
0.33007 0.90971 lineto
0.34326 0.87328 lineto
0.36324 0.81223 lineto
0.41277 0.63182 lineto
0.43718 0.52366 lineto
0.4586 0.41255 lineto
0.47572 0.30574 lineto
0.48794 0.21026 lineto
0.49224 0.16879 lineto
0.49543 0.13245 lineto
0.49762 0.10184 lineto
0.49899 0.07749 lineto
0.49941 0.06779 lineto
0.4997 0.05979 lineto
0.49987 0.05354 lineto
0.49993 0.05107 lineto
0.49996 0.04905 lineto
0.49998 0.04748 lineto
0.49999 0.04686 lineto
0.5 0.04636 lineto
0.5 0.04596 lineto
0.5 0.04568 lineto
0.5 0.04551 lineto
0.5 0.04545 lineto
0.5 0.04551 lineto
0.5 0.04568 lineto
0.5 0.04596 lineto
0.5 0.04636 lineto
0.50002 0.04748 lineto
0.50004 0.04905 lineto
0.50007 0.05107 lineto
0.50013 0.05354 lineto
0.5003 0.05979 lineto
0.50059 0.06779 lineto
0.50101 0.07749 lineto
0.50238 0.10184 lineto
0.50457 0.13245 lineto
0.51206 0.21026 lineto
0.52428 0.30574 lineto
0.56282 0.52366 lineto
0.61269 0.73007 lineto
0.65674 0.87328 lineto
Mistroke
0.66993 0.90971 lineto
0.67319 0.91807 lineto
0.67386 0.91974 lineto
0.67393 0.91989 lineto
0.67395 0.91995 lineto
0.67386 0.91974 lineto
0.67173 0.91478 lineto
0.66662 0.90337 lineto
0.64703 0.86239 lineto
0.57102 0.72143 lineto
0.4567 0.53747 lineto
0.33014 0.35951 lineto
0.22637 0.23113 lineto
0.19396 0.1948 lineto
0.18421 0.1844 lineto
0.18111 0.18116 lineto
0.17922 0.17923 lineto
0.17875 0.17875 lineto
0.17863 0.17863 lineto
0.17859 0.17859 lineto
0.17875 0.17875 lineto
0.17923 0.17922 lineto
0.1844 0.18421 lineto
0.21041 0.20814 lineto
0.32136 0.30063 lineto
0.49052 0.42492 lineto
0.67759 0.54524 lineto
0.83367 0.6325 lineto
0.88578 0.6584 lineto
0.91478 0.67173 lineto
0.91808 0.67316 lineto
0.91974 0.67386 lineto
0.91989 0.67393 lineto
0.91995 0.67395 lineto
0.91974 0.67386 lineto
0.91807 0.67319 lineto
0.89473 0.66435 lineto
0.77351 0.62506 lineto
0.57855 0.57476 lineto
0.46802 0.55164 lineto
0.35816 0.53225 lineto
0.25617 0.51755 lineto
0.16879 0.50776 lineto
0.13245 0.50457 lineto
0.10184 0.50238 lineto
0.07749 0.50101 lineto
0.06779 0.50059 lineto
0.05979 0.5003 lineto
0.05354 0.50013 lineto
0.05107 0.50007 lineto
Mistroke
0.04905 0.50004 lineto
0.04748 0.50002 lineto
0.04686 0.50001 lineto
0.04636 0.5 lineto
0.04596 0.5 lineto
0.04568 0.5 lineto
0.04551 0.5 lineto
0.04545 0.5 lineto
0.04551 0.5 lineto
0.04568 0.5 lineto
0.04596 0.5 lineto
0.04636 0.5 lineto
0.04748 0.49998 lineto
0.04905 0.49996 lineto
0.05107 0.49993 lineto
0.05354 0.49987 lineto
0.05979 0.4997 lineto
0.06779 0.49941 lineto
0.07749 0.49899 lineto
0.10184 0.49762 lineto
0.13245 0.49543 lineto
0.16879 0.49224 lineto
0.25617 0.48245 lineto
0.35816 0.46775 lineto
0.57855 0.42524 lineto
0.77351 0.37494 lineto
0.89473 0.33565 lineto
0.90971 0.33007 lineto
0.91807 0.32681 lineto
0.91911 0.32639 lineto
0.91974 0.32614 lineto
0.91989 0.32607 lineto
0.91995 0.32605 lineto
0.91989 0.32607 lineto
0.91974 0.32614 lineto
0.91808 0.32684 lineto
0.91478 0.32827 lineto
0.83367 0.3675 lineto
0.67759 0.45476 lineto
0.49052 0.57508 lineto
0.32136 0.69937 lineto
0.21041 0.79186 lineto
0.1844 0.81579 lineto
0.17923 0.82078 lineto
0.17875 0.82125 lineto
0.17863 0.82137 lineto
0.17859 0.82141 lineto
0.17875 0.82125 lineto
0.17922 0.82077 lineto
0.19396 0.8052 lineto
Mistroke
0.22637 0.76887 lineto
0.33014 0.64049 lineto
0.4567 0.46253 lineto
0.57102 0.27857 lineto
0.64703 0.13761 lineto
0.66662 0.09663 lineto
0.67173 0.08522 lineto
0.67316 0.08192 lineto
0.6736 0.08089 lineto
0.67386 0.08026 lineto
0.67393 0.08011 lineto
0.67395 0.08005 lineto
0.67393 0.08011 lineto
0.67386 0.08026 lineto
0.67319 0.08193 lineto
0.66993 0.09029 lineto
0.65674 0.12672 lineto
0.61269 0.26993 lineto
0.56282 0.47634 lineto
0.5414 0.58745 lineto
0.52428 0.69426 lineto
0.51206 0.78974 lineto
0.50457 0.86755 lineto
0.50238 0.89816 lineto
0.50101 0.92251 lineto
0.50059 0.93221 lineto
0.5003 0.94021 lineto
0.50013 0.94646 lineto
0.50007 0.94893 lineto
0.50004 0.95095 lineto
0.50002 0.95252 lineto
0.50001 0.95314 lineto
0.5 0.95364 lineto
0.5 0.95404 lineto
0.5 0.95432 lineto
0.5 0.95449 lineto
0.5 0.95455 lineto
0.5 0.95449 lineto
0.5 0.95432 lineto
0.5 0.95404 lineto
0.5 0.95364 lineto
0.49998 0.95252 lineto
0.49996 0.95095 lineto
0.49993 0.94893 lineto
0.49987 0.94646 lineto
0.4997 0.94021 lineto
0.49941 0.93221 lineto
0.49899 0.92251 lineto
0.49762 0.89816 lineto
0.49543 0.86755 lineto
Mistroke
0.48794 0.78974 lineto
0.47572 0.69426 lineto
0.4586 0.58745 lineto
0.41277 0.36818 lineto
0.36324 0.18777 lineto
0.34326 0.12672 lineto
0.33007 0.09029 lineto
0.32681 0.08193 lineto
0.32614 0.08026 lineto
0.32607 0.08011 lineto
0.32605 0.08005 lineto
0.32614 0.08026 lineto
0.32684 0.08192 lineto
0.32827 0.08522 lineto
0.33338 0.09663 lineto
0.38511 0.19982 lineto
0.48267 0.3682 lineto
0.60714 0.55526 lineto
0.72687 0.71306 lineto
0.80604 0.8052 lineto
0.81579 0.8156 lineto
0.82078 0.82077 lineto
0.82125 0.82125 lineto
0.82137 0.82137 lineto
0.82141 0.82141 lineto
0.82125 0.82125 lineto
0.82077 0.82078 lineto
0.8156 0.81579 lineto
0.74326 0.7518 lineto
0.59916 0.63892 lineto
0.41517 0.51234 lineto
0.23747 0.40567 lineto
0.11422 0.3416 lineto
0.08522 0.32827 lineto
0.08192 0.32684 lineto
0.08089 0.3264 lineto
0.08026 0.32614 lineto
0.08011 0.32607 lineto
0.08005 0.32605 lineto
0.08026 0.32614 lineto
0.08193 0.32681 lineto
0.10527 0.33565 lineto
0.15435 0.35256 lineto
0.31741 0.40003 lineto
0.53198 0.44836 lineto
0.64184 0.46775 lineto
0.74383 0.48245 lineto
0.83121 0.49224 lineto
0.86755 0.49543 lineto
0.89816 0.49762 lineto
Mistroke
0.92251 0.49899 lineto
0.93221 0.49941 lineto
0.94021 0.4997 lineto
0.94646 0.49987 lineto
0.94893 0.49993 lineto
0.95095 0.49996 lineto
0.95252 0.49998 lineto
0.95314 0.49999 lineto
0.95364 0.5 lineto
0.95404 0.5 lineto
0.95432 0.5 lineto
0.95449 0.5 lineto
0.95455 0.5 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1.010638 141 -93.712746 sc6mt astore rstroke
end
grestore
grestore
%%EndDocument
 @endspecial 587 2561 a Fi(Fig)p Fq(.)g(71.)k(Figures)d(for)e(Exercise)i(5,)f
(part)g(1.)p eop
%%Page: 108 108
108 107 bop 75 -100 a Fq(108)975 b Fm(P)n(arametric)22 b(Curv)n(es)h(in)f(2D)
p 1119 -93 756 2 v 565 834 a @beginspecial 0 @llx 0 @lly 571
@urx 578 @ury 1968 @rwi @setspecial
%%BeginDocument: Par.ex5b.eps


/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /TDeps_dict 20 dict def TDeps_dict begin /showpage {
    
} def /copypage {
    
} def /grestoreall {
    
} def /erasepage {
    
} def /nulldevice {
    
} def /exitserver {
    
} def /initgraphics {
    
} def /renderbands {
    
} def /initmatrix {
    
} def /banddevice {
    
} def /setpageparams {
    
} def /framedevice {
    
} def /note {
    
} def end end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
gsave
0 0 570.586975 577.630188 rectclip
-19 -160 translate
19 160 570.586975 577.630188 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
gsave clpmt currentmatrix pop newpath
1 0 0 1.010638 -146 194.287262 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -146 197] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.454545 0.5 0.454545 [
[(-1)] 0.04545 0.5 0 2 Msboxa
[(-0.5)] 0.27273 0.5 0 2 Msboxa
[(0.5)] 0.72727 0.5 0 2 Msboxa
[(1)] 0.95455 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.5625)] 0.5 1 0 -2 Msboxa
grestore
[(-1)] 0.4875 0.04545 1 0 Msboxa
[(-0.5)] 0.4875 0.27273 1 0 Msboxa
[(0.5)] 0.4875 0.72727 1 0 Msboxa
[(1)] 0.4875 0.95455 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.04545 0.5 moveto
0.04545 0.50625 lineto
stroke
grestore
[(-1)] 0.04545 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.27273 0.5 moveto
0.27273 0.50625 lineto
stroke
grestore
[(-0.5)] 0.27273 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.72727 0.5 moveto
0.72727 0.50625 lineto
stroke
grestore
[(0.5)] 0.72727 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.95455 0.5 moveto
0.95455 0.50625 lineto
stroke
grestore
[(1)] 0.95455 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.09091 0.5 moveto
0.09091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.13636 0.5 moveto
0.13636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18182 0.5 moveto
0.18182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22727 0.5 moveto
0.22727 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31818 0.5 moveto
0.31818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36364 0.5 moveto
0.36364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40909 0.5 moveto
0.40909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45455 0.5 moveto
0.45455 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54545 0.5 moveto
0.54545 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59091 0.5 moveto
0.59091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63636 0.5 moveto
0.63636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.68182 0.5 moveto
0.68182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77273 0.5 moveto
0.77273 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81818 0.5 moveto
0.81818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.86364 0.5 moveto
0.86364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90909 0.5 moveto
0.90909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.5 moveto
0 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
1 0.5 moveto
1 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.5625)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.04545 moveto
0.50625 0.04545 lineto
stroke
grestore
[(-1)] 0.4875 0.04545 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.27273 moveto
0.50625 0.27273 lineto
stroke
grestore
[(-0.5)] 0.4875 0.27273 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.72727 moveto
0.50625 0.72727 lineto
stroke
grestore
[(0.5)] 0.4875 0.72727 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.95455 moveto
0.50625 0.95455 lineto
stroke
grestore
[(1)] 0.4875 0.95455 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.09091 moveto
0.50375 0.09091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13636 moveto
0.50375 0.13636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18182 moveto
0.50375 0.18182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22727 moveto
0.50375 0.22727 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31818 moveto
0.50375 0.31818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36364 moveto
0.50375 0.36364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40909 moveto
0.50375 0.40909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45455 moveto
0.50375 0.45455 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54545 moveto
0.50375 0.54545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59091 moveto
0.50375 0.59091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.63636 moveto
0.50375 0.63636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.68182 moveto
0.50375 0.68182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.77273 moveto
0.50375 0.77273 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.81818 moveto
0.50375 0.81818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.86364 moveto
0.50375 0.86364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90909 moveto
0.50375 0.90909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0 moveto
0.50375 0 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1 moveto
0.50375 1 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.95455 0.5 moveto
0.95449 0.5 lineto
0.95432 0.5 lineto
0.95404 0.5 lineto
0.95364 0.5 lineto
0.95252 0.49998 lineto
0.95095 0.49996 lineto
0.94893 0.49993 lineto
0.94646 0.49987 lineto
0.94021 0.4997 lineto
0.93221 0.49941 lineto
0.92251 0.49899 lineto
0.89816 0.49762 lineto
0.86755 0.49543 lineto
0.83121 0.49224 lineto
0.74383 0.48245 lineto
0.64184 0.46775 lineto
0.53198 0.44836 lineto
0.31741 0.40003 lineto
0.15435 0.35256 lineto
0.10527 0.33565 lineto
0.09029 0.33007 lineto
0.08193 0.32681 lineto
0.08089 0.32639 lineto
0.08026 0.32614 lineto
0.08011 0.32607 lineto
0.08005 0.32605 lineto
0.08011 0.32607 lineto
0.08026 0.32614 lineto
0.08522 0.32827 lineto
0.11422 0.3416 lineto
0.23747 0.40567 lineto
0.41517 0.51234 lineto
0.59916 0.63892 lineto
0.74326 0.7518 lineto
0.8156 0.81579 lineto
0.81884 0.81889 lineto
0.82077 0.82078 lineto
0.82125 0.82125 lineto
0.82137 0.82137 lineto
0.82141 0.82141 lineto
0.82125 0.82125 lineto
0.82078 0.82077 lineto
0.81579 0.8156 lineto
0.80604 0.8052 lineto
0.72687 0.71306 lineto
0.60714 0.55526 lineto
0.48267 0.3682 lineto
0.38511 0.19982 lineto
0.33338 0.09663 lineto
Mistroke
0.32827 0.08522 lineto
0.32684 0.08192 lineto
0.3264 0.08089 lineto
0.32614 0.08026 lineto
0.32607 0.08011 lineto
0.32605 0.08005 lineto
0.32614 0.08026 lineto
0.32681 0.08193 lineto
0.33007 0.09029 lineto
0.36324 0.18777 lineto
0.41277 0.36818 lineto
0.43718 0.47634 lineto
0.4586 0.58745 lineto
0.47572 0.69426 lineto
0.48794 0.78974 lineto
0.49224 0.83121 lineto
0.49543 0.86755 lineto
0.49762 0.89816 lineto
0.49899 0.92251 lineto
0.49941 0.93221 lineto
0.4997 0.94021 lineto
0.49987 0.94646 lineto
0.49993 0.94893 lineto
0.49996 0.95095 lineto
0.49998 0.95252 lineto
0.49999 0.95314 lineto
0.5 0.95364 lineto
0.5 0.95404 lineto
0.5 0.95432 lineto
0.5 0.95449 lineto
0.5 0.95455 lineto
0.5 0.95449 lineto
0.5 0.95432 lineto
0.5 0.95404 lineto
0.5 0.95364 lineto
0.50002 0.95252 lineto
0.50004 0.95095 lineto
0.50007 0.94893 lineto
0.50013 0.94646 lineto
0.5003 0.94021 lineto
0.50059 0.93221 lineto
0.50101 0.92251 lineto
0.50238 0.89816 lineto
0.50457 0.86755 lineto
0.51206 0.78974 lineto
0.52428 0.69426 lineto
0.56282 0.47634 lineto
0.61269 0.26993 lineto
0.65674 0.12672 lineto
0.66993 0.09029 lineto
Mistroke
0.67319 0.08193 lineto
0.67361 0.08089 lineto
0.67386 0.08026 lineto
0.67393 0.08011 lineto
0.67395 0.08005 lineto
0.67386 0.08026 lineto
0.67173 0.08522 lineto
0.66662 0.09663 lineto
0.64703 0.13761 lineto
0.57102 0.27857 lineto
0.4567 0.46253 lineto
0.33014 0.64049 lineto
0.22637 0.76887 lineto
0.19396 0.8052 lineto
0.18421 0.8156 lineto
0.18111 0.81884 lineto
0.17922 0.82077 lineto
0.17875 0.82125 lineto
0.17863 0.82137 lineto
0.17859 0.82141 lineto
0.17875 0.82125 lineto
0.17923 0.82078 lineto
0.1844 0.81579 lineto
0.21041 0.79186 lineto
0.32136 0.69937 lineto
0.49052 0.57508 lineto
0.67759 0.45476 lineto
0.83367 0.3675 lineto
0.88578 0.3416 lineto
0.91478 0.32827 lineto
0.91808 0.32684 lineto
0.91911 0.3264 lineto
0.91974 0.32614 lineto
0.91989 0.32607 lineto
0.91995 0.32605 lineto
0.91974 0.32614 lineto
0.91807 0.32681 lineto
0.90971 0.33007 lineto
0.89473 0.33565 lineto
0.77351 0.37494 lineto
0.57855 0.42524 lineto
0.46802 0.44836 lineto
0.35816 0.46775 lineto
0.25617 0.48245 lineto
0.16879 0.49224 lineto
0.13245 0.49543 lineto
0.10184 0.49762 lineto
0.07749 0.49899 lineto
0.06779 0.49941 lineto
0.05979 0.4997 lineto
Mistroke
0.05354 0.49987 lineto
0.05107 0.49993 lineto
0.04905 0.49996 lineto
0.04748 0.49998 lineto
0.04686 0.49999 lineto
0.04636 0.5 lineto
0.04596 0.5 lineto
0.04568 0.5 lineto
0.04551 0.5 lineto
0.04545 0.5 lineto
0.04551 0.5 lineto
0.04568 0.5 lineto
0.04596 0.5 lineto
0.04636 0.5 lineto
0.04748 0.50002 lineto
0.04905 0.50004 lineto
0.05107 0.50007 lineto
0.05354 0.50013 lineto
0.05979 0.5003 lineto
0.06779 0.50059 lineto
0.07749 0.50101 lineto
0.10184 0.50238 lineto
0.13245 0.50457 lineto
0.16879 0.50776 lineto
0.25617 0.51755 lineto
0.35816 0.53225 lineto
0.57855 0.57476 lineto
0.77351 0.62506 lineto
0.89473 0.66435 lineto
0.90971 0.66993 lineto
0.91807 0.67319 lineto
0.91911 0.67361 lineto
0.91974 0.67386 lineto
0.91989 0.67393 lineto
0.91995 0.67395 lineto
0.91974 0.67386 lineto
0.91478 0.67173 lineto
0.83367 0.6325 lineto
0.67759 0.54524 lineto
0.49052 0.42492 lineto
0.32136 0.30063 lineto
0.21041 0.20814 lineto
0.1844 0.18421 lineto
0.18116 0.18111 lineto
0.17923 0.17922 lineto
0.17875 0.17875 lineto
0.17863 0.17863 lineto
0.17859 0.17859 lineto
0.17875 0.17875 lineto
0.17922 0.17923 lineto
Mistroke
0.19396 0.1948 lineto
0.22637 0.23113 lineto
0.33014 0.35951 lineto
0.4567 0.53747 lineto
0.57102 0.72143 lineto
0.64703 0.86239 lineto
0.66662 0.90337 lineto
0.67173 0.91478 lineto
0.67316 0.91808 lineto
0.6736 0.91911 lineto
0.67386 0.91974 lineto
0.67393 0.91989 lineto
0.67395 0.91995 lineto
0.67393 0.91989 lineto
0.67386 0.91974 lineto
0.67319 0.91807 lineto
0.66993 0.90971 lineto
0.65674 0.87328 lineto
0.61269 0.73007 lineto
0.56282 0.52366 lineto
0.52428 0.30574 lineto
0.51206 0.21026 lineto
0.50776 0.16879 lineto
0.50457 0.13245 lineto
0.50238 0.10184 lineto
0.50101 0.07749 lineto
0.50059 0.06779 lineto
0.5003 0.05979 lineto
0.50013 0.05354 lineto
0.50007 0.05107 lineto
0.50004 0.04905 lineto
0.50002 0.04748 lineto
0.50001 0.04686 lineto
0.5 0.04636 lineto
0.5 0.04596 lineto
0.5 0.04568 lineto
0.5 0.04551 lineto
0.5 0.04545 lineto
0.5 0.04551 lineto
0.5 0.04568 lineto
0.5 0.04596 lineto
0.5 0.04636 lineto
0.49998 0.04748 lineto
0.49996 0.04905 lineto
0.49993 0.05107 lineto
0.49987 0.05354 lineto
0.4997 0.05979 lineto
0.49941 0.06779 lineto
0.49899 0.07749 lineto
0.49762 0.10184 lineto
Mistroke
0.49543 0.13245 lineto
0.48794 0.21026 lineto
0.47572 0.30574 lineto
0.4586 0.41255 lineto
0.41277 0.63182 lineto
0.36324 0.81223 lineto
0.34326 0.87328 lineto
0.33007 0.90971 lineto
0.32681 0.91807 lineto
0.32639 0.91911 lineto
0.32614 0.91974 lineto
0.32607 0.91989 lineto
0.32605 0.91995 lineto
0.32607 0.91989 lineto
0.32614 0.91974 lineto
0.32827 0.91478 lineto
0.33338 0.90337 lineto
0.38511 0.80018 lineto
0.48267 0.6318 lineto
0.60714 0.44474 lineto
0.72687 0.28694 lineto
0.80604 0.1948 lineto
0.81579 0.1844 lineto
0.81889 0.18116 lineto
0.82078 0.17923 lineto
0.82125 0.17875 lineto
0.82137 0.17863 lineto
0.82141 0.17859 lineto
0.82125 0.17875 lineto
0.82077 0.17922 lineto
0.8156 0.18421 lineto
0.74326 0.2482 lineto
0.59916 0.36108 lineto
0.41517 0.48766 lineto
0.23747 0.59433 lineto
0.11422 0.6584 lineto
0.08522 0.67173 lineto
0.08192 0.67316 lineto
0.08089 0.6736 lineto
0.08026 0.67386 lineto
0.08011 0.67393 lineto
0.08005 0.67395 lineto
0.08026 0.67386 lineto
0.08193 0.67319 lineto
0.10527 0.66435 lineto
0.15435 0.64744 lineto
0.31741 0.59997 lineto
0.53198 0.55164 lineto
0.64184 0.53225 lineto
0.74383 0.51755 lineto
Mistroke
0.83121 0.50776 lineto
0.86755 0.50457 lineto
0.89816 0.50238 lineto
0.92251 0.50101 lineto
0.93221 0.50059 lineto
0.94021 0.5003 lineto
0.94646 0.50013 lineto
0.94893 0.50007 lineto
0.95095 0.50004 lineto
0.95252 0.50002 lineto
0.95314 0.50001 lineto
0.95364 0.5 lineto
0.95404 0.5 lineto
0.95432 0.5 lineto
0.95449 0.5 lineto
0.95455 0.5 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1.010638 -146 194.287262 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.010639 142 194.287109 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 142 197] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.454545 0.5 0.454545 [
[(-1)] 0.04545 0.5 0 2 Msboxa
[(-0.5)] 0.27273 0.5 0 2 Msboxa
[(0.5)] 0.72727 0.5 0 2 Msboxa
[(1)] 0.95455 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.6875)] 0.5 1 0 -2 Msboxa
grestore
[(-1)] 0.4875 0.04545 1 0 Msboxa
[(-0.5)] 0.4875 0.27273 1 0 Msboxa
[(0.5)] 0.4875 0.72727 1 0 Msboxa
[(1)] 0.4875 0.95455 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.04545 0.5 moveto
0.04545 0.50625 lineto
stroke
grestore
[(-1)] 0.04545 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.27273 0.5 moveto
0.27273 0.50625 lineto
stroke
grestore
[(-0.5)] 0.27273 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.72727 0.5 moveto
0.72727 0.50625 lineto
stroke
grestore
[(0.5)] 0.72727 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.95455 0.5 moveto
0.95455 0.50625 lineto
stroke
grestore
[(1)] 0.95455 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.09091 0.5 moveto
0.09091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.13636 0.5 moveto
0.13636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18182 0.5 moveto
0.18182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22727 0.5 moveto
0.22727 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31818 0.5 moveto
0.31818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36364 0.5 moveto
0.36364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40909 0.5 moveto
0.40909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45455 0.5 moveto
0.45455 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54545 0.5 moveto
0.54545 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59091 0.5 moveto
0.59091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63636 0.5 moveto
0.63636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.68182 0.5 moveto
0.68182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77273 0.5 moveto
0.77273 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81818 0.5 moveto
0.81818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.86364 0.5 moveto
0.86364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90909 0.5 moveto
0.90909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.5 moveto
0 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
1 0.5 moveto
1 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.6875)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.04545 moveto
0.50625 0.04545 lineto
stroke
grestore
[(-1)] 0.4875 0.04545 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.27273 moveto
0.50625 0.27273 lineto
stroke
grestore
[(-0.5)] 0.4875 0.27273 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.72727 moveto
0.50625 0.72727 lineto
stroke
grestore
[(0.5)] 0.4875 0.72727 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.95455 moveto
0.50625 0.95455 lineto
stroke
grestore
[(1)] 0.4875 0.95455 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.09091 moveto
0.50375 0.09091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13636 moveto
0.50375 0.13636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18182 moveto
0.50375 0.18182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22727 moveto
0.50375 0.22727 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31818 moveto
0.50375 0.31818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36364 moveto
0.50375 0.36364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40909 moveto
0.50375 0.40909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45455 moveto
0.50375 0.45455 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54545 moveto
0.50375 0.54545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59091 moveto
0.50375 0.59091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.63636 moveto
0.50375 0.63636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.68182 moveto
0.50375 0.68182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.77273 moveto
0.50375 0.77273 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.81818 moveto
0.50375 0.81818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.86364 moveto
0.50375 0.86364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90909 moveto
0.50375 0.90909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0 moveto
0.50375 0 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1 moveto
0.50375 1 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.95455 0.5 moveto
0.9545 0.5 lineto
0.95435 0.5 lineto
0.9541 0.49999 lineto
0.95376 0.49999 lineto
0.95278 0.49996 lineto
0.9514 0.4999 lineto
0.94964 0.49981 lineto
0.9475 0.49966 lineto
0.94205 0.49921 lineto
0.93511 0.49846 lineto
0.92671 0.49735 lineto
0.90571 0.49379 lineto
0.87954 0.48808 lineto
0.84878 0.47982 lineto
0.77631 0.4546 lineto
0.69454 0.41717 lineto
0.61025 0.36846 lineto
0.52996 0.31131 lineto
0.45931 0.25018 lineto
0.40243 0.19068 lineto
0.36156 0.13896 lineto
0.33692 0.10094 lineto
0.33021 0.0887 lineto
0.32677 0.08167 lineto
0.32637 0.08078 lineto
0.32613 0.08024 lineto
0.32607 0.0801 lineto
0.32605 0.08005 lineto
0.32613 0.08024 lineto
0.32775 0.08466 lineto
0.33105 0.09506 lineto
0.33541 0.11144 lineto
0.34022 0.13363 lineto
0.34486 0.16134 lineto
0.34693 0.17713 lineto
0.34876 0.19414 lineto
0.35027 0.21228 lineto
0.35089 0.22176 lineto
0.35141 0.23149 lineto
0.35183 0.24146 lineto
0.352 0.24654 lineto
0.35213 0.25167 lineto
0.35224 0.25685 lineto
0.35232 0.26209 lineto
0.35237 0.26738 lineto
0.35238 0.27273 lineto
0.35237 0.27812 lineto
0.35232 0.28356 lineto
0.35224 0.28904 lineto
Mistroke
0.35212 0.29457 lineto
0.35179 0.30576 lineto
0.35131 0.31711 lineto
0.3507 0.3286 lineto
0.34994 0.34022 lineto
0.34797 0.36381 lineto
0.34539 0.38776 lineto
0.3422 0.41196 lineto
0.33401 0.46066 lineto
0.32349 0.50902 lineto
0.29647 0.60122 lineto
0.26417 0.68216 lineto
0.23101 0.74677 lineto
0.18334 0.81619 lineto
0.18074 0.81912 lineto
0.17914 0.82085 lineto
0.17873 0.82127 lineto
0.17862 0.82138 lineto
0.17859 0.82141 lineto
0.17873 0.82127 lineto
0.17915 0.82086 lineto
0.18381 0.81666 lineto
0.19342 0.80876 lineto
0.28325 0.75262 lineto
0.35655 0.71927 lineto
0.39878 0.70353 lineto
0.44385 0.68913 lineto
0.49098 0.67651 lineto
0.53934 0.66599 lineto
0.58804 0.6578 lineto
0.61224 0.65461 lineto
0.63619 0.65203 lineto
0.65978 0.65006 lineto
0.6714 0.6493 lineto
0.68289 0.64869 lineto
0.69424 0.64821 lineto
0.69985 0.64803 lineto
0.70543 0.64788 lineto
0.71096 0.64776 lineto
0.71644 0.64768 lineto
0.72188 0.64763 lineto
0.72727 0.64762 lineto
0.73262 0.64763 lineto
0.73791 0.64768 lineto
0.74315 0.64776 lineto
0.74833 0.64787 lineto
0.75854 0.64817 lineto
0.76851 0.64859 lineto
0.77824 0.64911 lineto
0.78772 0.64973 lineto
Mistroke
0.80586 0.65124 lineto
0.82287 0.65307 lineto
0.83866 0.65514 lineto
0.86637 0.65978 lineto
0.90494 0.66895 lineto
0.91534 0.67225 lineto
0.9183 0.67331 lineto
0.91921 0.67366 lineto
0.91976 0.67387 lineto
0.9199 0.67393 lineto
0.91995 0.67395 lineto
0.91976 0.67387 lineto
0.91833 0.67323 lineto
0.9113 0.66979 lineto
0.88211 0.65272 lineto
0.83654 0.62007 lineto
0.78016 0.57104 lineto
0.71909 0.50687 lineto
0.65931 0.43078 lineto
0.60591 0.34771 lineto
0.5626 0.26383 lineto
0.53128 0.18588 lineto
0.52018 0.15122 lineto
0.51192 0.12046 lineto
0.50621 0.09429 lineto
0.50265 0.07329 lineto
0.50154 0.06489 lineto
0.50079 0.05795 lineto
0.50034 0.0525 lineto
0.50019 0.05036 lineto
0.5001 0.0486 lineto
0.50004 0.04722 lineto
0.50002 0.04668 lineto
0.50001 0.04624 lineto
0.50001 0.0459 lineto
0.5 0.04565 lineto
0.5 0.0455 lineto
0.5 0.04545 lineto
0.5 0.0455 lineto
0.5 0.04565 lineto
0.49999 0.0459 lineto
0.49999 0.04624 lineto
0.49996 0.04722 lineto
0.4999 0.0486 lineto
0.49981 0.05036 lineto
0.49966 0.0525 lineto
0.49921 0.05795 lineto
0.49846 0.06489 lineto
0.49735 0.07329 lineto
0.49379 0.09429 lineto
Mistroke
0.48808 0.12046 lineto
0.46872 0.18588 lineto
0.4374 0.26383 lineto
0.39409 0.34771 lineto
0.34069 0.43078 lineto
0.21984 0.57104 lineto
0.16346 0.62007 lineto
0.11789 0.65272 lineto
0.0887 0.66979 lineto
0.08167 0.67323 lineto
0.08078 0.67363 lineto
0.08024 0.67387 lineto
0.0801 0.67393 lineto
0.08005 0.67395 lineto
0.08024 0.67387 lineto
0.08466 0.67225 lineto
0.09506 0.66895 lineto
0.11144 0.66459 lineto
0.13363 0.65978 lineto
0.16134 0.65514 lineto
0.17713 0.65307 lineto
0.19414 0.65124 lineto
0.21228 0.64973 lineto
0.22176 0.64911 lineto
0.23149 0.64859 lineto
0.24146 0.64817 lineto
0.24654 0.648 lineto
0.25167 0.64787 lineto
0.25685 0.64776 lineto
0.26209 0.64768 lineto
0.26738 0.64763 lineto
0.27273 0.64762 lineto
0.27812 0.64763 lineto
0.28356 0.64768 lineto
0.28904 0.64776 lineto
0.29457 0.64788 lineto
0.30576 0.64821 lineto
0.31711 0.64869 lineto
0.3286 0.6493 lineto
0.34022 0.65006 lineto
0.36381 0.65203 lineto
0.38776 0.65461 lineto
0.41196 0.6578 lineto
0.46066 0.66599 lineto
0.50902 0.67651 lineto
0.55615 0.68913 lineto
0.64345 0.71927 lineto
0.71675 0.75262 lineto
0.77186 0.78426 lineto
0.80658 0.80876 lineto
Mistroke
0.81619 0.81666 lineto
0.81912 0.81926 lineto
0.82085 0.82086 lineto
0.82127 0.82127 lineto
0.82138 0.82138 lineto
0.82141 0.82141 lineto
0.82127 0.82127 lineto
0.82086 0.82085 lineto
0.81666 0.81619 lineto
0.79774 0.79182 lineto
0.73583 0.68216 lineto
0.70353 0.60122 lineto
0.68913 0.55615 lineto
0.67651 0.50902 lineto
0.66599 0.46066 lineto
0.6578 0.41196 lineto
0.65461 0.38776 lineto
0.65203 0.36381 lineto
0.65006 0.34022 lineto
0.6493 0.3286 lineto
0.64869 0.31711 lineto
0.64821 0.30576 lineto
0.64803 0.30015 lineto
0.64788 0.29457 lineto
0.64776 0.28904 lineto
0.64768 0.28356 lineto
0.64763 0.27812 lineto
0.64762 0.27273 lineto
0.64763 0.26738 lineto
0.64768 0.26209 lineto
0.64776 0.25685 lineto
0.64787 0.25167 lineto
0.64817 0.24146 lineto
0.64859 0.23149 lineto
0.64911 0.22176 lineto
0.64973 0.21228 lineto
0.65124 0.19414 lineto
0.65307 0.17713 lineto
0.65514 0.16134 lineto
0.65978 0.13363 lineto
0.66459 0.11144 lineto
0.67225 0.08466 lineto
0.67331 0.0817 lineto
0.67366 0.08079 lineto
0.67387 0.08024 lineto
0.67393 0.0801 lineto
0.67395 0.08005 lineto
0.67387 0.08024 lineto
0.67323 0.08167 lineto
0.66308 0.10094 lineto
Mistroke
0.63844 0.13896 lineto
0.59757 0.19068 lineto
0.54069 0.25018 lineto
0.47004 0.31131 lineto
0.38975 0.36846 lineto
0.30546 0.41717 lineto
0.22369 0.4546 lineto
0.15122 0.47982 lineto
0.12046 0.48808 lineto
0.09429 0.49379 lineto
0.07329 0.49735 lineto
0.06489 0.49846 lineto
0.05795 0.49921 lineto
0.0525 0.49966 lineto
0.05036 0.49981 lineto
0.0486 0.4999 lineto
0.04722 0.49996 lineto
0.04668 0.49998 lineto
0.04624 0.49999 lineto
0.0459 0.49999 lineto
0.04565 0.5 lineto
0.0455 0.5 lineto
0.04545 0.5 lineto
0.0455 0.5 lineto
0.04565 0.5 lineto
0.0459 0.50001 lineto
0.04624 0.50001 lineto
0.04722 0.50004 lineto
0.0486 0.5001 lineto
0.05036 0.50019 lineto
0.0525 0.50034 lineto
0.05795 0.50079 lineto
0.06489 0.50154 lineto
0.07329 0.50265 lineto
0.09429 0.50621 lineto
0.12046 0.51192 lineto
0.15122 0.52018 lineto
0.22369 0.5454 lineto
0.30546 0.58283 lineto
0.38975 0.63154 lineto
0.47004 0.68869 lineto
0.54069 0.74982 lineto
0.59757 0.80932 lineto
0.66308 0.89906 lineto
0.66979 0.9113 lineto
0.67323 0.91833 lineto
0.67363 0.91922 lineto
0.67387 0.91976 lineto
0.67393 0.9199 lineto
0.67395 0.91995 lineto
Mistroke
0.67387 0.91976 lineto
0.67331 0.9183 lineto
0.67225 0.91534 lineto
0.66895 0.90494 lineto
0.66459 0.88856 lineto
0.65978 0.86637 lineto
0.65514 0.83866 lineto
0.65307 0.82287 lineto
0.65124 0.80586 lineto
0.64973 0.78772 lineto
0.64911 0.77824 lineto
0.64859 0.76851 lineto
0.64817 0.75854 lineto
0.648 0.75346 lineto
0.64787 0.74833 lineto
0.64776 0.74315 lineto
0.64768 0.73791 lineto
0.64763 0.73262 lineto
0.64762 0.72727 lineto
0.64763 0.72188 lineto
0.64768 0.71644 lineto
0.64776 0.71096 lineto
0.64788 0.70543 lineto
0.64803 0.69985 lineto
0.64821 0.69424 lineto
0.64869 0.68289 lineto
0.6493 0.6714 lineto
0.65006 0.65978 lineto
0.65203 0.63619 lineto
0.65461 0.61224 lineto
0.6578 0.58804 lineto
0.66599 0.53934 lineto
0.67651 0.49098 lineto
0.70353 0.39878 lineto
0.73583 0.31784 lineto
0.79774 0.20818 lineto
0.81666 0.18381 lineto
0.81926 0.18088 lineto
0.82086 0.17915 lineto
0.82127 0.17873 lineto
0.82138 0.17862 lineto
0.82141 0.17859 lineto
0.82127 0.17873 lineto
0.82085 0.17914 lineto
0.80658 0.19124 lineto
0.77186 0.21574 lineto
0.71675 0.24738 lineto
0.64345 0.28073 lineto
0.60122 0.29647 lineto
0.55615 0.31087 lineto
Mistroke
0.50902 0.32349 lineto
0.46066 0.33401 lineto
0.41196 0.3422 lineto
0.38776 0.34539 lineto
0.36381 0.34797 lineto
0.34022 0.34994 lineto
0.3286 0.3507 lineto
0.31711 0.35131 lineto
0.30576 0.35179 lineto
0.30015 0.35197 lineto
0.29457 0.35212 lineto
0.28904 0.35224 lineto
0.28356 0.35232 lineto
0.27812 0.35237 lineto
0.27273 0.35238 lineto
0.26738 0.35237 lineto
0.26209 0.35232 lineto
0.25685 0.35224 lineto
0.25167 0.35213 lineto
0.24146 0.35183 lineto
0.23149 0.35141 lineto
0.22176 0.35089 lineto
0.21228 0.35027 lineto
0.19414 0.34876 lineto
0.17713 0.34693 lineto
0.16134 0.34486 lineto
0.13363 0.34022 lineto
0.09506 0.33105 lineto
0.08466 0.32775 lineto
0.0817 0.32669 lineto
0.08079 0.32634 lineto
0.08024 0.32613 lineto
0.0801 0.32607 lineto
0.08005 0.32605 lineto
0.08024 0.32613 lineto
0.08167 0.32677 lineto
0.0887 0.33021 lineto
0.11789 0.34728 lineto
0.16346 0.37993 lineto
0.21984 0.42896 lineto
0.28091 0.49313 lineto
0.34069 0.56922 lineto
0.39409 0.65229 lineto
0.4374 0.73617 lineto
0.46872 0.81412 lineto
0.47982 0.84878 lineto
0.48808 0.87954 lineto
0.49379 0.90571 lineto
0.49735 0.92671 lineto
0.49846 0.93511 lineto
Mistroke
0.49921 0.94205 lineto
0.49966 0.9475 lineto
0.49981 0.94964 lineto
0.4999 0.9514 lineto
0.49996 0.95278 lineto
0.49998 0.95332 lineto
0.49999 0.95376 lineto
0.49999 0.9541 lineto
0.5 0.95435 lineto
0.5 0.9545 lineto
0.5 0.95455 lineto
0.5 0.9545 lineto
0.5 0.95435 lineto
0.50001 0.9541 lineto
0.50001 0.95376 lineto
0.50004 0.95278 lineto
0.5001 0.9514 lineto
0.50019 0.94964 lineto
0.50034 0.9475 lineto
0.50079 0.94205 lineto
0.50154 0.93511 lineto
0.50265 0.92671 lineto
0.50621 0.90571 lineto
0.51192 0.87954 lineto
0.53128 0.81412 lineto
0.5626 0.73617 lineto
0.60591 0.65229 lineto
0.65931 0.56922 lineto
0.71909 0.49313 lineto
0.83654 0.37993 lineto
0.88211 0.34728 lineto
0.9113 0.33021 lineto
0.91833 0.32677 lineto
0.91976 0.32613 lineto
0.9199 0.32607 lineto
0.91995 0.32605 lineto
0.91976 0.32613 lineto
0.91534 0.32775 lineto
0.90494 0.33105 lineto
0.88856 0.33541 lineto
0.86637 0.34022 lineto
0.83866 0.34486 lineto
0.82287 0.34693 lineto
0.80586 0.34876 lineto
0.78772 0.35027 lineto
0.77824 0.35089 lineto
0.76851 0.35141 lineto
0.75854 0.35183 lineto
0.75346 0.352 lineto
0.74833 0.35213 lineto
Mistroke
0.74315 0.35224 lineto
0.73791 0.35232 lineto
0.73262 0.35237 lineto
0.72727 0.35238 lineto
0.72188 0.35237 lineto
0.71644 0.35232 lineto
0.71096 0.35224 lineto
0.70543 0.35212 lineto
0.69424 0.35179 lineto
0.68289 0.35131 lineto
0.6714 0.3507 lineto
0.65978 0.34994 lineto
0.63619 0.34797 lineto
0.61224 0.34539 lineto
0.58804 0.3422 lineto
0.53934 0.33401 lineto
0.49098 0.32349 lineto
0.44385 0.31087 lineto
0.35655 0.28073 lineto
0.28325 0.24738 lineto
0.19342 0.19124 lineto
0.18381 0.18334 lineto
0.18088 0.18074 lineto
0.17915 0.17914 lineto
0.17873 0.17873 lineto
0.17862 0.17862 lineto
0.17859 0.17859 lineto
0.17873 0.17873 lineto
0.17914 0.17915 lineto
0.18334 0.18381 lineto
0.20226 0.20818 lineto
0.23101 0.25323 lineto
0.26417 0.31784 lineto
0.29647 0.39878 lineto
0.31087 0.44385 lineto
0.32349 0.49098 lineto
0.33401 0.53934 lineto
0.3422 0.58804 lineto
0.34539 0.61224 lineto
0.34797 0.63619 lineto
0.34994 0.65978 lineto
0.3507 0.6714 lineto
0.35131 0.68289 lineto
0.35179 0.69424 lineto
0.35197 0.69985 lineto
0.35212 0.70543 lineto
0.35224 0.71096 lineto
0.35232 0.71644 lineto
0.35237 0.72188 lineto
0.35238 0.72727 lineto
Mistroke
0.35237 0.73262 lineto
0.35232 0.73791 lineto
0.35224 0.74315 lineto
0.35213 0.74833 lineto
0.352 0.75346 lineto
0.35183 0.75854 lineto
0.35141 0.76851 lineto
0.35089 0.77824 lineto
0.35027 0.78772 lineto
0.34876 0.80586 lineto
0.34693 0.82287 lineto
0.34486 0.83866 lineto
0.34022 0.86637 lineto
0.33541 0.88856 lineto
0.32775 0.91534 lineto
0.32669 0.9183 lineto
0.32613 0.91976 lineto
0.32607 0.9199 lineto
0.32605 0.91995 lineto
0.32613 0.91976 lineto
0.32677 0.91833 lineto
0.33692 0.89906 lineto
0.36156 0.86104 lineto
0.40243 0.80932 lineto
0.45931 0.74982 lineto
0.61025 0.63154 lineto
0.69454 0.58283 lineto
0.77631 0.5454 lineto
0.84878 0.52018 lineto
0.87954 0.51192 lineto
0.90571 0.50621 lineto
0.92671 0.50265 lineto
0.93511 0.50154 lineto
0.94205 0.50079 lineto
0.9475 0.50034 lineto
0.94964 0.50019 lineto
0.9514 0.5001 lineto
0.95278 0.50004 lineto
0.95332 0.50002 lineto
0.95376 0.50001 lineto
0.9541 0.50001 lineto
0.95435 0.5 lineto
0.9545 0.5 lineto
0.95455 0.5 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1.010639 142 194.287109 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.014184 -146 -97.617004 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -146 -94] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.454545 0.5 0.454545 [
[(-1)] 0.04545 0.5 0 2 Msboxa
[(-0.5)] 0.27273 0.5 0 2 Msboxa
[(0.5)] 0.72727 0.5 0 2 Msboxa
[(1)] 0.95455 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.8125)] 0.5 1 0 -2 Msboxa
grestore
[(-1)] 0.4875 0.04545 1 0 Msboxa
[(-0.5)] 0.4875 0.27273 1 0 Msboxa
[(0.5)] 0.4875 0.72727 1 0 Msboxa
[(1)] 0.4875 0.95455 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.04545 0.5 moveto
0.04545 0.50625 lineto
stroke
grestore
[(-1)] 0.04545 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.27273 0.5 moveto
0.27273 0.50625 lineto
stroke
grestore
[(-0.5)] 0.27273 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.72727 0.5 moveto
0.72727 0.50625 lineto
stroke
grestore
[(0.5)] 0.72727 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.95455 0.5 moveto
0.95455 0.50625 lineto
stroke
grestore
[(1)] 0.95455 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.09091 0.5 moveto
0.09091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.13636 0.5 moveto
0.13636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18182 0.5 moveto
0.18182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22727 0.5 moveto
0.22727 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31818 0.5 moveto
0.31818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36364 0.5 moveto
0.36364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40909 0.5 moveto
0.40909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45455 0.5 moveto
0.45455 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54545 0.5 moveto
0.54545 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59091 0.5 moveto
0.59091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63636 0.5 moveto
0.63636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.68182 0.5 moveto
0.68182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77273 0.5 moveto
0.77273 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81818 0.5 moveto
0.81818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.86364 0.5 moveto
0.86364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90909 0.5 moveto
0.90909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.5 moveto
0 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
1 0.5 moveto
1 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.8125)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.04545 moveto
0.50625 0.04545 lineto
stroke
grestore
[(-1)] 0.4875 0.04545 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.27273 moveto
0.50625 0.27273 lineto
stroke
grestore
[(-0.5)] 0.4875 0.27273 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.72727 moveto
0.50625 0.72727 lineto
stroke
grestore
[(0.5)] 0.4875 0.72727 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.95455 moveto
0.50625 0.95455 lineto
stroke
grestore
[(1)] 0.4875 0.95455 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.09091 moveto
0.50375 0.09091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13636 moveto
0.50375 0.13636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18182 moveto
0.50375 0.18182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22727 moveto
0.50375 0.22727 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31818 moveto
0.50375 0.31818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36364 moveto
0.50375 0.36364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40909 moveto
0.50375 0.40909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45455 moveto
0.50375 0.45455 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54545 moveto
0.50375 0.54545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59091 moveto
0.50375 0.59091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.63636 moveto
0.50375 0.63636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.68182 moveto
0.50375 0.68182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.77273 moveto
0.50375 0.77273 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.81818 moveto
0.50375 0.81818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.86364 moveto
0.50375 0.86364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90909 moveto
0.50375 0.90909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0 moveto
0.50375 0 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1 moveto
0.50375 1 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.95455 0.5 moveto
0.95451 0.5 lineto
0.95441 0.5 lineto
0.95423 0.49999 lineto
0.95399 0.49999 lineto
0.95329 0.49995 lineto
0.95232 0.49988 lineto
0.95107 0.49977 lineto
0.94956 0.4996 lineto
0.94572 0.49906 lineto
0.94085 0.49818 lineto
0.93498 0.49688 lineto
0.92047 0.49271 lineto
0.90269 0.48605 lineto
0.88223 0.47649 lineto
0.83611 0.4477 lineto
0.78801 0.40589 lineto
0.7437 0.35302 lineto
0.70781 0.29311 lineto
0.69398 0.2622 lineto
0.68313 0.23168 lineto
0.67882 0.21679 lineto
0.67524 0.2023 lineto
0.67237 0.18827 lineto
0.67015 0.17481 lineto
0.66929 0.16832 lineto
0.66857 0.162 lineto
0.66799 0.15586 lineto
0.66756 0.14991 lineto
0.66739 0.14701 lineto
0.66725 0.14416 lineto
0.66714 0.14137 lineto
0.66706 0.13863 lineto
0.66701 0.13594 lineto
0.66699 0.1333 lineto
0.66699 0.13073 lineto
0.66702 0.1282 lineto
0.66707 0.12574 lineto
0.66714 0.12334 lineto
0.66724 0.12099 lineto
0.66735 0.11871 lineto
0.66764 0.11432 lineto
0.66799 0.11019 lineto
0.66886 0.10268 lineto
0.66986 0.09623 lineto
0.67194 0.08655 lineto
0.67351 0.08123 lineto
0.67375 0.08058 lineto
0.6739 0.08018 lineto
0.67393 0.08009 lineto
Mistroke
0.67395 0.08005 lineto
0.67389 0.08018 lineto
0.67342 0.08119 lineto
0.67241 0.08317 lineto
0.66155 0.09966 lineto
0.6374 0.12634 lineto
0.59854 0.15769 lineto
0.57381 0.1733 lineto
0.54594 0.18793 lineto
0.51543 0.20099 lineto
0.48285 0.21197 lineto
0.46599 0.21655 lineto
0.44888 0.22049 lineto
0.43161 0.22375 lineto
0.41428 0.22631 lineto
0.40562 0.22733 lineto
0.39699 0.22817 lineto
0.38838 0.22884 lineto
0.38409 0.2291 lineto
0.37982 0.22933 lineto
0.37556 0.22951 lineto
0.37132 0.22965 lineto
0.36709 0.22975 lineto
0.36289 0.2298 lineto
0.3587 0.22981 lineto
0.35454 0.22978 lineto
0.3504 0.22971 lineto
0.34628 0.2296 lineto
0.34219 0.22945 lineto
0.33813 0.22926 lineto
0.33009 0.22877 lineto
0.32218 0.22813 lineto
0.31441 0.22734 lineto
0.29932 0.22535 lineto
0.2849 0.22287 lineto
0.25835 0.21667 lineto
0.23525 0.20931 lineto
0.21597 0.20144 lineto
0.20072 0.19376 lineto
0.1824 0.18183 lineto
0.18024 0.18008 lineto
0.17899 0.17897 lineto
0.17869 0.17869 lineto
0.17861 0.17861 lineto
0.17859 0.17859 lineto
0.17869 0.17869 lineto
0.17897 0.17899 lineto
0.18183 0.1824 lineto
0.18699 0.18956 lineto
0.19376 0.20072 lineto
Mistroke
0.20144 0.21597 lineto
0.20931 0.23525 lineto
0.21667 0.25835 lineto
0.21995 0.27122 lineto
0.22287 0.2849 lineto
0.22535 0.29932 lineto
0.22641 0.30678 lineto
0.22734 0.31441 lineto
0.22813 0.32218 lineto
0.22877 0.33009 lineto
0.22904 0.33409 lineto
0.22926 0.33813 lineto
0.22945 0.34219 lineto
0.2296 0.34628 lineto
0.22971 0.3504 lineto
0.22978 0.35454 lineto
0.22981 0.3587 lineto
0.2298 0.36289 lineto
0.22975 0.36709 lineto
0.22965 0.37132 lineto
0.22951 0.37556 lineto
0.22933 0.37982 lineto
0.22884 0.38838 lineto
0.22817 0.39699 lineto
0.22631 0.41428 lineto
0.22375 0.43161 lineto
0.22049 0.44888 lineto
0.21197 0.48285 lineto
0.20099 0.51543 lineto
0.18793 0.54594 lineto
0.1733 0.57381 lineto
0.1418 0.61981 lineto
0.11205 0.65128 lineto
0.08983 0.66846 lineto
0.08317 0.67241 lineto
0.08119 0.67342 lineto
0.08056 0.67372 lineto
0.08018 0.67389 lineto
0.08009 0.67393 lineto
0.08005 0.67395 lineto
0.08009 0.67393 lineto
0.08018 0.6739 lineto
0.08123 0.67351 lineto
0.08655 0.67194 lineto
0.09085 0.67092 lineto
0.09623 0.66986 lineto
0.10268 0.66886 lineto
0.10631 0.6684 lineto
0.11019 0.66799 lineto
0.11432 0.66764 lineto
Mistroke
0.11649 0.66749 lineto
0.11871 0.66735 lineto
0.12099 0.66724 lineto
0.12334 0.66714 lineto
0.12574 0.66707 lineto
0.1282 0.66702 lineto
0.13073 0.66699 lineto
0.1333 0.66699 lineto
0.13594 0.66701 lineto
0.13863 0.66706 lineto
0.14137 0.66714 lineto
0.14416 0.66725 lineto
0.14701 0.66739 lineto
0.14991 0.66756 lineto
0.15586 0.66799 lineto
0.162 0.66857 lineto
0.17481 0.67015 lineto
0.18827 0.67237 lineto
0.2023 0.67524 lineto
0.23168 0.68313 lineto
0.2622 0.69398 lineto
0.29311 0.70781 lineto
0.32362 0.72447 lineto
0.38063 0.76506 lineto
0.42835 0.81193 lineto
0.4477 0.83611 lineto
0.46375 0.8598 lineto
0.48605 0.90269 lineto
0.49271 0.92047 lineto
0.49688 0.93498 lineto
0.49818 0.94085 lineto
0.49906 0.94572 lineto
0.4996 0.94956 lineto
0.49977 0.95107 lineto
0.49988 0.95232 lineto
0.49995 0.95329 lineto
0.49997 0.95367 lineto
0.49999 0.95399 lineto
0.49999 0.95423 lineto
0.5 0.95441 lineto
0.5 0.95451 lineto
0.5 0.95455 lineto
0.5 0.95451 lineto
0.5 0.95441 lineto
0.50001 0.95423 lineto
0.50001 0.95399 lineto
0.50005 0.95329 lineto
0.50012 0.95232 lineto
0.50023 0.95107 lineto
0.5004 0.94956 lineto
Mistroke
0.50094 0.94572 lineto
0.50182 0.94085 lineto
0.50312 0.93498 lineto
0.50729 0.92047 lineto
0.51395 0.90269 lineto
0.53625 0.8598 lineto
0.5523 0.83611 lineto
0.57165 0.81193 lineto
0.61937 0.76506 lineto
0.67638 0.72447 lineto
0.70689 0.70781 lineto
0.7378 0.69398 lineto
0.76832 0.68313 lineto
0.78321 0.67882 lineto
0.7977 0.67524 lineto
0.81173 0.67237 lineto
0.82519 0.67015 lineto
0.83168 0.66929 lineto
0.838 0.66857 lineto
0.84414 0.66799 lineto
0.85009 0.66756 lineto
0.85299 0.66739 lineto
0.85584 0.66725 lineto
0.85863 0.66714 lineto
0.86137 0.66706 lineto
0.86406 0.66701 lineto
0.8667 0.66699 lineto
0.86927 0.66699 lineto
0.8718 0.66702 lineto
0.87426 0.66707 lineto
0.87666 0.66714 lineto
0.87901 0.66724 lineto
0.88129 0.66735 lineto
0.88568 0.66764 lineto
0.88981 0.66799 lineto
0.89732 0.66886 lineto
0.90377 0.66986 lineto
0.91345 0.67194 lineto
0.91877 0.67351 lineto
0.91942 0.67375 lineto
0.91982 0.6739 lineto
0.91991 0.67393 lineto
0.91995 0.67395 lineto
0.91982 0.67389 lineto
0.91683 0.67241 lineto
0.91017 0.66846 lineto
0.88795 0.65128 lineto
0.8582 0.61981 lineto
0.84231 0.59854 lineto
0.8267 0.57381 lineto
Mistroke
0.81207 0.54594 lineto
0.79901 0.51543 lineto
0.78803 0.48285 lineto
0.78345 0.46599 lineto
0.77951 0.44888 lineto
0.77625 0.43161 lineto
0.77369 0.41428 lineto
0.77267 0.40562 lineto
0.77183 0.39699 lineto
0.77116 0.38838 lineto
0.7709 0.38409 lineto
0.77067 0.37982 lineto
0.77049 0.37556 lineto
0.77035 0.37132 lineto
0.77025 0.36709 lineto
0.7702 0.36289 lineto
0.77019 0.3587 lineto
0.77022 0.35454 lineto
0.77029 0.3504 lineto
0.7704 0.34628 lineto
0.77055 0.34219 lineto
0.77074 0.33813 lineto
0.77123 0.33009 lineto
0.77187 0.32218 lineto
0.77266 0.31441 lineto
0.77465 0.29932 lineto
0.77713 0.2849 lineto
0.78333 0.25835 lineto
0.79069 0.23525 lineto
0.79856 0.21597 lineto
0.81301 0.18956 lineto
0.81817 0.1824 lineto
0.81992 0.18024 lineto
0.82103 0.17899 lineto
0.82131 0.17869 lineto
0.82139 0.17861 lineto
0.82141 0.17859 lineto
0.82131 0.17869 lineto
0.82101 0.17897 lineto
0.8176 0.18183 lineto
0.79928 0.19376 lineto
0.78403 0.20144 lineto
0.76475 0.20931 lineto
0.74165 0.21667 lineto
0.72878 0.21995 lineto
0.7151 0.22287 lineto
0.70068 0.22535 lineto
0.69322 0.22641 lineto
0.68559 0.22734 lineto
0.67782 0.22813 lineto
Mistroke
0.66991 0.22877 lineto
0.66591 0.22904 lineto
0.66187 0.22926 lineto
0.65781 0.22945 lineto
0.65372 0.2296 lineto
0.6496 0.22971 lineto
0.64546 0.22978 lineto
0.6413 0.22981 lineto
0.63711 0.2298 lineto
0.63291 0.22975 lineto
0.62868 0.22965 lineto
0.62444 0.22951 lineto
0.62018 0.22933 lineto
0.61162 0.22884 lineto
0.60301 0.22817 lineto
0.59438 0.22733 lineto
0.58572 0.22631 lineto
0.56839 0.22375 lineto
0.55112 0.22049 lineto
0.51715 0.21197 lineto
0.48457 0.20099 lineto
0.45406 0.18793 lineto
0.40146 0.15769 lineto
0.3626 0.12634 lineto
0.33845 0.09966 lineto
0.32759 0.08317 lineto
0.32658 0.08119 lineto
0.32628 0.08056 lineto
0.32611 0.08018 lineto
0.32607 0.08009 lineto
0.32605 0.08005 lineto
0.3261 0.08018 lineto
0.32649 0.08123 lineto
0.32806 0.08655 lineto
0.32908 0.09085 lineto
0.33014 0.09623 lineto
0.33114 0.10268 lineto
0.3316 0.10631 lineto
0.33201 0.11019 lineto
0.33236 0.11432 lineto
0.33265 0.11871 lineto
0.33276 0.12099 lineto
0.33286 0.12334 lineto
0.33293 0.12574 lineto
0.33298 0.1282 lineto
0.33301 0.13073 lineto
0.33301 0.1333 lineto
0.33299 0.13594 lineto
0.33294 0.13863 lineto
0.33286 0.14137 lineto
Mistroke
0.33275 0.14416 lineto
0.33244 0.14991 lineto
0.33201 0.15586 lineto
0.33143 0.162 lineto
0.32985 0.17481 lineto
0.32763 0.18827 lineto
0.32476 0.2023 lineto
0.31687 0.23168 lineto
0.30602 0.2622 lineto
0.29219 0.29311 lineto
0.2563 0.35302 lineto
0.21199 0.40589 lineto
0.16389 0.4477 lineto
0.1402 0.46375 lineto
0.11777 0.47649 lineto
0.09731 0.48605 lineto
0.07953 0.49271 lineto
0.06502 0.49688 lineto
0.05915 0.49818 lineto
0.05428 0.49906 lineto
0.05044 0.4996 lineto
0.04893 0.49977 lineto
0.04768 0.49988 lineto
0.04671 0.49995 lineto
0.04633 0.49997 lineto
0.04601 0.49999 lineto
0.04577 0.49999 lineto
0.04559 0.5 lineto
0.04549 0.5 lineto
0.04545 0.5 lineto
0.04549 0.5 lineto
0.04559 0.5 lineto
0.04577 0.50001 lineto
0.04601 0.50001 lineto
0.04671 0.50005 lineto
0.04768 0.50012 lineto
0.04893 0.50023 lineto
0.05044 0.5004 lineto
0.05428 0.50094 lineto
0.05915 0.50182 lineto
0.06502 0.50312 lineto
0.07953 0.50729 lineto
0.09731 0.51395 lineto
0.11777 0.52351 lineto
0.16389 0.5523 lineto
0.21199 0.59411 lineto
0.2563 0.64698 lineto
0.27553 0.67638 lineto
0.29219 0.70689 lineto
0.30602 0.7378 lineto
Mistroke
0.31687 0.76832 lineto
0.32118 0.78321 lineto
0.32476 0.7977 lineto
0.32763 0.81173 lineto
0.32985 0.82519 lineto
0.33143 0.838 lineto
0.33201 0.84414 lineto
0.33244 0.85009 lineto
0.33261 0.85299 lineto
0.33275 0.85584 lineto
0.33286 0.85863 lineto
0.33294 0.86137 lineto
0.33299 0.86406 lineto
0.33301 0.8667 lineto
0.33301 0.86927 lineto
0.33298 0.8718 lineto
0.33293 0.87426 lineto
0.33286 0.87666 lineto
0.33276 0.87901 lineto
0.33265 0.88129 lineto
0.33236 0.88568 lineto
0.33201 0.88981 lineto
0.33114 0.89732 lineto
0.33014 0.90377 lineto
0.32806 0.91345 lineto
0.32649 0.91877 lineto
0.32625 0.91942 lineto
0.3261 0.91982 lineto
0.32607 0.91991 lineto
0.32605 0.91995 lineto
0.32607 0.91991 lineto
0.32611 0.91982 lineto
0.32759 0.91683 lineto
0.33845 0.90034 lineto
0.3626 0.87366 lineto
0.40146 0.84231 lineto
0.42619 0.8267 lineto
0.45406 0.81207 lineto
0.48457 0.79901 lineto
0.51715 0.78803 lineto
0.53401 0.78345 lineto
0.55112 0.77951 lineto
0.56839 0.77625 lineto
0.58572 0.77369 lineto
0.60301 0.77183 lineto
0.61162 0.77116 lineto
0.61591 0.7709 lineto
0.62018 0.77067 lineto
0.62444 0.77049 lineto
0.62868 0.77035 lineto
Mistroke
0.63291 0.77025 lineto
0.63711 0.7702 lineto
0.6413 0.77019 lineto
0.64546 0.77022 lineto
0.6496 0.77029 lineto
0.65372 0.7704 lineto
0.65781 0.77055 lineto
0.66187 0.77074 lineto
0.66991 0.77123 lineto
0.67782 0.77187 lineto
0.68559 0.77266 lineto
0.70068 0.77465 lineto
0.7151 0.77713 lineto
0.74165 0.78333 lineto
0.76475 0.79069 lineto
0.78403 0.79856 lineto
0.79928 0.80624 lineto
0.8176 0.81817 lineto
0.81976 0.81992 lineto
0.82101 0.82103 lineto
0.82131 0.82131 lineto
0.82139 0.82139 lineto
0.82141 0.82141 lineto
0.82131 0.82131 lineto
0.82103 0.82101 lineto
0.81301 0.81044 lineto
0.79856 0.78403 lineto
0.79069 0.76475 lineto
0.78333 0.74165 lineto
0.78005 0.72878 lineto
0.77713 0.7151 lineto
0.77465 0.70068 lineto
0.77359 0.69322 lineto
0.77266 0.68559 lineto
0.77187 0.67782 lineto
0.77123 0.66991 lineto
0.77074 0.66187 lineto
0.77055 0.65781 lineto
0.7704 0.65372 lineto
0.77029 0.6496 lineto
0.77022 0.64546 lineto
0.77019 0.6413 lineto
0.7702 0.63711 lineto
0.77025 0.63291 lineto
0.77035 0.62868 lineto
0.77049 0.62444 lineto
0.77067 0.62018 lineto
0.77116 0.61162 lineto
0.77183 0.60301 lineto
0.77369 0.58572 lineto
Mistroke
0.77625 0.56839 lineto
0.77951 0.55112 lineto
0.78803 0.51715 lineto
0.79901 0.48457 lineto
0.8267 0.42619 lineto
0.84231 0.40146 lineto
0.8582 0.38019 lineto
0.88795 0.34872 lineto
0.91017 0.33154 lineto
0.91683 0.32759 lineto
0.91881 0.32658 lineto
0.91944 0.32628 lineto
0.91982 0.32611 lineto
0.91991 0.32607 lineto
0.91995 0.32605 lineto
0.91982 0.3261 lineto
0.91877 0.32649 lineto
0.91345 0.32806 lineto
0.90915 0.32908 lineto
0.90377 0.33014 lineto
0.89732 0.33114 lineto
0.89369 0.3316 lineto
0.88981 0.33201 lineto
0.88568 0.33236 lineto
0.88129 0.33265 lineto
0.87901 0.33276 lineto
0.87666 0.33286 lineto
0.87426 0.33293 lineto
0.8718 0.33298 lineto
0.86927 0.33301 lineto
0.8667 0.33301 lineto
0.86406 0.33299 lineto
0.86137 0.33294 lineto
0.85863 0.33286 lineto
0.85584 0.33275 lineto
0.85009 0.33244 lineto
0.84414 0.33201 lineto
0.838 0.33143 lineto
0.82519 0.32985 lineto
0.81173 0.32763 lineto
0.7977 0.32476 lineto
0.76832 0.31687 lineto
0.7378 0.30602 lineto
0.70689 0.29219 lineto
0.67638 0.27553 lineto
0.61937 0.23494 lineto
0.57165 0.18807 lineto
0.5523 0.16389 lineto
0.53625 0.1402 lineto
0.52351 0.11777 lineto
Mistroke
0.51395 0.09731 lineto
0.50729 0.07953 lineto
0.50312 0.06502 lineto
0.50182 0.05915 lineto
0.50094 0.05428 lineto
0.5004 0.05044 lineto
0.50023 0.04893 lineto
0.50012 0.04768 lineto
0.50005 0.04671 lineto
0.50003 0.04633 lineto
0.50001 0.04601 lineto
0.50001 0.04577 lineto
0.5 0.04559 lineto
0.5 0.04549 lineto
0.5 0.04545 lineto
0.5 0.04549 lineto
0.5 0.04559 lineto
0.49999 0.04577 lineto
0.49999 0.04601 lineto
0.49995 0.04671 lineto
0.49988 0.04768 lineto
0.49977 0.04893 lineto
0.4996 0.05044 lineto
0.49906 0.05428 lineto
0.49818 0.05915 lineto
0.49688 0.06502 lineto
0.49271 0.07953 lineto
0.48605 0.09731 lineto
0.47649 0.11777 lineto
0.46375 0.1402 lineto
0.42835 0.18807 lineto
0.38063 0.23494 lineto
0.35302 0.2563 lineto
0.32362 0.27553 lineto
0.29311 0.29219 lineto
0.2622 0.30602 lineto
0.23168 0.31687 lineto
0.21679 0.32118 lineto
0.2023 0.32476 lineto
0.18827 0.32763 lineto
0.17481 0.32985 lineto
0.162 0.33143 lineto
0.15586 0.33201 lineto
0.14991 0.33244 lineto
0.14416 0.33275 lineto
0.14137 0.33286 lineto
0.13863 0.33294 lineto
0.13594 0.33299 lineto
0.1333 0.33301 lineto
0.13073 0.33301 lineto
Mistroke
0.1282 0.33298 lineto
0.12574 0.33293 lineto
0.12334 0.33286 lineto
0.12099 0.33276 lineto
0.11871 0.33265 lineto
0.11432 0.33236 lineto
0.11019 0.33201 lineto
0.10268 0.33114 lineto
0.09623 0.33014 lineto
0.08655 0.32806 lineto
0.08123 0.32649 lineto
0.08018 0.3261 lineto
0.08009 0.32607 lineto
0.08005 0.32605 lineto
0.08018 0.32611 lineto
0.08317 0.32759 lineto
0.08983 0.33154 lineto
0.11205 0.34872 lineto
0.1418 0.38019 lineto
0.15769 0.40146 lineto
0.1733 0.42619 lineto
0.18793 0.45406 lineto
0.20099 0.48457 lineto
0.21197 0.51715 lineto
0.21655 0.53401 lineto
0.22049 0.55112 lineto
0.22375 0.56839 lineto
0.22631 0.58572 lineto
0.22817 0.60301 lineto
0.22884 0.61162 lineto
0.2291 0.61591 lineto
0.22933 0.62018 lineto
0.22951 0.62444 lineto
0.22965 0.62868 lineto
0.22975 0.63291 lineto
0.2298 0.63711 lineto
0.22981 0.6413 lineto
0.22978 0.64546 lineto
0.22971 0.6496 lineto
0.2296 0.65372 lineto
0.22945 0.65781 lineto
0.22926 0.66187 lineto
0.22877 0.66991 lineto
0.22813 0.67782 lineto
0.22734 0.68559 lineto
0.22535 0.70068 lineto
0.22287 0.7151 lineto
0.21667 0.74165 lineto
0.20931 0.76475 lineto
0.20144 0.78403 lineto
Mistroke
0.18699 0.81044 lineto
0.18183 0.8176 lineto
0.18008 0.81976 lineto
0.17897 0.82101 lineto
0.17869 0.82131 lineto
0.17861 0.82139 lineto
0.17859 0.82141 lineto
0.17869 0.82131 lineto
0.17899 0.82103 lineto
0.1824 0.81817 lineto
0.18956 0.81301 lineto
0.20072 0.80624 lineto
0.23525 0.79069 lineto
0.25835 0.78333 lineto
0.27122 0.78005 lineto
0.2849 0.77713 lineto
0.29932 0.77465 lineto
0.30678 0.77359 lineto
0.31441 0.77266 lineto
0.32218 0.77187 lineto
0.33009 0.77123 lineto
0.33409 0.77096 lineto
0.33813 0.77074 lineto
0.34219 0.77055 lineto
0.34628 0.7704 lineto
0.3504 0.77029 lineto
0.35454 0.77022 lineto
0.3587 0.77019 lineto
0.36289 0.7702 lineto
0.36709 0.77025 lineto
0.37132 0.77035 lineto
0.37982 0.77067 lineto
0.38409 0.7709 lineto
0.38838 0.77116 lineto
0.39699 0.77183 lineto
0.41428 0.77369 lineto
0.43161 0.77625 lineto
0.44888 0.77951 lineto
0.48285 0.78803 lineto
0.51543 0.79901 lineto
0.54594 0.81207 lineto
0.59854 0.84231 lineto
0.6374 0.87366 lineto
0.66155 0.90034 lineto
0.67241 0.91683 lineto
0.67342 0.91881 lineto
0.67389 0.91982 lineto
0.67393 0.91991 lineto
0.67395 0.91995 lineto
0.6739 0.91982 lineto
Mistroke
0.67351 0.91877 lineto
0.67194 0.91345 lineto
0.67092 0.90915 lineto
0.66986 0.90377 lineto
0.66886 0.89732 lineto
0.66799 0.88981 lineto
0.66764 0.88568 lineto
0.66749 0.88351 lineto
0.66735 0.88129 lineto
0.66724 0.87901 lineto
0.66714 0.87666 lineto
0.66707 0.87426 lineto
0.66702 0.8718 lineto
0.66699 0.86927 lineto
0.66699 0.8667 lineto
0.66701 0.86406 lineto
0.66706 0.86137 lineto
0.66714 0.85863 lineto
0.66725 0.85584 lineto
0.66739 0.85299 lineto
0.66756 0.85009 lineto
0.66799 0.84414 lineto
0.66857 0.838 lineto
0.67015 0.82519 lineto
0.67237 0.81173 lineto
0.67524 0.7977 lineto
0.68313 0.76832 lineto
0.69398 0.7378 lineto
0.70781 0.70689 lineto
0.7437 0.64698 lineto
0.78801 0.59411 lineto
0.83611 0.5523 lineto
0.88223 0.52351 lineto
0.90269 0.51395 lineto
0.92047 0.50729 lineto
0.93498 0.50312 lineto
0.94085 0.50182 lineto
0.94572 0.50094 lineto
0.94956 0.5004 lineto
0.95107 0.50023 lineto
0.95232 0.50012 lineto
0.95329 0.50005 lineto
0.95367 0.50003 lineto
0.95399 0.50001 lineto
0.95423 0.50001 lineto
0.95441 0.5 lineto
0.95451 0.5 lineto
0.95455 0.5 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1.014184 -146 -97.617004 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.014184 141 -97.617004 sc5mt astore pop false {
    sc5mt dodrawctm 165 255 282 282 0 rfpath unpagectm
} {
    282 282 165 255 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 141 -94] dodrawctm
165 255 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	282.000000 def
/Mwidth		282.000000 def
/Mheight	282.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.454545 0.5 0.454545 [
[(-1)] 0.04545 0.5 0 2 Msboxa
[(-0.5)] 0.27273 0.5 0 2 Msboxa
[(0.5)] 0.72727 0.5 0 2 Msboxa
[(1)] 0.95455 0.5 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.9375)] 0.5 1 0 -2 Msboxa
grestore
[(-1)] 0.4875 0.04545 1 0 Msboxa
[(-0.5)] 0.4875 0.27273 1 0 Msboxa
[(0.5)] 0.4875 0.72727 1 0 Msboxa
[(1)] 0.4875 0.95455 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 1.001 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.04545 0.5 moveto
0.04545 0.50625 lineto
stroke
grestore
[(-1)] 0.04545 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.27273 0.5 moveto
0.27273 0.50625 lineto
stroke
grestore
[(-0.5)] 0.27273 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.72727 0.5 moveto
0.72727 0.50625 lineto
stroke
grestore
[(0.5)] 0.72727 0.5 0 2 Mshowa
gsave
0.002 setlinewidth
0.95455 0.5 moveto
0.95455 0.50625 lineto
stroke
grestore
[(1)] 0.95455 0.5 0 2 Mshowa
gsave
0.001 setlinewidth
0.09091 0.5 moveto
0.09091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.13636 0.5 moveto
0.13636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.18182 0.5 moveto
0.18182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22727 0.5 moveto
0.22727 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31818 0.5 moveto
0.31818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36364 0.5 moveto
0.36364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40909 0.5 moveto
0.40909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45455 0.5 moveto
0.45455 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54545 0.5 moveto
0.54545 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59091 0.5 moveto
0.59091 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.63636 0.5 moveto
0.63636 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.68182 0.5 moveto
0.68182 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.77273 0.5 moveto
0.77273 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81818 0.5 moveto
0.81818 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.86364 0.5 moveto
0.86364 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90909 0.5 moveto
0.90909 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
0 0.5 moveto
0 0.50375 lineto
stroke
grestore
gsave
0.001 setlinewidth
1 0.5 moveto
1 0.50375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.5 moveto
1 0.5 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(b/a = 0.9375)] 0.5 1 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0.04545 moveto
0.50625 0.04545 lineto
stroke
grestore
[(-1)] 0.4875 0.04545 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.27273 moveto
0.50625 0.27273 lineto
stroke
grestore
[(-0.5)] 0.4875 0.27273 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.72727 moveto
0.50625 0.72727 lineto
stroke
grestore
[(0.5)] 0.4875 0.72727 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.95455 moveto
0.50625 0.95455 lineto
stroke
grestore
[(1)] 0.4875 0.95455 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.09091 moveto
0.50375 0.09091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13636 moveto
0.50375 0.13636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18182 moveto
0.50375 0.18182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22727 moveto
0.50375 0.22727 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31818 moveto
0.50375 0.31818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36364 moveto
0.50375 0.36364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40909 moveto
0.50375 0.40909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45455 moveto
0.50375 0.45455 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54545 moveto
0.50375 0.54545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.59091 moveto
0.50375 0.59091 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.63636 moveto
0.50375 0.63636 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.68182 moveto
0.50375 0.68182 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.77273 moveto
0.50375 0.77273 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.81818 moveto
0.50375 0.81818 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.86364 moveto
0.50375 0.86364 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90909 moveto
0.50375 0.90909 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0 moveto
0.50375 0 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 1 moveto
0.50375 1 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 1 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 1 lineto
0 1 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.95455 0.5 moveto
0.95453 0.5 lineto
0.95449 0.5 lineto
0.95442 0.5 lineto
0.95433 0.49999 lineto
0.95406 0.49997 lineto
0.95369 0.49994 lineto
0.95321 0.49988 lineto
0.95263 0.49979 lineto
0.95117 0.4995 lineto
0.94933 0.49902 lineto
0.94712 0.49833 lineto
0.94176 0.49611 lineto
0.93535 0.4926 lineto
0.92825 0.48761 lineto
0.92081 0.48105 lineto
0.91342 0.4729 lineto
0.90644 0.46325 lineto
0.90022 0.45227 lineto
0.89506 0.44021 lineto
0.89295 0.43386 lineto
0.89118 0.42736 lineto
0.88977 0.42075 lineto
0.8892 0.41742 lineto
0.88873 0.41408 lineto
0.88835 0.41073 lineto
0.88806 0.40739 lineto
0.88795 0.40572 lineto
0.88787 0.40406 lineto
0.88781 0.4024 lineto
0.88777 0.40074 lineto
0.88776 0.39909 lineto
0.88776 0.39744 lineto
0.88779 0.3958 lineto
0.88785 0.39417 lineto
0.88792 0.39255 lineto
0.88802 0.39093 lineto
0.88828 0.38773 lineto
0.88863 0.38458 lineto
0.88906 0.38147 lineto
0.89015 0.37542 lineto
0.89153 0.36962 lineto
0.89317 0.36411 lineto
0.89707 0.3541 lineto
0.90154 0.34558 lineto
0.90621 0.33865 lineto
0.9107 0.33337 lineto
0.91464 0.32965 lineto
0.91768 0.32736 lineto
0.91951 0.32626 lineto
Mistroke
0.9199 0.32607 lineto
0.91993 0.32606 lineto
0.91995 0.32605 lineto
0.9199 0.32607 lineto
0.91949 0.32621 lineto
0.91867 0.32645 lineto
0.91742 0.32673 lineto
0.91575 0.32702 lineto
0.91475 0.32715 lineto
0.91365 0.32726 lineto
0.91306 0.32731 lineto
0.91245 0.32735 lineto
0.91181 0.32738 lineto
0.91114 0.32741 lineto
0.91045 0.32742 lineto
0.90974 0.32743 lineto
0.909 0.32743 lineto
0.90824 0.32742 lineto
0.90745 0.32739 lineto
0.90664 0.32736 lineto
0.90581 0.32731 lineto
0.90496 0.32725 lineto
0.90318 0.32708 lineto
0.90132 0.32685 lineto
0.89737 0.3262 lineto
0.89313 0.32526 lineto
0.88864 0.324 lineto
0.87908 0.32042 lineto
0.86904 0.31534 lineto
0.85892 0.30871 lineto
0.84908 0.30058 lineto
0.83988 0.29108 lineto
0.83165 0.28043 lineto
0.82462 0.26891 lineto
0.819 0.25686 lineto
0.81675 0.25075 lineto
0.81487 0.24464 lineto
0.81338 0.23859 lineto
0.81277 0.2356 lineto
0.81226 0.23264 lineto
0.81183 0.22971 lineto
0.81149 0.22683 lineto
0.81135 0.22541 lineto
0.81124 0.224 lineto
0.81114 0.2226 lineto
0.81107 0.22122 lineto
0.81101 0.21985 lineto
0.81097 0.2185 lineto
0.81096 0.21716 lineto
0.81096 0.21584 lineto
Mistroke
0.81098 0.21454 lineto
0.81102 0.21325 lineto
0.81107 0.21199 lineto
0.81114 0.21074 lineto
0.81133 0.2083 lineto
0.81158 0.20594 lineto
0.81223 0.20148 lineto
0.81307 0.19739 lineto
0.81405 0.19368 lineto
0.81623 0.18749 lineto
0.81841 0.18297 lineto
0.82021 0.18009 lineto
0.82127 0.17874 lineto
0.82137 0.17863 lineto
0.8214 0.1786 lineto
0.82141 0.17859 lineto
0.82137 0.17863 lineto
0.82126 0.17873 lineto
0.81991 0.17979 lineto
0.81703 0.18159 lineto
0.81251 0.18377 lineto
0.80632 0.18595 lineto
0.80261 0.18693 lineto
0.79852 0.18777 lineto
0.79633 0.18812 lineto
0.79406 0.18842 lineto
0.7917 0.18867 lineto
0.79049 0.18877 lineto
0.78926 0.18886 lineto
0.78801 0.18893 lineto
0.78675 0.18898 lineto
0.78546 0.18902 lineto
0.78416 0.18904 lineto
0.78284 0.18904 lineto
0.7815 0.18903 lineto
0.78015 0.18899 lineto
0.77878 0.18893 lineto
0.7774 0.18886 lineto
0.776 0.18876 lineto
0.77317 0.18851 lineto
0.77029 0.18817 lineto
0.76736 0.18774 lineto
0.76141 0.18662 lineto
0.75536 0.18513 lineto
0.74314 0.181 lineto
0.73109 0.17538 lineto
0.71957 0.16835 lineto
0.70892 0.16012 lineto
0.69942 0.15092 lineto
0.69129 0.14108 lineto
Mistroke
0.68466 0.13096 lineto
0.67958 0.12092 lineto
0.676 0.11136 lineto
0.67474 0.10687 lineto
0.6738 0.10263 lineto
0.67344 0.10062 lineto
0.67315 0.09868 lineto
0.67292 0.09682 lineto
0.67283 0.09592 lineto
0.67275 0.09504 lineto
0.67269 0.09419 lineto
0.67264 0.09336 lineto
0.67261 0.09255 lineto
0.67258 0.09176 lineto
0.67257 0.091 lineto
0.67257 0.09026 lineto
0.67258 0.08955 lineto
0.67259 0.08886 lineto
0.67262 0.08819 lineto
0.67265 0.08755 lineto
0.67274 0.08635 lineto
0.67285 0.08525 lineto
0.67298 0.08425 lineto
0.67327 0.08258 lineto
0.67355 0.08133 lineto
0.67379 0.08051 lineto
0.67387 0.08026 lineto
0.67393 0.0801 lineto
0.67394 0.08007 lineto
0.67395 0.08005 lineto
0.67393 0.0801 lineto
0.67374 0.08049 lineto
0.67264 0.08232 lineto
0.67035 0.08536 lineto
0.66663 0.0893 lineto
0.66135 0.09379 lineto
0.65442 0.09846 lineto
0.6459 0.10293 lineto
0.64107 0.10497 lineto
0.63589 0.10683 lineto
0.63038 0.10847 lineto
0.62458 0.10985 lineto
0.62159 0.11044 lineto
0.61853 0.11094 lineto
0.61542 0.11137 lineto
0.61227 0.11172 lineto
0.61067 0.11186 lineto
0.60907 0.11198 lineto
0.60745 0.11208 lineto
0.60583 0.11215 lineto
Mistroke
0.6042 0.11221 lineto
0.60256 0.11224 lineto
0.60091 0.11224 lineto
0.59926 0.11223 lineto
0.5976 0.11219 lineto
0.59594 0.11213 lineto
0.59428 0.11205 lineto
0.59261 0.11194 lineto
0.58927 0.11165 lineto
0.58592 0.11127 lineto
0.57925 0.11023 lineto
0.57264 0.10882 lineto
0.55979 0.10494 lineto
0.54773 0.09978 lineto
0.53675 0.09356 lineto
0.5271 0.08658 lineto
0.51895 0.07919 lineto
0.51239 0.07175 lineto
0.5074 0.06465 lineto
0.50389 0.05824 lineto
0.50263 0.05541 lineto
0.50167 0.05288 lineto
0.50098 0.05067 lineto
0.5005 0.04883 lineto
0.50021 0.04737 lineto
0.50012 0.04679 lineto
0.50006 0.04631 lineto
0.50003 0.04594 lineto
0.50002 0.04579 lineto
0.50001 0.04567 lineto
0.5 0.04558 lineto
0.5 0.04551 lineto
0.5 0.04547 lineto
0.5 0.04545 lineto
0.5 0.04547 lineto
0.5 0.04551 lineto
0.5 0.04558 lineto
0.49999 0.04567 lineto
0.49997 0.04594 lineto
0.49994 0.04631 lineto
0.49988 0.04679 lineto
0.49979 0.04737 lineto
0.4995 0.04883 lineto
0.49902 0.05067 lineto
0.49833 0.05288 lineto
0.49611 0.05824 lineto
0.4926 0.06465 lineto
0.48761 0.07175 lineto
0.48105 0.07919 lineto
0.4729 0.08658 lineto
Mistroke
0.46325 0.09356 lineto
0.45227 0.09978 lineto
0.44021 0.10494 lineto
0.43386 0.10705 lineto
0.42736 0.10882 lineto
0.42075 0.11023 lineto
0.41742 0.1108 lineto
0.41408 0.11127 lineto
0.41073 0.11165 lineto
0.40739 0.11194 lineto
0.40572 0.11205 lineto
0.40406 0.11213 lineto
0.4024 0.11219 lineto
0.40074 0.11223 lineto
0.39909 0.11224 lineto
0.39744 0.11224 lineto
0.3958 0.11221 lineto
0.39417 0.11215 lineto
0.39255 0.11208 lineto
0.39093 0.11198 lineto
0.38773 0.11172 lineto
0.38458 0.11137 lineto
0.38147 0.11094 lineto
0.37542 0.10985 lineto
0.36962 0.10847 lineto
0.36411 0.10683 lineto
0.3541 0.10293 lineto
0.34558 0.09846 lineto
0.33865 0.09379 lineto
0.33337 0.0893 lineto
0.32965 0.08536 lineto
0.32736 0.08232 lineto
0.32626 0.08049 lineto
0.32614 0.08025 lineto
0.32607 0.0801 lineto
0.32606 0.08007 lineto
0.32605 0.08005 lineto
0.32606 0.08007 lineto
0.32607 0.0801 lineto
0.32645 0.08133 lineto
0.32673 0.08258 lineto
0.32688 0.08336 lineto
0.32702 0.08425 lineto
0.32715 0.08525 lineto
0.32726 0.08635 lineto
0.32731 0.08694 lineto
0.32735 0.08755 lineto
0.32738 0.08819 lineto
0.32741 0.08886 lineto
0.32742 0.08955 lineto
Mistroke
0.32743 0.09026 lineto
0.32743 0.091 lineto
0.32742 0.09176 lineto
0.32739 0.09255 lineto
0.32736 0.09336 lineto
0.32731 0.09419 lineto
0.32725 0.09504 lineto
0.32685 0.09868 lineto
0.32656 0.10062 lineto
0.3262 0.10263 lineto
0.32526 0.10687 lineto
0.324 0.11136 lineto
0.32042 0.12092 lineto
0.31534 0.13096 lineto
0.30871 0.14108 lineto
0.30058 0.15092 lineto
0.29108 0.16012 lineto
0.28043 0.16835 lineto
0.26891 0.17538 lineto
0.25686 0.181 lineto
0.25075 0.18325 lineto
0.24464 0.18513 lineto
0.23859 0.18662 lineto
0.2356 0.18723 lineto
0.23264 0.18774 lineto
0.22971 0.18817 lineto
0.22683 0.18851 lineto
0.22541 0.18865 lineto
0.224 0.18876 lineto
0.2226 0.18886 lineto
0.22122 0.18893 lineto
0.21985 0.18899 lineto
0.2185 0.18903 lineto
0.21716 0.18904 lineto
0.21584 0.18904 lineto
0.21454 0.18902 lineto
0.21325 0.18898 lineto
0.21199 0.18893 lineto
0.21074 0.18886 lineto
0.2083 0.18867 lineto
0.20594 0.18842 lineto
0.20148 0.18777 lineto
0.19739 0.18693 lineto
0.19368 0.18595 lineto
0.18749 0.18377 lineto
0.18297 0.18159 lineto
0.18009 0.17979 lineto
0.17924 0.17915 lineto
0.17874 0.17873 lineto
0.17863 0.17863 lineto
Mistroke
0.1786 0.1786 lineto
0.17859 0.17859 lineto
0.17863 0.17863 lineto
0.17873 0.17874 lineto
0.17979 0.18009 lineto
0.18159 0.18297 lineto
0.18377 0.18749 lineto
0.18595 0.19368 lineto
0.18693 0.19739 lineto
0.18777 0.20148 lineto
0.18812 0.20367 lineto
0.18842 0.20594 lineto
0.18867 0.2083 lineto
0.18877 0.20951 lineto
0.18886 0.21074 lineto
0.18893 0.21199 lineto
0.18898 0.21325 lineto
0.18902 0.21454 lineto
0.18904 0.21584 lineto
0.18904 0.21716 lineto
0.18903 0.2185 lineto
0.18899 0.21985 lineto
0.18893 0.22122 lineto
0.18876 0.224 lineto
0.18865 0.22541 lineto
0.18851 0.22683 lineto
0.18817 0.22971 lineto
0.18774 0.23264 lineto
0.18662 0.23859 lineto
0.18513 0.24464 lineto
0.181 0.25686 lineto
0.17538 0.26891 lineto
0.16835 0.28043 lineto
0.16012 0.29108 lineto
0.15092 0.30058 lineto
0.14108 0.30871 lineto
0.13096 0.31534 lineto
0.12092 0.32042 lineto
0.11606 0.32239 lineto
0.11136 0.324 lineto
0.10687 0.32526 lineto
0.10263 0.3262 lineto
0.10062 0.32656 lineto
0.09868 0.32685 lineto
0.09682 0.32708 lineto
0.09592 0.32717 lineto
0.09504 0.32725 lineto
0.09419 0.32731 lineto
0.09336 0.32736 lineto
0.09255 0.32739 lineto
Mistroke
0.09176 0.32742 lineto
0.091 0.32743 lineto
0.09026 0.32743 lineto
0.08955 0.32742 lineto
0.08886 0.32741 lineto
0.08819 0.32738 lineto
0.08755 0.32735 lineto
0.08694 0.32731 lineto
0.08635 0.32726 lineto
0.08525 0.32715 lineto
0.08425 0.32702 lineto
0.08258 0.32673 lineto
0.08133 0.32645 lineto
0.08051 0.32621 lineto
0.0801 0.32607 lineto
0.08007 0.32606 lineto
0.08005 0.32605 lineto
0.08007 0.32606 lineto
0.0801 0.32607 lineto
0.08049 0.32626 lineto
0.08232 0.32736 lineto
0.08536 0.32965 lineto
0.0893 0.33337 lineto
0.09379 0.33865 lineto
0.09846 0.34558 lineto
0.10293 0.3541 lineto
0.10497 0.35893 lineto
0.10683 0.36411 lineto
0.10847 0.36962 lineto
0.10985 0.37542 lineto
0.11044 0.37841 lineto
0.11094 0.38147 lineto
0.11137 0.38458 lineto
0.11172 0.38773 lineto
0.11186 0.38933 lineto
0.11198 0.39093 lineto
0.11208 0.39255 lineto
0.11215 0.39417 lineto
0.11221 0.3958 lineto
0.11224 0.39744 lineto
0.11224 0.39909 lineto
0.11223 0.40074 lineto
0.11219 0.4024 lineto
0.11213 0.40406 lineto
0.11205 0.40572 lineto
0.11194 0.40739 lineto
0.11165 0.41073 lineto
0.11127 0.41408 lineto
0.11023 0.42075 lineto
0.10882 0.42736 lineto
Mistroke
0.10494 0.44021 lineto
0.09978 0.45227 lineto
0.09356 0.46325 lineto
0.08658 0.4729 lineto
0.07919 0.48105 lineto
0.07175 0.48761 lineto
0.06465 0.4926 lineto
0.05824 0.49611 lineto
0.05541 0.49737 lineto
0.05288 0.49833 lineto
0.05067 0.49902 lineto
0.04883 0.4995 lineto
0.04737 0.49979 lineto
0.04679 0.49988 lineto
0.04631 0.49994 lineto
0.04594 0.49997 lineto
0.04579 0.49998 lineto
0.04567 0.49999 lineto
0.04558 0.5 lineto
0.04551 0.5 lineto
0.04547 0.5 lineto
0.04545 0.5 lineto
0.04547 0.5 lineto
0.04551 0.5 lineto
0.04558 0.5 lineto
0.04567 0.50001 lineto
0.04594 0.50003 lineto
0.04631 0.50006 lineto
0.04679 0.50012 lineto
0.04737 0.50021 lineto
0.04883 0.5005 lineto
0.05067 0.50098 lineto
0.05288 0.50167 lineto
0.05824 0.50389 lineto
0.06465 0.5074 lineto
0.07175 0.51239 lineto
0.08658 0.5271 lineto
0.09356 0.53675 lineto
0.09978 0.54773 lineto
0.10494 0.55979 lineto
0.10705 0.56614 lineto
0.10882 0.57264 lineto
0.11023 0.57925 lineto
0.1108 0.58258 lineto
0.11127 0.58592 lineto
0.11165 0.58927 lineto
0.11181 0.59094 lineto
0.11194 0.59261 lineto
0.11205 0.59428 lineto
0.11213 0.59594 lineto
Mistroke
0.11219 0.5976 lineto
0.11223 0.59926 lineto
0.11224 0.60091 lineto
0.11224 0.60256 lineto
0.11221 0.6042 lineto
0.11215 0.60583 lineto
0.11198 0.60907 lineto
0.11186 0.61067 lineto
0.11172 0.61227 lineto
0.11137 0.61542 lineto
0.11094 0.61853 lineto
0.10985 0.62458 lineto
0.10847 0.63038 lineto
0.10683 0.63589 lineto
0.10293 0.6459 lineto
0.09846 0.65442 lineto
0.09379 0.66135 lineto
0.08536 0.67035 lineto
0.08232 0.67264 lineto
0.08049 0.67374 lineto
0.08025 0.67386 lineto
0.0801 0.67393 lineto
0.08007 0.67394 lineto
0.08005 0.67395 lineto
0.0801 0.67393 lineto
0.08051 0.67379 lineto
0.08133 0.67355 lineto
0.08258 0.67327 lineto
0.08425 0.67298 lineto
0.08525 0.67285 lineto
0.08635 0.67274 lineto
0.08694 0.67269 lineto
0.08755 0.67265 lineto
0.08819 0.67262 lineto
0.08886 0.67259 lineto
0.08955 0.67258 lineto
0.09026 0.67257 lineto
0.091 0.67257 lineto
0.09176 0.67258 lineto
0.09255 0.67261 lineto
0.09336 0.67264 lineto
0.09419 0.67269 lineto
0.09504 0.67275 lineto
0.09682 0.67292 lineto
0.09868 0.67315 lineto
0.10263 0.6738 lineto
0.10687 0.67474 lineto
0.11136 0.676 lineto
0.12092 0.67958 lineto
0.13096 0.68466 lineto
Mistroke
0.14108 0.69129 lineto
0.15092 0.69942 lineto
0.16012 0.70892 lineto
0.16835 0.71957 lineto
0.17538 0.73109 lineto
0.181 0.74314 lineto
0.18325 0.74925 lineto
0.18513 0.75536 lineto
0.18662 0.76141 lineto
0.18723 0.7644 lineto
0.18774 0.76736 lineto
0.18817 0.77029 lineto
0.18851 0.77317 lineto
0.18865 0.77459 lineto
0.18876 0.776 lineto
0.18886 0.7774 lineto
0.18893 0.77878 lineto
0.18899 0.78015 lineto
0.18903 0.7815 lineto
0.18904 0.78284 lineto
0.18904 0.78416 lineto
0.18902 0.78546 lineto
0.18898 0.78675 lineto
0.18893 0.78801 lineto
0.18886 0.78926 lineto
0.18867 0.7917 lineto
0.18842 0.79406 lineto
0.18777 0.79852 lineto
0.18693 0.80261 lineto
0.18595 0.80632 lineto
0.18377 0.81251 lineto
0.18159 0.81703 lineto
0.17979 0.81991 lineto
0.17915 0.82076 lineto
0.17873 0.82126 lineto
0.17863 0.82137 lineto
0.1786 0.8214 lineto
0.17859 0.82141 lineto
0.17863 0.82137 lineto
0.17874 0.82127 lineto
0.18297 0.81841 lineto
0.18749 0.81623 lineto
0.19038 0.81512 lineto
0.19368 0.81405 lineto
0.19739 0.81307 lineto
0.20148 0.81223 lineto
0.20367 0.81188 lineto
0.20594 0.81158 lineto
0.2083 0.81133 lineto
0.20951 0.81123 lineto
Mistroke
0.21074 0.81114 lineto
0.21199 0.81107 lineto
0.21325 0.81102 lineto
0.21454 0.81098 lineto
0.21584 0.81096 lineto
0.21716 0.81096 lineto
0.2185 0.81097 lineto
0.21985 0.81101 lineto
0.22122 0.81107 lineto
0.2226 0.81114 lineto
0.224 0.81124 lineto
0.22683 0.81149 lineto
0.22971 0.81183 lineto
0.23264 0.81226 lineto
0.23859 0.81338 lineto
0.24464 0.81487 lineto
0.25686 0.819 lineto
0.26891 0.82462 lineto
0.28043 0.83165 lineto
0.29108 0.83988 lineto
0.30058 0.84908 lineto
0.30871 0.85892 lineto
0.31534 0.86904 lineto
0.32042 0.87908 lineto
0.32239 0.88394 lineto
0.324 0.88864 lineto
0.32526 0.89313 lineto
0.3262 0.89737 lineto
0.32656 0.89938 lineto
0.32685 0.90132 lineto
0.32708 0.90318 lineto
0.32717 0.90408 lineto
0.32725 0.90496 lineto
0.32731 0.90581 lineto
0.32736 0.90664 lineto
0.32739 0.90745 lineto
0.32742 0.90824 lineto
0.32743 0.909 lineto
0.32743 0.90974 lineto
0.32742 0.91045 lineto
0.32741 0.91114 lineto
0.32738 0.91181 lineto
0.32735 0.91245 lineto
0.32726 0.91365 lineto
0.32715 0.91475 lineto
0.32702 0.91575 lineto
0.32673 0.91742 lineto
0.32645 0.91867 lineto
0.32621 0.91949 lineto
0.32613 0.91974 lineto
Mistroke
0.32607 0.9199 lineto
0.32606 0.91993 lineto
0.32605 0.91995 lineto
0.32607 0.9199 lineto
0.32626 0.91951 lineto
0.32736 0.91768 lineto
0.32965 0.91464 lineto
0.33337 0.9107 lineto
0.33865 0.90621 lineto
0.34558 0.90154 lineto
0.3541 0.89707 lineto
0.35893 0.89503 lineto
0.36411 0.89317 lineto
0.36962 0.89153 lineto
0.37542 0.89015 lineto
0.38147 0.88906 lineto
0.38458 0.88863 lineto
0.38773 0.88828 lineto
0.38933 0.88814 lineto
0.39093 0.88802 lineto
0.39255 0.88792 lineto
0.39417 0.88785 lineto
0.3958 0.88779 lineto
0.39744 0.88776 lineto
0.39909 0.88776 lineto
0.40074 0.88777 lineto
0.4024 0.88781 lineto
0.40406 0.88787 lineto
0.40572 0.88795 lineto
0.40739 0.88806 lineto
0.41073 0.88835 lineto
0.41408 0.88873 lineto
0.42075 0.88977 lineto
0.42736 0.89118 lineto
0.44021 0.89506 lineto
0.45227 0.90022 lineto
0.46325 0.90644 lineto
0.4729 0.91342 lineto
0.48105 0.92081 lineto
0.48761 0.92825 lineto
0.4926 0.93535 lineto
0.49611 0.94176 lineto
0.49737 0.94459 lineto
0.49833 0.94712 lineto
0.49902 0.94933 lineto
0.4995 0.95117 lineto
0.49979 0.95263 lineto
0.49988 0.95321 lineto
0.49994 0.95369 lineto
0.49997 0.95406 lineto
Mistroke
0.49998 0.95421 lineto
0.49999 0.95433 lineto
0.5 0.95442 lineto
0.5 0.95449 lineto
0.5 0.95453 lineto
0.5 0.95455 lineto
0.5 0.95453 lineto
0.5 0.95449 lineto
0.5 0.95442 lineto
0.50001 0.95433 lineto
0.50003 0.95406 lineto
0.50006 0.95369 lineto
0.50012 0.95321 lineto
0.50021 0.95263 lineto
0.5005 0.95117 lineto
0.50098 0.94933 lineto
0.50167 0.94712 lineto
0.50389 0.94176 lineto
0.5074 0.93535 lineto
0.51239 0.92825 lineto
0.51895 0.92081 lineto
0.5271 0.91342 lineto
0.53675 0.90644 lineto
0.54773 0.90022 lineto
0.55979 0.89506 lineto
0.56614 0.89295 lineto
0.57264 0.89118 lineto
0.57925 0.88977 lineto
0.58258 0.8892 lineto
0.58592 0.88873 lineto
0.58927 0.88835 lineto
0.59094 0.88819 lineto
0.59261 0.88806 lineto
0.59428 0.88795 lineto
0.59594 0.88787 lineto
0.5976 0.88781 lineto
0.59926 0.88777 lineto
0.60091 0.88776 lineto
0.60256 0.88776 lineto
0.6042 0.88779 lineto
0.60583 0.88785 lineto
0.60745 0.88792 lineto
0.60907 0.88802 lineto
0.61227 0.88828 lineto
0.61542 0.88863 lineto
0.61853 0.88906 lineto
0.62458 0.89015 lineto
0.63038 0.89153 lineto
0.63589 0.89317 lineto
0.6459 0.89707 lineto
Mistroke
0.65442 0.90154 lineto
0.66135 0.90621 lineto
0.66663 0.9107 lineto
0.67035 0.91464 lineto
0.67264 0.91768 lineto
0.67374 0.91951 lineto
0.67393 0.9199 lineto
0.67394 0.91993 lineto
0.67395 0.91995 lineto
0.67394 0.91993 lineto
0.67393 0.9199 lineto
0.67379 0.91949 lineto
0.67355 0.91867 lineto
0.67327 0.91742 lineto
0.67312 0.91664 lineto
0.67298 0.91575 lineto
0.67285 0.91475 lineto
0.67274 0.91365 lineto
0.67269 0.91306 lineto
0.67265 0.91245 lineto
0.67262 0.91181 lineto
0.67259 0.91114 lineto
0.67258 0.91045 lineto
0.67257 0.90974 lineto
0.67257 0.909 lineto
0.67258 0.90824 lineto
0.67261 0.90745 lineto
0.67264 0.90664 lineto
0.67269 0.90581 lineto
0.67275 0.90496 lineto
0.67292 0.90318 lineto
0.67315 0.90132 lineto
0.6738 0.89737 lineto
0.67474 0.89313 lineto
0.676 0.88864 lineto
0.67958 0.87908 lineto
0.68466 0.86904 lineto
0.69129 0.85892 lineto
0.69942 0.84908 lineto
0.70892 0.83988 lineto
0.71957 0.83165 lineto
0.73109 0.82462 lineto
0.74314 0.819 lineto
0.74925 0.81675 lineto
0.75536 0.81487 lineto
0.76141 0.81338 lineto
0.7644 0.81277 lineto
0.76736 0.81226 lineto
0.77029 0.81183 lineto
0.77317 0.81149 lineto
Mistroke
0.77459 0.81135 lineto
0.776 0.81124 lineto
0.7774 0.81114 lineto
0.77878 0.81107 lineto
0.78015 0.81101 lineto
0.7815 0.81097 lineto
0.78284 0.81096 lineto
0.78416 0.81096 lineto
0.78546 0.81098 lineto
0.78675 0.81102 lineto
0.78801 0.81107 lineto
0.78926 0.81114 lineto
0.7917 0.81133 lineto
0.79406 0.81158 lineto
0.79852 0.81223 lineto
0.80261 0.81307 lineto
0.80632 0.81405 lineto
0.81251 0.81623 lineto
0.81703 0.81841 lineto
0.81991 0.82021 lineto
0.82076 0.82085 lineto
0.82126 0.82127 lineto
0.82137 0.82137 lineto
0.8214 0.8214 lineto
0.82141 0.82141 lineto
0.82137 0.82137 lineto
0.82127 0.82126 lineto
0.82021 0.81991 lineto
0.81841 0.81703 lineto
0.81623 0.81251 lineto
0.81512 0.80962 lineto
0.81405 0.80632 lineto
0.81307 0.80261 lineto
0.81223 0.79852 lineto
0.81158 0.79406 lineto
0.81133 0.7917 lineto
0.81123 0.79049 lineto
0.81114 0.78926 lineto
0.81107 0.78801 lineto
0.81102 0.78675 lineto
0.81098 0.78546 lineto
0.81096 0.78416 lineto
0.81096 0.78284 lineto
0.81097 0.7815 lineto
0.81101 0.78015 lineto
0.81107 0.77878 lineto
0.81114 0.7774 lineto
0.81124 0.776 lineto
0.81149 0.77317 lineto
0.81183 0.77029 lineto
Mistroke
0.81226 0.76736 lineto
0.81338 0.76141 lineto
0.81487 0.75536 lineto
0.819 0.74314 lineto
0.82462 0.73109 lineto
0.83165 0.71957 lineto
0.83988 0.70892 lineto
0.84908 0.69942 lineto
0.85892 0.69129 lineto
0.86904 0.68466 lineto
0.87908 0.67958 lineto
0.88394 0.67761 lineto
0.88864 0.676 lineto
0.89313 0.67474 lineto
0.89737 0.6738 lineto
0.89938 0.67344 lineto
0.90132 0.67315 lineto
0.90318 0.67292 lineto
0.90408 0.67283 lineto
0.90496 0.67275 lineto
0.90581 0.67269 lineto
0.90664 0.67264 lineto
0.90745 0.67261 lineto
0.90824 0.67258 lineto
0.909 0.67257 lineto
0.90974 0.67257 lineto
0.91045 0.67258 lineto
0.91114 0.67259 lineto
0.91181 0.67262 lineto
0.91245 0.67265 lineto
0.91365 0.67274 lineto
0.91475 0.67285 lineto
0.91575 0.67298 lineto
0.91742 0.67327 lineto
0.91867 0.67355 lineto
0.91949 0.67379 lineto
0.91974 0.67387 lineto
0.9199 0.67393 lineto
0.91993 0.67394 lineto
0.91995 0.67395 lineto
0.9199 0.67393 lineto
0.91951 0.67374 lineto
0.91768 0.67264 lineto
0.91464 0.67035 lineto
0.9107 0.66663 lineto
0.90621 0.66135 lineto
0.90154 0.65442 lineto
0.89707 0.6459 lineto
0.89503 0.64107 lineto
0.89317 0.63589 lineto
Mistroke
0.89153 0.63038 lineto
0.89015 0.62458 lineto
0.88906 0.61853 lineto
0.88863 0.61542 lineto
0.88828 0.61227 lineto
0.88814 0.61067 lineto
0.88802 0.60907 lineto
0.88792 0.60745 lineto
0.88785 0.60583 lineto
0.88779 0.6042 lineto
0.88776 0.60256 lineto
0.88776 0.60091 lineto
0.88777 0.59926 lineto
0.88781 0.5976 lineto
0.88787 0.59594 lineto
0.88795 0.59428 lineto
0.88806 0.59261 lineto
0.88835 0.58927 lineto
0.88873 0.58592 lineto
0.88977 0.57925 lineto
0.89118 0.57264 lineto
0.89506 0.55979 lineto
0.90022 0.54773 lineto
0.90644 0.53675 lineto
0.91342 0.5271 lineto
0.92825 0.51239 lineto
0.93535 0.5074 lineto
0.94176 0.50389 lineto
0.94459 0.50263 lineto
0.94712 0.50167 lineto
0.94933 0.50098 lineto
0.95117 0.5005 lineto
0.95263 0.50021 lineto
0.95321 0.50012 lineto
0.95369 0.50006 lineto
0.95406 0.50003 lineto
0.95421 0.50002 lineto
0.95433 0.50001 lineto
0.95442 0.5 lineto
0.95449 0.5 lineto
0.95453 0.5 lineto
0.95455 0.5 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 255 282 282 1 0 0 1.014184 141 -97.617004 sc6mt astore rstroke
end
grestore
grestore
%%EndDocument
 @endspecial 587 920 a Fi(Fig)p Fq(.)15 b(72.)k(Figures)d(for)e(Exercise)i
(5,)f(part)g(2.)75 1049 y Fn(Exercise)e(6.)18 b Fq(F)l(or)11
b(rational)h Fh(b=a)f Fq(=)i Fh(j)s(=k)f Fq(in)g(lo)o(w)o(est)f(terms,)g(the)
g(p)q(erio)q(d)i(is)f(2)p Fh(\031)r(j)s Fq(.)17 b(Presumably)12
b(studen)o(ts)75 1105 y(will)18 b(pic)o(k)f(this)f(up)h(from)f(the)g
(previous)h(exercise)g(and)f(v)o(erify)h(it)f(with)h(sequences)g(lik)o(e)h
Fh(b)13 b Fq(=)i(2)p Fh(=)p Fq(3,)g(2/5,)75 1162 y(2/7,)f Fh(:)8
b(:)g(:)e Fq(,)14 b(and)i Fh(b)c Fq(=)h(3)p Fh(=)p Fq(4,)h(3/5,)g(3/7,)g
Fh(:)8 b(:)g(:)d Fq(.)75 1237 y Fn(Exercise)19 b(7.)24 b Fq(The)17
b(p)q(erio)q(ds)h(are)f(di\013eren)o(t,)g(or|in)f(the)h(language)g(of)f
(Exercise)i(1|the)e(sp)q(eeds)h(are)75 1293 y(di\013eren)o(t.)75
1368 y Fn(Exercise)h(8.)23 b Fq(The)16 b(equations)g(reduce)h(to)f
Fh(x)e Fq(=)g(cos)8 b Fh(t)p Fq(,)16 b Fh(y)g Fq(=)e(0,)i(so)g(the)g(graph)f
(is)i(the)f Fh(x)p Fq(-axis)h(b)q(et)o(w)o(een)75 1425 y Fh(x)j
Fq(=)h Fg(\000)p Fq(1)f(and)g Fh(x)g Fq(=)h(1.)33 b(This)20
b(can)g(b)q(e)h(understo)q(o)q(d)f(geometrically)l(,)i(if)e(one)g(thinks)g
(ab)q(out)g(a)f(circle)75 1481 y(rolling)e(in)f(another)e(circle)j(of)e
(exactly)h(t)o(wice)f(its)g(radius.)542 2365 y @beginspecial
0 @llx 0 @lly 571 @urx 547 @ury 2079 @rwi @setspecial
%%BeginDocument: Par.ex9.eps


/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /TDeps_dict 20 dict def TDeps_dict begin /showpage {
    
} def /copypage {
    
} def /grestoreall {
    
} def /erasepage {
    
} def /nulldevice {
    
} def /exitserver {
    
} def /initgraphics {
    
} def /renderbands {
    
} def /initmatrix {
    
} def /banddevice {
    
} def /setpageparams {
    
} def /framedevice {
    
} def /note {
    
} def end end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
gsave
0 0 571 547 rectclip
-19 -190 translate
19 190 571 547 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
gsave clpmt currentmatrix pop newpath
1 0 0 1.007463 -146 203.0448 sc5mt astore pop false {
    sc5mt dodrawctm 165 262 282 268 0 rfpath unpagectm
} {
    282 268 165 262 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -146 205] dodrawctm
165 262 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	268.597931 def
/Mwidth		282.000000 def
/Mheight	268.597931 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.47619 0.47619 0.47619 [
[(-1)] 0.02381 0.47619 0 2 Msboxa
[(-0.5)] 0.2619 0.47619 0 2 Msboxa
[(0.5)] 0.7381 0.47619 0 2 Msboxa
[(1)] 0.97619 0.47619 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(1)] 0.5 0.95238 0 -2 Msboxa
grestore
[(-1)] 0.4875 0 1 0 Msboxa
[(-0.75)] 0.4875 0.11905 1 0 Msboxa
[(-0.5)] 0.4875 0.2381 1 0 Msboxa
[(-0.25)] 0.4875 0.35714 1 0 Msboxa
[(0.25)] 0.4875 0.59524 1 0 Msboxa
[(0.5)] 0.4875 0.71429 1 0 Msboxa
[(0.75)] 0.4875 0.83333 1 0 Msboxa
[(1)] 0.4875 0.95238 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.95338 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.47619 moveto
0.02381 0.48244 lineto
stroke
grestore
[(-1)] 0.02381 0.47619 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.47619 moveto
0.2619 0.48244 lineto
stroke
grestore
[(-0.5)] 0.2619 0.47619 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.47619 moveto
0.7381 0.48244 lineto
stroke
grestore
[(0.5)] 0.7381 0.47619 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.47619 moveto
0.97619 0.48244 lineto
stroke
grestore
[(1)] 0.97619 0.47619 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.47619 moveto
0.07143 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.47619 moveto
0.11905 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.47619 moveto
0.16667 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.47619 moveto
0.21429 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.47619 moveto
0.30952 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.47619 moveto
0.35714 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.47619 moveto
0.40476 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.47619 moveto
0.45238 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.47619 moveto
0.54762 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.47619 moveto
0.59524 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.47619 moveto
0.64286 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.47619 moveto
0.69048 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.47619 moveto
0.78571 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.47619 moveto
0.83333 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.47619 moveto
0.88095 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.47619 moveto
0.92857 0.47994 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.47619 moveto
1 0.47619 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(1)] 0.5 0.95238 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.50625 0 lineto
stroke
grestore
[(-1)] 0.4875 0 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.11905 moveto
0.50625 0.11905 lineto
stroke
grestore
[(-0.75)] 0.4875 0.11905 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.2381 moveto
0.50625 0.2381 lineto
stroke
grestore
[(-0.5)] 0.4875 0.2381 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.35714 moveto
0.50625 0.35714 lineto
stroke
grestore
[(-0.25)] 0.4875 0.35714 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.59524 moveto
0.50625 0.59524 lineto
stroke
grestore
[(0.25)] 0.4875 0.59524 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.71429 moveto
0.50625 0.71429 lineto
stroke
grestore
[(0.5)] 0.4875 0.71429 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.83333 moveto
0.50625 0.83333 lineto
stroke
grestore
[(0.75)] 0.4875 0.83333 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.95238 moveto
0.50625 0.95238 lineto
stroke
grestore
[(1)] 0.4875 0.95238 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.02381 moveto
0.50375 0.02381 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.04762 moveto
0.50375 0.04762 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.07143 moveto
0.50375 0.07143 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.09524 moveto
0.50375 0.09524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.14286 moveto
0.50375 0.14286 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.16667 moveto
0.50375 0.16667 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.19048 moveto
0.50375 0.19048 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.21429 moveto
0.50375 0.21429 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.2619 moveto
0.50375 0.2619 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.28571 moveto
0.50375 0.28571 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.30952 moveto
0.50375 0.30952 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.33333 moveto
0.50375 0.33333 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.38095 moveto
0.50375 0.38095 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40476 moveto
0.50375 0.40476 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.42857 moveto
0.50375 0.42857 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45238 moveto
0.50375 0.45238 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.5 moveto
0.50375 0.5 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.52381 moveto
0.50375 0.52381 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54762 moveto
0.50375 0.54762 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.57143 moveto
0.50375 0.57143 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.61905 moveto
0.50375 0.61905 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.64286 moveto
0.50375 0.64286 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.66667 moveto
0.50375 0.66667 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.69048 moveto
0.50375 0.69048 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.7381 moveto
0.50375 0.7381 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.7619 moveto
0.50375 0.7619 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.78571 moveto
0.50375 0.78571 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.80952 moveto
0.50375 0.80952 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.85714 moveto
0.50375 0.85714 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.88095 moveto
0.50375 0.88095 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90476 moveto
0.50375 0.90476 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.92857 moveto
0.50375 0.92857 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.95238 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.95238 lineto
0 0.95238 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.97619 0.47619 moveto
0.97617 0.48009 lineto
0.97613 0.48398 lineto
0.97605 0.48788 lineto
0.97594 0.49177 lineto
0.97579 0.49566 lineto
0.97562 0.49956 lineto
0.97517 0.50733 lineto
0.9746 0.51511 lineto
0.9739 0.52287 lineto
0.97212 0.53835 lineto
0.96983 0.55376 lineto
0.96704 0.56909 lineto
0.95996 0.59944 lineto
0.95092 0.62926 lineto
0.93994 0.65842 lineto
0.91239 0.71429 lineto
0.87779 0.76608 lineto
0.83672 0.81291 lineto
0.78989 0.85398 lineto
0.7381 0.88858 lineto
0.71061 0.90327 lineto
0.68223 0.91613 lineto
0.65307 0.92711 lineto
0.62325 0.93616 lineto
0.5929 0.94323 lineto
0.57757 0.94602 lineto
0.56216 0.94831 lineto
0.54667 0.95009 lineto
0.53891 0.95079 lineto
0.53114 0.95136 lineto
0.52337 0.95181 lineto
0.51947 0.95198 lineto
0.51558 0.95213 lineto
0.51169 0.95224 lineto
0.50779 0.95232 lineto
0.5039 0.95237 lineto
0.5 0.95238 lineto
0.4961 0.95237 lineto
0.49221 0.95232 lineto
0.48831 0.95224 lineto
0.48442 0.95213 lineto
0.47663 0.95181 lineto
0.46886 0.95136 lineto
0.46109 0.95079 lineto
0.45333 0.95009 lineto
0.43784 0.94831 lineto
0.42243 0.94602 lineto
0.4071 0.94323 lineto
0.37675 0.93616 lineto
Mistroke
0.34693 0.92711 lineto
0.31777 0.91613 lineto
0.2619 0.88858 lineto
0.21011 0.85398 lineto
0.16328 0.81291 lineto
0.12221 0.76608 lineto
0.08761 0.71429 lineto
0.06006 0.65842 lineto
0.04908 0.62926 lineto
0.04004 0.59944 lineto
0.03296 0.56909 lineto
0.03017 0.55376 lineto
0.02788 0.53835 lineto
0.0261 0.52287 lineto
0.0254 0.51511 lineto
0.02483 0.50733 lineto
0.02438 0.49956 lineto
0.02421 0.49566 lineto
0.02406 0.49177 lineto
0.02395 0.48788 lineto
0.02387 0.48398 lineto
0.02383 0.48009 lineto
0.02381 0.47619 lineto
0.02383 0.47229 lineto
0.02387 0.4684 lineto
0.02395 0.4645 lineto
0.02406 0.46061 lineto
0.02438 0.45282 lineto
0.02483 0.44505 lineto
0.0254 0.43728 lineto
0.0261 0.42952 lineto
0.02788 0.41404 lineto
0.03017 0.39862 lineto
0.03296 0.38329 lineto
0.04004 0.35294 lineto
0.04908 0.32312 lineto
0.06006 0.29396 lineto
0.08761 0.2381 lineto
0.12221 0.1863 lineto
0.16328 0.13947 lineto
0.21011 0.0984 lineto
0.2619 0.0638 lineto
0.28939 0.04911 lineto
0.31777 0.03625 lineto
0.34693 0.02527 lineto
0.37675 0.01623 lineto
0.4071 0.00915 lineto
0.42243 0.00636 lineto
0.43784 0.00407 lineto
0.45333 0.00229 lineto
Mistroke
0.46109 0.00159 lineto
0.46886 0.00102 lineto
0.47663 0.00057 lineto
0.48053 0.0004 lineto
0.48442 0.00025 lineto
0.48831 0.00014 lineto
0.49221 6e-05 lineto
0.4961 2e-05 lineto
0.5 0 lineto
0.5039 2e-05 lineto
0.50779 6e-05 lineto
0.51169 0.00014 lineto
0.51558 0.00025 lineto
0.52337 0.00057 lineto
0.53114 0.00102 lineto
0.53891 0.00159 lineto
0.54667 0.00229 lineto
0.56216 0.00407 lineto
0.57757 0.00636 lineto
0.5929 0.00915 lineto
0.62325 0.01623 lineto
0.65307 0.02527 lineto
0.68223 0.03625 lineto
0.7381 0.0638 lineto
0.78989 0.0984 lineto
0.83672 0.13947 lineto
0.87779 0.1863 lineto
0.91239 0.2381 lineto
0.92708 0.26558 lineto
0.93994 0.29396 lineto
0.95092 0.32312 lineto
0.95996 0.35294 lineto
0.96704 0.38329 lineto
0.96983 0.39862 lineto
0.97212 0.41404 lineto
0.9739 0.42952 lineto
0.9746 0.43728 lineto
0.97517 0.44505 lineto
0.97562 0.45282 lineto
0.97579 0.45672 lineto
0.97594 0.46061 lineto
0.97605 0.4645 lineto
0.97613 0.4684 lineto
0.97617 0.47229 lineto
0.97619 0.47619 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 262 282 268 1 0 0 1.007463 -146 203.0448 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.007463 142 203.0448 sc5mt astore pop false {
    sc5mt dodrawctm 165 262 282 268 0 rfpath unpagectm
} {
    282 268 165 262 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 142 205] dodrawctm
165 262 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	268.597931 def
/Mwidth		282.000000 def
/Mheight	268.597931 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.47619 0.47619 0.47619 [
[(-1)] 0.02381 0.47619 0 2 Msboxa
[(-0.5)] 0.2619 0.47619 0 2 Msboxa
[(0.5)] 0.7381 0.47619 0 2 Msboxa
[(1)] 0.97619 0.47619 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(3)] 0.5 0.95238 0 -2 Msboxa
grestore
[(-1)] 0.4875 0 1 0 Msboxa
[(-0.75)] 0.4875 0.11905 1 0 Msboxa
[(-0.5)] 0.4875 0.2381 1 0 Msboxa
[(-0.25)] 0.4875 0.35714 1 0 Msboxa
[(0.25)] 0.4875 0.59524 1 0 Msboxa
[(0.5)] 0.4875 0.71429 1 0 Msboxa
[(0.75)] 0.4875 0.83333 1 0 Msboxa
[(1)] 0.4875 0.95238 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.95338 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.47619 moveto
0.02381 0.48244 lineto
stroke
grestore
[(-1)] 0.02381 0.47619 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.47619 moveto
0.2619 0.48244 lineto
stroke
grestore
[(-0.5)] 0.2619 0.47619 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.47619 moveto
0.7381 0.48244 lineto
stroke
grestore
[(0.5)] 0.7381 0.47619 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.47619 moveto
0.97619 0.48244 lineto
stroke
grestore
[(1)] 0.97619 0.47619 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.47619 moveto
0.07143 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.47619 moveto
0.11905 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.47619 moveto
0.16667 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.47619 moveto
0.21429 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.47619 moveto
0.30952 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.47619 moveto
0.35714 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.47619 moveto
0.40476 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.47619 moveto
0.45238 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.47619 moveto
0.54762 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.47619 moveto
0.59524 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.47619 moveto
0.64286 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.47619 moveto
0.69048 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.47619 moveto
0.78571 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.47619 moveto
0.83333 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.47619 moveto
0.88095 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.47619 moveto
0.92857 0.47994 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.47619 moveto
1 0.47619 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(3)] 0.5 0.95238 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.50625 0 lineto
stroke
grestore
[(-1)] 0.4875 0 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.11905 moveto
0.50625 0.11905 lineto
stroke
grestore
[(-0.75)] 0.4875 0.11905 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.2381 moveto
0.50625 0.2381 lineto
stroke
grestore
[(-0.5)] 0.4875 0.2381 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.35714 moveto
0.50625 0.35714 lineto
stroke
grestore
[(-0.25)] 0.4875 0.35714 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.59524 moveto
0.50625 0.59524 lineto
stroke
grestore
[(0.25)] 0.4875 0.59524 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.71429 moveto
0.50625 0.71429 lineto
stroke
grestore
[(0.5)] 0.4875 0.71429 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.83333 moveto
0.50625 0.83333 lineto
stroke
grestore
[(0.75)] 0.4875 0.83333 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.95238 moveto
0.50625 0.95238 lineto
stroke
grestore
[(1)] 0.4875 0.95238 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.02381 moveto
0.50375 0.02381 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.04762 moveto
0.50375 0.04762 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.07143 moveto
0.50375 0.07143 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.09524 moveto
0.50375 0.09524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.14286 moveto
0.50375 0.14286 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.16667 moveto
0.50375 0.16667 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.19048 moveto
0.50375 0.19048 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.21429 moveto
0.50375 0.21429 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.2619 moveto
0.50375 0.2619 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.28571 moveto
0.50375 0.28571 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.30952 moveto
0.50375 0.30952 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.33333 moveto
0.50375 0.33333 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.38095 moveto
0.50375 0.38095 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40476 moveto
0.50375 0.40476 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.42857 moveto
0.50375 0.42857 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45238 moveto
0.50375 0.45238 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.5 moveto
0.50375 0.5 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.52381 moveto
0.50375 0.52381 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54762 moveto
0.50375 0.54762 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.57143 moveto
0.50375 0.57143 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.61905 moveto
0.50375 0.61905 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.64286 moveto
0.50375 0.64286 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.66667 moveto
0.50375 0.66667 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.69048 moveto
0.50375 0.69048 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.7381 moveto
0.50375 0.7381 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.7619 moveto
0.50375 0.7619 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.78571 moveto
0.50375 0.78571 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.80952 moveto
0.50375 0.80952 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.85714 moveto
0.50375 0.85714 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.88095 moveto
0.50375 0.88095 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90476 moveto
0.50375 0.90476 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.92857 moveto
0.50375 0.92857 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.95238 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.95238 lineto
0 0.95238 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.97619 0.47619 moveto
0.97614 0.47619 lineto
0.976 0.47619 lineto
0.97576 0.4762 lineto
0.97543 0.47621 lineto
0.975 0.47622 lineto
0.97447 0.47625 lineto
0.97314 0.47632 lineto
0.97143 0.47645 lineto
0.96934 0.47664 lineto
0.96407 0.47725 lineto
0.95736 0.47825 lineto
0.94926 0.47973 lineto
0.92915 0.48445 lineto
0.90433 0.49201 lineto
0.87551 0.50288 lineto
0.80929 0.53571 lineto
0.73778 0.58362 lineto
0.66836 0.64455 lineto
0.60743 0.71397 lineto
0.55952 0.78549 lineto
0.5412 0.81973 lineto
0.52669 0.85171 lineto
0.51582 0.88052 lineto
0.50826 0.90534 lineto
0.50354 0.92546 lineto
0.50206 0.93355 lineto
0.50106 0.94026 lineto
0.50045 0.94554 lineto
0.50026 0.94762 lineto
0.50013 0.94933 lineto
0.50006 0.95066 lineto
0.50003 0.95119 lineto
0.50002 0.95162 lineto
0.50001 0.95195 lineto
0.5 0.95219 lineto
0.5 0.95233 lineto
0.5 0.95238 lineto
0.5 0.95233 lineto
0.5 0.95219 lineto
0.49999 0.95195 lineto
0.49998 0.95162 lineto
0.49994 0.95066 lineto
0.49987 0.94933 lineto
0.49974 0.94762 lineto
0.49955 0.94554 lineto
0.49894 0.94026 lineto
0.49794 0.93355 lineto
0.49646 0.92546 lineto
0.49174 0.90534 lineto
Mistroke
0.48418 0.88052 lineto
0.47331 0.85171 lineto
0.44048 0.78549 lineto
0.39257 0.71397 lineto
0.33164 0.64455 lineto
0.26222 0.58362 lineto
0.19071 0.53571 lineto
0.12449 0.50288 lineto
0.09567 0.49201 lineto
0.07085 0.48445 lineto
0.05074 0.47973 lineto
0.04264 0.47825 lineto
0.03593 0.47725 lineto
0.03066 0.47664 lineto
0.02857 0.47645 lineto
0.02686 0.47632 lineto
0.02553 0.47625 lineto
0.025 0.47622 lineto
0.02457 0.47621 lineto
0.02424 0.4762 lineto
0.024 0.47619 lineto
0.02386 0.47619 lineto
0.02381 0.47619 lineto
0.02386 0.47619 lineto
0.024 0.47619 lineto
0.02424 0.47618 lineto
0.02457 0.47617 lineto
0.02553 0.47613 lineto
0.02686 0.47606 lineto
0.02857 0.47593 lineto
0.03066 0.47574 lineto
0.03593 0.47513 lineto
0.04264 0.47413 lineto
0.05074 0.47265 lineto
0.07085 0.46793 lineto
0.09567 0.46038 lineto
0.12449 0.4495 lineto
0.19071 0.41667 lineto
0.26222 0.36876 lineto
0.33164 0.30783 lineto
0.39257 0.23841 lineto
0.44048 0.1669 lineto
0.4588 0.13265 lineto
0.47331 0.10068 lineto
0.48418 0.07186 lineto
0.49174 0.04704 lineto
0.49646 0.02693 lineto
0.49794 0.01883 lineto
0.49894 0.01212 lineto
0.49955 0.00685 lineto
Mistroke
0.49974 0.00476 lineto
0.49987 0.00305 lineto
0.49994 0.00172 lineto
0.49997 0.00119 lineto
0.49998 0.00076 lineto
0.49999 0.00043 lineto
0.5 0.00019 lineto
0.5 5e-05 lineto
0.5 0 lineto
0.5 5e-05 lineto
0.5 0.00019 lineto
0.50001 0.00043 lineto
0.50002 0.00076 lineto
0.50006 0.00172 lineto
0.50013 0.00305 lineto
0.50026 0.00476 lineto
0.50045 0.00685 lineto
0.50106 0.01212 lineto
0.50206 0.01883 lineto
0.50354 0.02693 lineto
0.50826 0.04704 lineto
0.51582 0.07186 lineto
0.52669 0.10068 lineto
0.55952 0.1669 lineto
0.60743 0.23841 lineto
0.66836 0.30783 lineto
0.73778 0.36876 lineto
0.80929 0.41667 lineto
0.84354 0.43499 lineto
0.87551 0.4495 lineto
0.90433 0.46038 lineto
0.92915 0.46793 lineto
0.94926 0.47265 lineto
0.95736 0.47413 lineto
0.96407 0.47513 lineto
0.96934 0.47574 lineto
0.97143 0.47593 lineto
0.97314 0.47606 lineto
0.97447 0.47613 lineto
0.975 0.47616 lineto
0.97543 0.47617 lineto
0.97576 0.47618 lineto
0.976 0.47619 lineto
0.97614 0.47619 lineto
0.97619 0.47619 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 262 282 268 1 0 0 1.007463 142 203.0448 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.007463 -146 -72.955231 sc5mt astore pop false {
    sc5mt dodrawctm 165 262 282 268 0 rfpath unpagectm
} {
    282 268 165 262 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 -146 -71] dodrawctm
165 262 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	268.597931 def
/Mwidth		282.000000 def
/Mheight	268.597931 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.47619 0.47619 0.47619 [
[(-1)] 0.02381 0.47619 0 2 Msboxa
[(-0.5)] 0.2619 0.47619 0 2 Msboxa
[(0.5)] 0.7381 0.47619 0 2 Msboxa
[(1)] 0.97619 0.47619 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(5)] 0.5 0.95238 0 -2 Msboxa
grestore
[(-1)] 0.4875 0 1 0 Msboxa
[(-0.75)] 0.4875 0.11905 1 0 Msboxa
[(-0.5)] 0.4875 0.2381 1 0 Msboxa
[(-0.25)] 0.4875 0.35714 1 0 Msboxa
[(0.25)] 0.4875 0.59524 1 0 Msboxa
[(0.5)] 0.4875 0.71429 1 0 Msboxa
[(0.75)] 0.4875 0.83333 1 0 Msboxa
[(1)] 0.4875 0.95238 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.95338 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.47619 moveto
0.02381 0.48244 lineto
stroke
grestore
[(-1)] 0.02381 0.47619 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.47619 moveto
0.2619 0.48244 lineto
stroke
grestore
[(-0.5)] 0.2619 0.47619 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.47619 moveto
0.7381 0.48244 lineto
stroke
grestore
[(0.5)] 0.7381 0.47619 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.47619 moveto
0.97619 0.48244 lineto
stroke
grestore
[(1)] 0.97619 0.47619 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.47619 moveto
0.07143 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.47619 moveto
0.11905 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.47619 moveto
0.16667 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.47619 moveto
0.21429 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.47619 moveto
0.30952 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.47619 moveto
0.35714 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.47619 moveto
0.40476 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.47619 moveto
0.45238 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.47619 moveto
0.54762 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.47619 moveto
0.59524 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.47619 moveto
0.64286 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.47619 moveto
0.69048 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.47619 moveto
0.78571 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.47619 moveto
0.83333 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.47619 moveto
0.88095 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.47619 moveto
0.92857 0.47994 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.47619 moveto
1 0.47619 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(5)] 0.5 0.95238 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.50625 0 lineto
stroke
grestore
[(-1)] 0.4875 0 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.11905 moveto
0.50625 0.11905 lineto
stroke
grestore
[(-0.75)] 0.4875 0.11905 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.2381 moveto
0.50625 0.2381 lineto
stroke
grestore
[(-0.5)] 0.4875 0.2381 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.35714 moveto
0.50625 0.35714 lineto
stroke
grestore
[(-0.25)] 0.4875 0.35714 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.59524 moveto
0.50625 0.59524 lineto
stroke
grestore
[(0.25)] 0.4875 0.59524 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.71429 moveto
0.50625 0.71429 lineto
stroke
grestore
[(0.5)] 0.4875 0.71429 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.83333 moveto
0.50625 0.83333 lineto
stroke
grestore
[(0.75)] 0.4875 0.83333 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.95238 moveto
0.50625 0.95238 lineto
stroke
grestore
[(1)] 0.4875 0.95238 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.02381 moveto
0.50375 0.02381 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.04762 moveto
0.50375 0.04762 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.07143 moveto
0.50375 0.07143 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.09524 moveto
0.50375 0.09524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.14286 moveto
0.50375 0.14286 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.16667 moveto
0.50375 0.16667 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.19048 moveto
0.50375 0.19048 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.21429 moveto
0.50375 0.21429 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.2619 moveto
0.50375 0.2619 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.28571 moveto
0.50375 0.28571 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.30952 moveto
0.50375 0.30952 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.33333 moveto
0.50375 0.33333 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.38095 moveto
0.50375 0.38095 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40476 moveto
0.50375 0.40476 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.42857 moveto
0.50375 0.42857 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45238 moveto
0.50375 0.45238 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.5 moveto
0.50375 0.5 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.52381 moveto
0.50375 0.52381 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54762 moveto
0.50375 0.54762 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.57143 moveto
0.50375 0.57143 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.61905 moveto
0.50375 0.61905 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.64286 moveto
0.50375 0.64286 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.66667 moveto
0.50375 0.66667 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.69048 moveto
0.50375 0.69048 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.7381 moveto
0.50375 0.7381 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.7619 moveto
0.50375 0.7619 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.78571 moveto
0.50375 0.78571 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.80952 moveto
0.50375 0.80952 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.85714 moveto
0.50375 0.85714 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.88095 moveto
0.50375 0.88095 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90476 moveto
0.50375 0.90476 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.92857 moveto
0.50375 0.92857 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.95238 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.95238 lineto
0 0.95238 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.97619 0.47619 moveto
0.97611 0.47619 lineto
0.97587 0.47619 lineto
0.97547 0.47619 lineto
0.97492 0.47619 lineto
0.9742 0.47619 lineto
0.97333 0.47619 lineto
0.9723 0.47619 lineto
0.97111 0.47619 lineto
0.96977 0.47619 lineto
0.96828 0.47619 lineto
0.96663 0.47619 lineto
0.96484 0.47619 lineto
0.96289 0.4762 lineto
0.96079 0.4762 lineto
0.95617 0.47621 lineto
0.95364 0.47621 lineto
0.95097 0.47622 lineto
0.94523 0.47625 lineto
0.93895 0.47628 lineto
0.93217 0.47633 lineto
0.92489 0.47639 lineto
0.91716 0.47648 lineto
0.90041 0.47674 lineto
0.89144 0.47693 lineto
0.88212 0.47717 lineto
0.86255 0.47782 lineto
0.84193 0.47877 lineto
0.82052 0.4801 lineto
0.79857 0.48189 lineto
0.77633 0.48425 lineto
0.75406 0.48727 lineto
0.73197 0.49107 lineto
0.7103 0.49574 lineto
0.68924 0.50139 lineto
0.64966 0.516 lineto
0.63143 0.52512 lineto
0.6144 0.53553 lineto
0.59863 0.54727 lineto
0.58418 0.56037 lineto
0.55934 0.59059 lineto
0.54893 0.60762 lineto
0.53981 0.62585 lineto
0.53193 0.64517 lineto
0.5252 0.66543 lineto
0.51488 0.70816 lineto
0.51108 0.73025 lineto
0.50806 0.75252 lineto
0.5057 0.77476 lineto
0.50391 0.79671 lineto
Mistroke
0.50258 0.81812 lineto
0.50163 0.83874 lineto
0.50128 0.84868 lineto
0.50098 0.85832 lineto
0.50074 0.86763 lineto
0.50055 0.8766 lineto
0.5004 0.88518 lineto
0.50029 0.89335 lineto
0.5002 0.90108 lineto
0.50013 0.90836 lineto
0.50009 0.91514 lineto
0.50005 0.92142 lineto
0.50003 0.92716 lineto
0.50002 0.92983 lineto
0.50002 0.93236 lineto
0.50001 0.93698 lineto
0.50001 0.93908 lineto
0.5 0.94103 lineto
0.5 0.94282 lineto
0.5 0.94447 lineto
0.5 0.94596 lineto
0.5 0.9473 lineto
0.5 0.94849 lineto
0.5 0.94952 lineto
0.5 0.95039 lineto
0.5 0.95111 lineto
0.5 0.95166 lineto
0.5 0.95206 lineto
0.5 0.9523 lineto
0.5 0.95238 lineto
0.5 0.9523 lineto
0.5 0.95206 lineto
0.5 0.95166 lineto
0.5 0.95111 lineto
0.5 0.95039 lineto
0.5 0.94952 lineto
0.5 0.94849 lineto
0.5 0.9473 lineto
0.5 0.94596 lineto
0.5 0.94447 lineto
0.5 0.94282 lineto
0.5 0.94103 lineto
0.49999 0.93698 lineto
0.49999 0.93474 lineto
0.49998 0.93236 lineto
0.49997 0.92716 lineto
0.49995 0.92142 lineto
0.49991 0.91514 lineto
0.49987 0.90836 lineto
0.4998 0.90108 lineto
Mistroke
0.49971 0.89335 lineto
0.4996 0.88518 lineto
0.49945 0.8766 lineto
0.49902 0.85832 lineto
0.49872 0.84868 lineto
0.49837 0.83874 lineto
0.49742 0.81812 lineto
0.49609 0.79671 lineto
0.4943 0.77476 lineto
0.49194 0.75252 lineto
0.48892 0.73025 lineto
0.48512 0.70816 lineto
0.4748 0.66543 lineto
0.46807 0.64517 lineto
0.46019 0.62585 lineto
0.45107 0.60762 lineto
0.44066 0.59059 lineto
0.42892 0.57482 lineto
0.41582 0.56037 lineto
0.40137 0.54727 lineto
0.3856 0.53553 lineto
0.36857 0.52512 lineto
0.35034 0.516 lineto
0.33102 0.50812 lineto
0.31076 0.50139 lineto
0.2897 0.49574 lineto
0.26803 0.49107 lineto
0.24594 0.48727 lineto
0.22367 0.48425 lineto
0.20143 0.48189 lineto
0.17948 0.4801 lineto
0.15807 0.47877 lineto
0.13745 0.47782 lineto
0.12752 0.47747 lineto
0.11788 0.47717 lineto
0.10856 0.47693 lineto
0.09959 0.47674 lineto
0.08284 0.47648 lineto
0.07511 0.47639 lineto
0.06783 0.47633 lineto
0.06105 0.47628 lineto
0.05477 0.47625 lineto
0.04903 0.47622 lineto
0.04636 0.47621 lineto
0.04383 0.47621 lineto
0.04145 0.4762 lineto
0.03921 0.4762 lineto
0.03711 0.4762 lineto
0.03516 0.47619 lineto
0.03337 0.47619 lineto
Mistroke
0.03172 0.47619 lineto
0.03023 0.47619 lineto
0.02889 0.47619 lineto
0.0277 0.47619 lineto
0.02667 0.47619 lineto
0.0258 0.47619 lineto
0.02508 0.47619 lineto
0.02453 0.47619 lineto
0.02413 0.47619 lineto
0.02389 0.47619 lineto
0.02381 0.47619 lineto
0.02389 0.47619 lineto
0.02413 0.47619 lineto
0.02453 0.47619 lineto
0.02508 0.47619 lineto
0.0258 0.47619 lineto
0.02667 0.47619 lineto
0.0277 0.47619 lineto
0.02889 0.47619 lineto
0.03023 0.47619 lineto
0.03172 0.47619 lineto
0.03337 0.47619 lineto
0.03516 0.47619 lineto
0.03711 0.47618 lineto
0.03921 0.47618 lineto
0.04145 0.47618 lineto
0.04383 0.47617 lineto
0.04903 0.47616 lineto
0.05477 0.47614 lineto
0.06105 0.4761 lineto
0.06783 0.47606 lineto
0.07511 0.47599 lineto
0.08284 0.4759 lineto
0.09101 0.47579 lineto
0.09959 0.47564 lineto
0.10856 0.47545 lineto
0.11788 0.47521 lineto
0.13745 0.47456 lineto
0.15807 0.47361 lineto
0.17948 0.47228 lineto
0.20143 0.47049 lineto
0.22367 0.46813 lineto
0.24594 0.46511 lineto
0.26803 0.46131 lineto
0.2897 0.45664 lineto
0.31076 0.45099 lineto
0.33102 0.44426 lineto
0.35034 0.43638 lineto
0.36857 0.42726 lineto
0.3856 0.41685 lineto
Mistroke
0.40137 0.40511 lineto
0.41582 0.39201 lineto
0.44066 0.3618 lineto
0.45107 0.34476 lineto
0.46019 0.32653 lineto
0.46807 0.30721 lineto
0.4748 0.28695 lineto
0.48045 0.26589 lineto
0.48512 0.24422 lineto
0.48892 0.22213 lineto
0.49194 0.19986 lineto
0.4943 0.17762 lineto
0.49609 0.15567 lineto
0.49742 0.13426 lineto
0.49837 0.11364 lineto
0.49902 0.09407 lineto
0.49926 0.08475 lineto
0.49945 0.07579 lineto
0.4996 0.0672 lineto
0.49971 0.05903 lineto
0.4998 0.0513 lineto
0.49987 0.04402 lineto
0.49991 0.03724 lineto
0.49995 0.03096 lineto
0.49997 0.02522 lineto
0.49998 0.02255 lineto
0.49998 0.02002 lineto
0.49999 0.01764 lineto
0.49999 0.0154 lineto
0.49999 0.0133 lineto
0.5 0.01136 lineto
0.5 0.00956 lineto
0.5 0.00791 lineto
0.5 0.00642 lineto
0.5 0.00508 lineto
0.5 0.00389 lineto
0.5 0.00286 lineto
0.5 0.00199 lineto
0.5 0.00127 lineto
0.5 0.00072 lineto
0.5 0.00032 lineto
0.5 8e-05 lineto
0.5 0 lineto
0.5 8e-05 lineto
0.5 0.00032 lineto
0.5 0.00072 lineto
0.5 0.00127 lineto
0.5 0.00199 lineto
0.5 0.00286 lineto
0.5 0.00389 lineto
Mistroke
0.5 0.00508 lineto
0.5 0.00642 lineto
0.5 0.00791 lineto
0.5 0.00956 lineto
0.5 0.01136 lineto
0.50001 0.0133 lineto
0.50001 0.0154 lineto
0.50001 0.01764 lineto
0.50002 0.02002 lineto
0.50003 0.02522 lineto
0.50005 0.03096 lineto
0.50009 0.03724 lineto
0.50013 0.04402 lineto
0.5002 0.0513 lineto
0.50029 0.05903 lineto
0.5004 0.0672 lineto
0.50055 0.07579 lineto
0.50074 0.08475 lineto
0.50098 0.09407 lineto
0.50163 0.11364 lineto
0.50258 0.13426 lineto
0.50391 0.15567 lineto
0.5057 0.17762 lineto
0.50806 0.19986 lineto
0.51108 0.22213 lineto
0.51488 0.24422 lineto
0.51955 0.26589 lineto
0.5252 0.28695 lineto
0.53193 0.30721 lineto
0.53981 0.32653 lineto
0.54893 0.34476 lineto
0.55934 0.3618 lineto
0.57108 0.37756 lineto
0.58418 0.39201 lineto
0.6144 0.41685 lineto
0.63143 0.42726 lineto
0.64966 0.43638 lineto
0.66898 0.44426 lineto
0.68924 0.45099 lineto
0.7103 0.45664 lineto
0.73197 0.46131 lineto
0.75406 0.46511 lineto
0.77633 0.46813 lineto
0.79857 0.47049 lineto
0.82052 0.47228 lineto
0.84193 0.47361 lineto
0.86255 0.47456 lineto
0.88212 0.47521 lineto
0.89144 0.47545 lineto
0.90041 0.47564 lineto
Mistroke
0.90899 0.47579 lineto
0.91716 0.4759 lineto
0.92489 0.47599 lineto
0.93217 0.47606 lineto
0.93895 0.4761 lineto
0.94523 0.47614 lineto
0.95097 0.47616 lineto
0.95364 0.47617 lineto
0.95617 0.47617 lineto
0.95855 0.47618 lineto
0.96079 0.47618 lineto
0.96289 0.47618 lineto
0.96484 0.47619 lineto
0.96663 0.47619 lineto
0.96828 0.47619 lineto
0.96977 0.47619 lineto
0.97111 0.47619 lineto
0.9723 0.47619 lineto
0.97333 0.47619 lineto
0.9742 0.47619 lineto
0.97492 0.47619 lineto
0.97547 0.47619 lineto
0.97587 0.47619 lineto
0.97611 0.47619 lineto
0.97619 0.47619 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 262 282 268 1 0 0 1.007463 -146 -72.955231 sc6mt astore rstroke
gsave clpmt currentmatrix pop newpath
1 0 0 1.007463 142 -72.9552 sc5mt astore pop false {
    sc5mt dodrawctm 165 262 282 268 0 rfpath unpagectm
} {
    282 268 165 262 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 142 -71] dodrawctm
165 262 translate
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	268.597931 def
/Mwidth		282.000000 def
/Mheight	268.597931 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.47619 0.47619 0.47619 [
[(-1)] 0.02381 0.47619 0 2 Msboxa
[(-0.5)] 0.2619 0.47619 0 2 Msboxa
[(0.5)] 0.7381 0.47619 0 2 Msboxa
[(1)] 0.97619 0.47619 0 2 Msboxa
gsave
/Times-Bold findfont 16 scalefont setfont
[(7)] 0.5 0.95238 0 -2 Msboxa
grestore
[(-1)] 0.4875 0 1 0 Msboxa
[(-0.75)] 0.4875 0.11905 1 0 Msboxa
[(-0.5)] 0.4875 0.2381 1 0 Msboxa
[(-0.25)] 0.4875 0.35714 1 0 Msboxa
[(0.25)] 0.4875 0.59524 1 0 Msboxa
[(0.5)] 0.4875 0.71429 1 0 Msboxa
[(0.75)] 0.4875 0.83333 1 0 Msboxa
[(1)] 0.4875 0.95238 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.95338 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.47619 moveto
0.02381 0.48244 lineto
stroke
grestore
[(-1)] 0.02381 0.47619 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.47619 moveto
0.2619 0.48244 lineto
stroke
grestore
[(-0.5)] 0.2619 0.47619 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.47619 moveto
0.7381 0.48244 lineto
stroke
grestore
[(0.5)] 0.7381 0.47619 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.47619 moveto
0.97619 0.48244 lineto
stroke
grestore
[(1)] 0.97619 0.47619 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.47619 moveto
0.07143 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.47619 moveto
0.11905 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.47619 moveto
0.16667 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.47619 moveto
0.21429 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.47619 moveto
0.30952 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.47619 moveto
0.35714 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.47619 moveto
0.40476 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.47619 moveto
0.45238 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.47619 moveto
0.54762 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.47619 moveto
0.59524 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.47619 moveto
0.64286 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.47619 moveto
0.69048 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.47619 moveto
0.78571 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.47619 moveto
0.83333 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.47619 moveto
0.88095 0.47994 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.47619 moveto
0.92857 0.47994 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.47619 moveto
1 0.47619 lineto
stroke
grestore
gsave
/Times-Bold findfont 16 scalefont setfont
[(7)] 0.5 0.95238 0 -2 Mshowa
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.50625 0 lineto
stroke
grestore
[(-1)] 0.4875 0 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.11905 moveto
0.50625 0.11905 lineto
stroke
grestore
[(-0.75)] 0.4875 0.11905 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.2381 moveto
0.50625 0.2381 lineto
stroke
grestore
[(-0.5)] 0.4875 0.2381 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.35714 moveto
0.50625 0.35714 lineto
stroke
grestore
[(-0.25)] 0.4875 0.35714 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.59524 moveto
0.50625 0.59524 lineto
stroke
grestore
[(0.25)] 0.4875 0.59524 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.71429 moveto
0.50625 0.71429 lineto
stroke
grestore
[(0.5)] 0.4875 0.71429 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.83333 moveto
0.50625 0.83333 lineto
stroke
grestore
[(0.75)] 0.4875 0.83333 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.95238 moveto
0.50625 0.95238 lineto
stroke
grestore
[(1)] 0.4875 0.95238 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.02381 moveto
0.50375 0.02381 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.04762 moveto
0.50375 0.04762 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.07143 moveto
0.50375 0.07143 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.09524 moveto
0.50375 0.09524 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.14286 moveto
0.50375 0.14286 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.16667 moveto
0.50375 0.16667 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.19048 moveto
0.50375 0.19048 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.21429 moveto
0.50375 0.21429 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.2619 moveto
0.50375 0.2619 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.28571 moveto
0.50375 0.28571 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.30952 moveto
0.50375 0.30952 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.33333 moveto
0.50375 0.33333 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.38095 moveto
0.50375 0.38095 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40476 moveto
0.50375 0.40476 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.42857 moveto
0.50375 0.42857 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.45238 moveto
0.50375 0.45238 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.5 moveto
0.50375 0.5 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.52381 moveto
0.50375 0.52381 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54762 moveto
0.50375 0.54762 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.57143 moveto
0.50375 0.57143 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.61905 moveto
0.50375 0.61905 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.64286 moveto
0.50375 0.64286 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.66667 moveto
0.50375 0.66667 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.69048 moveto
0.50375 0.69048 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.7381 moveto
0.50375 0.7381 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.7619 moveto
0.50375 0.7619 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.78571 moveto
0.50375 0.78571 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.80952 moveto
0.50375 0.80952 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.85714 moveto
0.50375 0.85714 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.88095 moveto
0.50375 0.88095 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.90476 moveto
0.50375 0.90476 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.92857 moveto
0.50375 0.92857 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.95238 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.95238 lineto
0 0.95238 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.97619 0.47619 moveto
0.97608 0.47619 lineto
0.97574 0.47619 lineto
0.97519 0.47619 lineto
0.97441 0.47619 lineto
0.97341 0.47619 lineto
0.97219 0.47619 lineto
0.97075 0.47619 lineto
0.9691 0.47619 lineto
0.96723 0.47619 lineto
0.96515 0.47619 lineto
0.96286 0.47619 lineto
0.96037 0.47619 lineto
0.95767 0.47619 lineto
0.95477 0.47619 lineto
0.95168 0.47619 lineto
0.94839 0.47619 lineto
0.94492 0.47619 lineto
0.94126 0.47619 lineto
0.93743 0.47619 lineto
0.93341 0.47619 lineto
0.92923 0.47619 lineto
0.92488 0.47619 lineto
0.92038 0.47619 lineto
0.91572 0.4762 lineto
0.90596 0.4762 lineto
0.90087 0.4762 lineto
0.89565 0.47621 lineto
0.88484 0.47621 lineto
0.87358 0.47623 lineto
0.86193 0.47625 lineto
0.84992 0.47627 lineto
0.83763 0.47631 lineto
0.82509 0.47636 lineto
0.81237 0.47643 lineto
0.79951 0.47651 lineto
0.78656 0.47662 lineto
0.77358 0.47676 lineto
0.74772 0.47716 lineto
0.73492 0.47743 lineto
0.72228 0.47777 lineto
0.70983 0.47817 lineto
0.6976 0.47865 lineto
0.67398 0.47991 lineto
0.66264 0.48071 lineto
0.65166 0.48164 lineto
0.64105 0.48272 lineto
0.63083 0.48397 lineto
0.61165 0.48702 lineto
0.5942 0.49094 lineto
Mistroke
0.57854 0.49588 lineto
0.56466 0.50199 lineto
0.55254 0.50941 lineto
0.54209 0.51828 lineto
0.53322 0.52873 lineto
0.5258 0.54085 lineto
0.51969 0.55473 lineto
0.51475 0.57039 lineto
0.51083 0.58784 lineto
0.50921 0.59722 lineto
0.50778 0.60702 lineto
0.50653 0.61724 lineto
0.50545 0.62785 lineto
0.50452 0.63883 lineto
0.50372 0.65017 lineto
0.50246 0.67379 lineto
0.50198 0.68602 lineto
0.50158 0.69847 lineto
0.50124 0.71111 lineto
0.50097 0.72391 lineto
0.50075 0.73681 lineto
0.50057 0.74977 lineto
0.50043 0.76275 lineto
0.50032 0.7757 lineto
0.50023 0.78856 lineto
0.50017 0.80128 lineto
0.50012 0.81382 lineto
0.50008 0.82612 lineto
0.50006 0.83812 lineto
0.50004 0.84977 lineto
0.50002 0.86103 lineto
0.50002 0.86649 lineto
0.50001 0.87184 lineto
0.50001 0.88215 lineto
0.50001 0.8871 lineto
0.50001 0.89191 lineto
0.5 0.89657 lineto
0.5 0.90107 lineto
0.5 0.90542 lineto
0.5 0.9096 lineto
0.5 0.91362 lineto
0.5 0.91745 lineto
0.5 0.92111 lineto
0.5 0.92459 lineto
0.5 0.92787 lineto
0.5 0.93096 lineto
0.5 0.93386 lineto
0.5 0.93656 lineto
0.5 0.93905 lineto
0.5 0.94134 lineto
Mistroke
0.5 0.94342 lineto
0.5 0.94529 lineto
0.5 0.94694 lineto
0.5 0.94838 lineto
0.5 0.9496 lineto
0.5 0.9506 lineto
0.5 0.95138 lineto
0.5 0.95193 lineto
0.5 0.95227 lineto
0.5 0.95238 lineto
0.5 0.95227 lineto
0.5 0.95193 lineto
0.5 0.95138 lineto
0.5 0.9506 lineto
0.5 0.9496 lineto
0.5 0.94838 lineto
0.5 0.94694 lineto
0.5 0.94529 lineto
0.5 0.94342 lineto
0.5 0.94134 lineto
0.5 0.93905 lineto
0.5 0.93656 lineto
0.5 0.93386 lineto
0.5 0.93096 lineto
0.5 0.92787 lineto
0.5 0.92459 lineto
0.5 0.92111 lineto
0.5 0.91745 lineto
0.5 0.91362 lineto
0.5 0.9096 lineto
0.5 0.90107 lineto
0.5 0.89657 lineto
0.49999 0.89191 lineto
0.49999 0.8871 lineto
0.49999 0.88215 lineto
0.49999 0.87706 lineto
0.49999 0.87184 lineto
0.49998 0.86103 lineto
0.49996 0.84977 lineto
0.49994 0.83812 lineto
0.49992 0.82612 lineto
0.49988 0.81382 lineto
0.49983 0.80128 lineto
0.49977 0.78856 lineto
0.49968 0.7757 lineto
0.49957 0.76275 lineto
0.49943 0.74977 lineto
0.49925 0.73681 lineto
0.49903 0.72391 lineto
0.49842 0.69847 lineto
Mistroke
0.49802 0.68602 lineto
0.49754 0.67379 lineto
0.49696 0.66183 lineto
0.49628 0.65017 lineto
0.49455 0.62785 lineto
0.49347 0.61724 lineto
0.49222 0.60702 lineto
0.48917 0.58784 lineto
0.48525 0.57039 lineto
0.48031 0.55473 lineto
0.4742 0.54085 lineto
0.46678 0.52873 lineto
0.45791 0.51828 lineto
0.44746 0.50941 lineto
0.43534 0.50199 lineto
0.42146 0.49588 lineto
0.4058 0.49094 lineto
0.38835 0.48702 lineto
0.37897 0.4854 lineto
0.36917 0.48397 lineto
0.34834 0.48164 lineto
0.33736 0.48071 lineto
0.32602 0.47991 lineto
0.31436 0.47923 lineto
0.3024 0.47865 lineto
0.29017 0.47817 lineto
0.27772 0.47777 lineto
0.25228 0.47716 lineto
0.23938 0.47694 lineto
0.22642 0.47676 lineto
0.21344 0.47662 lineto
0.20049 0.47651 lineto
0.18763 0.47643 lineto
0.17491 0.47636 lineto
0.16237 0.47631 lineto
0.15008 0.47627 lineto
0.13807 0.47625 lineto
0.12642 0.47623 lineto
0.11516 0.47621 lineto
0.10435 0.47621 lineto
0.09913 0.4762 lineto
0.09404 0.4762 lineto
0.08909 0.4762 lineto
0.08428 0.4762 lineto
0.07962 0.47619 lineto
0.07512 0.47619 lineto
0.07077 0.47619 lineto
0.06659 0.47619 lineto
0.06257 0.47619 lineto
0.05874 0.47619 lineto
Mistroke
0.05508 0.47619 lineto
0.05161 0.47619 lineto
0.04832 0.47619 lineto
0.04523 0.47619 lineto
0.04233 0.47619 lineto
0.03963 0.47619 lineto
0.03714 0.47619 lineto
0.03485 0.47619 lineto
0.03277 0.47619 lineto
0.0309 0.47619 lineto
0.02925 0.47619 lineto
0.02781 0.47619 lineto
0.02659 0.47619 lineto
0.02559 0.47619 lineto
0.02481 0.47619 lineto
0.02426 0.47619 lineto
0.02392 0.47619 lineto
0.02381 0.47619 lineto
0.02392 0.47619 lineto
0.02426 0.47619 lineto
0.02481 0.47619 lineto
0.02559 0.47619 lineto
0.02659 0.47619 lineto
0.02781 0.47619 lineto
0.02925 0.47619 lineto
0.0309 0.47619 lineto
0.03277 0.47619 lineto
0.03485 0.47619 lineto
0.03714 0.47619 lineto
0.03963 0.47619 lineto
0.04233 0.47619 lineto
0.04523 0.47619 lineto
0.04832 0.47619 lineto
0.05161 0.47619 lineto
0.05508 0.47619 lineto
0.05874 0.47619 lineto
0.06257 0.47619 lineto
0.06659 0.47619 lineto
0.07512 0.47619 lineto
0.07962 0.47619 lineto
0.08428 0.47619 lineto
0.08909 0.47618 lineto
0.09404 0.47618 lineto
0.10435 0.47618 lineto
0.1097 0.47617 lineto
0.11516 0.47617 lineto
0.12642 0.47615 lineto
0.13807 0.47613 lineto
0.15008 0.47611 lineto
0.16237 0.47607 lineto
Mistroke
0.17491 0.47602 lineto
0.18763 0.47596 lineto
0.20049 0.47587 lineto
0.21344 0.47576 lineto
0.22642 0.47562 lineto
0.23938 0.47544 lineto
0.25228 0.47522 lineto
0.26508 0.47495 lineto
0.27772 0.47461 lineto
0.29017 0.47421 lineto
0.3024 0.47373 lineto
0.31436 0.47315 lineto
0.32602 0.47247 lineto
0.34834 0.47074 lineto
0.35895 0.46966 lineto
0.36917 0.46841 lineto
0.38835 0.46536 lineto
0.4058 0.46144 lineto
0.42146 0.4565 lineto
0.43534 0.45039 lineto
0.44746 0.44297 lineto
0.45791 0.4341 lineto
0.46678 0.42365 lineto
0.4742 0.41153 lineto
0.48031 0.39765 lineto
0.48525 0.38199 lineto
0.48917 0.36454 lineto
0.49079 0.35517 lineto
0.49222 0.34536 lineto
0.49455 0.32453 lineto
0.49548 0.31355 lineto
0.49628 0.30221 lineto
0.49696 0.29055 lineto
0.49754 0.27859 lineto
0.49842 0.25391 lineto
0.49876 0.24127 lineto
0.49903 0.22847 lineto
0.49925 0.21557 lineto
0.49943 0.20261 lineto
0.49957 0.18963 lineto
0.49968 0.17668 lineto
0.49977 0.16382 lineto
0.49983 0.1511 lineto
0.49988 0.13856 lineto
0.49992 0.12627 lineto
0.49994 0.11426 lineto
0.49996 0.10261 lineto
0.49998 0.09135 lineto
0.49998 0.08589 lineto
0.49999 0.08054 lineto
Mistroke
0.49999 0.07532 lineto
0.49999 0.07023 lineto
0.49999 0.06047 lineto
0.5 0.05581 lineto
0.5 0.05131 lineto
0.5 0.04696 lineto
0.5 0.04278 lineto
0.5 0.03877 lineto
0.5 0.03493 lineto
0.5 0.03127 lineto
0.5 0.0278 lineto
0.5 0.02451 lineto
0.5 0.02142 lineto
0.5 0.01852 lineto
0.5 0.01582 lineto
0.5 0.01333 lineto
0.5 0.01104 lineto
0.5 0.00896 lineto
0.5 0.00709 lineto
0.5 0.00544 lineto
0.5 0.004 lineto
0.5 0.00278 lineto
0.5 0.00178 lineto
0.5 0.001 lineto
0.5 0.00045 lineto
0.5 0.00011 lineto
0.5 0 lineto
0.5 0.00011 lineto
0.5 0.00045 lineto
0.5 0.001 lineto
0.5 0.00178 lineto
0.5 0.00278 lineto
0.5 0.004 lineto
0.5 0.00544 lineto
0.5 0.00709 lineto
0.5 0.00896 lineto
0.5 0.01104 lineto
0.5 0.01333 lineto
0.5 0.01582 lineto
0.5 0.01852 lineto
0.5 0.02142 lineto
0.5 0.02451 lineto
0.5 0.0278 lineto
0.5 0.03127 lineto
0.5 0.03493 lineto
0.5 0.03877 lineto
0.5 0.04278 lineto
0.5 0.04696 lineto
0.5 0.05131 lineto
0.50001 0.06047 lineto
Mistroke
0.50001 0.06528 lineto
0.50001 0.07023 lineto
0.50001 0.07532 lineto
0.50001 0.08054 lineto
0.50002 0.09135 lineto
0.50004 0.10261 lineto
0.50006 0.11426 lineto
0.50008 0.12627 lineto
0.50012 0.13856 lineto
0.50017 0.1511 lineto
0.50023 0.16382 lineto
0.50032 0.17668 lineto
0.50043 0.18963 lineto
0.50057 0.20261 lineto
0.50075 0.21557 lineto
0.50097 0.22847 lineto
0.50158 0.25391 lineto
0.50198 0.26637 lineto
0.50246 0.27859 lineto
0.50304 0.29055 lineto
0.50372 0.30221 lineto
0.50452 0.31355 lineto
0.50545 0.32453 lineto
0.50653 0.33515 lineto
0.50778 0.34536 lineto
0.51083 0.36454 lineto
0.51475 0.38199 lineto
0.51969 0.39765 lineto
0.5258 0.41153 lineto
0.53322 0.42365 lineto
0.54209 0.4341 lineto
0.55254 0.44297 lineto
0.56466 0.45039 lineto
0.57854 0.4565 lineto
0.5942 0.46144 lineto
0.61165 0.46536 lineto
0.62103 0.46698 lineto
0.63083 0.46841 lineto
0.65166 0.47074 lineto
0.66264 0.47167 lineto
0.67398 0.47247 lineto
0.68564 0.47315 lineto
0.6976 0.47373 lineto
0.72228 0.47461 lineto
0.73492 0.47495 lineto
0.74772 0.47522 lineto
0.76062 0.47544 lineto
0.77358 0.47562 lineto
0.78656 0.47576 lineto
0.79951 0.47587 lineto
Mistroke
0.81237 0.47596 lineto
0.82509 0.47602 lineto
0.83763 0.47607 lineto
0.84992 0.47611 lineto
0.86193 0.47613 lineto
0.87358 0.47615 lineto
0.88484 0.47617 lineto
0.8903 0.47617 lineto
0.89565 0.47618 lineto
0.90087 0.47618 lineto
0.90596 0.47618 lineto
0.91572 0.47619 lineto
0.92038 0.47619 lineto
0.92488 0.47619 lineto
0.92923 0.47619 lineto
0.93341 0.47619 lineto
0.93743 0.47619 lineto
0.94126 0.47619 lineto
0.94492 0.47619 lineto
0.94839 0.47619 lineto
0.95168 0.47619 lineto
0.95477 0.47619 lineto
0.95767 0.47619 lineto
0.96037 0.47619 lineto
0.96286 0.47619 lineto
0.96515 0.47619 lineto
0.96723 0.47619 lineto
0.9691 0.47619 lineto
0.97075 0.47619 lineto
0.97219 0.47619 lineto
0.97341 0.47619 lineto
0.97441 0.47619 lineto
0.97519 0.47619 lineto
0.97574 0.47619 lineto
0.97608 0.47619 lineto
0.97619 0.47619 lineto
Mfstroke
grestore
grestore
MathPictureEnd%%PSTrailer
end

end end epssave restore
grestore
grestore
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 165 262 282 268 1 0 0 1.007463 142 -72.9552 sc6mt astore rstroke
end
grestore
grestore
%%EndDocument
 @endspecial 662 2452 a Fi(Fig)p Fq(.)g(73.)k(Figures)c(for)g(Exercise)h(9.)
75 2572 y Fn(Exercise)f(9.)k Fq(The)13 b(successiv)o(e)i(curv)o(es)e(get)g
(more)f(and)i(more)e(conca)o(v)o(e,)h(see)h(Figure)f(73.)19
b(The)13 b(limiting)75 2629 y(arclength)i(is)h(8)e(\(see)h(co)q(de)h(and)f
(output)g(b)q(elo)o(w\).)20 b(This)15 b(time,)g(the)g(in)o(tegral)g(cannot)g
(b)q(e)h(done)f(analyt-)p eop
%%Page: 109 109
109 108 bop 75 -100 a Fm(P)n(arametric)22 b(Curv)n(es)h(in)f(2D)p
75 -93 756 2 v 976 w Fq(109)75 49 y(ically)l(.)28 b(Ho)o(w)o(ev)o(er,)16
b(the)h(limiting)i(v)m(alue)g(is)f(easily)g(understo)q(o)q(d)f
(geometrically:)25 b(the)17 b(curv)o(e)h(collapses)75 106 y(to)d(8)f(unit)i
(length)g(linear)h(segmen)o(ts)d(of)h(the)g(co)q(ordinate)h(axes.)75
226 y Fj(x[t_])21 b(:=)g(Cos[t]^k)75 276 y(y[t_])g(:=)g(Sin[t]^k)75
376 y(ds)g(=)h(Sqrt[x'[t]^2)d(+)j(y'[t]^2]//Simplif)o(y)293
425 y(2)152 b(-2)22 b(+)f(2)h(k)152 b(2)162 475 y(Sqrt[k)43
b(Cos[t])194 b(Sin[t])43 b(+)249 575 y(2)153 b(2)f(-2)21 b(+)h(2)g(k)228
625 y(k)43 b(Cos[t])f(Sin[t])173 b(])75 724 y(Do)21 b([)249
774 y(k)h(=)g(2^n;)249 824 y(length)f(=)g(4)h(NIntegrate[ds,)d({t,)i(0,)h
(Pi/2}];)249 874 y(Print[k,)e(")66 b(",)21 b(length],)75 923
y({n,)g(1,)h(8}])162 973 y(2)65 b(5.65685)162 1023 y(4)g(6.4929)162
1073 y(8)g(7.59619)162 1123 y(16)g(7.97409)162 1173 y(32)g(7.9999)162
1222 y(64)g(8.)162 1272 y(128)g(8.)162 1322 y(256)g(8.)75 1470
y Fn(Exercise)21 b(11.)32 b Fq(The)19 b(\014rst)f(terms)h(in)g(the)g
(equations)h(ha)o(v)o(e)e(p)q(erio)q(ds)i Fh(T)1354 1477 y
Fe(1)1393 1470 y Fq(=)f(2)p Fh(\031)r(m)p Fq(,)f(and)h(the)g(second)75
1526 y(terms)14 b(ha)o(v)o(e)h(p)q(erio)q(ds)h Fh(T)492 1533
y Fe(2)524 1526 y Fq(=)d(2)p Fh(\031)r(n)c Fg(\001)f Fh(j)s(=)p
Fq(\()p Fh(k)i Fg(\000)f Fh(j)s Fq(\),)14 b(where)h Fh(m)g
Fq(and)g Fh(n)g Fq(are)f(p)q(ositiv)o(e)i(in)o(tegers.)k(Equating)15
b Fh(T)1856 1533 y Fe(1)75 1583 y Fq(and)e Fh(T)188 1590 y
Fe(2)219 1583 y Fq(giv)o(es)g(the)g(condition)g Fh(j)s(=k)g
Fq(=)g Fh(m=)p Fq(\()p Fh(m)5 b Fq(+)g Fh(n)p Fq(\).)18 b(Since)c(all)f(four)
f(quan)o(tities)h(in)h(this)e(latter)h(equation)75 1639 y(are)j(p)q(ositiv)o
(e)h(in)o(tegers,)g(the)f(smallest)h(v)m(alue)g(of)f Fh(m)h
Fq(is)f Fh(m)f Fq(=)g Fh(j)j Fq(\(and)e(then)h Fh(n)e Fq(=)g
Fh(k)d Fg(\000)f Fh(j)17 b(>)d Fq(0\),)i(giving)h(a)75 1696
y(p)q(erio)q(d)g(of)d Fh(T)295 1703 y Fe(1)327 1696 y Fq(=)f
Fh(T)402 1703 y Fe(2)434 1696 y Fq(=)g(2)p Fh(\031)r(j)s Fq(.)18
b(Cho)q(osing)e Fh(b=a)e Fq(irrational)i(w)o(ould)g(giv)o(e)f(a)g(curv)o(e)g
(that)g(nev)o(er)g(rep)q(eats.)p eop
%%Page: 110 110
110 109 bop 75 -103 a Fq(110)1042 b Fm(Twisting)21 b(Space)i(Curv)n(es)p
1186 -85 689 2 v 606 49 a Fn(PURPOSE)18 b(OF)g(THE)g(PR)o(OJECT)146
151 y Fq(This)h(pro)s(ject)g(in)o(tro)q(duces)h(plotting)g(of)f(3)g
(dimensional)i(space)f(curv)o(es.)32 b(Secondary)20 b(issues)g(are)75
208 y(analytic)11 b(and)g(n)o(umerical)g(appro)o(ximations.)18
b(This)11 b(is)g(an)g(easy)l(,)g(but)f(enjo)o(y)o(able)h(and)f(insigh)o(tful)
i(pro)s(ject.)75 284 y Fn(Instructor)18 b(Note)p Fq(:)40 b(The)16
b(Instructor's)g(noteb)q(o)q(ok)h(con)o(tains)f(remarks)g(on)g(an)h
(extension)g(of)f(Exer-)75 341 y(cises)i(5)g(and)f(8)g(to)g(ellipsoids)k
(with)c(unequal)i(semi-ma)s(jor)e(axes.)27 b(With)17 b(some)h(hin)o(ts,)g
(this)g(could)g(b)q(e)75 397 y(the)d(basis)h(of)f(an)g(in)o(teresting)h
(honor)f(assignmen)o(t.)75 474 y Fn(Shorter)i(Pro)s(ject)p
Fq(:)j(Omit)15 b(an)o(y)g(of)g(2,)f(6,)h(9,)f(10,)h(11.)577
599 y Fn(ANSWERS)i(F)o(OR)h(INSTR)o(UCTORS)75 701 y(Exercise)f(1.)j
Fq(De\014ne)c Fh(\032)508 684 y Fe(2)540 701 y Fg(\021)d Fh(x)614
684 y Fe(2)643 701 y Fq(+)e Fh(y)713 684 y Fe(2)745 701 y Fq(=)i
Fh(r)815 684 y Fe(2)842 701 y Fq(sin)898 684 y Fe(2)925 701
y Fh(\036)p Fq(,)i(then)h Fh(\032)1108 684 y Fe(2)1137 701
y Fq(+)10 b Fh(z)1205 684 y Fe(2)1238 701 y Fq(=)j Fh(r)1308
684 y Fe(2)1327 701 y Fq(.)75 777 y Fn(Exercise)k(2.)j Fq(The)15
b(same)g(calculation)i(as)e(Exercise)h(1.)75 854 y Fn(Exercise)h(3.)j
Fq(Ditto.)75 931 y Fn(Exercise)d(4.)j Fq(Answ)o(ers)15 b(will)i(v)m(ary)l(,)e
(some)g(examples)h(are)f(in)h(the)f(Instructor's)f(Noteb)q(o)q(ok.)75
1001 y Fn(Exercise)j(5.)j Fq(The)15 b(appro)o(ximation)h(impro)o(v)o(es)f(as)
f Fh(n)i Fq(gets)f(larger:)75 1105 y Fj(Do)21 b([)249 1155
y(n)h(=)g(2^k;)249 1204 y(length)f(=)g(NIntegrate[ds,)e({t,)j(0,)f(Pi}];)249
1254 y(Print[n,)f(")87 b(",)22 b(length],)75 1304 y({k,)f(1,)h(8}])75
1354 y(Clear[n])75 1454 y(2)87 b(8.81428)75 1503 y(4)g(16.4951)75
1553 y(8)g(32.2911)75 1603 y(16)g(64.1672)75 1653 y(32)g(128.094)75
1703 y(64)g(256.053)75 1752 y(128)g(512.029)75 1802 y(256)g(1024.02)75
1927 y Fn(Exercise)13 b(6.)18 b Fq(The)12 b(results)f(are)g(sligh)o(tly)h
(di\013eren)o(t,)g(but)f(once)h(again)f(the)g(arclength)h(is)g(appro)o
(ximately)75 1976 y(4)p Fh(n)j Fq(for)g Fh(n)g Fq(large.)75
2081 y Fj(Do)21 b([)249 2130 y(length)g(=)g(NIntegrate[ds,)e({t,)j(0,)f
(Pi}];)249 2180 y(Print[n,)f(")87 b(",)22 b(length],)75 2230
y({n,)f(1,)h(4}])75 2280 y(Clear[n])75 2330 y(1)87 b(7.82589)75
2380 y(2)g(10.505)75 2429 y(3)g(13.835)75 2479 y(4)g(17.4443)75
2579 y(Do)21 b([)249 2629 y(n)h(=)g(2^k;)p eop
%%Page: 111 111
111 110 bop 75 -103 a Fm(Twisting)21 b(Space)i(Curv)n(es)p
75 -85 689 2 v 1043 w Fq(111)249 49 y Fj(length)e(=)g(NIntegrate[ds,)e({t,)j
(0,)f(Pi}];)249 99 y(Print[n,)f(")87 b(",)22 b(length],)75
149 y({k,)f(1,)h(5}])75 199 y(Clear[n])75 249 y(2)87 b(10.505)75
298 y(4)g(17.4443)75 348 y(8)g(32.7837)75 398 y(16)g(64.4162)75
448 y(32)g(128.219)75 563 y Fn(Exercise)17 b(7.)j Fq(Figure)15
b(74)g(giv)o(es)g(the)h(output)f(of:)75 660 y Fj(n)22 b(=)f(4;)75
709 y(ParametricPlot3D[)o({x[t])o(,)e(y[t],)i(z[t]},)f({t,)i(0,)f(2Pi},)249
759 y(ViewPoint->{2.663,)d(-1.879,)j(0.910})75 809 y(])75 859
y(Clear[n])843 1536 y @beginspecial 0 @llx 0 @lly 130 @urx
287 @ury 631 @rwi @setspecial
%%BeginDocument: Twist.cylinder.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	287.000000 def
/Mwidth		130.311203 def
/Mheight	287.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
-0.577069 2.144047 0.053601 2.144047 [
[ 0 0 0 0 ]
[ 1 2.20242 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
0 0 moveto
1 0 lineto
1 2.20242 lineto
0 2.20242 lineto
closepath
clip
newpath
gsave
0.002 setlinewidth
0.08699 0.25759 moveto
0.0536 2.10556 lineto
stroke
0.0536 2.10556 moveto
0.56743 2.14882 lineto
stroke
0.56743 2.14882 moveto
0.56221 0.38518 lineto
stroke
0.56221 0.38518 moveto
0.08699 0.25759 lineto
stroke
0.41901 0.0536 moveto
0.91153 0.2007 lineto
stroke
0.91153 0.2007 moveto
0.9464 2.08617 lineto
stroke
0.9464 2.08617 moveto
0.41229 2.03571 lineto
stroke
0.41229 2.03571 moveto
0.41901 0.0536 lineto
stroke
0.08699 0.25759 moveto
0.0536 2.10556 lineto
stroke
0.0536 2.10556 moveto
0.41229 2.03571 lineto
stroke
0.41229 2.03571 moveto
0.41901 0.0536 lineto
stroke
0.41901 0.0536 moveto
0.08699 0.25759 lineto
stroke
0.56221 0.38518 moveto
0.91153 0.2007 lineto
stroke
0.91153 0.2007 moveto
0.9464 2.08617 lineto
stroke
0.9464 2.08617 moveto
0.56743 2.14882 lineto
stroke
0.56743 2.14882 moveto
0.56221 0.38518 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.53542 0.52806 moveto
0.44302 0.5492 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.62352 0.49583 moveto
0.53542 0.52806 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.44302 0.5492 moveto
0.35568 0.55957 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.69827 0.45318 moveto
0.62352 0.49583 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.35568 0.55957 moveto
0.28244 0.56045 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.75152 0.40183 moveto
0.69827 0.45318 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.28244 0.56045 moveto
0.23143 0.55404 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.48907 0.95031 moveto
0.3964 0.96772 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.58212 0.92358 moveto
0.48907 0.95031 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.66614 0.88759 moveto
0.58212 0.92358 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.77678 0.34452 moveto
0.75152 0.40183 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.3964 0.96772 moveto
0.31352 0.97654 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.73229 0.84331 moveto
0.66614 0.88759 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.31352 0.97654 moveto
0.24927 0.9783 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.23143 0.55404 moveto
0.20905 0.54338 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.773 0.79258 moveto
0.73229 0.84331 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.77012 0.28494 moveto
0.77678 0.34452 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.5369 1.36317 moveto
0.44112 1.38615 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.62824 1.33264 moveto
0.5369 1.36317 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.44112 1.38615 moveto
0.35055 1.40191 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.70578 1.29487 moveto
0.62824 1.33264 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.24927 0.9783 moveto
0.21116 0.97524 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.35055 1.40191 moveto
0.27454 1.41144 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.20905 0.54338 moveto
0.21909 0.53213 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.78284 0.73812 moveto
0.773 0.79258 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.7611 1.25094 moveto
0.70578 1.29487 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.73109 0.22741 moveto
0.77012 0.28494 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.27454 1.41144 moveto
0.22149 1.41631 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.48885 1.81671 moveto
0.39272 1.838 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.58537 1.78996 moveto
0.48885 1.81671 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.21116 0.97524 moveto
0.20451 0.97022 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.67256 1.75763 moveto
0.58537 1.78996 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.78745 1.20265 moveto
0.7611 1.25094 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.39272 1.838 moveto
0.30669 1.85442 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.66329 0.17639 moveto
0.73109 0.22741 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.75945 0.68339 moveto
0.78284 0.73812 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.21909 0.53213 moveto
0.26177 0.52427 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.74127 1.72014 moveto
0.67256 1.75763 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.30669 1.85442 moveto
0.2399 1.86701 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.22149 1.41631 moveto
0.1981 1.41861 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.78366 1.67847 moveto
0.74127 1.72014 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.20451 0.97022 moveto
0.23153 0.96651 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.78068 1.15251 moveto
0.78745 1.20265 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.70433 0.63224 moveto
0.75945 0.68339 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.26177 0.52427 moveto
0.33313 0.52364 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.2399 1.86701 moveto
0.20017 1.87716 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.1981 1.41861 moveto
0.20836 1.42081 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.6233 0.58839 moveto
0.70433 0.63224 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.79403 1.63421 moveto
0.78366 1.67847 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.33313 0.52364 moveto
0.42505 0.53326 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.74026 1.10354 moveto
0.78068 1.15251 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.23153 0.96651 moveto
0.29037 0.96741 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.52609 0.55484 moveto
0.6233 0.58839 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.42505 0.53326 moveto
0.52609 0.55484 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.20017 1.87716 moveto
0.19309 1.88657 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.66989 1.05895 moveto
0.74026 1.10354 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.76986 1.58945 moveto
0.79403 1.63421 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.20836 1.42081 moveto
0.25257 1.42553 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.29037 0.96741 moveto
0.37486 0.97581 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.57759 1.02164 moveto
0.66989 1.05895 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.37486 0.97581 moveto
0.47484 0.99366 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.19309 1.88657 moveto
0.221 1.89711 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.71267 1.54663 moveto
0.76986 1.58945 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.47484 0.99366 moveto
0.57759 1.02164 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.25257 1.42553 moveto
0.32667 1.43523 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.62845 1.50818 moveto
0.71267 1.54663 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.32667 1.43523 moveto
0.42224 1.45178 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.221 1.89711 moveto
0.28209 1.91056 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.52735 1.47615 moveto
0.62845 1.50818 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.42224 1.45178 moveto
0.52735 1.47615 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.28209 1.91056 moveto
0.36995 1.92841 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.58098 1.98017 moveto
0.67703 2.01357 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.36995 1.92841 moveto
0.47401 1.95157 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.47401 1.95157 moveto
0.58098 1.98017 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.41901 0.0536 moveto
0.91153 0.2007 lineto
stroke
0.91153 0.2007 moveto
0.9464 2.08617 lineto
stroke
0.9464 2.08617 moveto
0.41229 2.03571 lineto
stroke
0.41229 2.03571 moveto
0.41901 0.0536 lineto
stroke
0.08699 0.25759 moveto
0.0536 2.10556 lineto
stroke
0.0536 2.10556 moveto
0.41229 2.03571 lineto
stroke
0.41229 2.03571 moveto
0.41901 0.0536 lineto
stroke
0.41901 0.0536 moveto
0.08699 0.25759 lineto
stroke
grestore
gsave
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 629 1623 a Fi(Fig)p Fq(.)15 b(74.)k(F)l(our)c(t)o(wists)f(up)i
(a)f(cylinder.)75 1731 y Fn(Exercise)28 b(8.)48 b Fq(Making)25
b(the)f(indicated)j(appro)o(ximation)d(and)h(trig)g(simpli\014cation)i(giv)o
(es)d Fh(ds)29 b Fq(=)75 1787 y(2)p Fh(n)8 b Fq(sin)g Fh(t)g(dt)p
Fq(,)15 b(so)g Fh(s)e Fq(=)426 1753 y Fd(R)453 1766 y Ff(\031)445
1801 y Fe(0)484 1787 y Fh(ds)g Fq(=)g(4)p Fh(n)p Fq(.)20 b(Isn't)15
b(Mathematics)f(w)o(onderful?)75 1862 y Fn(Exercise)k(9.)j
Fq(This)16 b(is)g(half)g(of)f(a)g(\(great\))f(circle,)j(so)e(the)h(arclength)
g(is)g Fh(\031)h Fq(whic)o(h)f(is)g(grossly)g(di\013eren)o(t)75
1919 y(from)e(4)c Fg(\001)g Fq(0)i(=)h(0.)20 b(But)15 b(this)h(is)g(OK,)f
(since)h(the)g(4)p Fh(n)f Fq(result)g(only)h(hold)g(for)f Fl(lar)n(ge)j
Fh(n)p Fq(.)75 1994 y Fn(Exercise)f(10.)j Fq(No)o(w)15 b(the)g(di\013eren)o
(tial)h(arclength)g(is)643 2045 y Fd(q)p 684 2045 563 2 v 684
2096 a Fq(5)10 b Fg(\000)h Fq(4)d(cos)e(2)p Fh(t)11 b Fq(+)f(2)p
Fh(n)1006 2083 y Fe(2)1026 2096 y Fq(\(1)f Fg(\000)i Fq(cos)c(2)p
Fh(t)p Fq(\))h Fh(dt:)75 2187 y Fq(That)22 b(negligible)j(\\1")d(b)q(ecomes)h
(a)f(negligible)j(\\5)15 b Fg(\000)g Fq(4)8 b(cos)f(2)p Fh(t)p
Fq(.")41 b(Other)23 b(than)f(that,)h(the)g(story)e(is)75 2243
y(essen)o(tially)c(the)e(same.)75 2319 y Fn(Exercise)i(11.)j
Fq(Accept)c(an)o(y)f(in)o(tuitiv)o(e)h(argumen)o(t)f(that)f(implies)k(w)o(e)c
(ha)o(v)o(e)h(a)g(standard)g(helix.)75 2394 y Fn(Exercise)24
b(12.)39 b Fq(No)o(w)21 b(the)g Fh(ds)h Fq(is)g(constan)o(t,)g(so)f(ev)o
(erything)h(is)f(trivial:)34 b Fh(ds)23 b Fq(=)1547 2356 y
Fg(p)p 1585 2356 126 2 v 38 x Fq(1)10 b(+)g Fh(n)1690 2381
y Fe(2)1718 2394 y Fh(dt)p Fq(;)24 b Fh(s)g Fq(=)75 2450 y(2)p
Fh(\031)126 2412 y Fg(p)p 163 2412 V 163 2450 a Fq(1)10 b(+)g
Fh(n)268 2437 y Fe(2)288 2450 y Fq(.)28 b(F)l(or)17 b Fh(n)h
Fq(=)f(0,)h(this)g(b)q(ecomes)g(2)p Fh(\031)h Fq(corresp)q(onding)g(to)e(a)h
(v)o(ertical)g(line)i(along)e(a)f(cylinder)75 2507 y(of)f(heigh)o(t)i(2)p
Fh(\031)r Fq(|mak)o(es)d(p)q(erfect)i(sense!)26 b(F)l(or)16
b(large)h Fh(n)p Fq(,)g Fh(s)f Fg(\031)g Fq(2)p Fh(\031)r(n)p
Fq(.)24 b(The)17 b(large)g Fh(n)g Fq(answ)o(er)g(ignores)g(the)75
2563 y(v)o(ertical)g(p)q(ortion)f(of)f(the)i(arclength,)f(that)f(is,)i(giv)o
(es)f(the)g(same)g(answ)o(er)f(as)h(winding)h Fh(n)g Fq(indep)q(enden)o(t)75
2620 y(circles)g(around)e(the)g(cylinder.)p eop
%%Page: 112 112
112 111 bop 75 -100 a Fq(112)1186 b Fm(V)-6 b(ectors)23 b(and)h(W)-6
b(ork)p 1330 -93 545 2 v 606 49 a Fn(PURPOSE)18 b(OF)g(THE)g(PR)o(OJECT)146
150 y Fq(This)i(pro)s(ject)f(in)o(tro)q(duces)i(v)o(ector)f(op)q(erations)g
(in)g Fl(Mathematic)n(a)k Fq(and)d(mak)o(es)e(applications)j(to)75
206 y(the)17 b(computation)f(of)g(the)g(general)h(w)o(ork)f(in)o(tegral.)24
b(The)16 b(v)m(alidit)o(y)i(of)e(the)k(\177)-26 b Fh(y)17 b
Fq(=)e Fh(g)i Fq(appro)o(ximation)g(to)75 263 y(the)e(in)o(v)o(erse)h(square)
f(la)o(w)g(near)h(the)f(surface)g(of)g(the)g(earth)g(is)h(dramatically)g
(brough)o(t)f(home)g(b)o(y)g(some)75 319 y(explicit)f(calculations.)20
b(W)l(e)12 b(in)o(tro)q(duce)h(the)f(idea)h(of)e(a)h(fourth)g(dimension)h(as)
f(a)f(simple)j(analog)d(instead)75 376 y(of)k(something)g(m)o(ysterious.)20
b(This)c(theme)f(will)i(recur)e(in)h(later)f(pro)s(jects.)75
451 y Fn(Instructor)20 b(Note)p Fq(:)42 b(It)17 b(isn't)h(in)g(the)f(pro)s
(ject,)g(but)h(the)f(Instructor)g(Noteb)q(o)q(ok)h(indicates)h(ho)o(w)e(to)75
508 y(write)h(little)h(mo)q(dules)f(to)f(automate)g(some)g(of)g(the)h(common)
f(v)o(ector)g(op)q(erations.)27 b(If)18 b(some)f(of)g(y)o(our)75
564 y(studen)o(ts)k(are)g(in)o(terested)g(in)h Fl(Mathematic)n(a)k
Fq(co)q(ding,)d(this)e(could)i(b)q(e)e(the)h(basis)f(for)g(some)f(simple)75
621 y(examples)e(of)f(writing)h(\\\014re)g(pro)q(of)t(")e(mo)q(dules.)28
b(Also,)18 b(as)f(a)g(run)g(up)h(to)f(the)h(Instructor)f(v)o(ersions)g(of)75
677 y(the)i(computations)h(for)f(Exercise)h(5,)g(w)o(e)f(sho)o(w)f(ho)o(w)h
(to)g(use)h Fl(Mathematic)n(a)j Fq(to)c(jog)g(our)g(memories)75
733 y(ab)q(out)c(English)i(units)e(to)g(Metric)g(units)h(con)o(v)o(ersions.)
75 809 y Fn(Instructor)22 b(Note)p Fq(:)47 b(The)19 b(sym)o(b)q(ology)g(of)g
(the)g(line)i(in)o(tegral)f(is)f(used)h(without)f(fanfare.)32
b(It)19 b(isn't)75 865 y(necessary)h(for)f(this)h(notion)g(to)f(ha)o(v)o(e)g
(b)q(een)i(in)o(tro)q(duced,)g(since)g(w)o(e)e(immediately)j(giv)o(e)d(a)h
(concrete)75 922 y(mathematical)c(and)g Fl(Mathematic)n(a)j
Fq(implemen)o(tation)e(without)f(ev)o(er)g(uttering)f(the)h(phrase)g(\\line)h
(in-)75 978 y(tegral.")36 b(So)20 b(y)o(ou)h(can)g(let)g(this)g(pro)s(ject)f
(soften)g(the)h(men)o(tal)g(ground)g(for)f(the)g(ev)o(en)o(tual)h(detailed)75
1035 y(discussion)i(of)e(this)h(notion)g(or,)g(if)g(y)o(ou)f(prefer,)h(p)q
(ostp)q(one)g(this)g(pro)s(ject)f(un)o(til)h(line)i(in)o(tegrals)d(are)75
1091 y(discussed.)577 1214 y Fn(ANSWERS)c(F)o(OR)h(INSTR)o(UCTORS)75
1308 y(Exercise)f(1.)75 1404 y Fj(u)22 b(=)f({1,)g(2,)h(3};)f(v)g(=)h({5,)f
(8,)h(a};)75 1454 y(u)g(.)f(v//Simplify)162 1504 y(3)h(\(7)f(+)h(a\))217
b(\(*)22 b(so)f(a)h(=)f(-7)h(for)f(orthogonality)e(*\))75 1604
y(u)j(=)f({1,)g(2,)h(3,)f(4};)g(v)h(=)f({2,)h(5,)f(8,)g(a};)75
1653 y(u)h(.)f(v//Simplify)162 1703 y(36)h(+)f(4)h(a)239 b(\(*)22
b(so)f(a)h(=)f(-9)h(for)f(orthogonality)e(*\))75 1803 y(Clear[u,)h(v])261
b(\(*)22 b(cleaning)e(up:)h(a)h(good)e(habit)h(*\))75 1918
y Fn(Exercise)c(2.)j Fq(Of)15 b(course)h(the)f(answ)o(ers)g(are)869
1886 y Fg(p)p 907 1886 28 2 v 32 x Fh(n)q Fq(,)f(where)i Fh(n)f
Fq(is)h(the)f(n)o(um)o(b)q(er)h(of)f(dimensions:)75 2015 y
Fj(u)22 b(=)f({1,)g(1};)h(Sqrt[u)e(.)i(u])162 2065 y(Sqrt[2])75
2115 y(u)g(=)f({1,)g(1,)h(1};)f(Sqrt[u)f(.)i(u])162 2164 y(Sqrt[3])75
2214 y(u)g(=)f({1,)g(1,)h(1,)f(1};)g(Sqrt[u)g(.)g(u])162 2264
y(2)75 2314 y(u)h(=)f({1,)g(1,)h(1,)f(1,)g(1};)h(Sqrt[u)e(.)i(u])162
2364 y(Sqrt[5])75 2413 y(Clear[u])75 2529 y Fn(Exercise)e(3.)28
b Fq(Since)19 b(orthogonalit)o(y)e(is)h(a)g(prop)q(ert)o(y)f(connected)i
(with)f(the)g(direction,)i(but)d(not)h(the)75 2579 y(magnitude,)c(of)e(v)o
(ectors)g(it)h(mak)o(es)g(no)g(di\013erence)h(whether)f(w)o(e)f(test)h(the)g
(unit)g(v)o(ectors)f(or)h(the)g(original)75 2629 y(v)o(ectors:)p
eop
%%Page: 113 113
113 112 bop 75 -100 a Fm(V)-6 b(ectors)23 b(and)g(W)-6 b(ork)p
75 -93 545 2 v 1189 w Fq(113)75 49 y Fj(u)22 b(=)f({1,)g(1,)h(1};)f(v)g(=)h
({1,)f(-2,)g(1};)h(w)f(=)h({3,)f(0,)g(-3};)75 99 y(uhat)g(=)h(u/Sqrt[u)e(.)h
(u])249 149 y(1)174 b(1)h(1)162 199 y({-------,)20 b(-------,)g(-------})184
249 y(Sqrt[3])42 b(Sqrt[3])g(Sqrt[3])75 298 y(vhat)21 b(=)h(v/Sqrt[v)e(.)h
(v])249 348 y(1)240 b(2)130 b(1)162 398 y({-------,)20 b(-Sqrt[-],)g
(-------})184 448 y(Sqrt[6])173 b(3)65 b(Sqrt[6])75 498 y(what)21
b(=)h(w/Sqrt[w)e(.)h(w])249 547 y(1)283 b(1)162 597 y({-------,)20
b(0,)h(-\(-------\)})184 647 y(Sqrt[2])151 b(Sqrt[2])75 747
y(uhat)21 b(.)h(vhat)162 796 y(0)75 846 y(vhat)f(.)h(what)162
896 y(0)75 946 y(what)f(.)h(uhat)162 996 y(0)75 1095 y(u)g(.)f(v)162
1145 y(0)75 1195 y(v)h(.)f(w)162 1245 y(0)75 1295 y(w)h(.)f(u)162
1344 y(0)75 1444 y(Clear[u,v,w,uhat,)o(vhat,)o(what])75 1577
y Fn(Exercise)c(4.)j Fq(Only)c Fa(v)h Fq(and)e Fa(a)g Fq(are)g(orthogonal.)75
1688 y Fj(r[t_])21 b(:=)g({Cos[t],)f(Sin[t],)h(t})75 1737 y(v[t_])g(=)g
(r'[t])162 1787 y({-Sin[t],)f(Cos[t],)g(1})75 1837 y(a[t_])h(=)g(v'[t])162
1887 y({-Cos[t],)f(-Sin[t],)g(0})75 1986 y(r[t])h(.)h(v[t])162
2036 y(t)75 2086 y(v[t])f(.)h(a[t])162 2136 y(0)75 2186 y(a[t])f(.)h(r[t])315
2236 y(2)196 b(2)162 2285 y(-Cos[t])42 b(-)22 b(Sin[t])75 2385
y(Clear[a,)e(v])75 2518 y Fn(Exercise)d(5.)j Fq(Note)15 b(that)f(the)i(answ)o
(ers)e(to)h(\(a\))f(and)h(\(b\))g(are)g(nearly)h(the)f(same:)75
2629 y Fj(r[t_])21 b(:=)g({Cos[t],)f(Sin[t],)h(t})p eop
%%Page: 114 114
114 113 bop 75 -100 a Fq(114)1186 b Fm(V)-6 b(ectors)23 b(and)h(W)-6
b(ork)p 1330 -93 545 2 v 75 49 a Fj(m)22 b(=)f(1000;)g(g)h(=)f(0.0098;)75
99 y(F[{x_,)g(y_,)g(z_}])g(:=)g({0,)g(0,)h(m)f(g})75 149 y(NIntegrate[F[r[t])
o(])e(.)j(r'[t],)e({t,)h(0,)h(2Pi}])162 199 y(61.5752)75 348
y(R)g(=)f(6400;)75 398 y(k)h(=)f(m)h(g)f(R^2;)75 448 y(r[t_])g(:=)g({Cos[t],)
f(Sin[t],)h(t})g(+)h({0,)f(0,)g(R})75 498 y(F[{x_,)g(y_,)g(z_}])g(:=)g(k)h
({x,)f(y,)g(z}/\(x^2)g(+)g(y^2)g(+)h(z^2\)^\(3/2\))75 547 y
(NIntegrate[F[r[t])o(])d(.)j(r'[t],)e({t,)h(0,)h(2Pi}])162
597 y(61.5148)75 715 y Fn(Exercise)15 b(6.)k Fq(A)14 b(helical)h(path)f(is)f
(more)g(lik)o(e)i(a)e(w)o(alk)g(up)h(a)f(circular)i(staircase)e(than)g(a)g(w)
o(alk)g(up)h(a)f(hill.)75 764 y(The)k(requested)g(plot)f(is)h(sho)o(wn)f(in)i
(Figure)e(75.)23 b(Note)16 b(that)g(the)h(answ)o(ers)e(to)h(\(b\))g(and)h
(\(c\))f(are)g(again)75 814 y(nearly)g(the)f(same.)623 1451
y @beginspecial 0 @llx 0 @lly 282 @urx 233 @ury 1688 @rwi @setspecial
%%BeginDocument: Vec.realistic.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	233.568481 def
/Mwidth		282.000000 def
/Mheight	233.568481 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.024232 0.96929 -0.020462 0.96929 [
[(-0.5)] 0.13444 0.21698 -0.080551 1 Msboxa
[(0)] 0.28689 0.15658 -0.048384 1 Msboxa
[(0.5)] 0.45315 0.09071 -0.012323 1 Msboxa
[(1)] 0.6352 0.0186 0.028386 1 Msboxa
[(X-axis)] 0.33601 0.0775 -0.038339 1 Msboxa
[(-0.5)] 0.0616 0.67228 0.087638 -1 Msboxa
[(0)] 0.19648 0.72995 0.060525 -1 Msboxa
[(0.5)] 0.31609 0.78108 0.036985 -1 Msboxa
[(Y-axis)] 0.22406 0.80364 0.054404 -1 Msboxa
[(0)] 0.04992 0.25989 1 0.603537 Msboxa
[(0.25)] 0.04167 0.34464 1 0.563884 Msboxa
[(0.5)] 0.03313 0.4325 1 0.523078 Msboxa
[(0.75)] 0.02428 0.52366 1 0.481069 Msboxa
[(1)] 0.0151 0.61829 1 0.437801 Msboxa
[(Z-axis)] -0.02108 0.40949 1 0.520781 Msboxa
[ 0 0 0 0 ]
[ 1 0.828257 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.0611 0.25765 moveto
0.65195 0.02423 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.13347 0.22906 moveto
0.13298 0.2351 lineto
stroke
grestore
[(-0.5)] 0.13444 0.21698 -0.080551 1 Mshowa
gsave
0.002 setlinewidth
0.2863 0.16868 moveto
0.28601 0.17473 lineto
stroke
grestore
[(0)] 0.28689 0.15658 -0.048384 1 Mshowa
gsave
0.002 setlinewidth
0.453 0.10283 moveto
0.45293 0.10888 lineto
stroke
grestore
[(0.5)] 0.45315 0.09071 -0.012323 1 Mshowa
gsave
0.002 setlinewidth
0.63554 0.03072 moveto
0.63571 0.03677 lineto
stroke
grestore
[(1)] 0.6352 0.0186 0.028386 1 Mshowa
gsave
0.001 setlinewidth
0.16301 0.21739 moveto
0.16274 0.22101 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.19305 0.20552 moveto
0.1928 0.20915 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22361 0.19345 moveto
0.22338 0.19708 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.25468 0.18117 moveto
0.25448 0.1848 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31848 0.15597 moveto
0.31832 0.1596 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35122 0.14304 moveto
0.35109 0.14667 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38454 0.12987 moveto
0.38444 0.13351 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.41846 0.11647 moveto
0.41839 0.12011 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.48817 0.08893 moveto
0.48816 0.09257 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.52399 0.07478 moveto
0.52401 0.07842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56048 0.06037 moveto
0.56052 0.064 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59766 0.04568 moveto
0.59773 0.04931 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.10442 0.24054 moveto
0.1041 0.24416 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.07584 0.25183 moveto
0.0755 0.25544 lineto
stroke
grestore
[(X-axis)] 0.33601 0.0775 -0.038339 1 Mshowa
grestore
gsave
gsave
0.002 setlinewidth
0.02423 0.64375 moveto
0.39836 0.80402 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.06265 0.66021 moveto
0.06318 0.65418 lineto
stroke
grestore
[(-0.5)] 0.0616 0.67228 0.087638 -1 Mshowa
gsave
0.002 setlinewidth
0.19722 0.71786 moveto
0.19758 0.71181 lineto
stroke
grestore
[(0)] 0.19648 0.72995 0.060525 -1 Mshowa
gsave
0.002 setlinewidth
0.31654 0.76897 moveto
0.31676 0.76292 lineto
stroke
grestore
[(0.5)] 0.31609 0.78108 0.036985 -1 Mshowa
gsave
0.001 setlinewidth
0.09092 0.67232 moveto
0.09122 0.6687 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11849 0.68413 moveto
0.11877 0.68051 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.14538 0.69565 moveto
0.14564 0.69202 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.17161 0.70689 moveto
0.17185 0.70326 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22221 0.72857 moveto
0.22242 0.72494 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.24662 0.73902 moveto
0.24681 0.73539 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.27047 0.74924 moveto
0.27064 0.74561 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29377 0.75922 moveto
0.29392 0.75559 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.03365 0.64779 moveto
0.03399 0.64417 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.3388 0.77851 moveto
0.33892 0.77488 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36057 0.78783 moveto
0.36067 0.7842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38186 0.79696 moveto
0.38195 0.79332 lineto
stroke
grestore
[(Y-axis)] 0.22406 0.80364 0.054404 -1 Mshowa
grestore
gsave
gsave
0.002 setlinewidth
0.0611 0.25765 moveto
0.02423 0.64375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.06029 0.26616 moveto
0.06548 0.26929 lineto
stroke
grestore
[(0)] 0.04992 0.25989 1 0.603537 Mshowa
gsave
0.002 setlinewidth
0.05223 0.35059 moveto
0.0575 0.35357 lineto
stroke
grestore
[(0.25)] 0.04167 0.34464 1 0.563884 Mshowa
gsave
0.002 setlinewidth
0.04387 0.43812 moveto
0.04924 0.44093 lineto
stroke
grestore
[(0.5)] 0.03313 0.4325 1 0.523078 Mshowa
gsave
0.002 setlinewidth
0.0352 0.52891 moveto
0.04066 0.53154 lineto
stroke
grestore
[(0.75)] 0.02428 0.52366 1 0.481069 Mshowa
gsave
0.002 setlinewidth
0.0262 0.62315 moveto
0.03175 0.62558 lineto
stroke
grestore
[(1)] 0.0151 0.61829 1 0.437801 Mshowa
gsave
0.001 setlinewidth
0.0587 0.2828 moveto
0.06182 0.28466 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.0571 0.29957 moveto
0.06023 0.30141 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.05549 0.31646 moveto
0.05863 0.31828 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.05386 0.33346 moveto
0.05702 0.33527 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.05058 0.36784 moveto
0.05376 0.36961 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.04892 0.38522 moveto
0.05211 0.38697 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.04725 0.40273 moveto
0.05045 0.40445 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.04556 0.42036 moveto
0.04877 0.42206 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.04216 0.45601 moveto
0.04539 0.45767 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.04044 0.47403 moveto
0.04368 0.47568 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.03871 0.49219 moveto
0.04196 0.49381 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.03696 0.51048 moveto
0.04022 0.51208 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.03343 0.54748 moveto
0.03671 0.54903 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.03164 0.56618 moveto
0.03494 0.56771 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02984 0.58503 moveto
0.03315 0.58654 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02803 0.60402 moveto
0.03135 0.6055 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02436 0.64243 moveto
0.0277 0.64387 lineto
stroke
grestore
[(Z-axis)] -0.02108 0.40949 1 0.520781 Mshowa
grestore
0 0 moveto
1 0 lineto
1 0.82826 lineto
0 0.82826 lineto
closepath
clip
newpath
gsave
0.002 setlinewidth
0.0611 0.25765 moveto
0.02423 0.64375 lineto
stroke
0.02423 0.64375 moveto
0.39836 0.80402 lineto
stroke
0.39836 0.80402 moveto
0.40548 0.46687 lineto
stroke
0.40548 0.46687 moveto
0.0611 0.25765 lineto
stroke
0.65195 0.02423 moveto
0.94145 0.30391 lineto
stroke
0.94145 0.30391 moveto
0.97577 0.67954 lineto
stroke
0.97577 0.67954 moveto
0.66595 0.4601 lineto
stroke
0.66595 0.4601 moveto
0.65195 0.02423 lineto
stroke
0.0611 0.25765 moveto
0.02423 0.64375 lineto
stroke
0.02423 0.64375 moveto
0.66595 0.4601 lineto
stroke
0.66595 0.4601 moveto
0.65195 0.02423 lineto
stroke
0.65195 0.02423 moveto
0.0611 0.25765 lineto
stroke
0.40548 0.46687 moveto
0.94145 0.30391 lineto
stroke
0.94145 0.30391 moveto
0.97577 0.67954 lineto
stroke
0.97577 0.67954 moveto
0.39836 0.80402 lineto
stroke
0.39836 0.80402 moveto
0.40548 0.46687 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.47894 0.48859 moveto
0.40955 0.49369 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.5496 0.47575 moveto
0.47894 0.48859 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.6183 0.45472 moveto
0.5496 0.47575 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.40955 0.49369 moveto
0.34448 0.49167 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.68155 0.42522 moveto
0.6183 0.45472 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.34448 0.49167 moveto
0.28662 0.48334 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.73548 0.38726 moveto
0.68155 0.42522 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.28662 0.48334 moveto
0.23874 0.46967 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.77588 0.34123 moveto
0.73548 0.38726 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.23874 0.46967 moveto
0.20339 0.45191 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.20339 0.45191 moveto
0.18275 0.43155 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.79826 0.28812 moveto
0.77588 0.34123 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.48227 0.6032 moveto
0.44386 0.60962 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.51992 0.59273 moveto
0.48227 0.6032 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.44386 0.60962 moveto
0.40677 0.61221 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.55462 0.57815 moveto
0.51992 0.59273 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.40677 0.61221 moveto
0.37291 0.61135 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.58412 0.55959 moveto
0.55462 0.57815 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.37291 0.61135 moveto
0.34404 0.60751 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.18275 0.43155 moveto
0.17834 0.41032 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.79815 0.22973 moveto
0.79826 0.28812 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.34404 0.60751 moveto
0.32163 0.60132 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.60614 0.53738 moveto
0.58412 0.55959 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.32163 0.60132 moveto
0.30686 0.5935 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.61855 0.51212 moveto
0.60614 0.53738 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.17834 0.41032 moveto
0.19079 0.39018 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.4507 0.6642 moveto
0.43082 0.66565 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.47051 0.66075 moveto
0.4507 0.6642 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.30686 0.5935 moveto
0.30047 0.58486 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.43082 0.66565 moveto
0.41204 0.66524 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.48903 0.65529 moveto
0.47051 0.66075 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.41204 0.66524 moveto
0.3954 0.66316 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.50503 0.64789 moveto
0.48903 0.65529 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.61948 0.48473 moveto
0.61855 0.51212 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.3954 0.66316 moveto
0.3818 0.65971 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.7717 0.16888 moveto
0.79815 0.22973 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.51729 0.63873 moveto
0.50503 0.64789 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.3818 0.65971 moveto
0.37192 0.65522 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.30047 0.58486 moveto
0.30273 0.57624 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.52474 0.62814 moveto
0.51729 0.63873 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.37192 0.65522 moveto
0.36624 0.65008 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.19079 0.39018 moveto
0.21947 0.37311 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.60756 0.45639 moveto
0.61948 0.48473 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.52647 0.61654 moveto
0.52474 0.62814 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.36624 0.65008 moveto
0.36494 0.64471 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.30273 0.57624 moveto
0.31334 0.5685 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.36494 0.64471 moveto
0.36797 0.63951 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.52188 0.60446 moveto
0.52647 0.61654 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.36797 0.63951 moveto
0.37495 0.63487 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.58223 0.42862 moveto
0.60756 0.45639 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.31334 0.5685 moveto
0.33138 0.56242 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.21947 0.37311 moveto
0.26235 0.36098 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.51076 0.59253 moveto
0.52188 0.60446 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.46494 0.63455 moveto
0.47271 0.63864 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.37495 0.63487 moveto
0.38527 0.63112 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.45438 0.63112 moveto
0.46494 0.63455 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.38527 0.63112 moveto
0.3981 0.62851 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.44158 0.62861 moveto
0.45438 0.63112 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.49333 0.58143 moveto
0.51076 0.59253 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.33138 0.56242 moveto
0.35542 0.55864 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.3981 0.62851 moveto
0.41245 0.62721 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.42729 0.62726 moveto
0.44158 0.62861 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.41245 0.62721 moveto
0.42729 0.62726 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.54398 0.40312 moveto
0.58223 0.42862 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.47038 0.57185 moveto
0.49333 0.58143 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.35542 0.55864 moveto
0.38353 0.55762 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.26235 0.36098 moveto
0.31603 0.35525 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.4432 0.56439 moveto
0.47038 0.57185 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.38353 0.55762 moveto
0.41355 0.55955 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.41355 0.55955 moveto
0.4432 0.56439 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.49459 0.38164 moveto
0.54398 0.40312 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.31603 0.35525 moveto
0.37599 0.35681 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.43717 0.36581 moveto
0.49459 0.38164 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.37599 0.35681 moveto
0.43717 0.36581 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.65195 0.02423 moveto
0.94145 0.30391 lineto
stroke
0.94145 0.30391 moveto
0.97577 0.67954 lineto
stroke
0.97577 0.67954 moveto
0.66595 0.4601 lineto
stroke
0.66595 0.4601 moveto
0.65195 0.02423 lineto
stroke
0.0611 0.25765 moveto
0.02423 0.64375 lineto
stroke
0.02423 0.64375 moveto
0.66595 0.4601 lineto
stroke
0.66595 0.4601 moveto
0.65195 0.02423 lineto
stroke
0.65195 0.02423 moveto
0.0611 0.25765 lineto
stroke
grestore
gsave
gsave
0.002 setlinewidth
0.0611 0.25765 moveto
0.65195 0.02423 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.13347 0.22906 moveto
0.13298 0.2351 lineto
stroke
grestore
[(-0.5)] 0.13444 0.21698 -0.080551 1 Mshowa
gsave
0.002 setlinewidth
0.2863 0.16868 moveto
0.28601 0.17473 lineto
stroke
grestore
[(0)] 0.28689 0.15658 -0.048384 1 Mshowa
gsave
0.002 setlinewidth
0.453 0.10283 moveto
0.45293 0.10888 lineto
stroke
grestore
[(0.5)] 0.45315 0.09071 -0.012323 1 Mshowa
gsave
0.002 setlinewidth
0.63554 0.03072 moveto
0.63571 0.03677 lineto
stroke
grestore
[(1)] 0.6352 0.0186 0.028386 1 Mshowa
gsave
0.001 setlinewidth
0.16301 0.21739 moveto
0.16274 0.22101 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.19305 0.20552 moveto
0.1928 0.20915 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22361 0.19345 moveto
0.22338 0.19708 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.25468 0.18117 moveto
0.25448 0.1848 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31848 0.15597 moveto
0.31832 0.1596 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35122 0.14304 moveto
0.35109 0.14667 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38454 0.12987 moveto
0.38444 0.13351 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.41846 0.11647 moveto
0.41839 0.12011 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.48817 0.08893 moveto
0.48816 0.09257 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.52399 0.07478 moveto
0.52401 0.07842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56048 0.06037 moveto
0.56052 0.064 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59766 0.04568 moveto
0.59773 0.04931 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.10442 0.24054 moveto
0.1041 0.24416 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.07584 0.25183 moveto
0.0755 0.25544 lineto
stroke
grestore
[(X-axis)] 0.33601 0.0775 -0.038339 1 Mshowa
grestore
gsave
gsave
0.002 setlinewidth
0.02423 0.64375 moveto
0.39836 0.80402 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.06265 0.66021 moveto
0.06318 0.65418 lineto
stroke
grestore
[(-0.5)] 0.0616 0.67228 0.087638 -1 Mshowa
gsave
0.002 setlinewidth
0.19722 0.71786 moveto
0.19758 0.71181 lineto
stroke
grestore
[(0)] 0.19648 0.72995 0.060525 -1 Mshowa
gsave
0.002 setlinewidth
0.31654 0.76897 moveto
0.31676 0.76292 lineto
stroke
grestore
[(0.5)] 0.31609 0.78108 0.036985 -1 Mshowa
gsave
0.001 setlinewidth
0.09092 0.67232 moveto
0.09122 0.6687 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11849 0.68413 moveto
0.11877 0.68051 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.14538 0.69565 moveto
0.14564 0.69202 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.17161 0.70689 moveto
0.17185 0.70326 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.22221 0.72857 moveto
0.22242 0.72494 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.24662 0.73902 moveto
0.24681 0.73539 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.27047 0.74924 moveto
0.27064 0.74561 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29377 0.75922 moveto
0.29392 0.75559 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.03365 0.64779 moveto
0.03399 0.64417 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.3388 0.77851 moveto
0.33892 0.77488 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36057 0.78783 moveto
0.36067 0.7842 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38186 0.79696 moveto
0.38195 0.79332 lineto
stroke
grestore
[(Y-axis)] 0.22406 0.80364 0.054404 -1 Mshowa
grestore
gsave
gsave
0.002 setlinewidth
0.0611 0.25765 moveto
0.02423 0.64375 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.06029 0.26616 moveto
0.06548 0.26929 lineto
stroke
grestore
[(0)] 0.04992 0.25989 1 0.603537 Mshowa
gsave
0.002 setlinewidth
0.05223 0.35059 moveto
0.0575 0.35357 lineto
stroke
grestore
[(0.25)] 0.04167 0.34464 1 0.563884 Mshowa
gsave
0.002 setlinewidth
0.04387 0.43812 moveto
0.04924 0.44093 lineto
stroke
grestore
[(0.5)] 0.03313 0.4325 1 0.523078 Mshowa
gsave
0.002 setlinewidth
0.0352 0.52891 moveto
0.04066 0.53154 lineto
stroke
grestore
[(0.75)] 0.02428 0.52366 1 0.481069 Mshowa
gsave
0.002 setlinewidth
0.0262 0.62315 moveto
0.03175 0.62558 lineto
stroke
grestore
[(1)] 0.0151 0.61829 1 0.437801 Mshowa
gsave
0.001 setlinewidth
0.0587 0.2828 moveto
0.06182 0.28466 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.0571 0.29957 moveto
0.06023 0.30141 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.05549 0.31646 moveto
0.05863 0.31828 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.05386 0.33346 moveto
0.05702 0.33527 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.05058 0.36784 moveto
0.05376 0.36961 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.04892 0.38522 moveto
0.05211 0.38697 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.04725 0.40273 moveto
0.05045 0.40445 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.04556 0.42036 moveto
0.04877 0.42206 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.04216 0.45601 moveto
0.04539 0.45767 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.04044 0.47403 moveto
0.04368 0.47568 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.03871 0.49219 moveto
0.04196 0.49381 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.03696 0.51048 moveto
0.04022 0.51208 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.03343 0.54748 moveto
0.03671 0.54903 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.03164 0.56618 moveto
0.03494 0.56771 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02984 0.58503 moveto
0.03315 0.58654 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02803 0.60402 moveto
0.03135 0.6055 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02436 0.64243 moveto
0.0277 0.64387 lineto
stroke
grestore
[(Z-axis)] -0.02108 0.40949 1 0.520781 Mshowa
grestore
gsave
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 632 1537 a Fi(Fig)p Fq(.)g(75.)20 b(A)15 b(path)g(up)h(a)e
(realistic)j(hill.)75 1682 y Fj(r[t_])k(:=)g({Exp[-t/3])f(Cos[3t],)g
(Exp[-t/3])g(Sin[3t],)g(13t/\(t^2)g(+)i(40\)})75 1782 y(ParametricPlot3D[)o
(r[t],)c({t,)j(0,)h(2Pi},)75 1832 y(ViewPoint->{1.709)o(,)d(-2.518,)h
(1.479},)75 1881 y(Axes->Automatic,)75 1931 y(AxesLabel->{"X-ax)o(is",)e
("Y-axis",)i("Z-axis"},)75 1981 y(Compiled->False)84 b(\(*)21
b(suppresses)f(a)i(benign)e(warning)h(message)f(*\))75 2031
y(])75 2130 y(m)i(=)f(1000;)g(g)h(=)f(0.0098;)75 2180 y(F[{x_,)g(y_,)g(z_}])g
(:=)g({0,)g(0,)h(m)f(g})75 2230 y(NIntegrate[F[r[t])o(])e(.)j(r'[t],)e({t,)h
(0,)h(2Pi}])140 2280 y(10.0716)75 2380 y(R)g(=)f(6400;)75 2429
y(k)h(=)f(m)h(g)f(R^2;)75 2479 y(r[t_])g(:=)g({Exp[-t/3])f(Cos[3t],)g
(Exp[-t/3])g(Sin[3t],)g(R)i(+)f(13t/\(t^2)f(+)i(40\)})75 2529
y(F[{x_,)f(y_,)g(z_}])g(:=)g(k)h({x,)f(y,)g(z}/\(x^2)g(+)g(y^2)g(+)h
(z^2\)^\(3/2\))75 2579 y(NIntegrate[F[r[t])o(])d(.)j(r'[t],)e({t,)h(0,)h
(2Pi}])140 2629 y(10.0693)p eop
%%Page: 115 115
115 114 bop 75 -100 a Fm(V)-6 b(ectors)23 b(and)g(W)-6 b(ork)p
75 -93 545 2 v 1189 w Fq(115)75 49 y Fn(Exercise)12 b(7.)18
b Fq(Compared)10 b(to)g(the)h(radius)g(of)g(the)f(earth)h(\()p
Fh(R)h Fg(\031)h Fq(6400)6 b(km\),)11 b(the)g(small)g(v)o(ertical)g(exten)o
(t)f(of)75 106 y(our)k(paths)g(\(a)f(few)h(km\))g(is)g(almost)g
(negligible|the)i(near)e(earth)g(appro)o(ximation)g(is)h(quite)f(adequate;)75
162 y(the)i(v)m(ariation)h(in)g(the)f(in)o(v)o(erse)h(square)f(la)o(w)g
(force)g(o)o(v)o(er)f(suc)o(h)i(distances)g(can)f(b)q(e)h(ignored)g(except)g
(for)75 219 y(the)e(most)g(precise)h(exp)q(erimen)o(ts.)p eop
%%Page: 116 116
116 115 bop 75 -100 a Fq(116)1001 b Fm(Newton's)23 b(Metho)r(d)g(in)f(2D)p
1145 -93 730 2 v 606 49 a Fn(PURPOSE)c(OF)g(THE)g(PR)o(OJECT)146
151 y Fq(This)i(pro)s(ject)f(giv)o(es)g(a)h(realistic)h(lo)q(ok)f(at)f(the)g
(t)o(w)o(o)g(dimensional)i(Newton)f(Metho)q(d.)33 b(W)l(e)20
b(tak)o(e)75 208 y(this)d(opp)q(ortunit)o(y)f(to)g(unite)h(and)g(enric)o(h)g
(sev)o(eral)g(earlier)g(pro)s(jects,)e(th)o(us)i(t)o(ying)f(together)f(the)i
(three)75 264 y(semester)22 b(calculus)i(sequence)g(a)e(bit.)41
b(The)23 b(di\016cult)o(y)g(of)f(\014nding)i(starting)d(v)m(alues)j(is)e
(addressed)75 321 y(honestly)l(.)k(P)o(erhaps)16 b(some)h(of)f(the)h(most)f
(in)o(teresting)h(questions)h(are)e(ones)h(w)o(e)g(did)h(not)e(raise)h(in)h
(the)75 377 y(pro)s(ject,)g(but)g(hop)q(e)h(that)e(the)h(b)q(etter)g(studen)o
(ts)g(will)i(raise)f(for)e(themselv)o(es)i(\(with,)f(p)q(erhaps,)h(some)75
434 y(pro)q(dding)d(from)f(their)g(instructor\):)75 546 y Fn(1.)22
b Fq(Is)16 b(the)f(normal)g(problem)h Fl(always)j Fq(related)d(to)e(the)i
(extremal)f(problem?)75 639 y Fn(2.)22 b Fq(What)15 b(w)o(ould)g(I)h(do)f
(with)h Fl(thr)n(e)n(e)i Fq(equations?)75 732 y Fn(3.)k Fq(Ho)o(w)15
b(do)g(I)h(\014nd)g(starting)e(v)m(alues)i(for)f(really)h(complicated)h
(non-p)q(olynomial)g(functions?)75 824 y Fn(4.)22 b Fh(:)8
b(:)g(:)75 936 y Fn(Instructor)20 b(Note)p Fq(:)43 b(Because)19
b(man)o(y)e(texts)g(do)h(not)f(co)o(v)o(er)h(this)g(topic)g(in)h(an)o(y)e
(depth,)i(w)o(e)e(ga)o(v)o(e)g(a)75 993 y(self-con)o(tained)d(discussion)g
(of)e(the)h(topic.)20 b(It)12 b(w)o(ould)h(b)q(e)g(a)g(go)q(o)q(d)f(idea)h
(to)f(co)o(v)o(er)g(some)h(of)f(this)h(material)75 1049 y(in)j(the)f(lecture)
h(b)q(efore)g(hand.)75 1126 y Fn(Instructor)f(Note)p Fq(:)33
b(The)13 b(Instructor)h(noteb)q(o)q(ok)f(giv)o(es)h(t)o(w)o(o)e(additional)j
(examples)f(not)f(assigned)h(in)75 1183 y(the)h(pro)s(ject.)k(These)d
(concern)g(normals)f(from)f(p)q(oin)o(ts)i Fl(interior)k Fq(to)15
b(the)g(parab)q(oloid.)75 1259 y Fn(Shorter)i(Pro)s(ject)p
Fq(:)j(Drop)14 b(the)i Fn(After)g(the)i(Lab)e Fq(questions.)577
1385 y Fn(ANSWERS)h(F)o(OR)h(INSTR)o(UCTORS)75 1487 y(Exercise)c(1.)19
b Fq(One)13 b(p)q(oin)o(t)g(is)g(giv)o(en)g(as)f Fh(P)6 b Fq(\()p
Fh(p;)i(q)r(;)g(r)q Fq(\))i(and)i(the)h(other)f(is)h(on)f(the)h(surface,)f
Fh(Q)p Fq(\()p Fh(x;)c(y)r(;)g(h)p Fq(\()p Fh(x;)g(y)r Fq(\)\))o(.)75
1543 y(So)15 b(the)g(distance)h(is)508 1643 y Fh(d)p Fq(\()p
Fh(x;)8 b(y)r Fq(\))i(=)697 1591 y Fd(q)p 739 1591 692 2 v
52 x Fq(\()p Fh(x)g Fg(\000)g Fh(p)p Fq(\))879 1630 y Fe(2)908
1643 y Fq(+)h(\()p Fh(y)g Fg(\000)g Fh(q)r Fq(\))1091 1630
y Fe(2)1120 1643 y Fq(+)g(\()p Fh(h)p Fq(\()p Fh(x;)d(y)r Fq(\))g
Fg(\000)j Fh(r)q Fq(\))1411 1630 y Fe(2)1430 1643 y Fh(:)75
1742 y Fq(A)o(t)k(an)g(extrem)o(um,)f(w)o(e)h(ha)o(v)o(e)g(the)g(conditions)
774 1830 y Fh(@)s(d)p 773 1850 53 2 v 773 1892 a(@)s(x)843
1861 y Fq(=)e(0)p Fh(;)1030 1830 y(@)s(d)p 1030 1850 51 2 v
1030 1892 a(@)s(y)1098 1861 y Fq(=)g(0)p Fh(:)75 1979 y Fq(These)j(giv)o(e)
585 2079 y(2\()p Fh(x)10 b Fg(\000)g Fh(p)p Fq(\))g(+)g(2\()p
Fh(h)p Fq(\()p Fh(x;)e(y)r Fq(\))g Fg(\000)j Fh(r)q Fq(\))p
Fh(h)1097 2086 y Ff(x)1118 2079 y Fq(\()p Fh(x;)d(y)r Fq(\))40
b(=)i(0)589 2148 y(2\()p Fh(y)12 b Fg(\000)e Fh(q)r Fq(\))g(+)g(2\()p
Fh(h)p Fq(\()p Fh(x;)e(y)r Fq(\))h Fg(\000)h Fh(r)q Fq(\))p
Fh(h)1098 2155 y Ff(y)1118 2148 y Fq(\()p Fh(x;)e(y)r Fq(\))40
b(=)i(0)75 2247 y(Simplifying)19 b(and)d(denoting)h(the)f(solution)h(b)o(y)f
Fh(x)e Fq(=)g Fh(a)p Fq(,)i Fh(y)g Fq(=)e Fh(b)p Fq(,)i(as)f(in)i(the)f
(problem)h(statemen)o(t,)e(giv)o(es)75 2304 y(Equations)g(3.)75
2374 y Fn(Exercise)h(2.)j Fq(F)l(or)14 b Fh(p)e Fq(=)h(2,)h
Fh(q)h Fq(=)d(2,)i Fh(r)g Fq(=)f(0,)g(Figure)h(76)g(giv)o(es)g(the)g(o)o(v)o
(erlaid)h(implicit)h(plots)f(from)e(whic)o(h)75 2424 y(w)o(e)i(get)g(the)g
(starting)g(v)m(alue)h Fh(a)d Fq(=)g(0)p Fh(:)p Fq(8,)g Fh(b)g
Fq(=)g(0)p Fh(:)p Fq(3.)18 b(Here)e(is)g(the)f(result)h(of)e(the)i(iteration)
f(sc)o(heme:)75 2529 y Fj(an)501 b(bn)75 2579 y(0.752228163992869)o(8)172
b(0.26388447030203)o(27)75 2629 y(0.749685536283963)o(6)g(0.26073521571992)o
(55)p eop
%%Page: 117 117
117 116 bop 75 -100 a Fm(Newton's)22 b(Metho)r(d)h(in)g(2D)p
75 -93 730 2 v 1002 w Fq(117)75 49 y Fj(0.749678524858393)o(6)172
b(0.26071402015120)o(41)75 99 y(0.749678524829169)o(7)g(0.26071401920117)o
(52)75 149 y(0.749678524829169)o(6)g(0.26071401920117)o(52)75
199 y(0.749678524829169)o(6)g(0.26071401920117)o(52)75 249
y(0.749678524829169)o(6)g(0.26071401920117)o(52)75 298 y(0.749678524829169)o
(6)g(0.26071401920117)o(52)75 398 y(\(*)21 b(check)g(answers)f(*\))75
448 y({f[a,b],)g(g[a,b]})g(/.)i({a)f(->)h(an,)f(b->)g(bn})g(//Chop)162
498 y({0,)g(0})200 968 y @beginspecial 0 @llx 0 @lly 413 @urx
94 @ury 3720 @rwi @setspecial
%%BeginDocument: NR2D.implicit2.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	94.093063 def
/Mwidth		413.387360 def
/Mheight	94.093063 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.15873 0.086155 0.15873 [
[(-3)] 0.02381 0.08616 0 2 Msboxa
[(-2)] 0.18254 0.08616 0 2 Msboxa
[(-1)] 0.34127 0.08616 0 2 Msboxa
[(1)] 0.65873 0.08616 0 2 Msboxa
[(2)] 0.81746 0.08616 0 2 Msboxa
[(3)] 0.97619 0.08616 0 2 Msboxa
[(-0.4)] 0.4875 0.02266 1 0 Msboxa
[(-0.2)] 0.4875 0.05441 1 0 Msboxa
[(0.2)] 0.4875 0.1179 1 0 Msboxa
[(0.4)] 0.4875 0.14965 1 0 Msboxa
[(0.6)] 0.4875 0.18139 1 0 Msboxa
[(0.8)] 0.4875 0.21314 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.22707 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.08616 moveto
0.02381 0.09241 lineto
stroke
grestore
[(-3)] 0.02381 0.08616 0 2 Mshowa
gsave
0.002 setlinewidth
0.18254 0.08616 moveto
0.18254 0.09241 lineto
stroke
grestore
[(-2)] 0.18254 0.08616 0 2 Mshowa
gsave
0.002 setlinewidth
0.34127 0.08616 moveto
0.34127 0.09241 lineto
stroke
grestore
[(-1)] 0.34127 0.08616 0 2 Mshowa
gsave
0.002 setlinewidth
0.65873 0.08616 moveto
0.65873 0.09241 lineto
stroke
grestore
[(1)] 0.65873 0.08616 0 2 Mshowa
gsave
0.002 setlinewidth
0.81746 0.08616 moveto
0.81746 0.09241 lineto
stroke
grestore
[(2)] 0.81746 0.08616 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.08616 moveto
0.97619 0.09241 lineto
stroke
grestore
[(3)] 0.97619 0.08616 0 2 Mshowa
gsave
0.001 setlinewidth
0.05556 0.08616 moveto
0.05556 0.08991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.0873 0.08616 moveto
0.0873 0.08991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.08616 moveto
0.11905 0.08991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.15079 0.08616 moveto
0.15079 0.08991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.08616 moveto
0.21429 0.08991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.24603 0.08616 moveto
0.24603 0.08991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.27778 0.08616 moveto
0.27778 0.08991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.08616 moveto
0.30952 0.08991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.37302 0.08616 moveto
0.37302 0.08991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.08616 moveto
0.40476 0.08991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.43651 0.08616 moveto
0.43651 0.08991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46825 0.08616 moveto
0.46825 0.08991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53175 0.08616 moveto
0.53175 0.08991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56349 0.08616 moveto
0.56349 0.08991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.08616 moveto
0.59524 0.08991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.62698 0.08616 moveto
0.62698 0.08991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.08616 moveto
0.69048 0.08991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72222 0.08616 moveto
0.72222 0.08991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.75397 0.08616 moveto
0.75397 0.08991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.08616 moveto
0.78571 0.08991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84921 0.08616 moveto
0.84921 0.08991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.08616 moveto
0.88095 0.08991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9127 0.08616 moveto
0.9127 0.08991 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.94444 0.08616 moveto
0.94444 0.08991 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.08616 moveto
1 0.08616 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.02266 moveto
0.50625 0.02266 lineto
stroke
grestore
[(-0.4)] 0.4875 0.02266 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.05441 moveto
0.50625 0.05441 lineto
stroke
grestore
[(-0.2)] 0.4875 0.05441 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.1179 moveto
0.50625 0.1179 lineto
stroke
grestore
[(0.2)] 0.4875 0.1179 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.14965 moveto
0.50625 0.14965 lineto
stroke
grestore
[(0.4)] 0.4875 0.14965 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.18139 moveto
0.50625 0.18139 lineto
stroke
grestore
[(0.6)] 0.4875 0.18139 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.21314 moveto
0.50625 0.21314 lineto
stroke
grestore
[(0.8)] 0.4875 0.21314 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.02901 moveto
0.50375 0.02901 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.03536 moveto
0.50375 0.03536 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.04171 moveto
0.50375 0.04171 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.04806 moveto
0.50375 0.04806 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.06076 moveto
0.50375 0.06076 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.06711 moveto
0.50375 0.06711 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.07346 moveto
0.50375 0.07346 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.07981 moveto
0.50375 0.07981 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.0925 moveto
0.50375 0.0925 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.09885 moveto
0.50375 0.09885 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1052 moveto
0.50375 0.1052 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.11155 moveto
0.50375 0.11155 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.12425 moveto
0.50375 0.12425 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1306 moveto
0.50375 0.1306 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13695 moveto
0.50375 0.13695 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1433 moveto
0.50375 0.1433 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.156 moveto
0.50375 0.156 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.16235 moveto
0.50375 0.16235 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1687 moveto
0.50375 0.1687 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.17504 moveto
0.50375 0.17504 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18774 moveto
0.50375 0.18774 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.19409 moveto
0.50375 0.19409 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.20044 moveto
0.50375 0.20044 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.20679 moveto
0.50375 0.20679 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.01631 moveto
0.50375 0.01631 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.00996 moveto
0.50375 0.00996 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.00362 moveto
0.50375 0.00362 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.21949 moveto
0.50375 0.21949 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22584 moveto
0.50375 0.22584 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.22607 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.22607 lineto
0 0.22607 lineto
closepath
clip
newpath
gsave
gsave
gsave
gsave
gsave
0.004 setlinewidth
stroke
stroke
stroke
0.58193 0 moveto
0.59178 0.01107 lineto
stroke
0.59178 0.01107 moveto
0.60939 0.03139 lineto
0.62219 0.05009 lineto
0.62996 0.06821 lineto
0.63256 0.08612 lineto
stroke
grestore
gsave
0.004 setlinewidth
stroke
0.54327 0.22607 moveto
0.54341 0.22548 lineto
stroke
0.54341 0.22548 moveto
0.56966 0.18611 lineto
0.59178 0.16124 lineto
0.60939 0.14092 lineto
0.62219 0.12222 lineto
0.62996 0.1041 lineto
0.63256 0.08619 lineto
stroke
grestore
grestore
gsave
grestore
grestore
grestore
gsave
gsave
gsave
gsave
0.5 setgray
0.004 setlinewidth
0.02381 0.0905 moveto
0.02788 0.09058 lineto
0.04004 0.09081 lineto
0.06006 0.09124 lineto
0.08761 0.09192 lineto
0.12221 0.093 lineto
0.16328 0.09471 lineto
0.21011 0.09756 lineto
0.2619 0.10257 lineto
0.31777 0.1118 lineto
0.37675 0.12643 lineto
0.43784 0.13995 lineto
0.5 0.14499 lineto
0.56216 0.13995 lineto
0.62325 0.12643 lineto
0.68223 0.1118 lineto
0.7381 0.10257 lineto
0.78989 0.09756 lineto
0.83672 0.09471 lineto
0.87779 0.093 lineto
0.91239 0.09192 lineto
0.93994 0.09124 lineto
0.95996 0.09081 lineto
0.97212 0.09058 lineto
0.97619 0.0905 lineto
stroke
grestore
grestore
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 583 1055 a Fi(Fig)p Fq(.)15 b(76.)k Fk(ImplicitPlot)p
Fq(s)13 b(for)i(Exercise)h(2.)75 1160 y Fn(Exercise)k(3.)26
b Fq(The)18 b(minim)o(um)g(distance)g(is)g(2.29866.)24 b(A)18
b(calculator)g(w)o(ould)f(su\016ce,)h(but)g(here)f(is)h(a)75
1210 y Fl(Mathematic)n(a)e Fq(calculation)e(of)e(it)h(plus)g(a)g(small)g
(test)f(of)f(nearb)o(y)i(p)q(oin)o(ts)g(to)e(v)o(erify)i(that)f(our)g
(stationary)75 1260 y(p)q(oin)o(t)k(is)f(really)i(a)d(minim)o(um)j(\(not)d
(ask)o(ed)h(for)g(in)h(the)f(pro)s(ject\):)75 1370 y Fj(h[x_,y_])20
b(:=)i(x^2)f(+)g(4y^2)75 1420 y(s[p_,q_,r,a_,b_])d(:=)k(Sqrt[\(a-p\)^2)d(+)j
(\(b-q\)^2)e(+)i(\(h[a,b]-r\)^2])75 1470 y(s[p,q,r,an,bn])162
1519 y(2.29866)75 1619 y(eps)f(=)h(.1;)75 1669 y(s[p,q,r,an+eps,bn)o(])75
1719 y(s[p,q,r,an-eps,bn)o(])75 1769 y(s[p,q,r,an,bn+eps)o(])75
1818 y(s[p,q,r,an,bn-eps)o(])162 1868 y(2.30999)162 1918 y(2.3087)162
1968 y(2.32859)162 2018 y(2.32141)75 2135 y Fq(Of)17 b(course,)g(the)f(dev)o
(out)h(studen)o(t)g(who)f(kno)o(ws)g(ab)q(out)h(the)g(second)g(deriv)m(ativ)o
(e)h(test)e(could)i(use)f(it)g(to)75 2191 y(pro)o(v)o(e)i(that)h(w)o(e)f(ha)o
(v)o(e)h(a)f(minim)o(um.)35 b(In)21 b(our)f(view,)h Fl(any)j
Fq(attempt)19 b(to)g(c)o(hec)o(k)h(this)g(p)q(oin)o(t)h(deserv)o(es)75
2248 y(b)q(on)o(us)16 b(credit.)75 2319 y Fn(Exercise)22 b(4.)34
b Fq(F)l(or)19 b Fh(p)h Fq(=)g(4,)g Fh(q)i Fq(=)f(1,)f Fh(r)h
Fq(=)f(4,)g(Figure)g(77)f(giv)o(es)h(the)g(o)o(v)o(erlaid)g(implicit)i(plots)
e(from)75 2369 y(whic)o(h)e(w)o(e)e(get)g Fl(thr)n(e)n(e)k
Fq(starting)c(v)m(alues)i(\()p Fh(a;)8 b(b)p Fq(\))13 b(=)j(\()p
Fg(\000)p Fq(1)p Fh(:)p Fq(4)p Fh(;)8 b Fg(\000)p Fq(0)p Fh(:)p
Fq(1\),)14 b(\()p Fh(a;)8 b(b)p Fq(\))13 b(=)i(\()p Fg(\000)p
Fq(0)p Fh(:)p Fq(6)p Fh(;)8 b Fg(\000)p Fq(0)p Fh(:)p Fq(1\))15
b(and)h(\()p Fh(a;)8 b(b)p Fq(\))14 b(=)75 2418 y(\(2)p Fh(:)p
Fq(1)p Fh(;)8 b Fq(0)p Fh(:)p Fq(2\).)22 b(Here)c(are)f(the)g(results)g(of)g
(the)g(iteration)h(sc)o(hemes)f(along)g(with)h(the)f(c)o(haracterization)g
(of)75 2468 y(the)e(stationary)g(p)q(oin)o(ts)g(\(as)g(ask)o(ed)g(for)f(in)i
(Exercise)g(5\):)75 2579 y Fj(p)22 b(=)f(4;)h(q)f(=)h(1;)f(r)h(=)f(4;)75
2629 y(...)p eop
%%Page: 118 118
118 117 bop 75 -100 a Fq(118)1001 b Fm(Newton's)23 b(Metho)r(d)g(in)f(2D)p
1145 -93 730 2 v 536 502 a @beginspecial 0 @llx 0 @lly 282
@urx 160 @ury 2107 @rwi @setspecial
%%BeginDocument: NR2D.implicit3.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	160.137711 def
/Mwidth		282.000000 def
/Mheight	160.137711 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.5 0.15873 0.271632 0.15873 [
[(-3)] 0.02381 0.27163 0 2 Msboxa
[(-2)] 0.18254 0.27163 0 2 Msboxa
[(-1)] 0.34127 0.27163 0 2 Msboxa
[(1)] 0.65873 0.27163 0 2 Msboxa
[(2)] 0.81746 0.27163 0 2 Msboxa
[(3)] 0.97619 0.27163 0 2 Msboxa
[(-1.5)] 0.4875 0.03354 1 0 Msboxa
[(-1)] 0.4875 0.1129 1 0 Msboxa
[(-0.5)] 0.4875 0.19227 1 0 Msboxa
[(0.5)] 0.4875 0.351 1 0 Msboxa
[(1)] 0.4875 0.43036 1 0 Msboxa
[(1.5)] 0.4875 0.50973 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.568 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.27163 moveto
0.02381 0.27788 lineto
stroke
grestore
[(-3)] 0.02381 0.27163 0 2 Mshowa
gsave
0.002 setlinewidth
0.18254 0.27163 moveto
0.18254 0.27788 lineto
stroke
grestore
[(-2)] 0.18254 0.27163 0 2 Mshowa
gsave
0.002 setlinewidth
0.34127 0.27163 moveto
0.34127 0.27788 lineto
stroke
grestore
[(-1)] 0.34127 0.27163 0 2 Mshowa
gsave
0.002 setlinewidth
0.65873 0.27163 moveto
0.65873 0.27788 lineto
stroke
grestore
[(1)] 0.65873 0.27163 0 2 Mshowa
gsave
0.002 setlinewidth
0.81746 0.27163 moveto
0.81746 0.27788 lineto
stroke
grestore
[(2)] 0.81746 0.27163 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.27163 moveto
0.97619 0.27788 lineto
stroke
grestore
[(3)] 0.97619 0.27163 0 2 Mshowa
gsave
0.001 setlinewidth
0.05556 0.27163 moveto
0.05556 0.27538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.0873 0.27163 moveto
0.0873 0.27538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.27163 moveto
0.11905 0.27538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.15079 0.27163 moveto
0.15079 0.27538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.27163 moveto
0.21429 0.27538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.24603 0.27163 moveto
0.24603 0.27538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.27778 0.27163 moveto
0.27778 0.27538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.27163 moveto
0.30952 0.27538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.37302 0.27163 moveto
0.37302 0.27538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.27163 moveto
0.40476 0.27538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.43651 0.27163 moveto
0.43651 0.27538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46825 0.27163 moveto
0.46825 0.27538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53175 0.27163 moveto
0.53175 0.27538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56349 0.27163 moveto
0.56349 0.27538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.27163 moveto
0.59524 0.27538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.62698 0.27163 moveto
0.62698 0.27538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.27163 moveto
0.69048 0.27538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72222 0.27163 moveto
0.72222 0.27538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.75397 0.27163 moveto
0.75397 0.27538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.27163 moveto
0.78571 0.27538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84921 0.27163 moveto
0.84921 0.27538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.27163 moveto
0.88095 0.27538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9127 0.27163 moveto
0.9127 0.27538 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.94444 0.27163 moveto
0.94444 0.27538 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.27163 moveto
1 0.27163 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.03354 moveto
0.50625 0.03354 lineto
stroke
grestore
[(-1.5)] 0.4875 0.03354 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.1129 moveto
0.50625 0.1129 lineto
stroke
grestore
[(-1)] 0.4875 0.1129 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.19227 moveto
0.50625 0.19227 lineto
stroke
grestore
[(-0.5)] 0.4875 0.19227 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.351 moveto
0.50625 0.351 lineto
stroke
grestore
[(0.5)] 0.4875 0.351 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.43036 moveto
0.50625 0.43036 lineto
stroke
grestore
[(1)] 0.4875 0.43036 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.50973 moveto
0.50625 0.50973 lineto
stroke
grestore
[(1.5)] 0.4875 0.50973 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.04941 moveto
0.50375 0.04941 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.06528 moveto
0.50375 0.06528 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.08116 moveto
0.50375 0.08116 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.09703 moveto
0.50375 0.09703 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.12877 moveto
0.50375 0.12877 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.14465 moveto
0.50375 0.14465 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.16052 moveto
0.50375 0.16052 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.17639 moveto
0.50375 0.17639 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.20814 moveto
0.50375 0.20814 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22401 moveto
0.50375 0.22401 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.23989 moveto
0.50375 0.23989 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.25576 moveto
0.50375 0.25576 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.28751 moveto
0.50375 0.28751 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.30338 moveto
0.50375 0.30338 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.31925 moveto
0.50375 0.31925 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.33512 moveto
0.50375 0.33512 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36687 moveto
0.50375 0.36687 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.38274 moveto
0.50375 0.38274 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.39862 moveto
0.50375 0.39862 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.41449 moveto
0.50375 0.41449 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.44624 moveto
0.50375 0.44624 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.46211 moveto
0.50375 0.46211 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.47798 moveto
0.50375 0.47798 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.49385 moveto
0.50375 0.49385 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.01766 moveto
0.50375 0.01766 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.00179 moveto
0.50375 0.00179 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.5256 moveto
0.50375 0.5256 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54147 moveto
0.50375 0.54147 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55735 moveto
0.50375 0.55735 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.567 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.567 lineto
0 0.567 lineto
closepath
clip
newpath
gsave
gsave
gsave
gsave
grestore
gsave
gsave
0.004 setlinewidth
0.26837 0.2716 moveto
0.26892 0.26507 lineto
0.27056 0.2586 lineto
0.27326 0.25229 lineto
0.27698 0.24623 lineto
0.28165 0.24051 lineto
0.28719 0.2352 lineto
0.2935 0.23038 lineto
0.30049 0.22611 lineto
0.30803 0.22248 lineto
0.31598 0.21954 lineto
0.32423 0.21736 lineto
0.33261 0.216 lineto
0.341 0.21551 lineto
0.34924 0.21595 lineto
0.3572 0.21736 lineto
0.36473 0.21978 lineto
0.37172 0.22322 lineto
0.37804 0.22768 lineto
0.38358 0.23314 lineto
0.38825 0.23953 lineto
0.39196 0.24675 lineto
0.39466 0.25464 lineto
0.3963 0.26301 lineto
0.39685 0.2716 lineto
stroke
grestore
gsave
0.004 setlinewidth
0.26837 0.27166 moveto
0.26892 0.27819 lineto
0.27056 0.28467 lineto
0.27326 0.29098 lineto
0.27698 0.29703 lineto
0.28165 0.30275 lineto
0.28719 0.30806 lineto
0.2935 0.31289 lineto
0.30049 0.31715 lineto
0.30803 0.32079 lineto
0.31598 0.32373 lineto
0.32423 0.32591 lineto
0.33261 0.32727 lineto
0.341 0.32775 lineto
0.34924 0.32731 lineto
0.3572 0.3259 lineto
0.36473 0.32349 lineto
0.37172 0.32005 lineto
0.37804 0.31558 lineto
0.38358 0.31013 lineto
0.38825 0.30373 lineto
0.39196 0.29652 lineto
0.39466 0.28863 lineto
0.3963 0.28025 lineto
0.39685 0.27167 lineto
stroke
grestore
grestore
gsave
gsave
0.004 setlinewidth
stroke
stroke
0.54107 0 moveto
0.55914 0.03715 lineto
stroke
0.55914 0.03715 moveto
0.58723 0.06411 lineto
0.61581 0.08201 lineto
0.64439 0.09647 lineto
0.67249 0.10976 lineto
0.69961 0.12296 lineto
0.7253 0.13661 lineto
0.74911 0.15097 lineto
0.77064 0.16617 lineto
0.78953 0.18221 lineto
0.80544 0.19904 lineto
0.81811 0.21656 lineto
0.82732 0.2346 lineto
0.8329 0.25302 lineto
0.83478 0.27159 lineto
stroke
grestore
gsave
0.004 setlinewidth
stroke
0.53157 0.567 moveto
0.53202 0.56187 lineto
stroke
0.53202 0.56187 moveto
0.55914 0.50611 lineto
0.58723 0.47916 lineto
0.61581 0.46126 lineto
0.64439 0.44679 lineto
0.67249 0.4335 lineto
0.69961 0.4203 lineto
0.7253 0.40666 lineto
0.74911 0.39229 lineto
0.77064 0.37709 lineto
0.78953 0.36105 lineto
0.80544 0.34422 lineto
0.81811 0.32671 lineto
0.82732 0.30866 lineto
0.8329 0.29024 lineto
0.83478 0.27167 lineto
stroke
grestore
grestore
gsave
grestore
grestore
grestore
gsave
gsave
gsave
gsave
0.5 setgray
0.004 setlinewidth
0.02381 0.2755 moveto
0.02465 0.27553 lineto
0.02714 0.2756 lineto
0.03125 0.27572 lineto
0.03691 0.27591 lineto
0.04402 0.27616 lineto
0.05245 0.2765 lineto
0.06207 0.27694 lineto
0.07271 0.27751 lineto
0.08418 0.27826 lineto
0.09629 0.27926 lineto
0.10884 0.28061 lineto
0.12161 0.28249 lineto
0.13437 0.28522 lineto
0.14692 0.28931 lineto
0.15903 0.29554 lineto
0.1705 0.30443 lineto
0.18114 0.31494 lineto
0.19076 0.32496 lineto
0.19919 0.33337 lineto
0.2063 0.33998 lineto
0.21196 0.34492 lineto
0.21607 0.34833 lineto
0.21857 0.35034 lineto
0.2194 0.351 lineto
stroke
grestore
grestore
gsave
gsave
0.5 setgray
0.004 setlinewidth
0.2194 0.23193 moveto
0.2218 0.22049 lineto
0.22896 0.20769 lineto
0.24076 0.19422 lineto
0.257 0.18069 lineto
0.27739 0.16763 lineto
0.30159 0.15549 lineto
0.32918 0.14463 lineto
0.3597 0.13536 lineto
0.39262 0.12791 lineto
0.42738 0.12246 lineto
0.46337 0.11914 lineto
0.5 0.11803 lineto
0.53663 0.11914 lineto
0.57262 0.12246 lineto
0.60738 0.12791 lineto
0.6403 0.13536 lineto
0.67082 0.14463 lineto
0.69841 0.15549 lineto
0.72261 0.16763 lineto
0.743 0.18069 lineto
0.75924 0.19422 lineto
0.77104 0.20769 lineto
0.7782 0.22049 lineto
0.7806 0.23193 lineto
stroke
grestore
gsave
0.5 setgray
0.004 setlinewidth
0.2194 0.23197 moveto
0.2218 0.24155 lineto
0.22896 0.24904 lineto
0.24076 0.25455 lineto
0.257 0.25844 lineto
0.27739 0.26114 lineto
0.30159 0.26301 lineto
0.32918 0.26431 lineto
0.3597 0.26521 lineto
0.39262 0.26582 lineto
0.42738 0.26621 lineto
0.46337 0.26643 lineto
0.5 0.26651 lineto
0.53663 0.26643 lineto
0.57262 0.26621 lineto
0.60738 0.26582 lineto
0.6403 0.26521 lineto
0.67082 0.26431 lineto
0.69841 0.26301 lineto
0.72261 0.26114 lineto
0.743 0.25844 lineto
0.75924 0.25455 lineto
0.77104 0.24904 lineto
0.7782 0.24155 lineto
0.7806 0.23197 lineto
stroke
grestore
gsave
0.5 setgray
0.004 setlinewidth
0.2194 0.351 moveto
0.2218 0.35286 lineto
0.22896 0.35816 lineto
0.24076 0.36613 lineto
0.257 0.37577 lineto
0.27739 0.38613 lineto
0.30159 0.3964 lineto
0.32918 0.40596 lineto
0.3597 0.41433 lineto
0.39262 0.42117 lineto
0.42738 0.42622 lineto
0.46337 0.42932 lineto
0.5 0.43036 lineto
0.53663 0.42932 lineto
0.57262 0.42622 lineto
0.60738 0.42117 lineto
0.6403 0.41433 lineto
0.67082 0.40596 lineto
0.69841 0.3964 lineto
0.72261 0.38613 lineto
0.743 0.37577 lineto
0.75924 0.36613 lineto
0.77104 0.35816 lineto
0.7782 0.35286 lineto
0.7806 0.351 lineto
stroke
grestore
grestore
gsave
gsave
0.5 setgray
0.004 setlinewidth
0.7806 0.351 moveto
0.78143 0.35034 lineto
0.78393 0.34833 lineto
0.78804 0.34492 lineto
0.7937 0.33998 lineto
0.80081 0.33337 lineto
0.80924 0.32496 lineto
0.81886 0.31494 lineto
0.8295 0.30443 lineto
0.84097 0.29554 lineto
0.85308 0.28931 lineto
0.86563 0.28522 lineto
0.87839 0.28249 lineto
0.89116 0.28061 lineto
0.90371 0.27926 lineto
0.91582 0.27826 lineto
0.92729 0.27751 lineto
0.93793 0.27694 lineto
0.94755 0.2765 lineto
0.95598 0.27616 lineto
0.96309 0.27591 lineto
0.96875 0.27572 lineto
0.97286 0.2756 lineto
0.97535 0.27553 lineto
0.97619 0.2755 lineto
stroke
grestore
grestore
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 583 588 a Fi(Fig)p Fq(.)15 b(77.)k Fk(ImplicitPlot)p
Fq(s)13 b(for)i(Exercise)h(4.)75 786 y Fj(\(*)21 b(first)g(root)g(*\))75
835 y(an)g(=)h(-1.4;)f(bn)g(=)h(-0.1;)e(\(*)i(from)f(Show)g(plot)g(*\))75
885 y(...)75 985 y(an)501 b(bn)75 1035 y(-1.45356951154052)o(6)172
b(-0.0707659256121)o(1064)75 1084 y(-1.44895521188579)o(1)g(-0.0712114724599)
o(8352)75 1134 y(-1.44892414748439)o(4)g(-0.0712114980615)o(9117)75
1184 y(-1.44892414603595)o(8)g(-0.0712114980615)o(9125)75 1234
y(-1.44892414603595)o(7)g(-0.0712114980615)o(9132)75 1284 y
(-1.44892414603595)o(8)g(-0.0712114980615)o(9125)75 1333 y(-1.44892414603595)
o(7)g(-0.0712114980615)o(9132)75 1383 y(-1.44892414603595)o(8)g
(-0.0712114980615)o(9125)75 1483 y(\(*)21 b(the)h(distance)e(from)h(the)g
(paraboloid)f(*\))75 1533 y(h[x_,y_])g(:=)i(x^2)f(+)g(4y^2)75
1583 y(s[p_,q_,r,a_,b_])d(:=)k(Sqrt[\(a-p\)^2)d(+)j(\(b-q\)^2)e(+)i
(\(h[a,b]-r\)^2])75 1632 y(s[p,q,r,an,bn])162 1682 y(5.86293)75
1732 y(eps)f(=)h(.1;)75 1782 y(s[p,q,r,an+eps,bn)o(])75 1832
y(s[p,q,r,an-eps,bn)o(])75 1881 y(s[p,q,r,an,bn+eps)o(])75
1931 y(s[p,q,r,an,bn-eps)o(])162 1981 y(5.86725)f(\(*)g(bigger)f(*\))162
2031 y(5.86824)h(\(*)g(bigger)f(*\))162 2081 y(5.85096)h(\(*)g(smaller)f(*\))
162 2130 y(5.85174)h(\(*)g(smaller)f(*\))75 2180 y(\(*)h(Aha!)43
b(A)22 b(saddle)e(point.)h(*\))75 2330 y(\(*)g(second)g(root)g(*\))75
2380 y(an)g(=)h(-0.6;)f(bn)g(=)h(-0.1;)e(\(*)i(from)f(Show)g(plot)g(above)f
(*\))75 2429 y(...)75 2529 y(an)501 b(bn)75 2579 y(-0.64593331255842)o(94)171
b(-0.0350712490723257)o(5)75 2629 y(-0.65134139385056)o(14)g
(-0.0362794874846119)o(1)p eop
%%Page: 119 119
119 118 bop 75 -100 a Fm(Newton's)22 b(Metho)r(d)h(in)g(2D)p
75 -93 730 2 v 1002 w Fq(119)75 49 y Fj(-0.65136978077474)o(86)171
b(-0.0362797044948921)o(9)75 99 y(-0.65136978148604)o(56)g
(-0.0362797044948989)o(7)75 149 y(-0.65136978148604)o(56)g
(-0.0362797044948989)o(7)75 199 y(-0.65136978148604)o(56)g
(-0.0362797044948989)o(7)75 249 y(-0.65136978148604)o(56)g
(-0.0362797044948989)o(7)75 298 y(-0.65136978148604)o(56)g
(-0.0362797044948989)o(7)75 348 y(...)75 448 y(\(*)21 b(the)h(distance)e
(from)h(the)g(paraboloid)f(*\))75 498 y(h[x_,y_])g(:=)i(x^2)f(+)g(4y^2)75
547 y(s[p_,q_,r,a_,b_])d(:=)k(Sqrt[\(a-p\)^2)d(+)j(\(b-q\)^2)e(+)i
(\(h[a,b]-r\)^2])75 597 y(s[p,q,r,an,bn])162 647 y(5.9546)75
747 y(eps)f(=)h(.1;)75 796 y(s[p,q,r,an+eps,bn)o(])75 846 y
(s[p,q,r,an-eps,bn)o(])75 896 y(s[p,q,r,an,bn+eps)o(])75 946
y(s[p,q,r,an,bn-eps)o(])162 996 y(5.95066)162 1046 y(5.95109)162
1095 y(5.93142)162 1145 y(5.93181)75 1195 y(\(*)f(A)h(local)f(max)g(*\))75
1344 y(\(*)g(third)g(root)g(*\))75 1394 y(an)g(=)h(2.1;)f(bn)g(=)h(0.2;)f
(\(*)g(from)g(Show)g(plot)g(above)g(*\))75 1444 y(...)75 1544
y(an)501 b(bn)75 1593 y(2.07177571906679)171 b(0.2118031064582112)75
1643 y(2.070502840430811)g(0.211524319235471)o(1)75 1693 y(2.070502219894634)
g(0.211524097520517)o(1)75 1743 y(2.070502219894608)g(0.211524097520377)o(4)
75 1793 y(2.070502219894608)g(0.211524097520377)o(9)75 1843
y(2.070502219894608)g(0.211524097520377)o(5)75 1892 y(2.070502219894608)g
(0.211524097520378)75 1942 y(2.070502219894608)g(0.211524097520377)o(4)75
1992 y(...)75 2092 y(\(*)21 b(the)h(distance)e(from)h(the)g(paraboloid)f(*\))
75 2141 y(h[x_,y_])g(:=)i(x^2)f(+)g(4y^2)75 2191 y(s[p_,q_,r,a_,b_])d(:=)k
(Sqrt[\(a-p\)^2)d(+)j(\(b-q\)^2)e(+)i(\(h[a,b]-r\)^2])75 2241
y(s[p,q,r,an,bn])162 2291 y(2.13583)75 2341 y(eps)f(=)h(.1;)75
2390 y(s[p,q,r,an+eps,bn)o(])75 2440 y(s[p,q,r,an-eps,bn)o(])75
2490 y(s[p,q,r,an,bn+eps)o(])75 2540 y(s[p,q,r,an,bn-eps)o(])162
2590 y(2.18196)p eop
%%Page: 120 120
120 119 bop 75 -100 a Fq(120)1001 b Fm(Newton's)23 b(Metho)r(d)g(in)f(2D)p
1145 -93 730 2 v 162 49 a Fj(2.17816)162 99 y(2.15704)162 149
y(2.15075)75 199 y(\(*)f(The)h(minimum!)e(*\))75 334 y Fn(Exercise)j(5.)36
b Fq(In)22 b(the)e(order)g(presen)o(ted)i(in)f(Answ)o(er)f(4,)i(the)e(ro)q
(ots)g(resp)q(ectiv)o(ely)i(corresp)q(ond)f(to:)75 390 y(saddle)d(p)q(oin)o
(t)f(\(or)f(neither)h(max)g(nor)f(min\),)h(lo)q(cal)h(maxim)o(um)f(\(the)f
(global)h(maxim)o(um)g(is)g(ob)o(viously)75 447 y(in\014nite\),)f(and)g(the)f
(\(global\))g(minim)o(um.)75 524 y Fn(Exercise)i(8.)j Fq(With)15
b Fh(z)g Fq(=)e(0,)i(w)o(e)g(get)f(Equations)i(1)f(again.)p
eop
%%Page: 121 121
121 120 bop 75 -100 a Fm(FindRo)r(ot)23 b(&)g(F)-6 b(riends)23
b(in)f(2D)p 75 -93 798 2 v 935 w Fq(121)606 49 y Fn(PURPOSE)c(OF)g(THE)g(PR)o
(OJECT)146 155 y Fq(This)10 b(pro)s(ject)g(is)g(a)g(sequel)i(to)d
Fl(Newton)-5 b('s)12 b(Metho)n(d)f(in)g(2D)t Fq(.)g(Ha)o(ving)f(already)h
(discussed)g(the)g(di\016cult)o(y)75 212 y(of)j(\014nding)h(starting)f(v)m
(alues)h(in)g(the)g(m)o(ulti-dimensional)i(non-linear)f(case,)e(w)o(e)g
(ignore)g(that)g(asp)q(ect)g(of)75 268 y(the)j(equation)g(solving)h(problem)g
(and)f(concen)o(trate)f(on)h(in)o(tro)q(ducting)h Fl(Mathematic)n(a)s
Fq('s)f(professional)75 325 y(equation)h(solv)o(ers)f(in)i(a)e(m)o
(ulti-dimensional)k(con)o(text.)26 b(W)l(e)18 b(also)f(return)h(to)f(our)g
(theme)h(of)f(casually)75 381 y(in)o(tro)q(ducing)d(the)e(fourth)g(dimension)
i(b)o(y)e(analogy)l(.)19 b(This)13 b(is)g(an)f(easy)g(pro)s(ject,)g(the)g
(studen)o(ts)g(just)g(ha)o(v)o(e)75 437 y(to)i(follo)o(w)g(the)g(roadmap)f
(and)i(they)f(will)i(learn)f(ho)o(w)e(to)h(use)g Fk(NSolve)p
Fq(,)f Fk(FindRoot)p Fq(,)g(and)i Fk(FindMinimum)75 494 y Fq(in)h(t)o(w)o(o)e
(and)h(higher)h(dimensions.)75 573 y Fn(Instructor)k(Note)p
Fq(:)44 b(If)18 b(y)o(our)g(class)g(did)h(not)e(do)h(the)g(optional)h
(\014rst)f(semester)f(pro)s(ject)h Fl(FindR)n(o)n(ot)75 629
y(&)j(F)m(riends)t Fq(,)e(this)h(w)o(ould)h(b)q(e)f(an)g(excellen)o(t)i(time)
e(to)g(assign)g(some)g(of)f(it.)35 b(As)20 b(our)g(studen)o(ts)g(lea)o(v)o(e)
75 686 y(the)g(calculus)i(sequence)f(and)f(w)o(e)g(ha)o(v)o(e)f(satis\014ed)i
(our)e(p)q(edagogical)i(aims)f(with)g(to)o(y)g Fl(Mathematic)n(a)75
742 y Fq(paragraphs,)c(w)o(e)h(should)h(no)o(w)e(mak)o(e)g(our)h(studen)o(ts)
g(a)o(w)o(are)e(of)i(the)g(professional)g(to)q(ols)g(supplied)i(b)o(y)75
799 y Fl(Mathematic)n(a)s Fq(.)31 b(It)18 b(is,)i(ho)o(w)o(ev)o(er,)e(p)q
(ossible)i(for)e(the)h(studen)o(ts)f(to)g(do)g(this)h(pro)s(ject)f(without)h
(ha)o(ving)75 855 y(done)d(the)f(\014rst)g(semester)g(pro)s(ject.)75
934 y Fn(Shorter)i(Pro)s(ject)p Fq(:)j(The)15 b(\014rst)g(three)g(exercises)h
(are)f(the)h(core.)577 1070 y Fn(ANSWERS)h(F)o(OR)h(INSTR)o(UCTORS)75
1169 y(Exercise)g(1.)j Fq(This)c(w)o(as)e(Exercise)h(2)g(in)h(the)e(2D)h
(Newton)f(pro)s(ject.)21 b Fk(NSolve)15 b Fq(again)h(comes)f(up)i(with)75
1219 y(\014v)o(e)f(ro)q(ots,)g(only)g(one)h(of)e(whic)o(h)j(is)e(real.)24
b(Answ)o(er:)d Fh(a)15 b Fq(=)f(0)p Fh(:)p Fq(749679,)g Fh(b)g
Fq(=)h(0)p Fh(:)p Fq(260714.)20 b(I.e.,)c(the)h(results)75
1269 y(in)f(this)g(problem)g(are,)e(in)i(ev)o(ery)f(w)o(a)o(y)l(,)f(similar)j
(to)d(those)h(in)h(the)f(Illustrativ)o(e)i(Example.)75 1383
y Fj(p)22 b(=)f(2;)h(q)f(=)h(2;)f(r)h(=)f(0;)75 1483 y(\(*)g(Using)g(NSolve)g
(*\))75 1533 y(Clear[a,b,f,g])75 1583 y(f[a_,)g(b_])g(:=)43
b(2)22 b(a^3)f(+)g(8)h(a)g(b^2)f(+)g(\(1)h(-)f(2)h(r\))f(a)h(-)f(p)75
1632 y(g[a_,)g(b_])g(:=)g(32)h(b^3)f(+)g(8)h(b)g(a^2)f(+)g(\(1)h(-)f(8)h(r\))
f(b)h(-)f(q)75 1732 y(eqns)g(=)h({f[a,b]==0,g[a,)o(b]==0)o(};)75
1782 y(vars)f(=)h({a,b};)75 1832 y(NSolve[eqns,)d(vars])75
1881 y({{a)i(->)h(2.66182)e(-)h(1.3156)g(I,)g(b)h(->)f(-0.661688)f(-)i
(1.35128)e(I},)97 1931 y({a)h(->)h(2.66182)e(+)h(1.3156)g(I,)g(b)h(->)f
(-0.661688)f(+)i(1.35128)e(I},)97 1981 y({a)h(->)h(-0.369992)d(-)j(0.969041)e
(I,)i(b)f(->)h(-0.135335)d(-)j(0.169555)e(I},)97 2031 y({a)h(->)h(-0.369992)d
(+)j(0.969041)e(I,)i(b)f(->)h(-0.135335)d(+)j(0.169555)e(I},)97
2081 y({a)h(->)h(0.749679,)d(b)j(->)f(0.260714}})75 2180 y(\(*)g(Using)g
(FindRoot)f(*\))75 2230 y(Clear[a,b])75 2280 y(FindRoot[eqns,)f({a,p/2},)h
({b,q/2}])162 2330 y({a)i(->)f(0.749679,)f(b)h(->)h(0.260714})75
2429 y(\(*)f(Using)g(FindMinimum)f(*\))75 2479 y(h[x_,y_])g(:=)i(x^2)f(+)g
(4y^2)75 2529 y(d[x_,y_,p_,q_,r_])d(:=)k(Sqrt[\(x-p\)^2)d(+)j(\(y-q\)^2)e(+)h
(\(h[x,y]-r\)^2])75 2579 y(FindMinimum[d[x,y)o(,p,q,)o(r],)e({x,p/2},)h
({y,q/2}])162 2629 y({2.29866,)g({x)h(->)h(0.749679,)e(y)h(->)h(0.260714}})p
eop
%%Page: 122 122
122 121 bop 75 -100 a Fq(122)934 b Fm(FindRo)r(ot)22 b(&)i(F)-6
b(riends)23 b(in)f(2D)p 1078 -93 798 2 v 75 49 a Fn(Exercise)17
b(2.)k Fq(This)16 b(w)o(as)f(Exercise)h(4)f(in)h(the)g(2D)f(Newton)g(pro)s
(ject.)20 b(Recall)c(that)f(w)o(e)g(no)o(w)g(get)g(three)75
99 y(normals,)g(the)g(one)g(in)h(the)g(\014rst)e(quadran)o(t)h(giv)o(es)g
(the)h(minim)o(um.)75 189 y Fj(p)22 b(=)f(4;)h(q)f(=)h(1;)f(r)h(=)f(4;)75
289 y(\(*)g(Using)g(NSolve)g(*\))75 339 y(Clear[a,b,f,g])75
388 y(f[a_,)g(b_])g(:=)43 b(2)22 b(a^3)f(+)g(8)h(a)g(b^2)f(+)g(\(1)h(-)f(2)h
(r\))f(a)h(-)f(p)75 438 y(g[a_,)g(b_])g(:=)g(32)h(b^3)f(+)g(8)h(b)g(a^2)f(+)g
(\(1)h(-)f(8)h(r\))f(b)h(-)f(q)75 538 y(eqns)g(=)h({f[a,b]==0,g[a,)o(b]==0)o
(};)75 588 y(vars)f(=)h({a,b};)75 637 y(NSolve[eqns,)d(vars])75
687 y({{a)i(->)h(5.34823)e(-)h(0.713356)g(I,)g(b)h(->)f(-0.38535)f(-)i
(2.49105)e(I},)97 737 y({a)h(->)h(5.34823)e(+)h(0.713356)g(I,)g(b)h(->)f
(-0.38535)f(+)i(2.49105)e(I},)97 787 y({a)h(->)h(-1.44892,)d(b)j(->)f
(-0.0712115},)97 837 y({a)g(->)h(-0.65137,)d(b)j(->)f(-0.0362797},)97
887 y({a)g(->)h(2.0705,)e(b)h(->)h(0.211524}})75 986 y(\(*)f(Using)g
(FindRoot)f(*\))75 1036 y(Clear[a,b])75 1086 y(FindRoot[eqns,)f({a,p/2},)h
({b,q/2}])162 1136 y({a)i(->)f(2.0705,)f(b)i(->)f(0.211524})75
1235 y(\(*)g(Using)g(FindMinimum)f(*\))75 1285 y(h[x_,y_])g(:=)i(x^2)f(+)g
(4y^2)75 1335 y(d[x_,y_,p_,q_,r_])d(:=)k(Sqrt[\(x-p\)^2)d(+)j(\(y-q\)^2)e(+)h
(\(h[x,y]-r\)^2])75 1385 y(FindMinimum[d[x,y)o(,p,q,)o(r],)e({x,p/2},)h
({y,q/2}])162 1434 y({2.13583,)g({x)h(->)h(2.0705,)e(y)i(->)f(0.211524}})75
1542 y Fn(Exercise)c(3.)j Fq(Here)15 b(are)g(the)h(4)f(and)g(5-dimensional)i
(co)q(des)f(and)f(results:)75 1632 y Fj(\(*)21 b(4D)h(minimum)e(problem:)g(w)
i(=)f(x^2)h(+)f(4)h(y^2)f(+)h(9)f(z^2)g(*\))75 1682 y(Clear[h,d])75
1732 y(h[x_,y_,z_])f(:=)h(x^2)g(+)h(4y^2)f(+)g(9z^2)43 b(\(*)21
b(hyper-paraboloid)e(*\))75 1782 y(p)j(=)f(4;)h(q)f(=)h(3;)f(r)h(=)f(2;)h(s)f
(=)h(1;)75 1832 y(d[x_,y_,z_,p_,q_,)o(r_,s_)o(])d(:=)i(Sqrt[\(x-p\)^2)f(+)h
(\(y-q\)^2)g(+)g(\(z-r\)^2)g(+)g(\(h[x,y,z]-s\)^2])75 1881
y({min,)g(pointrule})e(=)j(FindMinimum[d[x,y,)o(z,p,q)o(,r,s)o(],)d({x,p/2},)
h({y,q/2},)g({z,r/2}])162 1931 y({4.41373,)g({x)h(->)h(1.26671,)e(y)i(->)f
(0.311469,)f(z)h(->)h(0.0979435}})75 1981 y(h[x,)f(y,)g(z])h(/.)f(pointrule)
162 2031 y(2.07894)75 2130 y(\(*)g(5D)h(minimum)e(problem:)g(v)i(=)f(x^2)h(+)
f(4)h(y^2)f(+)h(9)f(z^2)g(+)h(16)f(w^2)g(*\))75 2180 y(Clear[h,d])75
2230 y(h[x_,y_,z_,w_])e(:=)i(x^2)g(+)h(4y^2)f(+)h(9z^2)f(+)g(16w^2)75
2280 y(p)h(=)f(5;)h(q)f(=)h(4;)f(r)h(=)f(3;)h(s)f(=)h(2;)f(t)h(=)f(1;)75
2330 y(d[x_,y_,z_,w_,p_,)o(q_,r_)o(,s_,t)o(_])e(:=)i(Sqrt[\(x-p\)^2)e(+)j
(\(y-q\)^2)e(+)i(\(z-r\)^2)e(+)1143 2380 y(\(w-s\)^2)g(+)i
(\(h[x,y,z,w]-t\)^2)o(])75 2429 y({min,)f(pointrule})e(=)j
(FindMinimum[d[x,y,)o(z,w,p)o(,q,r)o(,s,t])o(,)d({x,p/2},)h({y,q/2},)1143
2479 y({z,r/2},)g({w,s/2}])162 2529 y({6.39695,)g({x)h(->)h(1.33333,)e(y)i
(->)f(0.333456,)f(z)h(->)h(0.116277,)e(w)h(->)h(0.0445226}})75
2579 y(h[x,)f(y,)g(z,)h(w])f(/.)g(pointrule)162 2629 y(2.37594)p
eop
%%Page: 123 123
123 122 bop 75 -100 a Fm(FindRo)r(ot)23 b(&)g(F)-6 b(riends)23
b(in)f(2D)p 75 -93 798 2 v 935 w Fq(123)75 49 y Fn(Exercise)14
b(4.)20 b Fk(FindRoot)11 b Fq(w)o(orks)h(of)h(course,)g(but)g(the)g(in)o
(teresting)g(thing)g(is)h(that)e Fk(NSolve)g Fl(c)n(an)k Fq(handle)75
99 y(these)h(equations!)24 b(Note:)e Fk(NSolve)16 b Fq(issues)h(a)g(w)o
(arning,)f(but)h(actually)g(do)q(es)g(\014nds)g(the)g(solution)g(near)75
149 y(our)e(starting)g(v)m(alue,)h(as)e(w)o(ell)j(as)d(a)h(second)h
(solution.)75 247 y Fj(\(*)21 b(Using)g(NSolve)g(*\))75 297
y(Clear[x,y,f,g])75 347 y(f[x_,)g(y_])g(:=)43 b(x^2)21 b(-)h(2x)f(+)h(2y^2)f
(-)g(4y)h(-)f(4)75 397 y(g[x_,)g(y_])g(:=)g(10)h(-)f(15)h(Sin[\(x)e(+)i
(2y\)/5])75 446 y(eqns)f(=)h({f[x,y]==0,g[x,)o(y]==0)o(};)75
496 y(vars)f(=)h({x,y};)75 546 y(NSolve[eqns,)d(vars])162 596
y(Solve::ifun:)228 646 y(Warning:)h(Inverse)g(functions)g(are)h(being)g(used)
g(by)g(Solve,)271 695 y(so)h(some)e(solutions)g(may)i(not)f(be)g(found.)162
745 y({{x)g(->)h(3.35471007184862)o(,)d(y)j(->)f(0.146964104643107)o(},)184
795 y({x)g(->)h(-0.9222845510920)o(6,)d(y)i(->)h(2.28546141611345)o(}})75
895 y(\(*)f(Using)g(FindRoot)f(and)h(starting)g(point)f(\(3.0,)h(0.1\))g(*\))
75 944 y(Clear[x,y,])75 994 y(eqns)g(=)h({f[x,y]==0,g[x,)o(y]==0)o(};)75
1044 y(FindRoot[eqns,)d({x,)i(3.0},)g({y,)g(0.1}])162 1094
y({x)h(->)f(3.35471,)f(y)i(->)f(0.146964})75 1211 y Fn(Exercise)g(5.)28
b Fq(The)19 b(answ)o(er)e(from)h Fk(FindMinimum)e Fq(is)j(that)e(the)h(minim)
o(um)i(v)m(alue)f(is)g(1.50797)d(10)1816 1195 y Fb(\000)p Fe(9)1862
1211 y Fq(,)75 1261 y(o)q(ccuring)f(at)f Fh(x)f Fq(=)g(4)p
Fh(:)p Fq(5,)g Fh(y)h Fq(=)f Fg(\000)p Fq(0)p Fh(:)p Fq(25.)19
b(The)14 b(answ)o(er)g(is)h Fl(not)j Fq(sensitiv)o(e)e(to)d(the)i(starting)e
(v)m(alue)j Fh(x)c Fq(=)h(4)p Fh(:)p Fq(6|)75 1311 y(con)o(v)o(ergence)f(is)h
(ac)o(hiev)o(ed)f(for)g Fh(x)p Fq(-v)m(alues)h(b)q(et)o(w)o(een)f(-2)g(and)g
(+11.)19 b(The)12 b(ultimate)g(failure)h(is)g(not)e(really)i(a)75
1361 y(lac)o(k)h(of)g(con)o(v)o(ergence,)g(but)g(is)h(due)g(to)e(the)h(exp)q
(onen)o(tial)i(taking)e(on)g(v)m(alues)h(larger)f(than)g(the)g(mac)o(hine)75
1410 y(arithmetic)i(can)f(handle:)75 1509 y Fj(FindMinimum[h[x,y)o(],)k
({x,12},)h({y,0}])162 1558 y(General::ovfl:)f(Overflow)h(occurred)g(in)i
(computation.)75 1676 y Fn(Exercise)17 b(6.)j Fq(Again,)15
b(the)g(answ)o(er)g(is)h(not)e(sensitiv)o(e)j Fl(p)n(er)f(se)s
Fq(,)f(but)g(o)o(v)o(er\015o)o(w)f(sets)g(in)i(quic)o(kly)h(for)e(this)75
1726 y(ob)s(jectiv)o(e)g(function:)75 1824 y Fj(Clear[h,x,y])75
1874 y(h[x_,y_])20 b(:=)i(-Exp[2x)e(-)h(x^2)h(-)f(y^2])g(-)h(0.1\(x^2)e(+)i
(y^2)f(-)g(2y)h(+)f(1\))75 1923 y(FindMinimum[h[x,y)o(],)e({x,1},)h({y,0}])
162 1973 y({-2.92593,)g({x)h(->)h(1.03831,)e(y)h(->)h(-0.0383096}})75
2073 y(FindMinimum[h[x,y)o(],)d({x,0},)h({y,0}])162 2123 y({-2.92593,)g({x)h
(->)h(1.03831,)e(y)h(->)h(-0.0383096}})75 2222 y(FindMinimum[h[x,y)o(],)d
({x,2},)h({y,0}])162 2272 y({-2.92593,)g({x)h(->)h(1.03831,)e(y)h(->)h
(-0.0383095}})75 2322 y(FindMinimum[h[x,y)o(],)d({x,3},)h({y,0}])162
2372 y(General::ovfl:)f(Overflow)h(occurred)g(in)i(computation.)162
2422 y(General::ovfl:)d(Overflow)h(occurred)g(in)i(computation.)162
2471 y(FindMinimum::fmlim)o(:)228 2521 y(The)f(minimum)f(could)h(not)g(be)g
(bracketed)f(in)i(30)f(iterations.)162 2571 y(FindMinimum[h[x,)e(y],)i({x,)g
(3},)g({y,)g(0}])p eop
%%Page: 124 124
124 123 bop 75 -100 a Fq(124)1273 b Fm(Cen)n(ter)22 b(of)h(Mass)p
1417 -93 459 2 v 606 49 a Fn(PURPOSE)18 b(OF)g(THE)g(PR)o(OJECT)146
151 y Fq(Sho)o(w)13 b(ho)o(w)h(to)f(do)h(m)o(ultiple)i(in)o(tegrals)e(in)h
(rectangular)f(co)q(ordinates)h(with)f(application)i(to)d(cen)o(ter)75
208 y(of)22 b(mass)g(problems.)43 b(Once)24 b(again,)g(w)o(e)e(add)h(to)f
(the)h(fun)g(b)o(y)f(making)h(a)g(fora)o(y)e(in)o(to)i(the)f(fourth)75
264 y(dimension.)75 341 y Fn(Instructor)14 b(Note)p Fq(:)31
b(When)13 b(c)o(hange)g(of)f(v)m(ariables)i(in)f(m)o(ulti-dimensional)j(in)o
(tegrals)d(is)g(co)o(v)o(ered,)f(y)o(ou)75 397 y(migh)o(t)j(w)o(an)o(t)e(to)h
(assign)h(hand)h(ev)m(aluations)g(lik)o(e:)k(Use)15 b(the)g(substitution,)h
Fh(x)c Fq(=)h Fh(ar)c Fq(cos)e Fh(\022)q Fq(,)15 b Fh(y)g Fq(=)e
Fh(br)7 b Fq(sin)i Fh(\022)q Fq(,)75 454 y(to)15 b(get)f(the)i(area)e(of)h
(an)g(ellipse)j(as)d Fh(ab)743 419 y Fd(R)769 432 y Fe(1)761
467 y(0)789 454 y Fh(dr)8 b(r)871 419 y Fd(R)899 432 y Fe(2)p
Ff(\031)891 467 y Fe(0)940 454 y Fh(d\022)14 b Fq(=)f Fh(ab)d
Fg(\001)1128 436 y Fe(1)p 1128 443 18 2 v 1128 469 a(2)1161
454 y Fg(\001)g Fq(2)p Fh(\031)k Fq(=)f Fh(\031)r(ab)p Fq(,)h(etc.)577
578 y Fn(ANSWERS)j(F)o(OR)h(INSTR)o(UCTORS)75 674 y(Exercise)f(3.)75
778 y Fj(volume)k(=)g(Integrate[1,)e({x,0,a},{y,0,a-x},{z)o(,a-x)o(-y,a})o(])
184 828 y(3)162 877 y(a)162 927 y(--)162 977 y(3)75 1077 y(cmass)i(=)g
(Integrate[{x,y,z},)d({x,0,a},{y,0,a-x},{)o(z,a-x)o(-y,a})o(]/vol)o(ume)184
1126 y(3)k(a)43 b(3)22 b(a)43 b(5)21 b(a)162 1176 y({---,)g(---,)g(---})206
1226 y(8)87 b(8)g(8)75 1350 y Fn(Exercise)16 b(4.)j Fq(2D)13
b(calculations)i(\(here)f(and)g(b)q(elo)o(w,)h(w)o(e)e(suppress)h(the)g(w)o
(arning)g(message)f(men)o(tioned)75 1400 y(in)j(the)f(pro)s(ject\):)75
1504 y Fj(area)21 b(=)h(Integrate[1,)d({x,)i(0,)g(a},)h({y,)f(0,)g(b)h
(Sqrt[1-\(x/a\)^2]})o(])162 1554 y(a)g(b)f(Pi)162 1604 y(------)206
1653 y(4)75 1753 y(2^2)g(area)g(/.)h({a->r,b->r})249 1803 y(2)162
1853 y(Pi)g(r)75 1952 y(cmass)f(=)g(Integrate[{x,y},)e({x,)i(0,)g(a},)h({y,)f
(0,)g(b)h(Sqrt[1-\(x/a\)^2]})o(])d(/)j(area)184 2002 y(4)g(a)65
b(4)21 b(b)162 2052 y({----,)g(----})184 2102 y(3)h(Pi)43 b(3)21
b(Pi)75 2226 y Fn(Exercise)c(5.)j Fq(3)15 b(D)g(calculations:)75
2330 y Fj(volume)21 b(=)g(Integrate[1,)e({x,)j(0,)f(a},)g({y,)g(0,)h(b)f
(Sqrt[1-\(x/a\)^2]},)925 2380 y({z,)g(0,)g(c)h(Sqrt[1-\(x/a\)^2-\(y/)o
(b\)^2])o(}])162 2429 y(a)g(b)f(c)h(Pi)162 2479 y(--------)228
2529 y(6)p eop
%%Page: 125 125
125 124 bop 75 -100 a Fm(Cen)n(ter)22 b(of)h(Mass)p 75 -93
459 2 v 1275 w Fq(125)75 49 y Fj(2^3)e(volume)g(/.)g({a->r,b->r,c->r})293
99 y(3)162 149 y(4)h(Pi)f(r)162 199 y(-------)228 249 y(3)75
348 y(cmass)g(=)g(Integrate[{x,y,z},)d({x,)k(0,)f(a},)g({y,)g(0,)h(b)f
(Sqrt[1-\(x/a\)^2]},)751 398 y({z,)g(0,)g(c)h(Sqrt[1-\(x/a\)^2-\()o(y/b\)^)o
(2]}]/)o(volum)o(e)184 448 y(3)g(a)43 b(3)22 b(b)43 b(3)21
b(c)162 498 y({---,)g(---,)g(---})206 547 y(8)87 b(8)g(8)75
676 y Fn(Exercise)17 b(6.)j Fq(4D)15 b(calculations:)75 784
y Fj(hypervolume)20 b(=)h(Integrate[1,)e({x,)j(0,)f(a},)g({y,)g(0,)h(b)f
(Sqrt[1-\(x/a\)^2]},)620 834 y({z,)g(0,)g(c)h(Sqrt[1-\(x/a\)^2-\(y)o(/b\)^2)o
(]},)663 884 y({w,)g(0,)f(d)h(Sqrt[1-\(x/a\)^2-)o(\(y/b\))o(^2-\(z)o(/c\)^2)o
(]}])380 933 y(2)162 983 y(a)g(b)f(c)h(d)g(Pi)162 1033 y(-----------)249
1083 y(32)75 1183 y(2^4)f(hypervolume)f(/.)h({a->r,b->r,c->r,d-)o(>r})206
1232 y(2)43 b(4)162 1282 y(Pi)g(r)162 1332 y(------)206 1382
y(2)75 1481 y(cmass)21 b(=)g(Integrate[{x,y,z,w})o(,)e({x,)i(0,)h(a},)f({y,)g
(0,)g(b)h(Sqrt[1-\(x/a\)^2]},)511 1531 y({z,)f(0,)g(c)h(Sqrt[1-\(x/a\)^2-\(y)
o(/b\)^2)o(]},)576 1581 y({w,)f(0,)h(d)f(Sqrt[1-\(x/a\)^2-\(y/b)o(\)^2-\()o
(z/c\)^)o(2]}]/)o(hyper)o(volu)o(me)184 1631 y(16)g(a)66 b(16)21
b(b)65 b(16)21 b(c)66 b(16)21 b(d)162 1681 y({-----,)g(-----,)f(-----,)h
(-----})184 1730 y(15)g(Pi)44 b(15)21 b(Pi)43 b(15)21 b(Pi)44
b(15)21 b(Pi)75 1866 y Fn(Exercise)16 b(7.)j Fq(The)c(sum)f(is)g
Fh(a)597 1849 y Fe(3)617 1866 y Fh(=)p Fq(2,)g(that)f(is,)h
Fl(half)24 b Fq(the)14 b(v)o(olume)h(of)e(the)h(cub)q(e)i(with)e(edge)h
(length)f Fh(a)p Fq(,)g(just)75 1922 y(as)h(the)g(Figure)h(indicates.)p
eop
%%Page: 126 126
126 125 bop 75 -103 a Fq(126)980 b Fm(F)-6 b(orce)23 b(Applications)e(in)h
(3D)p 1124 -85 752 2 v 606 49 a Fn(PURPOSE)c(OF)g(THE)g(PR)o(OJECT)146
153 y Fq(W)l(e)12 b(apply)h(m)o(ultiple)i(in)o(tegrals)e(to)e(t)o(w)o(o)h
(force)g(problems.)19 b(The)13 b(application)h(is)f(the)g(in)o(triguing)h
(and)75 209 y(imp)q(ortan)o(t)f(idea)i(of)e(replacing)i(an)e(extended)i(b)q
(o)q(dy)f(b)o(y)g(a)f(particle)i(of)e(the)g(same)h(mass)f(lo)q(cated)h(at)f
(the)75 265 y(mass)k(cen)o(ter)h(of)f(the)h(extended)h(b)q(o)q(dy)l(.)29
b(W)l(e)18 b(\014nd)g(that)f(this)i(replacemen)o(t)f(is)g(sometimes)g(v)m
(alid)i(and)75 322 y(sometimes)c(not.)21 b(W)l(e)16 b(also)f(\014nd)i(that)e
(for)g(the)h(imp)q(ortan)o(t)f(in)o(v)o(erse)h(square)g(la)o(w,)f(the)h
(replacemen)o(t)g(is)75 378 y(appro)o(ximately)g(correct)g(in)h(the)f(\\far)g
(\014eld.")23 b(This)17 b(topic)g(will)h(b)q(e)f(follo)o(w)o(ed)f(up)h(in)g
(the)f(pro)s(ject)f Fl(The)75 435 y(Inverse)j(Squar)n(e)i(L)n(aw)5
b Fq(,)19 b(where)g(w)o(e'll)g(discuss)h(Newton's)e(remark)m(able)i(and)f
(historically)h(imp)q(ortan)o(t)75 491 y(result)c(for)e(the)h(sphere.)146
569 y(The)k(pro)s(ject)g(also)g(discuss)h(the)g(notion)f(of)g(expansions)h
(ab)q(out)f(in\014nit)o(y)l(.)34 b(Finally)l(,)22 b(there)d(is)h(an)75
625 y(imp)q(ortan)o(t)13 b(\\sermon")f(on)h(the)h(true)f(meaning)h(of)e
(\\large")h(and)g(\\small")h(quan)o(tities)g(in)g(applied)h(prob-)75
682 y(lems.)75 759 y Fn(Shorter)k(Pro)s(ject)p Fq(:)j(Omit)17
b(some)f(or)g(all)i(of)e(Exercises)h(1-3.)24 b(Omit)17 b(7)f(or)g(omit)g(9)h
(\(but)f(lose)h(the)g(use)75 816 y(of)e(p)q(olar)g(co)q(o)q(dinates)h(in)g
(in)o(tegration\).)k(Omit)c(Exercise)g(11.)577 944 y Fn(ANSWERS)h(F)o(OR)h
(INSTR)o(UCTORS)75 1047 y(Exercise)24 b(1.)37 b Fq(The)21 b(only)h
(di\013erence)g(is)g(that)e(in)i(the)f(new)g(co)q(ordinates,)i(the)e
(distance)h(that)e(the)75 1103 y(slice)i(at)d(heigh)o(t)i Fh(z)h
Fq(is)f(lifted)g(is)g Fh(z)15 b Fq(+)f Fh(h)g Fq(+)g Fh(R)p
Fq(.)34 b(The)21 b(missing)g(limits)g(are)f(xmax)g(=)1569 1065
y Fd(p)p 1610 1065 253 2 v 1610 1103 a Fh(R)1645 1090 y Fe(2)1675
1103 y Fg(\000)10 b Fh(y)1744 1090 y Fe(2)1774 1103 y Fg(\000)h
Fh(z)1843 1090 y Fe(2)1862 1103 y Fq(,)75 1160 y(ymax)17 b(=)253
1121 y Fg(p)p 291 1121 153 2 v 39 x Fh(R)326 1147 y Fe(2)356
1160 y Fg(\000)10 b Fh(z)424 1147 y Fe(2)444 1160 y Fq(,)18
b(with)g(the)g(lo)o(w)o(er)g(limits)h(b)q(eing)g(the)f(negativ)o(es)g(of)g
(these)g(quan)o(tities.)28 b(See)19 b(the)75 1216 y(Answ)o(er)c(to)g(6.)75
1294 y Fn(Exercise)f(2.)19 b Fq(Again)13 b(measuring)g Fh(z)i
Fq(from)d(the)g(cen)o(ter)h(of)f(the)h(sphere:)19 b(\001)p
Fh(W)g Fq(=)13 b(\()p Fh(z)7 b Fq(+)e Fh(h)g Fq(+)g Fh(R)p
Fq(\))g Fg(\001)g Fh(g)i Fg(\001)e Fh(\032)g Fg(\001)g Fq(\001)p
Fh(V)h Fq(.)75 1350 y(No)o(w)15 b(use)g(the)g(cross)g(section)h(metho)q(d)f
(to)g(write:)20 b(\001)p Fh(V)i Fq(=)13 b Fh(A)p Fq(\()p Fh(z)r
Fq(\)\001)p Fh(z)h Fq(=)f Fh(\031)r Fq(\()p Fh(R)1384 1334
y Fe(2)1413 1350 y Fg(\000)d Fh(z)1481 1334 y Fe(2)1501 1350
y Fq(\)\001)p Fh(z)r Fq(.)20 b(Th)o(us,)596 1479 y Fh(W)f Fq(=)13
b Fh(\031)r(\032g)788 1422 y Fd(Z)830 1435 y Ff(R)811 1516
y Fb(\000)p Ff(R)868 1479 y Fq(\()p Fh(z)e Fq(+)g Fh(h)f Fq(+)h
Fh(R)p Fq(\)\()p Fh(R)1152 1461 y Fe(2)1181 1479 y Fg(\000)f
Fh(z)1249 1461 y Fe(2)1269 1479 y Fq(\))e Fh(dz)r(:)75 1623
y Fn(Exercise)17 b(3.)467 1695 y Fh(W)h Fq(=)13 b Fh(\032g)631
1638 y Fd(Z)672 1651 y Fe(2)p Ff(\031)654 1732 y Fe(0)706 1695
y Fh(d\022)760 1638 y Fd(Z)801 1651 y Ff(\031)783 1732 y Fe(0)817
1695 y Fh(d\036)876 1638 y Fd(Z)917 1651 y Ff(R)899 1732 y
Fe(0)938 1695 y Fh(dr)8 b Fq(\()p Fh(r)g Fq(cos)g Fh(\036)i
Fq(+)g Fh(h)h Fq(+)f Fh(R)p Fq(\))e Fh(r)1354 1676 y Fe(2)1380
1695 y Fq(sin)h Fh(\036:)75 1823 y Fn(Exercise)17 b(4.)j Fq(Use)15
b(the)h(b)q(o)o(xed)f(equation,)g Fh(W)k Fq(=)13 b Fh(M)5 b(g)t
Fq(\026)-25 b Fh(z)14 b Fq(=)f Fh(\032\031)r(R)1192 1807 y
Fe(2)1211 1823 y Fh(H)t Fq(\()p Fh(h)d Fq(+)g Fh(H)q(=)p Fq(2\).)75
1901 y Fn(Exercise)17 b(5.)j Fh(W)f Fq(=)13 b Fh(M)5 b(g)t
Fq(\026)-25 b Fh(z)14 b Fq(=)f Fh(\032\031)r(R)696 1884 y Fe(2)715
1901 y Fh(H)t Fq(\()p Fh(h)c Fq(+)i Fh(R)p Fq(\).)75 1971 y
Fn(Exercise)17 b(6.)75 2081 y Fj(\(*)k(Rectangular)f(*\))75
2130 y(rho)h(g)h(Integrate[\(z)d(+)j(h)f(+)h(R\),)249 2180
y({z,)g(-R,)f(R},)249 2230 y({y,)h(-Sqrt[R^2)d(-)j(z^2],)f(Sqrt[R^2)f(-)i
(z^2]},)249 2280 y({x,)g(-Sqrt[R^2)d(-)j(y^2)f(-)h(z^2],)f(Sqrt[R^2)f(-)h
(y^2)g(-)h(z^2]}]//Simplify)424 2380 y(3)249 2429 y(4)g(g)g(Pi)f(R)43
b(\(h)22 b(+)f(R\))h(rho)162 2479 y(------------------)o(---)467
2529 y(3)p eop
%%Page: 127 127
127 126 bop 75 -103 a Fm(F)-6 b(orce)23 b(Applications)e(in)h(3D)p
75 -85 752 2 v 981 w Fq(127)75 49 y Fj(\(*)f(Cross)g(sections)f(*\))75
99 y(Pi)h(rho)h(g)f(Integrate[\(z)e(+)j(h)g(+)f(R\))h(\(R^2)f(-)g(z^2\),)g
({z,)g(-R,)g(R}]//Simplify)424 199 y(3)249 249 y(4)h(g)g(Pi)f(R)43
b(\(h)22 b(+)f(R\))h(rho)162 298 y(------------------)o(---)467
348 y(3)75 448 y(\(*)f(Spherical)f(*\))75 498 y(z)i(=)f(r)h(Cos[phi];)75
547 y(rho)f(g)h(Integrate[\(z)d(+)j(h)f(+)h(R\))f(r^2)g(Sin[phi],)75
597 y({r,)g(0,)h(R},)f({phi,)f(0,)i(Pi},)f({theta,)f(0,)i(2Pi}]//Simplify)75
647 y(Clear[z])424 747 y(3)249 796 y(4)g(g)g(Pi)f(R)43 b(\(h)22
b(+)f(R\))h(rho)162 846 y(------------------)o(---)467 896
y(3)75 1037 y Fn(Exercise)16 b(7.)j Fq(See)14 b(the)g(v)o(olume)g(\()p
Fh(a)694 1021 y Fe(3)714 1037 y Fh(=)p Fq(3\))e(and)i(cen)o(ter)g(of)f(mass)h
(\()p Fh(a=)p Fq(4\))e(determinations)j(in)f(the)g(Answ)o(er)75
1094 y(to)k(problem)i(3)f(of)g(the)g Fl(Center)g(of)h(Mass)t
Fq(.)30 b(Since)20 b Fh(a)g Fq(=)f(1,)g(as)g(w)o(e)g(p)q(osed)g(the)h
(problem)f(here,)h Fh(W)26 b Fq(=)75 1150 y Fh(\032g)12 b Fg(\001)f
Fq(\(1)p Fh(=)p Fq(3\))f Fg(\001)h Fq(\(1)p Fh(=)p Fq(4\))k(=)h
Fh(\032g)r(=)p Fq(12.)24 b(Studen)o(ts)17 b(who)g(generalize)i(on)e(their)h
(o)o(wn)f(and)g(supply)h(the)g(extra)e Fh(a)1855 1134 y Fe(4)75
1207 y Fq(scale)g(factor)e(in)i(the)f(answ)o(er,)g(deserv)o(e)g(extra)g
(credit.)75 1279 y Fn(Exercise)g(8.)k Fq(The)14 b(requested)g(sk)o(etc)o(h)f
(is)g(sho)o(wn)g(in)i(Figure)e(78)g(\(without)g(an)o(y)g(thic)o(kness)h
(indicated\).)727 1879 y @beginspecial 0 @llx 0 @lly 256 @urx
257 @ury 1190 @rwi @setspecial
%%BeginDocument: Force3D.plate.eps


/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /estroke {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /efill {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath unpagectm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /apstroke {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc pie chord or {
        closepath
    } if crlinalph setalpha pie not chord not and {
        crfrtarw {
            2 copy crlinw exch gsave newpath angle1 1 add cos radius mul radius add angle1 1 add sin radius mul radius add moveto angle1 cos radius mul radius add angle1 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if crendarw {
            2 copy crlinw exch gsave newpath angle2 1 sub cos radius mul radius add angle2 1 sub sin radius mul radius add moveto angle2 cos radius mul radius add angle2 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if
    } if crlincp setlinecap crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /apfill {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup 5 -2 roll arc pie chord or {
        closepath
    } if 1 xscale div 1 yscale div scale crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /mkepath {
    dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def /closed exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc closed pie or chord or {
        closepath
    } if unpagectm
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
gsave
0 0 256 256.019989 rectclip
-78 -298.000031 translate
78 298.000031 256 256.019989 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 1.934097 -176.067017 197.065903 538.000366 1 0 0 1 0 0 sc6mt astore ssl
/crendarw true def
/crfrtarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 119.000183 -0.951996 197 363 1 0 0 1 0 0 sc6mt astore ssl
/crendarw false def
/crfrtarw true def
0.866025 0.5 -0.5 0.866025 199.773026 -109.468475 sc4mt astore 0.866025 0.5 -0.5 0.866025 199.773026 -109.468475 sc5mt astore 102.308945 61.640961 96.139267 301.096405 1 0 0 1 0 0 sc6mt astore ssl
/crlinw 2.1 def
/crfrtarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 81.024689 0 121.049759 341.915466 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 81.024689 0 193.569443 383.395782 1 0 0 1 0 0 sc6mt astore ssl
0.866025 0.5 -0.5 0.866025 209.711304 -10.495697 sc4mt astore 0.866025 0.5 -0.5 0.866025 209.711304 -10.495697 sc5mt astore 81.024689 0 84.039368 385.960632 0.866025 0.5 -0.5 0.866025 242.761063 -33.580231 sc6mt astore ssl
0.866025 0.5 -0.5 0.866025 209.711304 -10.495697 sc4mt astore 0.866025 0.5 -0.5 0.866025 209.711304 -10.495697 sc5mt astore 81.024689 0 84.039368 385.960632 0.866025 0.5 -0.5 0.866025 325.280762 -35.099915 sc6mt astore ssl
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
1 0 0 1 0 0 sc6mt astore 4.105545 -1 -1.000004 202.605545 473.60556 1 0 0 1 0 0 sc5mt astore efill
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 4.105545 -1 -1.000004 202.605545 473.60556 1 0 0 1 0 0 sc5mt astore estroke
/crlinw 1.2 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 44 -95 199 469 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc6mt astore 1.5 1 -1.666667 242 377 1 0 0 1 0 0 sc5mt astore efill
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 1.5 1 -1.666667 242 377 1 0 0 1 0 0 sc5mt astore estroke
false 1 0 0 1 0 0 sc5mt astore sstrt
systemdict
begin
199 421 215 431 setbbox
199 421 moveto
199 421 207.623825 423.764893 208 424 curveto
208.343826 424.214874 215 431 215 431 curveto
end
/nspans 2 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
/txtdraw true def
/txlndraw true def
(m ) [12 0 0 0] 215 470 /Courier-Bold [ 20 1 mul 0 0 20 0 0 ] [1 0 0 1 -9 2] dotx
(q ) [12 0 0 0] 151 435 /Courier-Bold [ 20 1 mul 0 0 20 0 0 ] [1 0 0 1 29 31] dotx
(R ) [12 0 0 0] 234 419 /Courier-Bold [ 20 1 mul 0 0 20 0 0 ] [1 0 0 1 -9 -3] dotx
(x ) [12 0 0 0] 79 305 /Courier-Bold [ 20 1 mul 0 0 20 0 0 ] [1 0 0 1 0 0] dotx
(y ) [12 0 0 0] 320 372 /Courier-Bold [ 20 1 mul 0 0 20 0 0 ] [1 0 0 1 0 0] dotx
(z ) [12 0 0 0] 213 543 /Courier-Bold [ 20 1 mul 0 0 20 0 0 ] [1 0 0 1 -6 -7] dotx
(O ) [12 0 0 0] 106 374 /Courier-Bold [ 20 1 mul 0 0 20 0 0 ] [1 0 0 1 79 -14] dotx
/txtdraw true def
/txlndraw true def
(a ) [12.619995 0 0 0] 181 440 /Symbol [ 20 1 mul 0 0 20 0 0 ] [1 0 0 1 19 -9] dotx
end
grestore
grestore
%%EndDocument
 @endspecial 670 1965 a Fi(Fig)p Fq(.)h(78.)k(Sk)o(etc)o(h)c(for)g(Exercise)h
(8.)75 2130 y Fj(R)22 b(=)f(Sqrt[x^2)f(+)i(y^2)f(+)h(q^2];)75
2180 y(F)g(=)f(-)h(G)f(M)h(m)g(q/a^2)e(Integrate[1/R^3,)f({x,)i(-a/2,)g
(a/2},)f({y,)i(-a/2,)e(a/2}])729 2230 y(2)707 2280 y(a)162
2330 y(-4)i(G)f(m)h(M)f(ArcTan[------------)o(-----)o(----])772
2380 y(2)131 b(2)511 2429 y(2)21 b(q)h(Sqrt[2)f(a)43 b(+)22
b(4)f(q)h(])162 2479 y(------------------)o(-----)o(-----)o(-----)o(-----)576
2529 y(2)554 2579 y(a)p eop
%%Page: 128 128
128 127 bop 75 -103 a Fq(128)980 b Fm(F)-6 b(orce)23 b(Applications)e(in)h
(3D)p 1124 -85 752 2 v 75 49 a Fj(Fpoint)f(=)g(-G)h(M)f(m/q^2;)75
149 y(Table[{q,)f(F/Fpoint})g(/.)h({a)h(->)f(1,)g(q)h(->)f(2^k},)g({k,)g(0,)h
(8}]//N//TableFor)o(m)162 199 y(1.)109 b(0.805432)162 249 y(2.)g(0.94172)162
298 y(4.)g(0.984654)162 348 y(8.)g(0.996111)162 398 y(16.)87
b(0.999025)162 448 y(32.)g(0.999756)162 498 y(64.)g(0.999939)162
547 y(128.)65 b(0.999985)162 597 y(256.)g(0.999996)75 697 y(F)22
b(+)f(O[q,)g(Infinity]^5)41 b(\(*)22 b(Instructors)d(only)i(*\))424
747 y(2)206 796 y(G)g(m)h(M)87 b(a)43 b(G)22 b(m)f(M)109 b(1)22
b(5)162 846 y(-\(-----\))e(+)i(--------)e(+)i(O[-])249 896
y(2)240 b(4)152 b(q)228 946 y(q)195 b(4)22 b(q)75 1046 y(Series[F,)e({q,)h
(Infinity,)f(3}])43 b(\(*)21 b(What)g(we)h(expect)e(from)h(students)f(*\))206
1095 y(G)h(m)h(M)130 b(1)22 b(4)162 1145 y(-\(-----\))e(+)i(O[-])249
1195 y(2)174 b(q)228 1245 y(q)75 1374 y Fn(Exercise)17 b(9.)75
1483 y Fj(Clear[R,)j(F])75 1533 y(R)i(=)f(Sqrt[r^2)f(+)i(q^2];)75
1583 y(F)g(=)f(-)h(G)f(M)h(m)g(q/\(Pi)e(a^2\))h(Integrate[r/R^3,)e({r,)i(0,)g
(a},)g({theta,)g(0,)g(2Pi}])445 1632 y(2)h(Pi)196 b(2)21 b(Pi)206
1682 y(G)g(m)h(M)g(q)f(\(--------)f(-)i(-------------\))533
1732 y(2)217 b(2)87 b(2)402 1782 y(Sqrt[q)20 b(])66 b(Sqrt[a)42
b(+)22 b(q)f(])162 1832 y(-\(----------------)o(-----)o(-----)o(-----)o
(---\))533 1881 y(2)511 1931 y(a)43 b(Pi)75 2031 y(Table[{q,)20
b(F/Fpoint})g(/.)h({a)h(->1,)f(q)g(->)h(2^k},)e({k,)h(0,)h(8}]//N//TableForm)
162 2081 y(1.)109 b(0.585786)162 2130 y(2.)g(0.844582)162 2180
y(4.)g(0.95544)162 2230 y(8.)g(0.988432)162 2280 y(16.)87 b(0.99708)162
2330 y(32.)g(0.999268)162 2380 y(64.)g(0.999817)162 2429 y(128.)65
b(0.999954)162 2479 y(256.)g(0.999989)p eop
%%Page: 129 129
129 128 bop 75 -103 a Fm(F)-6 b(orce)23 b(Applications)e(in)h(3D)p
75 -85 752 2 v 981 w Fq(129)75 99 y Fj(F)g(+)f(O[q,)g(Infinity]^5)467
149 y(2)206 199 y(G)g(m)h(M)87 b(3)21 b(a)44 b(G)21 b(m)h(M)109
b(1)21 b(5)162 249 y(-\(-----\))f(+)i(----------)e(+)h(O[-])249
298 y(2)262 b(4)174 b(q)228 348 y(q)217 b(4)22 b(q)75 448 y(Series[F,)e({q,)h
(Infinity,)f(3}])206 498 y(G)h(m)h(M)130 b(1)22 b(3)162 547
y(-\(-----\))e(+)i(O[-])249 597 y(2)174 b(q)228 647 y(q)75
782 y Fn(Exercise)15 b(11.)20 b Fq(After)13 b(extracting)g(a)g(2)p
Fh(q)i Fq(from)e(the)h(square)f(ro)q(ot)g(that)g(o)q(ccurs)g(inside)j(the)d
(arctangen)o(t,)75 839 y(w)o(e)19 b(ma)o(y)f(ignore)i(the)f(remaining)i
(square)e(ro)q(ot)f(to)h(\014rst)f(order,)i(giving)g(arctan)o(\()p
Fh(a=)p Fq(2)p Fh(q)r Fq(\))1623 822 y Fe(2)1661 839 y Fg(\031)g
Fq(\()p Fh(a=)p Fq(2)p Fh(q)r Fq(\))1844 822 y Fe(2)1862 839
y Fq(.)75 895 y(After)15 b(cancelling)i(common)e(factors,)f(w)o(e)h(get)g
(the)g(p)q(oin)o(t)h(force)f(result.)p eop
%%Page: 130 130
130 129 bop 75 -103 a Fq(130)836 b Fm(In)n(v)n(erse)23 b(Square)h(La)n(w)f
(Problems)p 980 -85 896 2 v 606 49 a Fn(PURPOSE)18 b(OF)g(THE)g(PR)o(OJECT)
146 152 y Fq(This)c(fo)q(cus)g(of)f(this)h(brief)h(pro)s(ject)d(is)j
(Newton's)e(remark)m(able)h(and)g(historically)h(imp)q(ortan)o(t)f(result)75
209 y(that)j(for)f(the)h(in)o(v)o(erse)h(square)f(la)o(w)g(a)g(sphere)h(ma)o
(y)f(b)q(e)h(replaced)g Fl(exactly)j Fq(b)o(y)c(a)g(concen)o(trated)g(p)q
(oin)o(t)75 265 y(mass)g(at)g(its)g(cen)o(ter.)27 b(This)18
b(pro)s(ject)f(giv)o(es)h(a)f(satisfying)h(conclusion)h(to)e(the)g(material)h
(discussed)h(in)75 322 y Fl(Center)h(of)h(Mass)i Fq(and)d Fl(F)m(or)n(c)n(e)g
(Applic)n(ations)g(in)g(3D)t Fq(.)h(The)f(mathematical)h(con)o(ten)o(t)e(is)i
(in)o(tegration)75 378 y(using)16 b(spherical)h(and)e(cylindrical)j(co)q
(ordinates.)577 505 y Fn(ANSWERS)f(F)o(OR)h(INSTR)o(UCTORS)75
601 y(Exercise)g(1.)j Fq(W)l(e)15 b(need)i(only)f(mak)o(e)f(a)g(c)o(hange)h
(in)g(the)g(limits)h(for)e Fh(r)h Fq(in)h(our)e(previous)i
Fl(Mathematic)n(a)75 651 y Fq(co)q(de:)75 760 y Fj(R)22 b(=)f(Sqrt[q^2)f(+)i
(r^2)f(-)h(2)f(q)h(r)f(Cos[phi]];)75 809 y(F)h(=)f(-3)h(G)f(M)h(m/\(4)f(Pi)g
(\(b^3)g(-)h(a^3\)\))e(*)271 859 y(Integrate[\(q)f(-)j(r)g(Cos[phi]\)/R^3)d
(r^2)i(Sin[phi],)271 909 y({theta,)f(0,)i(2Pi},)f({r,)g(a,)g(b},)g({phi,)g
(0,)g(Pi}])380 1009 y(3)283 b(2)131 b(3)283 b(2)315 1058 y(-\(a)43
b(Sqrt[\(a)20 b(-)i(q\))f(]\))65 b(a)43 b(Sqrt[\(a)21 b(+)g(q\))h(])75
1108 y(\(-3)f(G)h(m)f(M)h(\(----------------)o(----)c(-)k(-----------------)c
(+)445 1158 y(2)458 b(2)380 1208 y(3)22 b(q)43 b(\(-a)21 b(+)h(q\))196
b(3)21 b(q)44 b(\(a)21 b(+)g(q\))228 1308 y(3)283 b(2)108 b(3)284
b(2)206 1357 y(b)43 b(Sqrt[\(b)20 b(-)i(q\))f(])66 b(b)43 b(Sqrt[\(b)20
b(+)i(q\))f(])206 1407 y(----------------)o(-)e(+)j(----------------)o(-\)\))
c(/)315 1457 y(2)414 b(2)249 1507 y(3)22 b(q)43 b(\(-b)21 b(+)h(q\))152
b(3)22 b(q)43 b(\(b)22 b(+)f(q\))249 1606 y(3)87 b(3)119 1656
y(\(2)21 b(\(-a)43 b(+)22 b(b)f(\)\))75 1771 y Fq(Use)162 1735
y Fd(p)p 204 1735 157 2 v 36 x Fq(\()p Fh(a)10 b Fg(\000)g
Fh(q)r Fq(\))341 1758 y Fe(2)373 1771 y Fq(=)j Fg(j)p Fh(a)d
Fg(\000)g Fh(q)r Fg(j)i Fq(=)h Fh(q)f Fg(\000)f Fh(a)k Fq(and)813
1735 y Fd(p)p 855 1735 153 2 v 36 x Fq(\()p Fh(b)9 b Fg(\000)i
Fh(q)r Fq(\))988 1758 y Fe(2)1020 1771 y Fq(=)i Fg(j)p Fh(b)c
Fg(\000)h Fh(q)r Fg(j)j Fq(=)f Fh(q)h Fg(\000)d Fh(b)15 b Fq(and)g(simplify)i
(to)e(obtain)836 1895 y Fh(F)k Fq(=)13 b Fg(\000)972 1864 y
Fh(GM)5 b(m)p 972 1884 125 2 v 1014 1926 a(q)1036 1913 y Fe(2)1102
1895 y Fh(;)75 2017 y Fq(the)15 b(p)q(oin)o(t)h(force)f(la)o(w.)75
2094 y Fn(Exercise)f(2.)k Fq(Same)12 b(ev)m(aluation)i(as)d(previous)i
(problem,)g(but)f(no)o(w)1261 2057 y Fd(p)p 1302 2057 157 2
v 1302 2094 a Fq(\()p Fh(a)e Fg(\000)g Fh(q)r Fq(\))1439 2081
y Fe(2)1471 2094 y Fq(=)j Fh(a)t Fg(\000)t Fh(q)r Fq(,)1633
2057 y Fd(p)p 1675 2057 153 2 v 37 x Fq(\()p Fh(b)c Fg(\000)i
Fh(q)r Fq(\))1808 2081 y Fe(2)1840 2094 y Fq(=)75 2150 y Fh(b)f
Fg(\000)g Fh(q)17 b Fq(and)f(w)o(e)e(get)h Fh(F)k Fq(=)13 b(0.)75
2221 y Fn(Exercise)k(3.)j Fq(This)c(is)g(a)e(reprise)i(of)f(the)g(problems)h
(in)g Fl(F)m(or)n(c)n(e)f(Applic)n(ations)h(in)f(3D)t Fq(:)75
2429 y Fj(R)22 b(=)f(Sqrt[r^2)f(+)i(\(q)f(-)h(z\)^2];)75 2479
y(F)g(=)f(-)h(G)f(M)h(m/\(Pi)f(a^2)g(2h\))g(Integrate[r)f(\(q)h(-)h(z\)/R^3,)
249 2529 y({theta,)f(0,)g(2Pi},)g({z,)g(-h,)g(h},)g({r,)h(0,)f(a}])685
2629 y(2)392 b(2)p eop
%%Page: 131 131
131 130 bop 75 -103 a Fm(In)n(v)n(erse)23 b(Square)h(La)n(w)f(Problems)p
75 -85 896 2 v 836 w Fq(131)380 49 y Fj(h)f(Sqrt[\(h)e(-)i(q\))f(])65
b(h)22 b(Sqrt[\(h)e(+)i(q\))f(])162 99 y(-\(\(G)g(m)h(M)f(\(----------------)
e(+)i(----------------)e(+)489 149 y(-h)i(+)h(q)283 b(h)22
b(+)f(q)467 249 y(2)87 b(2)262 b(2)337 298 y(Sqrt[a)42 b(+)21
b(h)44 b(-)21 b(2)h(h)g(q)f(+)h(q)f(])h(-)467 398 y(2)87 b(2)262
b(2)174 b(2)337 448 y(Sqrt[a)42 b(+)21 b(h)44 b(+)21 b(2)h(h)g(q)f(+)h(q)f
(]\)\))h(/)f(\(a)43 b(h\)\))75 547 y(F)22 b(=)f(\045)h(/.)f(q)h(->)f(h)h(+)f
(d//PowerExpand)e(\(*)j(fudge)e(to)i(get)f(the)g(right)g(sign)g(*\))554
647 y(2)87 b(2)523 b(2)162 697 y(-\(\(G)21 b(\(2)h(h)f(+)h(Sqrt[a)42
b(+)22 b(h)43 b(-)22 b(2)f(h)h(\(d)f(+)h(h\))f(+)h(\(d)f(+)h(h\))f(])h(-)467
796 y(2)87 b(2)523 b(2)337 846 y(Sqrt[a)42 b(+)21 b(h)44 b(+)21
b(2)h(h)g(\(d)f(+)h(h\))f(+)h(\(d)f(+)g(h\))h(]\))f(m)h(M\))f(/)293
946 y(2)249 996 y(\(a)44 b(h\)\))75 1095 y(F)22 b(=)f(\045)h(/.)f(d)h(->)f(q)
h(-)f(h//Simplify)f(\(*)h(back)g(out)g(to)h(original)e(variable)g(*\))620
1195 y(2)87 b(2)261 b(2)162 1245 y(\(G)22 b(m)f(M)h(\(-2)f(h)g(-)h(Sqrt[a)42
b(+)22 b(h)43 b(-)22 b(2)g(h)f(q)h(+)f(q)h(])f(+)424 1344 y(2)87
b(2)261 b(2)174 b(2)293 1394 y(Sqrt[a)42 b(+)22 b(h)43 b(+)22
b(2)f(h)h(q)g(+)f(q)h(]\)\))f(/)h(\(a)43 b(h\))75 1494 y(Series[F,)20
b({q,)h(Infinity,)f(3}])206 1593 y(G)h(m)h(M)130 b(1)22 b(4)162
1643 y(-\(-----\))e(+)i(O[-])249 1693 y(2)174 b(q)228 1743
y(q)75 1793 y(Fpoint)21 b(=)g(-G)h(M)f(m/q^2;)75 1843 y(Table[{q,)f
(F/Fpoint})g(/.)h({a)h(->)f(1,)g(h)h(->)f(1/2,)g(q)h(->)f(2^k},)75
1892 y({k,)g(0,)h(8}]//N//TableFo)o(rm)162 1942 y(1.)109 b(0.630517)162
1992 y(2.)g(0.881546)162 2042 y(4.)g(0.969047)162 2092 y(8.)g(0.992204)162
2141 y(16.)87 b(0.998048)162 2191 y(32.)g(0.999512)162 2241
y(64.)g(0.999878)162 2291 y(128.)65 b(0.999969)162 2341 y(256.)g(0.999992)75
2470 y Fn(Exercise)17 b(4.)75 2579 y Fj(R)22 b(=)f(Sqrt[x^2)f(+)i(y^2)f(+)h
(q^2];)75 2629 y(F)g(=)f(-)h(G)f(rho)h(m)f(q)h(Integrate[1/R^3,)p
eop
%%Page: 132 132
132 131 bop 75 -103 a Fq(132)836 b Fm(In)n(v)n(erse)23 b(Square)h(La)n(w)f
(Problems)p 980 -85 896 2 v 249 49 a Fj({x,)f(-Infinity,)d(Infinity},)249
99 y({y,)j(-Infinity,Infin)o(ity})75 149 y(]//PowerExpand)75
249 y(-2)f(G)h(m)g(Pi)f(rho)75 384 y Fn(Exercise)c(5.)499 440
y Fh(R)534 422 y Fe(2)566 440 y Fq(=)c Fh(q)636 422 y Fe(2)666
440 y Fq(+)e Fh(r)734 422 y Fe(2)763 440 y Fg(\000)g Fq(2)p
Fh(q)r(r)d Fq(cos)f Fh(\036)13 b Fq(=)-8 b Fg(\))14 b Fh(R)7
b(dR)12 b Fq(=)h Fh(q)r(r)8 b Fq(sin)h Fh(\036)f(d\036:)75
524 y Fq(Use)15 b(the)h(ab)q(o)o(v)o(e)e(la)o(w)i(of)e(cosines)i(result)g(to)
f(eliminate)h(the)g(cos)7 b Fh(\036)15 b Fq(and)h(then)f(simplify)i(to)e
(obtain:)488 651 y Fh(F)k Fq(=)13 b Fg(\000)624 620 y Fq(3)p
Fh(GM)5 b(m)p 624 640 148 2 v 630 682 a Fq(8)p Fh(\031)r(q)703
669 y Fe(2)722 682 y Fh(a)746 669 y Fe(3)784 594 y Fd(Z)826
607 y Ff(a)807 688 y Fe(0)831 651 y Fh(r)k(dr)914 594 y Fd(Z)955
607 y Fe(2)p Ff(\031)937 688 y Fe(0)981 651 y Fh(d\022)1035
594 y Fd(Z)1077 607 y Ff(q)q Fe(+)p Ff(r)1058 688 y(q)q Fb(\000)p
Ff(r)1125 651 y Fh(dR)1196 620 y(R)1231 604 y Fe(2)1261 620
y Fq(+)h Fh(q)1328 604 y Fe(2)1358 620 y Fg(\000)g Fh(r)1425
604 y Fe(2)p 1196 640 249 2 v 1293 682 a Fh(R)1328 669 y Fe(2)1450
651 y Fh(:)75 776 y Fq(All)k(three)g(in)o(tegrals)f(are)g(elemen)o(tary:)19
b(the)13 b(in)o(tegral)h(o)o(v)o(er)e Fh(\022)j Fq(giv)o(es)e(2)p
Fh(\031)h Fq(and)g(the)f(in)o(tegral)h(o)o(v)o(er)e Fh(R)h
Fq(giv)o(es)75 832 y(4)p Fh(r)q Fq(.)75 909 y Fn(Exercise)j(6.)k
Fq(It)15 b(b)q(ears)f(no)h(resem)o(blance)g(\(ho)o(w)f(can)h(y)o(ou)f(b)q(e)h
(\\far)f(a)o(w)o(a)o(y")f(from)g(an)i(in\014nite)h(plane?\).)75
966 y(It)f(is)g(remark)m(able)g(that)f(the)g(result)h(is)g(indep)q(enden)o(t)
i(of)e Fh(q)r Fq(!)k(By)c(the)f(w)o(a)o(y)l(,)g(this)h(is)g(not)f(a)g
(di\016cult)j(hand)75 1022 y(calculation)g(if)e(y)o(ou)g(use)h(p)q(olar)f(co)
q(ordinates)h(on)f(the)g(plane.)p eop
%%Page: 133 133
133 132 bop 75 -103 a Fm(Solving)23 b(Di\013eren)n(tial)c(Equations)p
75 -85 902 2 v 831 w Fq(133)606 49 y Fn(PURPOSE)f(OF)g(THE)g(PR)o(OJECT)146
158 y Fq(This)h(pro)s(ject)g(is)g(designed)i(to)d(giv)o(e)i(studen)o(ts)f(a)f
(deep)q(er)j(insigh)o(t)f(in)o(to)f(p)q(o)o(w)o(er)f(series)i(metho)q(ds,)75
215 y(and)e(a)f(sense)h(of)e(their)i(great)f(applicabilit)o(y)l(.)29
b(Di\013eren)o(tial)19 b(equations)e(is)h(just)f(the)h(mec)o(hanism.)27
b(W)l(e)75 271 y(also)18 b(address)h(some)f(fundamen)o(tal)h(questions:)27
b(\\Ho)o(w)17 b(man)o(y)h(terms)g(are)g(necessary?")30 b(and,)19
b(\\Can)75 328 y(w)o(e)d(b)q(e)h(con\014den)o(t)g(of)f(the)g(resulting)h
(appro)o(ximation?")24 b(As)16 b(lesser)h(issues,)g(w)o(e)f(treat)f(an)h
(application)75 384 y(of)f(the)g(v)m(ariation-of-constan)o(ts)f(solution,)i
(in)g(the)f(t)o(ypical)h(case)f(when)g(the)h(in)o(tegral)f(cannot)g(b)q(e)h
(done)75 440 y(analytically)l(,)h(and)e(giv)o(e)h(a)e(\\blac)o(k)i(b)q(o)o
(x")f(in)o(tro)q(duction)h(to)f(the)g(use)g(of)g Fk(NDSolve)p
Fq(.)75 521 y Fn(Instructor)d(Note)p Fq(:)30 b(Some)11 b(of)f(the)i(issues)g
(treated)e(here)i(w)o(ere)f(earlier)h(raised)f(in)h(the)g Fl(T)m(aylor)f
(Series|)75 577 y(A)n(dvanc)n(e)n(d)k(Usage)j Fq(pro)s(ject.)577
722 y Fn(ANSWERS)f(F)o(OR)h(INSTR)o(UCTORS)75 831 y(Exercise)f(1.)126
958 y Fq(a\))22 b Fh(y)14 b Fq(=)f Fh(\013)e Fq(+)f Fh(\014)g(x)g
Fq(+)g Fh(x)501 942 y Fe(3)521 958 y Fh(=)p Fq(2)f Fg(\000)i
Fh(x)648 942 y Fe(5)668 958 y Fh(=)p Fq(4.)123 1065 y(b\))23
b Fh(y)14 b Fq(=)f Fh(\013)e Fq(+)f Fh(\014)g(x)g Fg(\000)g
Fq(sin)f Fh(x)p Fq(.)128 1172 y(c\))23 b(Starting)15 b(with)g
Fh(y)493 1155 y Fb(00)527 1172 y Fq(=)e Fh(x)601 1155 y Fe(2)631
1172 y Fg(\000)d Fh(x)702 1155 y Fe(6)722 1172 y Fh(=)p Fq(3!)f(+)h
Fh(x)861 1155 y Fe(10)899 1172 y Fh(=)p Fq(5!)f Fg(\000)h Fh(x)1038
1155 y Fe(14)1076 1172 y Fh(=)p Fq(7!)k(and)h(in)o(tegrating)h(t)o(wice,)f(w)
o(e)f(get:)589 1311 y Fh(y)h Fq(=)e Fh(\013)d Fq(+)h Fh(\014)r(x)f
Fq(+)873 1280 y Fh(x)899 1264 y Fe(4)p 873 1301 46 2 v 873
1342 a Fq(12)934 1311 y Fg(\000)996 1280 y Fh(x)1022 1264 y
Fe(8)p 985 1301 69 2 v 985 1342 a Fq(336)1068 1311 y(+)1143
1280 y Fh(x)1169 1264 y Fe(12)p 1118 1301 114 2 v 1118 1342
a Fq(15840)1247 1311 y Fg(\000)1345 1280 y Fh(x)1371 1264 y
Fe(16)p 1297 1301 160 2 v 1297 1342 a Fq(1209600)1462 1311
y Fh(:)75 1458 y Fn(Exercise)17 b(2.)126 1586 y Fq(a\))22 b(Answ)o(er)15
b(giv)o(en.)123 1692 y(b\))23 b Fh(y)14 b Fq(=)f Fh(\013)e
Fq(+)f Fh(\014)r(x)g Fg(\000)h Fh(\013x)523 1676 y Fe(2)543
1692 y Fh(=)p Fq(2)e Fg(\000)i Fh(\014)r(x)698 1676 y Fe(3)717
1692 y Fh(=)p Fq(6)f(+)g(\()p Fh(\013)g Fq(+)h(2\))p Fh(x)988
1676 y Fe(4)1007 1692 y Fh(=)p Fq(24)e(+)i Fh(:)d(:)g(:)n Fq(.)75
1820 y Fn(Exercise)17 b(3.)126 1947 y Fq(a\))22 b(Answ)o(er)15
b(giv)o(en.)123 2054 y(b\))23 b(It)18 b(follo)o(ws)h(from)e(the)i(recurrence)
g(form)o(ula)f(in)h(exercise)h(2a\).)29 b(Also,)19 b(on)f(the)h(left)f(side)i
(of)e(the)189 2111 y(di\013eren)o(tial)e(equation,)f(the)h(series)f(is)h
(di\013eren)o(tiated)g(t)o(wice.)128 2217 y(c\))23 b(F)l(ourteen)15
b(terms)f(are)h(su\016cien)o(t)h(to)f(get)g(visual)h(agreemen)o(t.)75
2345 y Fn(Exercise)h(4.)126 2472 y Fq(a\))22 b(One)e(needs)h
Fh(k)q(M)5 b(ax)20 b Fq(=)g(7)g(or)f(8)g(to)h(get)f(go)q(o)q(d)g(graphical)i
(agreemen)o(t.)33 b(F)l(or)19 b Fh(k)q(M)5 b(ax)20 b Fq(=)h(7,)f(the)189
2529 y(maxim)o(um)15 b(di\013erence)h(is)g(ab)q(out)f(.004)f(\(1\045)g
(error\).)123 2629 y(b\))23 b(Here)15 b(is)h(the)f(co)q(de)h(and)f
Fh(y)635 2636 y Ff(n)659 2629 y Fq(:)p eop
%%Page: 134 134
134 133 bop 75 -103 a Fq(134)829 b Fm(Solving)23 b(Di\013eren)n(tial)c
(Equations)p 973 -85 902 2 v 189 49 a Fj(f[x_])h(:=)44 b(Log[x)20
b(+)i(1])f(Cos[x];)189 99 y(kMax)g(=)g(7;)189 149 y(Pn)g(=)h(Normal)e(@)i
(Series[f[x],)d({x,)i(0,)h(kMax}];)189 199 y(Table[b[k])d(=)j
(Coefficient[Pn,)d(x,)i(k],)g({k,)g(0,)h(kMax}];)189 298 y(a[0])f(=)g(0;)h
(a[1])f(=)g(0;)189 348 y(Table[a[k+2])e(=)j(\(b[k])e(-)i
(a[k]\)/\(\(k+1\)\(k+2\))o(\),)d({k,)i(0,)g(kMax}];)189 398
y(yn)g(=)h(Sum[a[k])e(x^k,)h({k,)g(0,)g(kMax)g(+)h(2}])298
498 y(3)87 b(4)g(5)f(6)175 b(7)152 b(8)g(9)276 547 y(x)87 b(x)g(x)g(x)108
b(11)22 b(x)87 b(23)21 b(x)87 b(67)22 b(x)276 597 y(--)f(-)h(--)f(-)h(--)f(+)
h(---)f(+)g(-----)g(-)h(-----)f(+)g(-----)276 647 y(6)87 b(24)65
b(60)g(720)f(5040)87 b(20160)64 b(90720)128 794 y Fq(c\))23
b(Here)16 b(is)h(the)f(co)q(de)h(for)e(the)h(v)m(ariation-of-parameters)g
(solution)h(and)f(its)h(comparison)f(with)g Fh(y)1851 801 y
Ff(n)189 844 y Fq(at)e Fh(x)f Fq(=)g Fh(\031)r(=)p Fq(4)h(where)h(the)h
(maxim)o(um)f(error)f(o)q(ccurs.)189 966 y Fj(G[x_])20 b(:=)i(NIntegrate[)d
(f[t])i(Sin[x-t],)f({t,)h(0,)h(x}])189 1016 y(G[Pi/4])e(-)i(yn)f(/.)g(x)h(->)
f(Pi/4)g(//N)276 1115 y(-0.0000312442)123 1269 y Fq(d\))i(As)d(the)g(last)h
(line)g(sho)o(ws)f(the)h(maxim)o(um)f(error)f(is)i(ab)q(out)f(.000031.)33
b(The)21 b(relativ)o(e)g(error)e(is)189 1326 y(ab)q(out)14
b(0)p Fh(:)p Fq(000031)p Fh(=:)p Fq(06)9 b(=)k(0)p Fh(:)p Fq(00052.)18
b(This)d(compares)f(with)h(the)g(relativ)o(e)g(error)f(of)g(ab)q(out)g(.01)g
(for)189 1382 y(the)g(appro)o(ximation)g(of)g Fh(f)5 b Fq(\()p
Fh(x)p Fq(\))14 b(in)h(part)f(a\).)19 b(The)c(appro)o(ximate)f(solution)h(is)
f(considerably)i(more)189 1438 y(accurate)g(b)q(ecause)i(the)f
Fh(a)646 1445 y Ff(k)684 1438 y Fq(get)f(small)i(m)o(uc)o(h)e(faster)g(than)h
(the)g Fh(b)1339 1445 y Ff(k)1360 1438 y Fq(.)24 b(Also,)17
b(w)o(e)g(ha)o(v)o(e)f(t)o(w)o(o)f(more)189 1495 y(terms)f(in)i
Fh(y)390 1502 y Ff(n)414 1495 y Fq(.)75 1616 y Fn(Exercise)h(5.)75
1737 y Fj(Clear[yn,)j(Pn,)h(a];)75 1786 y(f[x_])g(:=)g(3)h(Cos[2x];)75
1836 y(a[0])f(=)h(2;)f(a[1])g(=)g(0;)75 1886 y(kMax)g(=)h(12;)75
1936 y(Pn)f(=)h(Series[f[x],)d({x,0,kMax}])620 1986 y(6)130
b(8)h(10)f(12)315 2035 y(2)g(4)65 b(4)22 b(x)87 b(2)22 b(x)87
b(4)21 b(x)109 b(4)21 b(x)218 b(13)162 2085 y(3)22 b(-)f(6)h(x)43
b(+)22 b(2)f(x)44 b(-)21 b(----)g(+)h(----)f(-)h(-----)e(+)i(------)e(+)i
(O[x])576 2135 y(15)87 b(105)g(4725)f(155925)75 2235 y(y)22
b(=)f(a[0])g(+)h(a[1])f(x)g(+)h(Sum[a[k])e(x^k,)h({k,)g(2,)h(kMax}])e(+)i
(O[x]^\(kMax)d(+)j(1\);)75 2285 y(yn)f(=)h(y)g(/.)f(Solve[D[y,)f({x,)h(2}])g
(+)h(y)f(==)h(Pn])f(//Normal//First)271 2334 y(2)152 b(4)h(6)174
b(8)196 b(10)g(12)249 2384 y(x)87 b(13)22 b(x)87 b(61)21 b(x)87
b(253)21 b(x)87 b(1021)21 b(x)109 b(4093)21 b(x)162 2434 y(2)h(+)f(--)h(-)f
(-----)g(+)h(-----)e(-)i(------)f(+)g(--------)f(-)i(---------)249
2484 y(2)109 b(24)130 b(720)87 b(40320)f(3628800)g(479001600)75
2629 y Fn(Exercise)17 b(6.)j Fq(See)c(Figure)f(79)g(for)f(the)i(result)f(of)g
(the)g(follo)o(wing)h(co)q(de:)p eop
%%Page: 135 135
135 134 bop 75 -103 a Fm(Solving)23 b(Di\013eren)n(tial)c(Equations)p
75 -85 902 2 v 831 w Fq(135)75 49 y Fj(f[x_])i(:=)g(Log[1)g(+)g(x])h(Cos[2x])
75 99 y(a)g(=)f(0;)h(b)f(=)h(Pi/4;)75 149 y(de)f(=)h(y''[x])f(+)g(y[x])g(==)g
(f[x];)75 199 y(ic1)g(=)h(y[0])f(==)g(0;)75 249 y(ic2)g(=)h(y'[0])f(==)g(0;)
75 298 y(soln)g(=)h(NDSolve[{de,)d(ic1,)i(ic2},)g(y,)g({x,)g(a,)h(b}])75
348 y({{y)f(->)h(InterpolatingFu)o(nctio)o(n[{0.)o(,)d(0.785398},)h(<>]}})75
398 y(Plot[Evaluate[y[x)o(])f(/.)i(soln],)g({x,)g(a,)h(b}])571
1060 y @beginspecial 0 @llx 0 @lly 282 @urx 174 @ury 1937 @rwi
@setspecial
%%BeginDocument: DiffEq.exercise6.eps
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		0.000000 def
/Mbottom	174.499451 def
/Mwidth		282.000000 def
/Mheight	174.499451 def
/Mfontsize 12 def
/Plain /Courier findfont def
0 Mbottom Mheight neg add 2 mul Mheight add translate
1 -1 scale
 %!
MathPictureStart
/Courier findfont 10  scalefont  setfont
0.02381 1.212609 0.014715 13.150866 [
[(0.2)] 0.26633 0.01472 0 2 Msboxa
[(0.4)] 0.50885 0.01472 0 2 Msboxa
[(0.6)] 0.75137 0.01472 0 2 Msboxa
[(0.8)] 0.9939 0.01472 0 2 Msboxa
[(0.01)] 0.01131 0.14622 1 0 Msboxa
[(0.02)] 0.01131 0.27773 1 0 Msboxa
[(0.03)] 0.01131 0.40924 1 0 Msboxa
[(0.04)] 0.01131 0.54075 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.26633 0.01472 moveto
0.26633 0.02097 lineto
stroke
grestore
[(0.2)] 0.26633 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.50885 0.01472 moveto
0.50885 0.02097 lineto
stroke
grestore
[(0.4)] 0.50885 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.75137 0.01472 moveto
0.75137 0.02097 lineto
stroke
grestore
[(0.6)] 0.75137 0.01472 0 2 Mshowa
gsave
0.002 setlinewidth
0.9939 0.01472 moveto
0.9939 0.02097 lineto
stroke
grestore
[(0.8)] 0.9939 0.01472 0 2 Mshowa
gsave
0.001 setlinewidth
0.07231 0.01472 moveto
0.07231 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.12082 0.01472 moveto
0.12082 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16932 0.01472 moveto
0.16932 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21783 0.01472 moveto
0.21783 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.31484 0.01472 moveto
0.31484 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.36334 0.01472 moveto
0.36334 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.41184 0.01472 moveto
0.41184 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.46035 0.01472 moveto
0.46035 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.55736 0.01472 moveto
0.55736 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.60586 0.01472 moveto
0.60586 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.65437 0.01472 moveto
0.65437 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.70287 0.01472 moveto
0.70287 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.79988 0.01472 moveto
0.79988 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84838 0.01472 moveto
0.84838 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.89689 0.01472 moveto
0.89689 0.01847 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.94539 0.01472 moveto
0.94539 0.01847 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.01472 moveto
1 0.01472 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0.14622 moveto
0.03006 0.14622 lineto
stroke
grestore
[(0.01)] 0.01131 0.14622 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.27773 moveto
0.03006 0.27773 lineto
stroke
grestore
[(0.02)] 0.01131 0.27773 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.40924 moveto
0.03006 0.40924 lineto
stroke
grestore
[(0.03)] 0.01131 0.40924 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.54075 moveto
0.03006 0.54075 lineto
stroke
grestore
[(0.04)] 0.01131 0.54075 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.04102 moveto
0.02756 0.04102 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.06732 moveto
0.02756 0.06732 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.09362 moveto
0.02756 0.09362 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.11992 moveto
0.02756 0.11992 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.17253 moveto
0.02756 0.17253 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.19883 moveto
0.02756 0.19883 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.22513 moveto
0.02756 0.22513 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.25143 moveto
0.02756 0.25143 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.30403 moveto
0.02756 0.30403 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.33034 moveto
0.02756 0.33034 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.35664 moveto
0.02756 0.35664 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.38294 moveto
0.02756 0.38294 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.43554 moveto
0.02756 0.43554 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.46184 moveto
0.02756 0.46184 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.48815 moveto
0.02756 0.48815 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.51445 moveto
0.02756 0.51445 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.56705 moveto
0.02756 0.56705 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.59335 moveto
0.02756 0.59335 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.02505 0.01472 lineto
0.02629 0.01472 lineto
0.02753 0.01472 lineto
0.02877 0.01472 lineto
0.03001 0.01472 lineto
0.03125 0.01472 lineto
0.03373 0.01472 lineto
0.03621 0.01472 lineto
0.03869 0.01472 lineto
0.04117 0.01473 lineto
0.04365 0.01473 lineto
0.04861 0.01474 lineto
0.05109 0.01475 lineto
0.05357 0.01475 lineto
0.05853 0.01477 lineto
0.06349 0.0148 lineto
0.07341 0.01487 lineto
0.07837 0.01492 lineto
0.08333 0.01498 lineto
0.09325 0.01513 lineto
0.10317 0.01533 lineto
0.1131 0.01558 lineto
0.12302 0.01589 lineto
0.14286 0.01673 lineto
0.1627 0.0179 lineto
0.18254 0.01943 lineto
0.20238 0.02138 lineto
0.22222 0.02379 lineto
0.2619 0.03016 lineto
0.30159 0.03885 lineto
0.34127 0.05011 lineto
0.38095 0.06416 lineto
0.42063 0.08118 lineto
0.46032 0.10129 lineto
0.5 0.12456 lineto
0.53968 0.151 lineto
0.57937 0.18059 lineto
0.61905 0.21322 lineto
0.65873 0.24877 lineto
0.69841 0.28702 lineto
0.7381 0.32774 lineto
0.77778 0.37061 lineto
0.81746 0.41528 lineto
0.85714 0.46136 lineto
0.89683 0.50839 lineto
0.93651 0.55589 lineto
0.97619 0.60332 lineto
stroke
grestore
grestore
grestore
MathPictureEnd%%PSTrailer
end

%%EndDocument
 @endspecial 547 1147 a Fi(Fig)p Fq(.)15 b(79.)k(Numerical)e(solution)f(for)f
(Exercise)h(6.)p eop
%%Page: 136 136
136 135 bop 75 -103 a Fq(136)995 b Fm(Line)22 b(In)n(tegrals)h(and)h(W)-6
b(ork)p 1139 -85 736 2 v 606 49 a Fn(PURPOSE)18 b(OF)g(THE)g(PR)o(OJECT)146
162 y Fq(This)i(pro)s(ject)e(con)o(tin)o(ues)i(the)g(theme)g(in)o(tro)q
(duced)g(in)h(t)o(w)o(o)d(earlier)i(pro)s(jects:)28 b Fl(Work)21
b(A)o(long)e(an)75 218 y(A)o(r)n(c)h Fq(and)e Fl(V)m(e)n(ctors)f(and)i(Work)5
b Fq(.)28 b(Studen)o(ts)18 b(no)o(w)g(ha)o(v)o(e)f(enough)h(mathematical)g
(to)q(ols)g(to)f(bring)i(this)75 275 y(sub)s(ject)j(to)f(a)g(logical)i
(conclusion,)i(ha)o(ving)d(the)g(missing)h(piece,)h(\\indep)q(endence)h(of)d
(path.")39 b(W)l(e)75 331 y(reinforce)15 b(an)f(imp)q(ortan)o(t)f
(mathematical)i(concept)f(that)g(man)o(y)f(studen)o(ts)h(ha)o(v)o(e)g
(di\016cultly)i(with:)k(the)75 388 y(idea)h(of)e(summing)i(\(in)o
(tegrating\))e(along)h(a)g(curv)o(e)g(in)g(the)h(con)o(text)e(of)g(studying)i
(indep)q(endence)i(of)75 444 y(path.)d(W)l(e)15 b(also)g(in)o(tro)q(duce)h(a)
f(bit)h(of)f(\\messiness")g(as)g(often)g(o)q(ccurs)g(in)h(real)g
(applications.)577 599 y Fn(ANSWERS)h(F)o(OR)h(INSTR)o(UCTORS)75
712 y(Exercise)f(1)126 847 y Fq(a\))22 b(W)l(ork)14 b(=)i(2)p
Fh(a)10 b Fq(+)g Fh(b)p Fq(,)k(indep)q(endenc)q(e)k(of)d(path.)123
961 y(b\))23 b(W)l(ork)14 b(=)i(\(3)9 b Fg(\000)i Fh(e)479
944 y Fb(\000)p Fe(1)526 961 y Fq(\))p Fh(a)h Fq(=)h(2)p Fh(:)p
Fq(63212)p Fh(a)p Fq(,)g(indep)q(endence)19 b(of)14 b(path)128
1075 y(c\))23 b(Answ)o(er)15 b(giv)o(en.)123 1189 y(d\))23
b(Same)17 b(as)g(in)h(\(b\).)25 b(F)l(orce)17 b(do)q(es)g(not)g(satisfy)g
(indep)q(endence)j(of)d(path)g(test;)g(but)g(on)g(\\up")h(part)189
1245 y Fh(cx)12 b Fq(=)h(0)i(and)g(on)g(\\o)o(v)o(er")f(part)h
Fh(y)750 1229 y Fb(0)774 1245 y Fq(=)e(0,)h(v)o(oiding)i(the)g(en)o(tire)f
(exp)q(onen)o(tial)i(part.)75 1398 y Fn(Exercise)g(2)23 b Fq(F)l(or)15
b(the)g(parab)q(olic)h(paths,)f(and)g(for)g(force)g Fh(F)k
Fq(=)13 b(\()p Fg(\000)p Fh(a;)8 b Fg(\000)p Fh(ae)1368 1381
y Fb(\000)p Ff(y)q Fe(+)p Ff(cx)1478 1398 y Fq(\))15 b(with)h
Fh(c)c Fq(=)h(0)p Fh(:)p Fq(1:)126 1532 y(a\))22 b(Set)15 b
Fh(y)r Fq(\(2\))d(=)h(1)h(and)i(solv)o(e)f(for)g(the)g(giv)o(en)h
Fh(\014)r Fq(.)123 1647 y(b\))23 b(Set)15 b Fh(y)291 1630 y
Fb(0)302 1647 y Fq(\(2\))d(=)h(0)i(and)g(get)g Fh(\013)e Fq(=)g(1)p
Fh(=)p Fq(4.)128 1761 y(c\))23 b(The)18 b(larger)g(is)h Fh(\013)p
Fq(,)g(the)f(further)g(`north')f(the)h(path)g(go)q(es;)h(and)g(the)f(smaller)
h(the)f(W)l(ork.)28 b(This)189 1817 y(is)19 b(due)h(to)e(the)h(in\015uence)j
(of)c(the)i Fh(e)822 1801 y Fb(\000)p Ff(y)889 1817 y Fq(term)e(in)i(the)f
(force)g(whic)o(h)h(o)o(v)o(ercomes)e(the)i(arclength)189 1874
y(p)q(enalt)o(y)l(.)123 1988 y(d\))j(The)15 b Fh(\013)e Fq(=)g(1)p
Fh(=)p Fq(4)h(path)h(is)h(b)q(est)f(with)h(W)l(ork)f(=)g(2.66774a.)128
2102 y(e\))23 b(The)15 b(path)g(go)q(es)g(`south')f(and)i(the)f(w)o(ork)f
(increases.)75 2254 y Fn(Exercise)j(3)23 b Fq(F)l(or)15 b(the)g(circuitous)h
(path)f(from)g(\(0,0\))e(to)i(\(1,2\).)126 2389 y(a\))22 b(Arc)15
b(length)h(is)f(6.20849.)123 2503 y(b\))23 b(W)l(ork)14 b(=)i(2.72316a,)c
(sligh)o(tly)17 b(bigger)e(than)g(the)g(parab)q(olic)i(paths)e(that)f(cannot)
h(go)g(`north'.)128 2617 y(c\))23 b(Same)15 b(old)h(indep)q(endence)i(of)d
(path)g(result.)p eop
%%Page: 137 137
137 136 bop 75 -103 a Fm(Line)22 b(In)n(tegrals)h(and)h(W)-6
b(ork)p 75 -85 736 2 v 997 w Fq(137)757 49 y Fn(AFTER)17 b(THE)h(LAB)75
152 y(Exercise)f(4)23 b Fq(Re\015ections.)126 266 y(a\))f Fh(c)12
b(>)h Fq(0)i(will)i(increase)f(the)f(W)l(ork)g(due)g(to)g Fh(e)928
250 y Ff(cx)981 266 y Fq(in)h(the)f(force.)123 360 y(b\))23
b(The)15 b(\\up,)g(then)h(o)o(v)o(er")e(path)h(is)g(optimal.)128
454 y(c\))23 b(Not)13 b(practical)j(since)f(y)o(ou)f(cannot)g(turn)h(the)f
(sharp)h(corner.)k(Plus)c(it)g(is)g(a)f(considerably)i(longer)189
511 y(path)f(that)f(others,)h(should)h(this)f(matter.)123 604
y(d\))23 b(Probably)15 b(something)h(lik)o(e)g(the)f(parab)q(olic)i(path)e
(with)g Fh(\013)e Fq(=)g(1)p Fh(=)p Fq(4.)128 698 y(e\))23
b(T)l(ry)18 b(to)g(explain,)i(e.g.,)e(that)g(on)g(the)h(lo)q(op)g(in)g(this)g
(path)f(the)h(W)l(ork)f(adds)g(up)h(to)f(zero,)h(since)189
755 y(`half)t(')13 b(of)h(the)g(time)g(it)h(is)f(negativ)o(e)g(\(resisting)h
(the)f(b)q(oat\))f(and)i(`half)t(')e(of)g(the)i(time)f(it)g(is)h(p)q(ositiv)o
(e)189 811 y(\(aiding)h(the)f(b)q(oat\).)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
