head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2011.11.21.16.52.12;	author john;	state Exp;
branches;
next	1.3;

1.3
date	2011.11.21.16.51.58;	author john;	state Exp;
branches;
next	1.2;

1.2
date	97.11.14.20.02.37;	author john;	state Exp;
branches;
next	1.1;

1.1
date	97.10.22.17.07.04;	author john;	state Exp;
branches;
next	;


desc
@Tetrahedral includes
@


1.4
log
@copyright
@
text
@/* Copyright (c) Colorado School of Mines, 2011.*/
/* All rights reserved.                       */

/* included materials for Tetrahedral model building and ray tracing */

#ifndef CWP_TETRA_H
#define CWP_TETRA_H

#include "par.h"

#define UseKiloMeter
#define InfDistance 1000
#define InfTime 10000 /* ms */

struct TTAB {
      unsigned short t;  /* real t=t/SHRT_MAX*InfTime */
      unsigned char cs;  /* real cs=cs/UCHAR_MAX */
      unsigned char r;   /* real r=r/UCHAR_MAX*InfDistance */
};

struct FACET {
      int ip[3];      /* indices for 3 control points of this facet */
      float cn[3];    /* centered normal determined by (x2-x1)x(x1-x0) */
      int itetra[2];  /* two tetra indices on both sides */
      float area;     /* the area of this facet */
      float ct[10];   /* curved tile coefficients */
                      /* ct[0] x^2 + ct[1] xy + ct[2] xz + ct[3] yz +
                         ct[4] y^2 + ct[5] z^2 + cn[0] x + cn[1] y +
                         cn[2] z + ct[6] */ 
};

struct TETRA {
      int ip[4];       /* 4 control points */
      int ifacet[4];   /* 4 facets */
      int ireg;        /* region of this tetra */
      float gs[3];     /* gradient of sloth */
      float v;         /* volume */
};

struct POINT {
      float x[3];
      float s;
      float n[3];
};

/* Tetrahedra related subroutines */
float tetra_volume(float x0[3], float x1[3], float x2[3], float x3[3]);
float area3d( float x0[3], float x1[3], float x2[3]); 

#endif /* end TETRA_H */
@


1.3
log
@21 Nov
@
text
@d1 3
@


1.2
log
@pre-14 Nov 1997 version
@
text
@d9 1
a9 1
#define InfDistance 10
d20 1
a20 1
      float cn[3];    /* centered normal	*/
d23 4
@


1.1
log
@Initial revision
@
text
@d1 6
a6 2
#ifdef TETRA_H
#define TETRA_H
d10 1
a10 4
#define InfTime 10000 /*ms*/

#define InfByte1 255
#define InfByte2 65535
d13 3
a15 3
      unsigned short t;  /*real t=t/InfByte2*InfTime*/
      unsigned char cs;  /*real cs=cs/InfByte1*/
      unsigned char r;   /*real r=r/InfByte1*InfDistance*/
d19 4
a22 4
      int ip[3];      /*indices for 3 control points of this facet*/
      float cn[3];    /*centered normal}*/
      int itetra[2];  /*two tetra indices on both sides*/
      float area;     /*the area of this facet*/
d26 5
a30 5
      int ip[4];       /*4 control points*/
      int ifacet[4];   /*4 facets*/
      int ireg;        /*region of this tetra*/
      float gs[3];     /*gradient of sloth*/
      float v;         /*volumn*/
d39 3
a41 9
float v(float x0[3],
        float x1[3],
        float x2[3],
        float x3[3]);

float area3d(
float x0[3],   /*first point*/
float x1[3],   /*second point*/
float x2[3]);  /*third point*/
@
