head	1.11;
access;
symbols;
locks; strict;
comment	@ * @;


1.11
date	2011.11.16.16.42.16;	author john;	state Exp;
branches;
next	1.10;

1.10
date	2011.10.20.21.08.50;	author john;	state Exp;
branches;
next	1.9;

1.9
date	2007.09.20.21.02.09;	author john;	state Exp;
branches;
next	1.8;

1.8
date	2003.08.19.21.24.44;	author john;	state Exp;
branches;
next	1.7;

1.7
date	2001.11.12.18.03.40;	author john;	state Exp;
branches;
next	1.6;

1.6
date	2001.07.27.19.59.43;	author john;	state Exp;
branches;
next	1.5;

1.5
date	97.07.16.22.24.39;	author john;	state Exp;
branches;
next	1.4;

1.4
date	96.09.06.17.56.49;	author john;	state Exp;
branches;
next	1.3;

1.3
date	95.06.20.11.10.19;	author john;	state Exp;
branches;
next	1.2;

1.2
date	95.04.26.14.09.33;	author john;	state Exp;
branches;
next	1.1;

1.1
date	95.04.25.15.15.45;	author john;	state Exp;
branches;
next	;


desc
@convert an array of "z" values into x y z format.
@


1.11
log
@checkpar() added
@
text
@/* Copyright (c) Colorado School of Mines, 2011.*/
/* All rights reserved.                       */

/* Z2XYZ: $Revision: 1.9 $ ; $Date: 2007/09/20 21:02:09 $	*/

#include "par.h"

/*********************** self documentation **********************/
char *sdoc[] = {
" 								",
" Z2XYZ - convert binary floats representing Z-values to ascii	",
" 	   form in X Y Z ordered triples			",
" 								",
"    z2xyz <stdin >stdout 					",
" 								",
" Required parameters:						",
" n1=		number of floats in 1st (fast) dimension	",
" 								",
" Optional parameters:						",
" 								",
" outpar=/dev/tty		 output parameter file		",
" 								",
" Notes: This program is useful for converting panels of float	",
" data (representing evenly spaced z values) to the x y z	",
" ordered triples required for certain 3D plotting packages.	",
" 								",
" Example of NXplot3d usage on a NeXT:				",
" suplane | sufilter | z2xyz n1=64 > junk.ascii			",
" 								",
" Now open junk.ascii as a mesh data file with NXplot3d.	",
" (NXplot3d is a NeXTStep-only utility for viewing 3d data sets	",
" 								",
NULL};

/* Credits:
 *	CWP: John Stockwell based on "b2a" by Jack Cohen
 */

/**************** end self doc ***********************************/


int
main(int argc, char **argv)
{
	char *outpar;		/* name of file holding output parfile	*/
	FILE *outparfp;		/* ... its file pointer			*/
	int n1;			/* number of floats per line		*/
	size_t n1read;		/* number of items read			*/
	size_t n2 = 0;		/* number of lines in input file 	*/
	float *z;		/* binary floats			*/

	/* Hook up getpar */
	initargs(argc, argv);
	requestdoc(1);

	/* Get parameters and do set up */
	if (!getparstring("outpar", &outpar))	outpar = "/dev/tty" ;
	outparfp = efopen(outpar, "w");
	MUSTGETPARINT("n1",&n1);

        checkpars();

	z = ealloc1float(n1);

	/* Loop over data converting to ascii */
	while ((n1read = efread(z, FSIZE, n1, stdin))) {
		register int i1;

		if (n1read != n1)
			err("out of data in forming line #%d", n2+1);
		for (i1 = 0; i1 < n1; ++i1)
/* z2xyz.c:70: warning: format ‘%d’ expects type ‘int’, but argument 2 has type ‘size_t’ */
/* 			printf("%d %d %11.4e \n",n2,i1,z[i1]); */
#if __WORDSIZE == 64
			printf("%lu %d %11.4e \n",n2,i1,z[i1]);
#else
			printf("%u %d %11.4e \n",n2,i1,z[i1]);
#endif
		++n2;
	}


	/* Make par file */
/* z2xyz.c:76: warning: format ‘%d’ expects type ‘int’, but argument 3 has type ‘size_t’ */
/* 	fprintf(outparfp, "n2=%d\n", n2); */
#if __WORDSIZE == 64
	fprintf(outparfp, "n2=%lu\n", n2);
#else
	fprintf(outparfp, "n2=%u\n", n2);
#endif

	return(CWP_Exit());
}
@


1.10
log
@added copyright statement
@
text
@d61 2
@


1.9
log
@John Gravley's changes to allow for 64 bit
@
text
@d1 4
a4 1
/* Z2XYZ: $Revision: 1.8 $ ; $Date: 2003/08/19 21:24:44 $	*/
@


1.8
log
@19 Aug 2003
@
text
@d1 1
a1 1
/* Z2XYZ: $Revision: 1.7 $ ; $Date: 2001/11/12 18:03:40 $	*/
d67 7
a73 1
			printf("%d %d %11.4e \n",n2,i1,z[i1]);
d79 7
a85 2
	fprintf(outparfp, "n2=%d\n", n2);

@


1.7
log
@changed /dev/null /dev/tty
@
text
@d1 1
a1 1
/* Z2XYZ: $Revision: 1.6 $ ; $Date: 2001/07/27 19:59:43 $	*/
d76 1
a76 1
	return EXIT_SUCCESS;
@


1.6
log
@27 July revision
@
text
@d1 1
a1 1
/* Z2XYZ: $Revision: 1.5 $ ; $Date: 1997/07/16 22:24:39 $	*/
d18 1
a18 1
" outpar=/dev/null		 output parameter file		",
d54 1
a54 1
	if (!getparstring("outpar", &outpar))	outpar = "/dev/null" ;
@


1.5
log
@changed int to size_t at Stew Levin's suggestion
@
text
@d1 1
a1 1
/* Z2XYZ: $Revision: 1.4 $ ; $Date: 1996/09/06 17:56:49 $	*/
d8 1
a8 1
" z2xyz - convert binary floats representing Z-values to ascii	",
d11 1
a11 1
" z2xyz <stdin >stdout 						",
d18 1
a18 1
" outpar=/dev/tty	 output parameter file			",
d54 1
a54 1
	if (!getparstring("outpar", &outpar))	outpar = "/dev/tty" ;
@


1.4
log
@quieted -Wall messages
@
text
@d1 1
a1 1
/* Z2XYZ: $Revision: 1.3 $ ; $Date: 1995/06/20 11:10:19 $	*/
d45 2
a46 2
	int n1read;		/* number of items read			*/
	int n2 = 0;		/* number of lines in input file 	*/
@


1.3
log
@*** empty log message ***
@
text
@d1 1
a1 1
/* Z2XYZ: $Revision: 1.2 $ ; $Date: 95/04/26 14:09:33 $	*/
d39 1
d61 1
a61 1
	while (n1read = efread(z, FSIZE, n1, stdin)) {
@


1.2
log
@cosmetic
.,
@
text
@d1 1
a1 1
/* Z2XYZ: $Revision: 1.1 $ ; $Date: 95/04/25 15:15:45 $	*/
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* Z2XYZ: $Revision: 1.8 $ ; $Date: 94/08/25 15:00:32 $	*/
d9 1
a9 1
" 	   to X Y Z ordered triples				",
d21 2
a22 2
"   data to the x y z  ordered triples required for certain     ",
"   3D plotting packages.					",
d27 2
a28 1
" Now open junk.ascii as a mesh data file with NXplot3d		",
@
