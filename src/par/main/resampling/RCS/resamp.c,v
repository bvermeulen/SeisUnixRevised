head	1.11;
access;
symbols;
locks; strict;
comment	@ * @;


1.11
date	2011.11.16.16.42.16;	author john;	state Exp;
branches;
next	1.10;

1.10
date	2011.10.20.21.08.50;	author john;	state Exp;
branches;
next	1.9;

1.9
date	2009.11.30.15.37.50;	author john;	state Exp;
branches;
next	1.8;

1.8
date	2003.08.19.21.24.44;	author john;	state Exp;
branches;
next	1.7;

1.7
date	97.07.16.22.07.23;	author john;	state Exp;
branches;
next	1.6;

1.6
date	96.04.26.21.20.35;	author jkc;	state Exp;
branches;
next	1.5;

1.5
date	95.09.27.20.38.59;	author john;	state Exp;
branches;
next	1.4;

1.4
date	95.04.25.15.15.14;	author john;	state Exp;
branches;
next	1.3;

1.3
date	92.10.28.15.49.16;	author john;	state Exp;
branches;
next	1.2;

1.2
date	92.10.28.14.36.41;	author john;	state Exp;
branches;
next	1.1;

1.1
date	92.10.28.14.32.16;	author john;	state Exp;
branches;
next	;


desc
@resamp.c
@


1.11
log
@checkpar() added
@
text
@/* Copyright (c) Colorado School of Mines, 2011.*/
/* All rights reserved.                       */

/* RESAMP: $Revision: 1.9 $ ; $Date: 2009/11/30 15:37:50 $	*/

#include "par.h"

/*********************** self documentation **********************/
char *sdoc[] = {
" 									",
" RESAMP - RESAMPle the 1st dimension of a 2-dimensional function f(x1,x2)",
" 									",
" resamp <infile >outfile [optional parameters]				",
" 									",
" Required Parameters:							",
" 									",
" Optional Parameters:							",
" n1=all                 number of samples in 1st (fast) dimension	",
" n2=all                 number of samples in 2nd (slow) dimension	",
" d1=1.0                 sampling interval in 1st dimension		",
" f1=d1                  first sample in 1st dimension			",
" n1r=n1                 number of samples in 1st dimension after resampling",
" d1r=d1                 sampling interval in 1st dimension after resampling",
" f1r=f1                 first sample in 1st dimension after resampling	",
" 									",
" NOTE:  resamp currently performs NO ANTI-ALIAS FILTERING before resampling!",
" Caveat: this program resamples data that are oscillatory in the fast	",
"    dimension only, such as seismic data with no SU headers. To resample",
"    other 2d data, such as velocity profiles, use \"unisam\" or \"unisam2",
" 									",
NULL};
/**************** end self doc ********************************/

/*
 * AUTHOR:  Dave Hale, Colorado School of Mines, 07/07/89
 */

int
main (int argc, char **argv)
{
	int n1,n2,i2,n1r,i1r;
	float d1,f1,d1r,f1r,x1r,*p,*pr,*xr;
	FILE *infp=stdin,*outfp=stdout;

	/* hook up getpar */
	initargs(argc,argv);
	requestdoc(1);

	/* get parameters */
	if (!getparint("n1",&n1)) {
		if (efseeko(infp,(off_t) 0,SEEK_END)==-1)
			err("must specify n1!\n");
		n1 = (int)(eftello(infp)/sizeof(float));
		efseeko(infp,(off_t) 0,SEEK_SET);
	}
	if (!getparint("n2",&n2)) n2 = -1;
	if (!getparfloat("d1",&d1)) d1 = 1.0;
	if (!getparfloat("f1",&f1)) f1 = d1;
	if (!getparint("n1r",&n1r)) n1r = n1;
	if (!getparfloat("d1r",&d1r)) d1r = d1;
	if (!getparfloat("f1r",&f1r)) f1r = f1;

        checkpars();

	/* allocate space */
	p = ealloc1float(n1);
	pr = ealloc1float(n1r);
	xr = ealloc1float(n1r);

	/* compute output 1st dimension values */
	for (i1r=0,x1r=f1r; i1r<n1r; i1r++,x1r+=d1r)
		xr[i1r] = x1r;

	/* loop over 2nd dimension */
	for (i2=0; i2<n2 || n2<0; i2++) {

		/* read input data */
		if (efread(p,sizeof(float),n1,infp)!=n1) break;

		/* resample */
		ints8r(n1,d1,f1,p,0.0,0.0,n1r,xr,pr);

		/* write input data */
		efwrite(pr,sizeof(float),n1r,outfp);
	}
	return(CWP_Exit());
}
@


1.10
log
@added copyright statement
@
text
@d63 2
@


1.9
log
@added clarification to the selfdoc
@
text
@d1 4
a4 1
/* RESAMP: $Revision: 1.8 $ ; $Date: 2003/08/19 21:24:44 $	*/
@


1.8
log
@19 Aug 2003
@
text
@d1 1
a1 1
/* RESAMP: $Revision: 1.7 $ ; $Date: 1997/07/16 22:07:23 $	*/
d24 3
@


1.7
log
@explicit cast of output from eftell to (int)
@
text
@d1 1
a1 1
/* RESAMP: $Revision: 1.6 $ ; $Date: 1996/04/26 21:20:35 $	*/
d45 1
a45 1
		if (fseek(infp,0L,2)==-1)
d47 2
a48 2
		n1 = (int)(eftell(infp)/sizeof(float));
		efseek(infp,0L,0);
d78 1
a78 1
	return EXIT_SUCCESS;
@


1.6
log
@Had K&R main declaration and unused i1 (Toralf's lint)
@
text
@d1 1
a1 1
/* RESAMP: $Revision: 1.5 $ ; $Date: 1995/09/27 20:38:59 $	*/
d47 1
a47 1
		n1 = eftell(infp)/sizeof(float);
@


1.5
log
@added   return EXIT_SUCCESS;
@
text
@d1 1
a1 1
/* RESAMP: $Revision: 1.4 $ ; $Date: 1995/04/25 15:15:14 $	*/
d32 2
a33 2
main (argc,argv)
int argc; char **argv;
d35 1
a35 1
	int n1,n2,i1,i2,n1r,i1r;
@


1.4
log
@fixed RCS label
@
text
@d1 1
a1 1
/* RESAMP: $Revision: 1.8 $ ; $Date: 94/08/25 15:00:32 $	*/
d78 1
@


1.3
log
@begin selfdoc end selfdoc lines added
@
text
@d1 1
a1 1
/* resamp - resample the 1st dimension of a 2d function f(x1,x2) */
@


1.2
log
@new selfdoc installed
@
text
@d5 1
d26 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 20
char *sdoc =
"RESAMP - RESAMPle the 1st dimension of a 2-dimensional function f(x1,x2) \n"
"\n"
"resamp <infile >outfile [optional parameters]\n"
"\n"
"Required Parameters:\n"
"\n"
"Optional Parameters:\n"
"n1=all                 number of samples in 1st (fast) dimension\n"
"n2=all                 number of samples in 2nd (slow) dimension\n"
"d1=1.0                 sampling interval in 1st dimension\n"
"f1=d1                  first sample in 1st dimension\n"
"n1r=n1                 number of samples in 1st dimension after resampling\n"
"d1r=d1                 sampling interval in 1st dimension after resampling\n"
"f1r=f1                 first sample in 1st dimension after resampling\n"
"\n"
"NOTE:  resamp currently performs NO ANTI-ALIAS FILTERING before resampling!\n"
"\n"
"AUTHOR:  Dave Hale, Colorado School of Mines, 07/07/89\n"
"\n";
d5 25
d39 1
a39 1
	askdoc(1);
@
