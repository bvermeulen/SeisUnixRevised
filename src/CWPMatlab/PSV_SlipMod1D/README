 PSV_SlipMod1D: Matt Haney 1/15/05

 these are codes designed to model coupled P-SV plane waves 
 in a generally heterogeneous isotropic medium with randomly 
 placed linear slip fractures and either free or absorbing 
 boundary conditions. this code may be useful for full-waveform 
 synthetic seismogram modeling and AVO studies.

 to run this code, copy the 4 files 

 modelbuilder.m
 input.txt
 fractur.m
 wavpsv1dv10.m

 into the same directory where you can run Matlab

 at the command line enter these commands in succession:

 >> modelbuilder
 >> fractur
 >> wavpsv1dv10

 >> the last command should give some output like

 >> wavpsv1dv10
 stability criterion =  0.465547
 simulation is stable - everything okay
 time loop begun
 time loop 25% done
 time loop 50% done
 time loop 75% done
 time loop 100% done
 total runtime 2.41517 minutes

 the example provided here is a single fracture in a 
 homogeneous background medium with both ends having 
 free surface boundary conditions

 five dummy files will be generated by the above sequence of 
 commands: fracas.txt, grid.txt, rho.txt, alpha.txt, beta.txt, 
           uinit.txt, utinit.txt, winit.txt, wtinit.txt
 just leave these alone, they get rewritten for every new 
 command sequence

 At the end of the simulation, there are several data arrays.
 As for the calculated fields:
 The horizontal displacement, velocity, and acceleration 
 are stored in the arrays usv, utsv, and uttsv respectively.

 The vertical displacement, velocity, and acceleration 
 are stored in the arrays wsv, wtsv, and wttsv respectively.

 The xz stress component, zz stress component, and xx stress component
 are stored in the arrays sxzsv, szzsv, and sxxsv respectively.

 The divergence and curl are stored in the arrays dvg and crl.

 Each of the above arrays have all spatial locations at each 
 sample time (assigned in the file inputs.txt - see below for details).
 Their dimension is therefore (number of gridpoints)x(number of sample times).

 The input file "input.txt" describes the different controls the user 
 can exert on the code. The commenting on the right describes the inputs.

 More to come, MMH 1/15/05

