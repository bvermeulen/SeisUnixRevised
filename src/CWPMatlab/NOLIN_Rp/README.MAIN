
NOLIN_Rp (NOnLinear Inversion of Rp reflection coefficients) package 
--------------------------------------------------------------------
--------------------------------------------------------------------

is to perform a high-dimensional large-scale nonlinear inversion of
exact PP- PS1- and PS2-wave reflection coefficients (as functions of
incidence angle and azimuth) for parameters of isotropic or
anisotropic media. In ALL cases, PS1- and PS2-wawe reflection
coefficients correspond to the FASTER (PS1) and SLOWER (PS2) reflected
PS-waves, respectivelly. Only subcritical reflections are considered,
so the input data should be free of overcritical reflections (i.e.,
complex reflection coefficients). NOLIN_Rp package enables to recover
sets of models corresponding to global and local minima of L2 misfit
function (misfit between the predicted and measured data in the
least-square sense). The models corresponding to the global minimum of
the misfit function then represent a set of best data-fitting models =
the result of the inversion. Statistics can be run on this set to
evaluate mean values and standard deviations of the recovered medium
parameters.  The NOLIN_Rp package also enables to partially map the
topology of the global/local minimum, which further improves the error
analysis. However, a complete mapping of the topology of the global
minimum is usually impossible due to high computational time required.

In current version, the halfspaces can be isotropic, HTI and
orthorhombic. The package can be extended for VTI and monoclinic media
as well. If the incidence halfspace is HTI [or orthorhombic], the
direction of the horizontal symmetry axis [or one of the two vertical
symmetry planes] of the HTI [orthorhombic] halfspace defines the zero
azimuth. The azimuth of the horizontal symmetry axes [vertical
symmetry plane] of the reflecting HTI [orthorhombic] halfspace is to
be recovered during the inversion (so-called misalignment angle kappa
below). 

All programs are written in Matlab, however, they can be compiled into
executables or translated to C, see MAKEXE subdirectory for
details. Finally, the subdirectory FILE includes examples of
input/output files.

The inversion takes place in two main phases: 

PHASE1: MisfitSort.m 
        ------------ 
	The code is a Monte-Carlo-based generator of a pool of
	starting models (PSM) for PHASE2. First, fast evaluations of
	data-misfit functions are carried out for many (usually about 3000) 
	initial models  over the model space. The models are chosen
	randomly, however, in such a way that
	they sample each  model dimension reasonably dense, taking also
	into account existing a priori information; although the
	individual model dimensions are relatively well sampled, not all
	possible combinations of the medium parameters from each
	dimension are evaluated. (Note that for large-scale problems, it is
	practically impossible - time consuming - to sample the model
	space thoroughly and systematically on Pentium III processor).
	Then, the initial models are sorted, starting from the
	best data-fitting models to the worst => PSM. "Valleys" and
	"hills" of the misfit function over the model space are thus
	roughly localized and more detail search of the valleys
	topography can be then performed.

PHASE2: NonLinGrad_pri.m and NonLinGrad_sec.m 
        --------------------------------------
	In PHASE2, NonLinGrad_*.m  programs use the N first models from PSM
	(usually 280-300 first models) as initial models - the points at
	the model space - from which they start a descent into a
	closest local minimum during which the initial models from PSM
	are refined. The programs are based on the nonlinear
	least-square (gradient) algorithm "lsqnonlin" introduced in Matlab (see
	many references in Matlab on-line manuals on: 
	http://www.mathworks.com/access/helpdesk/help/toolbox/optim/optim.shtml).  
        PHASE2 is significantly slower than PHASE1. It can   
	be usually speed up by performing the descent in two steps. 
	In the primary step (NonLinGrad_pri.m), fast descent is
	achieved by setting up "low-resolution" stopping criterion (see
	the programs). In the secondary step (NonLinGrad_sec.m), only
	those models are further used that descended "sufficiently
	deep", and they are further refined using "high resolution"
	stopping criterion. 


Several AUXILIARY routines are used to evaluate the inverted models.

	Sort.m
	------
	allows to create a large set of
	PSM models by merging many smaller PSM sets generated by
	different computers (usually simultaneously generated) = faster
	generation of denser grid of starting models. 

        ModelMisfit.m 
        -------------
	evaluates how a particular model inverted in PHASE2
	fits the data. The routine is used to establish "sufficient
	depth" for the models from PHASE2 (after primary step), and to determine
	whether a particular model from PHASE2 (after secondary step), fits
	the data reasonably well or not. It can be also used to
	compute individual medium parameters of the halfspaces of an
	inverted model, necessary to compute the corresponding exact reflection
	coefficients explicitly (and plot them).

	BarGraph.m
	----------
	plots the distribution (bar graph) of inverted models as
	function of recovered global/local minima. 

	GraphIt.m
	---------
	is the main plotting routine. It plots a set of 2-D graphs:
	"evolution" of misfit function and individual medium
	parameters (and their various combinations) as functions of
	iterations during the inversion process. Such plots
	contain a lot of useful information: path and rate of
	convergence (i.e., an info about the topology of the minimum),
	stability (dependence on initial conditions), resolution
	(dispersion of results), possible existence of other local
	minima of a similar depth e.t.c. The routine also allows to
	study how these characteristics change with adding a priori
	information. 
	    
	Read_in.m
	---------
	reads in the inverted medium parameters into Matlab
	environment and allows to perform various manipulations with
	the parameters supported by Matlab routines (such as to compute 
	different combinations of the parameters, run statistics e.t.c.).

Some libraries are necessary to run the programs above (see LIN subdirectory):

        Obj_Rcf
        -------
	contains all routines necessary to compute the forward problem
	(exact reflection coefficients) as well as routines linking
	the forward problem with the inversio Matlab algorythms.

	Optim 
        ----- 
        contains Optimization Toolbox routines. This
	library is not provided explicitly in LIB subdirectory since it is a
	part of Matlab package - Optimization Toolbox (only a part of this
	library is provided in MAKEXE subdirectory; the provided functions were
	needed additionally to create executable files).

	Graph
	-----
	contains routines necessary for viewing the results using
	GraphIt.m program.

%%%%%%%%% LIST OF BASIC VARIABLES USED IN NOLIN_Rp PACKAGE %%%%%%%%%%%%%%

1) General variables:
---------------------
ALL ANGLES ARE IN DEGREES on all inputs and outpus

inc_angle ... phase incidence angle (between slowness vector and the
              normal to the interface) 
azimuth ... phase azimuth (angle between the horizontal slowness and
            the zero-azimuth direction = azimuth of the symmetry axis (HTI) or the symmetry
            plane (ORThorhombic) of the incident halfspace)
Rpp ... PP-wave reflection coefficient
Rps1... PS1-wave reflection coefficient - FASTER PS-wave
Rps2... PS2-wave reflection coefficient - SLOWER PS-wave

model_ID ... identification of the model symmetry: 
              =0 ... ISO (isotropic incidence and reflecting halfspaces)
	      =3 ... HTI (HTI incidence and reflecting halfspaces with
                          aligned symmetry axes above and below the interface)
	      =4 ... HTIxHTI (HTI incidence and reflecting halfspaces with
                              misaligned symmetry axes above and below the interface)
	      =5 ... ORT (orthorhombic incidence and reflecting halfspaces with
                          aligned symmetry axes above and below the interface)
	      =6 ... ORTxORT (orthorhombic incidence and reflecting halfspaces with
                              misaligned symmetry axes above and below the interface)
   
ON ... ordinary number
Fobj ... objective function

2) Medium parameters:
---------------------
rho1,rho2 ... density of the incident/reflecting halfspace
v33_1,v33_2 ... P-wave A33 velocity of the incident/reflecting halfspace
v55_1,v55_2... S-wave A55 velocity of the incident/reflecting halfspace
v33_v55 ... average S/P velocity ratio = (v55_1+v55_2)/(v33_1+v33_2)
b_a ... is sometimes used instead of v33_v55

ISO media:
Drho ... contrast in density = (rho2-rho1)/(0.5*(rho2+rho1))
Dv33 ... contrast P_wave velocity = (v33_2-v33_1)/(0.5*(v33_2+v33_1))
Dv55 ... contrast S_wave velocity = (v55_2-v55_1)/(0.5*(v55_2+v55_1))
kappa ... misaligment angle [the angle between the symmetry axis (HTI) or
          vertical symmetry plane (ORT) of the reflecting halfspace and
          the zero-azimuth direction]

HTI media:
X=1 or X=2 ... incident or reflecting halfspace, respectively
ev_X ... \epsilon^{(V)} Tsvankin's parameters of the 
               incident/reflecting halfspace
dv_X ... \delta^{(V)} Tsvankin's parameters of the 
               incident/reflecting halfspace
g_X ... \gamma generic Thomsen's parameters of the 
               incident/reflecting halfspace (do not confuse it with
	       \gamma^{(V)} Tsvankin's parameters)

ORT media:
e1_X ... \epsilon^{(1)}_{x} Tsvankin's parameter
e2_X ... \epsilon^{(2)}_{x} Tsvankin's parameter
d1_X ... \delta^{(1)}_{x} Tsvankin's parameter
d2_X ... \delta^{(2)}_{x} Tsvankin's parameter
d3_X ... \delta^{(2)}_{x} Tsvankin's parameter
g1_X ... \gamma^{(1)}_{x} Tsvankin's parameter
g2_X ... \gamma^{(2)}_{x} Tsvankin's parameter
gs_X ... \gamma^{(S)}_{x} Tsvankin's parameter gs=(g1-g2)/(1+2*g2) =~ (g1-g2)
