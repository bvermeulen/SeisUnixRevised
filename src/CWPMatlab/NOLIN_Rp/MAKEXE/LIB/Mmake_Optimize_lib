# This is a shell script to create an M_to_C library "libOptimize",
# which includes the GRAPHIC LIBRARY COMPONENTS. 
#
# Before linking and executing the library with a main routine, 
# make sure that the current directory is set properly in LD_LIBRARY_PATH
# environment variable (the executable main routine looks dinamycally for the 
# object library files in LD_LIBRARY_PATH).
#
# The library is created with the maximum optimization <default>. If any
# optimization is unwanted, use the option -O on the command line to
# make appropriate changes <and in the option file in .matlab/R12 - or create a new
# one in the current directory and use -f option with the mcc -M option>, 
# or use -g option for debugging, which switches off all optimizations. 
# Also, non of the included routines should use a handle 
# to the functions "feval" nor "eval" are used
# while the routine is called. If this is the case, the compilation should be
# performed with the "%#function <list>" pragma on the command line, where
# <list> lists the corresponding routines. 
#
#
# THIS LIBRARY INCLUDES STANDART MATLAB ROUTINES FROM THE OPTIMIZATION
# TOOLBOX (MUST BE INSTALLED) PLUS ROUTINES aprecon (AND ROUTINES CALLED 
# BY aprecon) - CONTAINED IN Optim_src.tar -, AND ALL THIS IS LINKED ALSO 
# WITH STANDART MATLAB MATH LIBRARIES libmmfile.mlib libmatlbm.mlib.
#
# create just shell files for the library here:

#mcc -h -v -W libhg:libOptimize -L C /usr/local/matlab6/toolbox/optim/lsqnonlin aprecon libmmfile.mlib libmatlbm.mlib

# create the full library here:
mcc -h -v -W libhg:libOptimize -L C -t -T link:lib /usr/local/matlab6/toolbox/optim/lsqnonlin aprecon  libmmfile.mlib libmatlbmx.mlib libmatlbm.mlib libmwsglm.mlib

# the resulting library is  libOptimize.so
