head     1.2;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


1.2
date     95.05.31.13.10.43;  author john;  state Exp;
branches ;
next     1.1;

1.1
date     95.05.30.16.07.54;  author john;  state Exp;
branches ;
next     ;


desc
@uat.c
@


1.2
log
@added documentation
@
text
@#include "Triangles/triP.h"

Address *updateAddressTree(Address *p, address_t oa, int *found)
/* add nodes to a tree on the fly--after Kernighan and Ritchie,
/* The C Programming Language, 2nd Edition, p. 139ff.
/* Used internally in readModel() and writeModel(). */
{
	int sign;

	if (p == NULL) {  /* not in tree */
		p = (Address*) malloc(sizeof(Address));
		p->oaddress = oa;
		p->aLeft = p->aRight = NULL;
		*found = 0;
	}
	else if ((sign = ((int)oa - (int)(p->oaddress))) < 0)
		p->aLeft = updateAddressTree(p->aLeft, oa, found);
	else if (sign > 0)
		p->aRight = updateAddressTree(p->aRight, oa, found);
	else /* sign == 0; we've found the entry */
		*found = 1;

	return p;
}
@


1.1
log
@Initial revision
@
text
@d6 1
a6 1
/* Used by readModel() and writeModel(). */
@
