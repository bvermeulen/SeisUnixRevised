head     1.2;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


1.2
date     95.05.31.13.10.06;  author john;  state Exp;
branches ;
next     1.1;

1.1
date     95.05.30.16.06.39;  author john;  state Exp;
branches ;
next     ;


desc
@ec.c
@


1.2
log
@added documentation
@
text
@#include "Triangles/triP.h"

int edgesColinear (Edge *e1, Edge *e2)
/******************************************************************************
edgesColinear - see whether or not two edges are colinear
*******************************************************************************
Input:
e1	pointer to first Edge
e2	pointer to second Edge

Returns: (int)
1	if colinear
0	if not colinear

*******************************************************************************
Author:  Dave Hale, Colorado School of Mines, 07/10/90
******************************************************************************/
{
	float xa,xb,ya,yb,x1,x2,y1,y2,c12,a1,a2,s12;

	/* edge vectors */
	xa = e1->eu->vu->v->x;  xb = e1->eu->euCW->vu->v->x;
	ya = e1->eu->vu->v->y;  yb = e1->eu->euCW->vu->v->y;
	x1 = xb-xa;
	y1 = yb-ya;
	xa = e2->eu->vu->v->x;  xb = e2->eu->euCW->vu->v->x;
	ya = e2->eu->vu->v->y;  yb = e2->eu->euCW->vu->v->y;
	x2 = xb-xa;
	y2 = yb-ya;
	
	/* cross-product of vectors 1 and 2 */
	c12 = x1*y2-x2*y1;
	
	/* magnitude-squared of x1 and x2 */
	a1 = x1*x1+y1*y1;
	a2 = x2*x2+y2*y2;
	
	/* sin-squared of angle between vectors 1 and 2 */
	s12 = (c12*c12)/(a1*a2);
	
	/* if sin-squared less than tiny number, then colinear */
	if (s12<0.0001)
		return 1;
	else
		return 0;
}
@


1.1
log
@Initial revision
@
text
@d4 14
a17 1
/* determine whether or not two edges are colinear */
@
