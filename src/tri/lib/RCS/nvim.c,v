head     1.2;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


1.2
date     95.05.31.13.10.37;  author john;  state Exp;
branches ;
next     1.1;

1.1
date     95.05.30.16.07.44;  author john;  state Exp;
branches ;
next     ;


desc
@nvim.c
@


1.2
log
@added documentation
@
text
@#include "Triangles/triP.h"

Vertex* nearestVertexInModel (Model *m, Vertex *start, float x, float y)
/*****************************************************************************
nearestVertexInModel - Return pointer to vertex in model nearest
                       to specified (x,y) coordinates
******************************************************************************
Input:
m		model
start		vertex to look at first (NULL to begin looking anywhere)
x		x-coordinate
y		y-coordinate

Returns: pointer to nearest Vertex

******************************************************************************
Author:  Dave Hale, Colorado School of Mines, 07/10/90
******************************************************************************/
{
	float dx,dy,ds,dsmin;
	Vertex *v,*vmin,*vn;
	VertexUse *vu;
	EdgeUse *eu;

	/* start at some vertex in model */
	vmin = (start==NULL ? m->f->eu->vu->v : start);
	dx = vmin->x-x;
	dy = vmin->y-y;
	dsmin = dx*dx+dy*dy;
	
	/* hop from vertex to vertex, always moving closer to (x,y) */
	do {
		v = vmin;
		vu = v->vu;
		do {
			eu = vu->eu;
			vn = eu->euCW->vu->v;
			dx = vn->x-x;
			dy = vn->y-y;
			ds = dx*dx+dy*dy;
			if (dsmin>ds) {
				dsmin = ds;
				vmin = vn;
			}
			vu = vu->vuNext;
		} while (vu!=v->vu);		
	} while (v!=vmin);
	
	return v;
}
@


1.1
log
@Initial revision
@
text
@d5 2
a6 1
Return pointer to vertex in model nearest to specified (x,y) coordinates
d13 3
@
