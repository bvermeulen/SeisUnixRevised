head     1.2;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


1.2
date     95.05.31.13.09.50;  author john;  state Exp;
branches ;
next     1.1;

1.1
date     95.05.30.16.06.19;  author john;  state Exp;
branches ;
next     ;


desc
@c.c
@


1.2
log
@added documentation
@
text
@#include "Triangles/triP.h"

void circum (float x1, float y1, float x2, float y2, float x3, float y3,
	float *xc, float *yc, float *rs)
/******************************************************************************
circum - compute center and radius-squared of circumcircle of 3 (x,y)
          locations
******************************************************************************
Input:
x1	x-coordinate of first point
y1	y-coordinate of first point
x2	x-coordinate of second point
y2	y-coordinate of second point
x3	x-coordinate of third point
y3	y-coordinate of third point

Output:
xc	pointer to x-coordinate of center of circumcircle
yc	pointer to y-coordinate of center of circumcircle
rs	pointer radius^2 of circumcircle

******************************************************************************
Author:  Dave Hale, Colorado School of Mines, 07/09/90
******************************************************************************/
{
	float x21,y21,x31,y31,det,scl,tiny,r21,r31,xcr,ycr;
	
	x21 = x2-x1;
	y21 = y2-y1;
	x31 = x3-x1;
	y31 = y3-y1;
	r21 = x21*x21+y21*y21;
	r31 = x31*x31+y31*y31;
	det = x21*y31-x31*y21;
	tiny = 1e-10*(r21+r31);
	if (det<0.0 && -det<tiny) det = -tiny;
	else if (det>0.0 && det<tiny) det = tiny;
	if (det!=0.0) {
		scl = 0.5/det;
		xcr = scl*(r21*y31-r31*y21);
		ycr = scl*(x21*r31-x31*r21);
		*rs = xcr*xcr+ycr*ycr;
		*xc = x1+xcr;
		*yc = y1+ycr;
	} else {
		*rs = INFINITY;
		*xc = 0.0;
		*yc = 0.0;
	}
}
@


1.1
log
@Initial revision
@
text
@d5 20
a24 1
/* compute center and radius-squared of circumcircle of 3 (x,y) locations */
@
