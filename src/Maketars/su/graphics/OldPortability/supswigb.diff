17a18
> #include <signal.h>
60a62,63
> /* Prototype */
> static void trapsig(void);
61a65,69
> /* Globals (so can trap signal) defining temporary disk file */
> static char datafile[L_tmpnam];  /*temp file for data	     */
> static FILE *datafp;		 /* fp for trace data file   */
> 
> 
69,70d76
< 	FILE *datafp;		/* fp for trace data file		*/
< 	FILE *plotfp;		/* fp for plot data			*/
76d81
< 	int ntr;		/* number of traces			*/
131,132c136,140
< 	/* Create temporary "file" to hold data */
< 	datafp = etmpfile();
---
> 	/* Trap signals so can remove tmpnam file */
> 	signal(SIGINT,  (void *) trapsig);
> 	signal(SIGQUIT, (void *) trapsig);
> 	signal(SIGHUP,  (void *) trapsig);
> 	signal(SIGTERM, (void *) trapsig);
134,139d141
< 	/* Loop over input traces & put them into the psdata file */
< 	ntr = 0;
< 	do {
< 		++ntr;
< 		efwrite(tr.data, FSIZE, nt, datafp);
< 	} while (gettr(&tr));
140a143,144
> 	/* Create temporary "file" to hold data */
> 	datafp = efopen(etmpnam(datafile), "w+");
142,144c146,148
< 	/* System call to pswigb */
< 	sprintf(plotcmd, "pswigb n1=%d n2=%d d1=%f d2=%f f1=%f f2=%f",
< 			   nt, ntr, d1, d2, f1, f2);
---
> 	/* Set up system call to pswigb */
> 	sprintf(plotcmd, "pswigb <%s n1=%d d1=%f d2=%f f1=%f f2=%f",
> 			   datafile, nt, d1, d2, f1, f2);
160,161c164,167
< 	/* Open pipe; read data to buf; write buf to plot program */
< 	plotfp = epopen(plotcmd, "w");
---
> 	/* Loop over input traces & give them to the graphics program */
> 	do {
> 		efwrite(tr.data, FSIZE, nt, datafp);
> 	} while (gettr(&tr));
163,168c169,170
< 	{ register int itr;
< 		for (itr = 0; itr < ntr; ++itr) {
< 			efread (trbuf, FSIZE, nt, datafp);
< 			efwrite(trbuf, FSIZE, nt, plotfp);
< 		}
< 	}
---
> 	system(plotcmd);
> 	
172d173
< 	epclose(plotfp);
173a175
> 	eremove(datafile);
177a180,190
> 
> 
> 
> /* Signal handler to remove tmpnam file */
> void trapsig(void)
> {
> 	efclose(datafp);
> 	eremove(datafile);
> 	exit(EXIT_FAILURE);
> }
> 
