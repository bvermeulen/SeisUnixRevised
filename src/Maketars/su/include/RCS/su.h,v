head	1.34;
access;
symbols;
locks
	john:1.34; strict;
comment	@ * @;


1.34
date	2011.11.11.23.56.14;	author john;	state Exp;
branches;
next	1.33;

1.33
date	97.10.15.15.18.21;	author john;	state Exp;
branches;
next	1.32;

1.32
date	97.07.18.16.50.10;	author jkc;	state Exp;
branches;
next	1.31;

1.31
date	96.02.21.23.40.57;	author jkc;	state Exp;
branches;
next	1.30;

1.30
date	96.02.21.21.21.00;	author jkc;	state Exp;
branches;
next	1.29;

1.29
date	95.08.23.19.30.13;	author jkc;	state Exp;
branches;
next	1.28;

1.28
date	94.09.06.09.41.47;	author jkc;	state Exp;
branches;
next	1.27;

1.27
date	94.09.06.09.25.59;	author jkc;	state Exp;
branches;
next	1.26;

1.26
date	94.04.27.16.31.40;	author john;	state Exp;
branches;
next	1.25;

1.25
date	94.03.30.14.57.57;	author jkc;	state Exp;
branches;
next	1.24;

1.24
date	94.03.29.14.03.46;	author john;	state Exp;
branches;
next	1.23;

1.23
date	94.03.14.13.27.21;	author john;	state Exp;
branches;
next	1.22;

1.22
date	93.09.14.13.18.17;	author jkc;	state Exp;
branches;
next	1.21;

1.21
date	93.09.10.15.12.42;	author jkc;	state Exp;
branches;
next	1.20;

1.20
date	93.08.13.10.23.22;	author john;	state Exp;
branches;
next	1.19;

1.19
date	92.11.17.08.41.30;	author jkc;	state Exp;
branches;
next	1.18;

1.18
date	92.06.15.12.59.41;	author jkc;	state Exp;
branches;
next	1.17;

1.17
date	91.09.05.08.41.53;	author jkcohen;	state Exp;
branches;
next	1.16;

1.16
date	91.06.23.11.33.08;	author jkcohen;	state Exp;
branches;
next	1.15;

1.15
date	90.12.22.18.36.53;	author jkc;	state Exp;
branches;
next	1.14;

1.14
date	90.12.21.13.30.23;	author jkc;	state Exp;
branches;
next	1.13;

1.13
date	90.11.25.18.18.52;	author jkc;	state Exp;
branches;
next	1.12;

1.12
date	90.11.08.19.56.53;	author jkc;	state Exp;
branches;
next	1.11;

1.11
date	90.09.13.19.22.03;	author jkc;	state Exp;
branches;
next	1.10;

1.10
date	90.09.01.13.06.14;	author jkc;	state Exp;
branches;
next	1.9;

1.9
date	90.07.05.20.22.31;	author jkc;	state Exp;
branches;
next	1.8;

1.8
date	90.05.28.11.16.39;	author jkc;	state Exp;
branches;
next	1.7;

1.7
date	90.05.07.15.04.20;	author jkc;	state Exp;
branches;
next	1.6;

1.6
date	90.04.26.15.51.45;	author jkc;	state Exp;
branches;
next	1.5;

1.5
date	90.04.26.12.42.56;	author jkc;	state Exp;
branches;
next	1.4;

1.4
date	90.04.19.22.35.46;	author jkc;	state Exp;
branches;
next	1.3;

1.3
date	90.03.22.14.05.30;	author jkc;	state Exp;
branches;
next	1.2;

1.2
date	90.03.22.14.00.21;	author jkc;	state Exp;
branches;
next	1.1;

1.1
date	90.03.22.13.59.38;	author jkc;	state Exp;
branches;
next	;


desc
@Main include file for su (formerly called cwp.h).
@


1.34
log
@copyright statement
@
text
@/* Copyright (c) Colorado School of Mines, 2011.*/
/* All rights reserved.                       */

/* su.h - include file for SU programs
 *
 * $Author: john $
 * $Source: /usr/local/cwp/src/su/include/RCS/su.h,v $
 * $Revision: 1.33 $ ; $Date: 1997/10/15 15:18:21 $
 */

#ifndef SU_H
#define SU_H

#include "par.h"

/* TYPEDEFS */
typedef union { /* storage for arbitrary type */
	char s[8];
	short h;
	unsigned short u;
	long l;
	unsigned long v;
	int i;
	unsigned int p;
	float f;
	double d;
	unsigned int U:16;
	unsigned int P:32;
} Value;


/* DEFINES */
#define CHECK_NT(label,nt) \
	if(nt > SU_NFLTS) err("%s=%d must not exceed %d",label,nt,SU_NFLTS)
#define NALLOC	(524288)
#define NFALLOC	(NALLOC/FSIZE)
#define NIALLOC	(NALLOC/ISIZE)
#define NDALLOC	(NALLOC/DSIZE)
#define LOWBYTE(w) ((w) & 0xFF)
#define HIGHBYTE(w) LOWBYTE((w) >>8)
#define LOWWORD(w) ((w) & 0xFFFF)
#define HIGHWORD(w) LOWWORD((w) >>16)
#define ISNEGCHAR(c) ((c) & 0x80)
#define SIGNEXTEND(c) (~0xFF | (int) (c))

/*	READ_OK  - read  permission for access(2)
 *	WRITE_OK - write permission for access(2)
 *	EXEC_OK  - exec  permission for access(2)
 *	FILE_OK  - file  existence  for access(2)
 *	Note: these are changed from the usual defines in file.h
 *	      because this include exists on some machines and
 *	      not others, often overlaps fcntl.h, etc.  Lint is
 *            happier with a fresh start.
 *	Note: Post-ANSI sometimes R_OK in unistd.h (this isn't
 *	      an ANSI file).
 */
#define		READ_OK		4
#define		WRITE_OK	2
#define		EXEC_OK		1
#define		FILE_OK		0

/* For plotting by keyword */
#define	 IS_DEPTH(str)	((  STREQ(str,"gelev")	|| \
			   STREQ(str,"selev")	|| \
			   STREQ(str,"sdepth")	|| \
			   STREQ(str,"gdel")	|| \
			   STREQ(str,"sdel")	|| \
			   STREQ(str,"swdep")	|| \
			   STREQ(str,"gwdep")	      )?cwp_true:cwp_false)

#define	 IS_COORD(str)	(( STREQ(str,"sx")   || \
			   STREQ(str,"sy")   || \
			   STREQ(str,"gx")   || \
			   STREQ(str,"gy")	   )?cwp_true:cwp_false)

/* FUNCTION PROTOTYPES */
#ifdef __cplusplus /* if C++, specify external linkage to C functions */
extern "C" {
#endif

/* valpkge */
int vtoi(register cwp_String type, Value val);
long vtol(register cwp_String type, Value val);
float vtof(register cwp_String type, Value val);
double vtod(register cwp_String type, Value val);
int valcmp(register cwp_String type, Value val1, Value val2);
void printfval(register cwp_String type, Value val);
void fprintfval(FILE *stream, register cwp_String type, Value val);
void scanfval(register cwp_String type, Value *valp);
void atoval(cwp_String type, cwp_String keyval, Value *valp);
void getparval(cwp_String name, cwp_String type, int n, Value *valp);
Value valtoabs(cwp_String type, Value val);

#ifdef __cplusplus /* if C++, end external linkage specification */
}
#endif

#endif
@


1.33
log
@*** empty log message ***
@
text
@d1 3
d6 1
a6 1
 * $Author: jkc $
d8 1
a8 1
 * $Revision: 1.31 $ ; $Date: 1996/02/21 23:40:57 $
@


1.32
log
@added 2 new plotting macros
@
text
@d60 1
a60 1
#define	 IS_DEPTH(str)	(  STREQ(str,"gelev")	|| \
d66 1
a66 1
			   STREQ(str,"gwdep")	      )
d68 1
a68 1
#define	 IS_COORD(str)	(  STREQ(str,"sx")   || \
d71 1
a71 1
			   STREQ(str,"gy")	   )
@


1.31
log
@Generalized to two arg macro to take of things like ntau, etc.
@
text
@d5 1
a5 1
 * $Revision: 1.30 $ ; $Date: 1996/02/21 21:21:00 $
d59 13
a71 1

@


1.30
log
@Added CHECK_NT macro.
@
text
@d5 1
a5 1
 * $Revision: 1.29 $ ; $Date: 1995/08/23 19:30:13 $
d30 2
a31 2
#define CHECK_NT(nt) \
	if(nt > SU_NFLTS) err("nt=%d must not exceed %d",nt,SU_NFLTS)
@


1.29
log
@Removed defines for RMTDEVICE and MTDEVICE.
@
text
@d4 2
a5 2
 * $Source: /NeXTMount/usr/local/cwp/src/su/include/RCS/su.h,v $
 * $Revision: 1.28 $ ; $Date: 1994/09/06 09:41:47 $
d30 2
@


1.28
log
@Eliminated include of suport.h.
@
text
@d4 2
a5 2
 * $Source: /NeXTMount_3.1b/usr/local/cwp/src/su/include/RCS/su.h,v $
 * $Revision: 1.27 $ ; $Date: 94/09/06 09:25:59 $
a29 6
/* The following two entries must reference actual tape devices in the
 * system's /dev directory; often mt0 and rmt0 will do.
 */
#define		MTDEVICE	"/dev/mt0"
#define		RMTDEVICE	"/dev/rmt0"

@


1.27
log
@No longer includes segy.h
Moved #defines for gettr(x), puttr(x) and gettra(x, y) to segy.h
Moved #defines for trid options (like TREAL) to segy.h
Moved #define for ISSEISMIC(id) to segy.h
Moved prototypes that involve segys (like fgettr, gethval) to segy.h
Added unsigned int U:16 and unsigned int P:32 to value union
Added const declaration to appropriate prototype arguments
Moved #defines for MTDEVICE, RMTDEVICE from suport.h
@
text
@d4 2
a5 2
 * $Source: /private/Net/dobrin/Users/jkc/Testground/Segy/BitSegy/RCS/su.h,v $
 * $Revision: 1.1 $ ; $Date: 94/09/01 14:57:23 $
a11 1
#include "suport.h"
@


1.26
log
@added C++ support.
@
text
@d4 2
a5 2
 * $Source: /usr/local/cwp/src/su/include/RCS/su.h,v $
 * $Revision: 1.25 $ ; $Date: 94/03/30 14:57:57 $
a11 1
#include "segy.h"
a14 1

d25 2
d31 6
a36 3
#define gettr(x)	fgettr(stdin, (x))
#define puttr(x)	fputtr(stdout, (x))
#define gettra(x, y)    fgettra(stdin, (x), (y))
a63 6
/* Seismic macros (including ISSEISMIC) */
/* The following refer to the trid field in segy.h		*/
/* CHARPACK represents byte packed seismic data from supack1	*/
#define		CHARPACK	101
/* SHORTPACK represents 2 byte packed seismic data from supack2	*/
#define		SHORTPACK	102
a64 16
/* TREAL represents real time traces ( see trid in segy.h)	*/
#define		TREAL		1
/* TDEAD represents dead time traces ( see trid in segy.h)	*/
#define		TDEAD		2
/* TDUMMY represents dummy time traces ( see trid in segy.h)	*/
#define		TDUMMY		3
/* TBREAK represents time break traces ( see trid in segy.h)	*/
#define		TBREAK		4
/* UPHOLE represents uphole traces ( see trid in segy.h)	*/
#define		UPHOLE		5
/* SWEEP represents sweep traces ( see trid in segy.h)		*/
#define		SWEEP		6
/* TIMING represents timing traces ( see trid in segy.h)	*/
#define		TIMING		7
/* WBREAK represents timing traces ( see trid in segy.h)	*/
#define		WBREAK		8
a65 36
/* TCMPLX represents complex time traces (see trid in segy.h)	*/
#define		TCMPLX		13
/* TAMPH represents time domain data in amplitude/phase form	*/
#define		TAMPH		15
/* FPACK represents packed frequency domain data (see segy.h)	*/
#define		FPACK		12
/* FUNPACKNYQ represents complex frequency domain data (segy.h)	*/
#define		FUNPACKNYQ	11
/* FCMPLX represents complex frequency domain data (see segy.h)	*/
#define		FCMPLX		10
/* FAMPH represents freq domain data in amplitude/phase form	*/
#define		FAMPH		14
/* REALPART represents the real part of a trace to Nyquist	*/
#define		REALPART	16
/* IMAGPART represents the real part of a trace to Nyquist	*/
#define		IMAGPART	17
/* AMPLITUDE represents the amplitude of a trace to Nyquist	*/
#define		AMPLITUDE	18
/* PHASE represents the phase of a trace to Nyquist		*/
#define		PHASE		19
/* KT represents wavenumber-time domain data 			*/
#define		KT		21
/* KOMEGA represents wavenumber-frequency domain data		*/
#define		KOMEGA		22
/* ENVELOPE represents the envelope of the complex time trace	*/
#define		ENVELOPE	23
/* INSTPHASE represents the phase of the complex time trace	*/
#define		INSTPHASE	24
/* INSTFREQ represents the frequency of the complex time trace	*/
#define		INSTFREQ	25
/* DEPTH represents traces in depth-range (z-x)			*/
#define		TRID_DEPTH	30

#define ISSEISMIC(id) ( (id)==0 || (id)==TREAL || (id)==TDEAD || (id)==TDUMMY )


a70 14
int fgettr(FILE *fp, segy *tp);
void fputtr(FILE *fp, segy *tp);
int fgettra(FILE *fp, segy *tp, int itr);

/* hdrpkge */
void gethval(segy *tr, int index, Value *valp);
void puthval(segy *tr, int index, Value *valp);
void gethdval(segy *tr, char *key, Value *valp);
void puthdval(segy *tr, char *key, Value *valp);
char *hdtype(char *key);
char *getkey(int index);
int getindex(char *key);
void swaphval(segy *tr, int index);

a79 1
void printheader(segy *tp);
a82 2

void tabplot(segy *tp, int itmin, int itmax);
@


1.25
log
@Added ISSEISMIC() function macro.
@
text
@d3 3
a5 3
 * $Author: john $
 * $Source: /NeXTMount_3.1b/usr/local/src/su/include/RCS/su.h,v $
 * $Revision: 1.24 $ ; $Date: 94/03/29 14:03:46 $
d120 1
d122 4
d155 4
@


1.24
log
@added INSTFREQ define
@
text
@d4 2
a5 2
 * $Source: /usr/local/src/su/include/RCS/su.h,v $
 * $Revision: 1.23 $ ; $Date: 94/03/14 13:27:21 $
a44 1

d61 1
a61 1

d118 1
@


1.23
log
@added swaphval function prototype.
@
text
@d3 1
a3 1
 * $Author: jkc $
d5 1
a5 1
 * $Revision: 1.22 $ ; $Date: 93/09/14 13:18:17 $
d114 2
@


1.22
log
@oops, had UPHOLE twice and TBREAK not at all
@
text
@d4 2
a5 2
 * $Source: /NeXTMount_3.1a/usr/local/src/su/include/RCS/su.h,v $
 * $Revision: 1.21 $ ; $Date: 93/09/10 15:12:42 $
d131 1
@


1.21
log
@Add #defines for other standard seg-y trace ids like TDEAD, TDUMMY, ...
@
text
@d3 1
a3 1
 * $Author: john $
d5 1
a5 1
 * $Revision: 1.20 $ ; $Date: 93/08/13 10:23:22 $
d76 1
a76 1
#define		UPHOLE		4
@


1.20
log
@moved typedef for String to par.h, name changed to cwp_String
moved typedef for Bool to par.h, name changed to cwp_Bool
@
text
@d3 3
a5 3
 * $Author: jkc $
 * $Source: /NeXTMount_3.0/usr/local/src/su/include/RCS/su.h,v $
 * $Revision: 1.19 $ ; $Date: 92/11/17 08:41:30 $
d68 1
d71 15
@


1.19
log
@removed conv_float (in segyread/write now).
@
text
@d5 1
a5 1
 * $Revision: 1.18 $ ; $Date: 92/06/15 12:59:41 $
a16 2
typedef enum {false, true} Bool;
typedef char *String;
d117 8
a124 8
int vtoi(register String type, Value val);
long vtol(register String type, Value val);
float vtof(register String type, Value val);
double vtod(register String type, Value val);
int valcmp(register String type, Value val1, Value val2);
void printfval(register String type, Value val);
void fprintfval(FILE *stream, register String type, Value val);
void scanfval(register String type, Value *valp);
d126 3
a128 3
void atoval(String type, String keyval, Value *valp);
void getparval(String name, String type, int n, Value *valp);
Value valtoabs(String type, Value val);
@


1.18
log
@Eliminated mixed union.  Added prototypes for getparval, valtoabs.
Replaced conv_float prototype by ibm_to_float and float_to_ibm.
@
text
@d3 3
a5 3
 * $Author: jkcohen $
 * $Source: /usr/local/src/su/include/RCS/su.h,v $
 * $Revision: 1.17 $ ; $Date: 91/09/05 08:41:53 $
a132 2
void ibm_to_float(int from[], int to[], int n);
void float_to_ibm(int from[], int to[], int n);
@


1.17
log
@Refugees from cwp.h: Bool, String and capitalized Value, etc.
@
text
@d3 3
a5 3
 * $Author: jkc $
 * $Source: /usr/local/cwp/src/su/include/RCS/su.h,v $
 * $Revision: 1.15 $ ; $Date: 90/12/22 18:36:53 $
a18 11
typedef union { /* pointer to arbitrary type */
	char *s;
	short *h;
	unsigned short *u;
	long *l;
	unsigned long *v;
	int *i;
	unsigned int *p;
	float *f;
	double *d;
} Mixed;
d118 1
d129 2
d133 2
a134 1
void conv_float(char *from, char *to, int len, int type);
@


1.16
log
@Added TRID_DEPTH (30)
@
text
@d15 1
d17 26
d47 10
d121 4
a124 4
void gethval(segy *tr, int index, value *valp);
void puthval(segy *tr, int index, value *valp);
void gethdval(segy *tr, char *key, value *valp);
void puthdval(segy *tr, char *key, value *valp);
d129 8
a136 8
int vtoi(register string type, value val);
long vtol(register string type, value val);
float vtof(register string type, value val);
double vtod(register string type, value val);
int valcmp(register string type, value val1, value val2);
void printfval(register string type, value val);
void fprintfval(FILE *stream, register string type, value val);
void scanfval(register string type, value *valp);
d138 1
a138 1
void atoval(string type, string keyval, value *valp);
@


1.15
log
@fp versions of gettr, puttr, gettra.  gettra->fgettra macro
@
text
@d4 2
a5 2
 * $Source: /usr/local/src/su/include/RCS/su.h,v $
 * $Revision: 1.14 $ ; $Date: 90/12/21 13:30:23 $
d74 2
@


1.14
log
@Removed a bunch of unused (I hope) protos.
@
text
@d5 1
a5 1
 * $Revision: 1.13 $ ; $Date: 90/11/25 18:18:52 $
d17 3
a19 2
#define gettr(x)	fgettr(STDIN, (x))
#define puttr(x)	fputtr(STDOUT, (x))
d77 3
a79 3
int fgettr(int fd, segy *tp);
void fputtr(int fd, segy *tp);
int gettra(int fd, segy *tp, int itr);
@


1.13
log
@removed 2nd entry for conv_float
@
text
@d5 1
a5 1
 * $Revision: 1.12 $ ; $Date: 90/11/08 19:56:53 $
a18 4
#define gettr1(x)	fgettr1(STDIN, (x))
#define puttr1(x)	fputtr1(STDOUT, (x))
#define gettr2(x)	fgettr2(STDIN, (x))
#define puttr2(x)	fputtr2(STDOUT, (x))
a76 2
int fgettr1(int fd, segy *tp);
int fgettr2(int fd, segy *tp);
a77 2
void fputtr1(int fd, segy *tp);
void fputtr2(int fd, segy *tp);
a99 2

void vertwig(float *data, int n, int fill);
a101 23

void gain(float *dataptr,
	  float tpow, float epow, float gpow,
	  int agc,
	  float trap, float clip, float qclip,
	  int qbal, int pbal,
	  float scale,
	  float tmin, float dt,
	  float wagc,
	  int nt, int ntr);
void dotpow(float *dataptr, float tpow, float tmin, float dt,
	    int nt, int ntr);
void doepow(float *dataptr, float epow,	float tmin, float dt,
	    int nt, int ntr);
void dogpow(float *dataptr, float gpow, int nfloat);
void dotrap(float *dataptr, float trap, int nfloat);
void doclip(float *dataptr, float clip, int nfloat);
void doqclip(float *dataptr, float qclip, int nfloat);
void doqbal(float *dataptr, float qclip, int nfloat);
void dopbal(float *dataptr, int nfloat);
void doscale(float *dataptr, float scale, int nfloat);
void doagc(float *dataptr, int wagc, int nt, int ntr);
float quant(float *a, int k, int n);
@


1.12
log
@Change wagc from int (samples) to float (seconds).
@
text
@d5 1
a5 1
 * $Revision: 1.11 $ ; $Date: 90/09/13 19:22:03 $
a79 2
void conv_float(char *from, char *to, int len, int type);

@


1.11
log
@fixed name (vtod->vtoz)
@
text
@d5 1
a5 1
 * $Revision: 1.10 $ ; $Date: 90/09/01 13:06:14 $
d122 1
a122 1
	  int wagc,
@


1.10
log
@Eliminated proto for toeplitx
Added define for FUNPACKNYQ
@
text
@d5 1
a5 1
 * $Revision: 1.9 $ ; $Date: 90/07/05 20:22:31 $
d102 1
a102 1
double vtoz(register string type, value val);
@


1.9
log
@Added toeplitz().  Really belongs in cwp.h, but not this ugly 1-based
version.
@
text
@d5 1
a5 1
 * $Revision: 1.8 $ ; $Date: 90/05/28 11:16:39 $
d55 2
a112 1
void toeplitz(float *r, float *x, float *y, int n);
@


1.8
log
@Eliminated prototypes for obsolete arraypkge
@
text
@d5 1
a5 1
 * $Revision: 1.7 $ ; $Date: 90/05/07 15:04:20 $
d111 1
@


1.7
log
@mustgetpars are in par.h
@
text
@d5 1
a5 1
 * $Revision: 1.6 $ ; $Date: 90/04/26 15:51:45 $
a77 16
float *vec(int r);
int *ivec(int r);
double *dvec(int r);
float *re_vec(float *v, int r);
int *re_ivec(int *v, int r);
double *re_dvec(double *v, int r);
float **mat(int r, int c);
int **imat(int r, int c);
double **dmat(int r, int c);
void free_vec(float *v);
void free_ivec(int *v);
void free_dvec(double *v);
void free_mat(float **m, int r);
void free_imat(int **m, int r);
void free_dmat(double **m, int r);

@


1.6
log
@Fixed twisted arg order in gain() declaration
@
text
@d5 1
a5 1
 * $Revision: 1.5 $ ; $Date: 90/04/26 12:42:56 $
a22 9
#define MUSTSGETPAR(x,y) if(!sgetpar(x,y)) err("need %s=",x)
#define MUSTHGETPAR(x,y) if(!hgetpar(x,y)) err("need %s=",x)
#define MUSTUGETPAR(x,y) if(!ugetpar(x,y)) err("need %s=",x)
#define MUSTLGETPAR(x,y) if(!lgetpar(x,y)) err("need %s=",x)
#define MUSTVGETPAR(x,y) if(!vgetpar(x,y)) err("need %s=",x)
#define MUSTIGETPAR(x,y) if(!igetpar(x,y)) err("need %s=",x)
#define MUSTPGETPAR(x,y) if(!pgetpar(x,y)) err("need %s=",x)
#define MUSTFGETPAR(x,y) if(!fgetpar(x,y)) err("need %s=",x)
#define MUSTZGETPAR(x,y) if(!zgetpar(x,y)) err("need %s=",x)
@


1.5
log
@Didn't have type declared for vertwig()
@
text
@d5 1
a5 1
 * $Revision: 1.4 $ ; $Date: 90/04/19 22:35:46 $
d136 1
a136 1
void conv_float(char *from, char *to,int len, int type);
d140 1
d142 1
a144 2
	  int agc,
	  int qbal, int pbal,
@


1.4
log
@Corrected typo
@
text
@d5 1
a5 1
 * $Revision: 1.3 $ ; $Date: 90/03/22 14:05:30 $
d134 1
a134 1
vertwig(float *data, int n, int fill);
@


1.3
log
@Updated label and comments.
@
text
@d5 1
a5 1
 * $Revision: 1.2 $ ; $Date: 90/03/22 14:00:21 $
d11 3
a13 2
#include "cwp.h"
#include "suportdefs.h"
a15 4
/* DECLARATIONS */
int xargc; char **xargv;
int ID;

a16 4
#define NALLOC		524288	/* malloc/realloc increment (in chars) */
#define NFALLOC		NALLOC/ sizeof(float)
#define NIALLOC		NALLOC/ sizeof(int)
#define NDALLOC		NALLOC/ sizeof(double)
d34 17
d86 74
a159 23
/* EXTERNS */
extern void syserr(), err(), warn(), selfdoc(), askdoc(), initargs();
extern void fputtr(), fputtr1(), fputtr2();
extern void puthval(), gethval(), puthdval(), gethdval(), rew();
extern void printfval(), fprintfval(), scanfval(), printftype();
extern uint maxgetpar();
extern short atohe();
extern ushort atoue();
extern int atoie();
extern uint atope();
extern long atole();
extern ulong atove();
extern int hgetpar(), ugetpar(), igetpar(), pgetpar(), lgetpar(), vgetpar();
extern int fgetpar(), zgetpar(), sgetpar(), gettra(), syswarn(), getindex();
extern int fgettr(), fgettr1(), fgettr2();
extern int pread(), pfread();
extern int vtoi(), valcmp(), ivmax(), ivmin(), ivabsmx();
extern int ivsum(), ivl1(), ivl2(), ivprod();
extern long vtol();
extern float vtof();
extern double vtoz();
extern char *getkey(), *hdtype(), *statprint(), *getname();
extern filetype statfil();
@


1.2
log
@Changed cwpdefs.h name to cwp.h
@
text
@d1 1
a1 1
/* cwp.h - include file for CWP SU programs
d5 1
a5 1
 * $Revision: 1.1 $ ; $Date: 90/03/22 13:59:38 $
d8 2
a9 2
#ifndef CWP_H
#define CWP_H
@


1.1
log
@Initial revision
@
text
@d4 2
a5 2
 * $Source: /src/su/include/RCS/cwp.h,v $
 * $Revision: 2.9 $ ; $Date: 89/01/14 07:46:05 $
d11 1
a11 1
#include "cwpdefs.h"
@
