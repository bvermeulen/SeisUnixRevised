head	1.19;
access;
symbols;
locks; strict;
comment	@ * @;


1.19
date	2011.11.16.23.35.04;	author john;	state Exp;
branches;
next	1.18;

1.18
date	2011.11.12.00.42.19;	author john;	state Exp;
branches;
next	1.17;

1.17
date	2006.11.07.22.58.42;	author john;	state Exp;
branches;
next	1.16;

1.16
date	2003.11.05.17.52.02;	author john;	state Exp;
branches;
next	1.15;

1.15
date	2003.06.09.16.17.07;	author john;	state Exp;
branches;
next	1.14;

1.14
date	97.07.28.22.36.46;	author john;	state Exp;
branches;
next	1.13;

1.13
date	96.09.13.21.56.38;	author john;	state Exp;
branches;
next	1.12;

1.12
date	96.02.05.21.17.06;	author jkc;	state Exp;
branches;
next	1.11;

1.11
date	95.08.04.15.30.50;	author jkc;	state Exp;
branches;
next	1.10;

1.10
date	94.08.25.15.00.57;	author jkc;	state Exp;
branches;
next	1.9;

1.9
date	94.06.23.14.55.48;	author jkc;	state Exp;
branches;
next	1.8;

1.8
date	94.06.15.11.01.25;	author john;	state Exp;
branches;
next	1.7;

1.7
date	93.11.24.16.04.47;	author john;	state Exp;
branches;
next	1.6;

1.6
date	92.10.26.14.10.29;	author john;	state Exp;
branches;
next	1.5;

1.5
date	91.09.05.08.51.51;	author jkcohen;	state Exp;
branches;
next	1.4;

1.4
date	91.06.21.12.33.51;	author jkcohen;	state Exp;
branches;
next	1.3;

1.3
date	91.02.14.10.22.46;	author jkcohen;	state Exp;
branches;
next	1.2;

1.2
date	90.12.18.20.00.54;	author jkc;	state Exp;
branches;
next	1.1;

1.1
date	90.12.18.19.58.08;	author jkc;	state Exp;
branches;
next	;


desc
@FFT in t
@


1.19
log
@added Reg Beardsley's checkpar()
@
text
@/* Copyright (c) Colorado School of Mines, 2011.*/
/* All rights reserved.                       */

/* SUSPECFX: $Revision: 1.17 $ ; $Date: 2006/11/07 22:58:42 $		*/

#include "su.h"
#include "segy.h"

/*********************** self documentation **********************/
char *sdoc[] = {
" 								",
" SUSPECFX - Fourier SPECtrum (T -> F) of traces 		",
" 								",
" suspecfx <infile >outfile 					",
" 								",
" Note: To facilitate further processing, the sampling interval	",
"       in frequency and first frequency (0) are set in the	",
"	output header.						",
" 								",
NULL};

/* Credits:
 *
 *	CWP: Dave (algorithm), Jack (reformatting for SU)
 *
 * Trace header fields accessed: ns, dt
 * Trace header fields modified: ns, dt, trid, d1, f1
 */
/**************** end self doc ***********************************/


#define LOOKFAC	2	/* Look ahead factor for npfaro	  */
#define PFA_MAX	720720	/* Largest allowed nfft	          */

segy tr;

int
main(int argc, char **argv)
{
	register float *rt;	/* real trace				*/
	register complex *ct;	/* complex transformed trace		*/
	int nt;			/* number of points on input trace	*/
	int nfft;		/* number of points on output trace	*/
	int nfby2p1;		/* nfft/2 + 1				*/
	float dt;		/* sample interval in secs		*/
	float d1;		/* output sample interval in Hz		*/
	int ntr=0;		/* number of traces			*/
	register int i;		/* counter				*/


	/* Initialize */
	initargs(argc, argv);
	requestdoc(1);


	/* Get info from first trace */ 
	if (!gettr(&tr))  err("can't get first trace");
	nt = tr.ns;

	/* dt is used only to set output header value d1 */
	if (!getparfloat("dt", &dt)) dt = ((double) tr.dt)/1000000.0;
	if (!dt) {
		dt = .004;
		warn("dt not set, assumed to be .004");
	}


        checkpars();


	/* Set up pfa fft */
	nfft = npfaro(nt, LOOKFAC * nt);
	if (nfft >= SU_NFLTS || nfft >= PFA_MAX)
		 err("Padded nt=%d--too big", nfft);
	nfby2p1 = nfft/2 + 1;
	d1 = 1.0/(nfft*dt);

	rt = ealloc1float(nfft);
	ct = ealloc1complex(nfby2p1);


	/* Main loop over traces */
	do {
		++ntr;

		/* Load trace into rt (zero-padded) */
		memcpy( (void *) rt, (const void *) tr.data, nt*FSIZE);
		memset( (void *) (rt + nt), 0, (nfft - nt)*FSIZE);

		/* FFT */
		pfarc(1, nfft, rt, ct);

		/* Compute amplitude spectrum */
		tr.data[0] = rcabs(ct[0])/2.0;
		for (i = 1; i < nfby2p1; ++i)  tr.data[i] = rcabs(ct[i]);

		/* Set header values */
		tr.ns = nfby2p1;
		tr.dt = 0;	  /* d1=df is now the relevant step size */
		tr.trid = AMPLITUDE;
		tr.d1 = d1;
		tr.f1 = 0.0;

		puttr(&tr);

	} while (gettr(&tr));


	return(CWP_Exit());
}
@


1.18
log
@copyright
@
text
@d68 3
@


1.17
log
@changed    memset( .., (int) '\0',...) to memset( .., 0,..) as per suggestion of Marion Zhu and Reg Beardsley
@
text
@d1 4
a4 1
/* SUSPECFX: $Revision: 1.16 $ ; $Date: 2003/11/05 17:52:02 $		*/
@


1.16
log
@fixed zero frequency amplitude
@
text
@d1 1
a1 1
/* SUSPECFX: $Revision: 1.15 $ ; $Date: 2003/06/09 16:17:07 $		*/
d82 1
a82 1
		memset( (void *) (rt + nt), (int) '\0', (nfft - nt)*FSIZE);
@


1.15
log
@9 June 2003
@
text
@d1 1
a1 1
/* SUSPECFX: $Revision: 1.14 $ ; $Date: 1997/07/28 22:36:46 $		*/
d88 2
a89 1
		for (i = 0; i < nfby2p1; ++i)  tr.data[i] = rcabs(ct[i]);
@


1.14
log
@changes suggested by Stew Levin to silence SGI compiler warnings, etc
@
text
@d1 1
a1 1
/* SUSPECFX: $Revision: 1.13 $ ; $Date: 1996/09/13 21:56:38 $		*/
d102 1
a102 1
	return EXIT_SUCCESS;
@


1.13
log
@silenced -Wall messages
@
text
@d1 1
a1 1
/* SUSPECFX: $Revision: 1.12 $ ; $Date: 1996/02/05 21:17:06 $		*/
d67 2
a68 1
	if (nfft >= MIN(SU_NFLTS, PFA_MAX)) err("Padded nt=%d--too big", nfft);
@


1.12
log
@Deal with header words accessed/modified down to sudoc.
@
text
@d1 1
a1 1
/* SUSPECFX: $Revision: 1.11 $ ; $Date: 1995/08/04 15:30:50 $		*/
d34 1
@


1.11
log
@Changed cast of tr.dt to double for consistency.
@
text
@d1 1
a1 1
/* SUSPECFX: $Revision: 1.10 $ ; $Date: 1994/08/25 15:00:57 $		*/
d22 3
@


1.10
log
@Removed copyright statement from codes that had it.
Moved self-doc line for sudoc.
@
text
@d1 1
a1 1
/* SUSPECFX: $Revision: 1.9 $ ; $Date: 94/06/23 14:55:48 $		*/
d54 1
a54 1
	if (!getparfloat("dt", &dt)) dt = (float) tr.dt/1000000.0;
d63 1
a63 1
	if (nfft >= MIN(SU_NFLTS, PFA_MAX))  err("Padded nt=%d--too big", nfft);
@


1.9
log
@fccabs -> rcabs
@
text
@d1 1
a1 1
/* SUSPECFX: $Revision: 1.8 $ ; $Date: 94/06/15 11:01:25 $		*/
a2 13
/*----------------------------------------------------------------------
 * Copyright (c) Colorado School of Mines, 1990.
 * All rights reserved.
 *
 * This code is part of SU.  SU stands for Seismic Unix, a processing line
 * developed at the Colorado School of Mines, partially based on Stanford
 * Exploration Project (SEP) software.  Inquiries should be addressed to:
 *
 *  Jack K. Cohen, Center for Wave Phenomena, Colorado School of Mines,
 *  Golden, CO 80401  (jkc@@dix.mines.colorado.edu)
 *----------------------------------------------------------------------
 */

a17 1
/**************** end self doc ***********************************/
d23 1
@


1.8
log
@y
changed fcabs to fccabs to reflect change in libcwp.a
y
@
text
@d1 1
a1 1
/* SUSPECFX: $Revision: 1.7 $ ; $Date: 93/11/24 16:04:47 $		*/
d96 1
a96 1
		for (i = 0; i < nfby2p1; ++i)  tr.data[i] = fccabs(ct[i]);
@


1.7
log
@added explicit casts to memcpy ; changed bzero to memset
@
text
@d1 1
a1 1
/* SUSPECFX: $Revision: 1.6 $ ; $Date: 92/10/26 14:10:29 $		*/
d96 1
a96 1
		for (i = 0; i < nfby2p1; ++i)  tr.data[i] = fcabs(ct[i]);
@


1.6
log
@new selfdoc installed
@
text
@d1 1
a1 1
/* SUSPECFX: $Revision: 1.5 $ ; $Date: 91/09/05 08:51:51 $		*/
d89 2
a90 2
		memcpy(rt, tr.data, nt*FSIZE);
		bzero(rt + nt, (nfft - nt)*FSIZE);
@


1.5
log
@string -> String and so forth
@
text
@d1 1
a1 1
/* SUSPECFX: $Revision: 1.4 $ ; $Date: 91/06/21 12:33:51 $		*/
d20 11
a30 11
String sdoc =
" 								\n"
" SUSPECFX - Fourier SPECtrum (T -> F) of traces 		\n"
" 								\n"
" suspecfx <infile >outfile 					\n"
" 								\n"
" Note: To facilitate further processing, the sampling interval	\n"
"       in frequency and first frequency (0) are set in the	\n"
"	output header.						\n"
" 								\n"
;
d59 1
a59 1
	askdoc(1);
@


1.4
log
@Change of program name from suspec1.
@
text
@d1 1
a1 1
/* SUSPECFX: $Revision: 1.3 $ ; $Date: 91/02/14 10:22:46 $		*/
d20 1
a20 1
string sdoc =
@


1.3
log
@Write d1,f1 for plotting programs.
@
text
@d1 1
a1 1
/* SUSPEC1: $Revision: 1.2 $ ; $Date: 90/12/18 20:00:54 $		*/
d22 1
a22 1
" SUSPEC1 - Fourier SPECtrum (t -> w) of traces 		\n"
d24 1
a24 1
" suspec1 <infile >outfile 					\n"
@


1.2
log
@Changed description line
@
text
@d1 1
a1 1
/* SUSPEC1: $Revision: 1.1 $ ; $Date: 90/12/18 19:58:08 $		*/
d24 1
a24 1
" suspec1 <infile >outfile [optional parameters]		\n"
a25 6
" Required parameters:						\n"
" 	none							\n"
" 								\n"
" Optional parameter:						\n"
" 	dt=from header		sampling interval		\n"
" 								\n"
d27 2
a28 1
"       in frequency is echoed to stderr.			\n"
d52 1
a64 2
	dt = (float) tr.dt/1000000.0;   /* used only for par file */
	if (!dt) getparfloat("dt", &dt);
d66 6
d73 1
d78 1
a83 5
	/* Echo transform dimensions */
	if (dt)  warn("d1=%f f1=0.0", 1.0/(nfft*dt));



d100 1
a100 1
		tr.dt = 0;	  /* df is now the relevant step size */
d102 2
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* SUSPEC1: $Revision: 1.9 $ ; $Date: 90/11/17 07:59:25 $		*/
d22 1
a22 1
" SUSPEC1 - Fourier SPECtrum of a 1-dimensional function	\n"
@
