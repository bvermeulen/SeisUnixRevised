head	1.16;
access;
symbols;
locks; strict;
comment	@ * @;


1.16
date	2015.06.02.20.15.23;	author john;	state Exp;
branches;
next	1.15;

1.15
date	2011.11.12.00.40.42;	author john;	state Exp;
branches;
next	1.14;

1.14
date	2006.11.07.22.58.42;	author john;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.09.16.17.07;	author john;	state Exp;
branches;
next	1.12;

1.12
date	97.11.17.16.23.00;	author john;	state Exp;
branches;
next	1.11;

1.11
date	97.07.28.22.36.46;	author john;	state Exp;
branches;
next	1.10;

1.10
date	96.02.21.23.39.07;	author jkc;	state Exp;
branches;
next	1.9;

1.9
date	96.02.21.21.53.50;	author jkc;	state Exp;
branches;
next	1.8;

1.8
date	96.02.20.23.02.46;	author jkc;	state Exp;
branches;
next	1.7;

1.7
date	96.01.30.16.21.36;	author jkc;	state Exp;
branches;
next	1.6;

1.6
date	95.11.17.13.45.07;	author jkc;	state Exp;
branches;
next	1.5;

1.5
date	95.11.16.18.59.46;	author jkc;	state Exp;
branches;
next	1.4;

1.4
date	94.08.25.15.00.12;	author jkc;	state Exp;
branches;
next	1.3;

1.3
date	92.10.26.11.28.39;	author john;	state Exp;
branches;
next	1.2;

1.2
date	91.09.05.08.51.19;	author jkcohen;	state Exp;
branches;
next	1.1;

1.1
date	91.03.22.16.41.17;	author jkcohen;	state Exp;
branches;
next	;


desc
@Make a lot of zero traces -- on purpose
@


1.16
log
@added NINT for dt -- Ekkehart Tessmer Uni-bremen
@
text
@/* Copyright (c) Colorado School of Mines, 2011.*/
/* All rights reserved.                       */

/* SUNULL: $Revision: 1.15 $ ; $Date: 2011/11/12 00:40:42 $	*/

#include "su.h"
#include "segy.h"

/*********************** self documentation **********************/
char *sdoc[] = {
" 								",
" SUNULL - create null (all zeroes) traces	 		",
" 								",
" sunull nt=   [optional parameters] >outdata			",
" 								",
" Required parameter						",
" 	nt=		number of samples per trace		",
" 								",
" Optional parameters						",
" 	ntr=5		number of null traces to create		",
" 	dt=0.004	time sampling interval			",
" 								",
" Rationale: It is sometimes useful to insert null traces	",
"	 between \"panels\" in a shell loop.			",
" 								",
" See also: sukill, sumute, suzero				",
" 								",
NULL};

/* Credits:
 *	CWP: Jack K. Cohen
 *
 * Trace header fields set: ns, dt, tracl
 */
/**************** end self doc ***********************************/


segy tr;

int
main(int argc, char **argv)
{
	int nt;			/* number of time samples		*/
	int ntr;		/* number of traces			*/
	register int itr;	/* trace counter			*/
	float dt;		/* time sampling interval (seconds)	*/
	int idt;		/* 	...		(micro seconds)	*/
	
	/* Initialize */
	initargs(argc, argv);
	requestdoc(0);

	/* Get parameters */
	MUSTGETPARINT("nt", &nt);
	CHECK_NT("nt",nt);
        tr.ns = nt;

	if (!getparint("ntr", &ntr))	ntr = 5;
	if (!getparfloat("dt", &dt))	dt = .004;
	idt = NINT(1000000.0 * dt);

	/* Set tr.data to zeros */
	memset( (void *) tr.data, 0, nt*FSIZE);

	/* Set constant header fields */
	tr.dt = idt;
	tr.ns = nt;

	/* Main loop over traces */
	for (itr = 0; itr < ntr; ++itr) {

		tr.tracl = itr + 1;

		puttr(&tr);
	}

	return(CWP_Exit());
}
@


1.15
log
@copyright
@
text
@d4 1
a4 1
/* SUNULL: $Revision: 1.14 $ ; $Date: 2006/11/07 22:58:42 $	*/
d60 1
a60 1
	idt = 1000000.0 * dt;
@


1.14
log
@changed    memset( .., (int) '\0',...) to memset( .., 0,..) as per suggestion of Marion Zhu and Reg Beardsley
@
text
@d1 4
a4 1
/* SUNULL: $Revision: 1.13 $ ; $Date: 2003/06/09 16:17:07 $	*/
@


1.13
log
@9 June 2003
@
text
@d1 1
a1 1
/* SUNULL: $Revision: 1.12 $ ; $Date: 1997/11/17 16:23:00 $	*/
d60 1
a60 1
	memset( (void *) tr.data, (int) '\0', nt*FSIZE);
@


1.12
log
@changed selfdoc
@
text
@d1 1
a1 1
/* SUNULL: $Revision: 1.11 $ ; $Date: 1997/07/28 22:36:46 $	*/
d74 1
a74 1
	return EXIT_SUCCESS;
@


1.11
log
@changes suggested by Stew Levin to silence SGI compiler warnings, etc
@
text
@d1 1
a1 1
/* SUNULL: $Revision: 1.10 $ ; $Date: 1996/02/21 23:39:07 $	*/
d11 1
a11 1
" sunull count= >outdata					",
@


1.10
log
@Using two argument CHECK_NT macro to check the relevant time sample
quantity.
@
text
@d1 1
a1 1
/* SUNULL: $Revision: 1.9 $ ; $Date: 1996/02/21 21:53:50 $	*/
d42 1
a42 1
	register itr;		/* trace counter			*/
@


1.9
log
@Using CHECK_NT macro.
@
text
@d1 1
a1 1
/* SUNULL: $Revision: 1.8 $ ; $Date: 1996/02/20 23:02:46 $	*/
d52 1
a52 1
	CHECK_NT(nt);
@


1.8
log
@Protect against nt >SU_NFLTS.
@
text
@d1 1
a1 1
/* SUNULL: $Revision: 1.7 $ ; $Date: 1996/01/30 16:21:36 $	*/
d37 1
d52 2
a53 2
	if (nt > SU_NFLTS) err("Cannot have nt=%d > SU_NFLTS=%d",nt,SU_NFLTS);
        else tr.ns = nt;
@


1.7
log
@Deal with header fields accessed/modified in sudoc.
@
text
@d1 1
a1 1
/* SUNULL: $Revision: 1.6 $ ; $Date: 1995/11/17 13:45:07 $	*/
d51 3
@


1.6
log
@Rewrite by JWS to do zeroing efficiently and make code look standard.
@
text
@d1 1
a1 1
/* SUNULL: $Revision: 1.4 $ ; $Date: 1994/08/25 15:00:12 $	*/
d30 1
@


1.5
log
@Removed superfluous null statement (semi-colon) at end of main loop.
@
text
@d20 1
a20 1
"Rationale: It is sometimes useful to insert null traces	",
d28 1
a28 1
 *	CWP: Jack
d38 5
a42 4
	int nt, ntr;
	register int i, itr;
	float dt;
	int idt;
d54 7
d63 1
a63 1
		for (i = 0; i <= nt; ++i)  tr.data[i] = 0.0;
d65 1
a65 2
		tr.ns = nt;
		tr.dt = idt;
a67 1

@


1.4
log
@Removed copyright statement from codes that had it.
Moved self-doc line for sudoc.
@
text
@d1 1
a1 1
/* SUNULL: $Revision: 1.3 $ ; $Date: 92/10/26 11:28:39 $	*/
d60 1
a60 1
	};
@


1.3
log
@new selfdoc installed
@
text
@d1 1
a1 1
/* SUNULL: $Revision: 1.2 $ ; $Date: 91/09/05 08:51:19 $	*/
a2 13
/*----------------------------------------------------------------------
 * Copyright (c) Colorado School of Mines, 1990.
 * All rights reserved.
 *
 * This code is part of SU.  SU stands for Seismic Unix, a processing line
 * developed at the Colorado School of Mines, partially based on Stanford
 * Exploration Project (SEP) software.  Inquiries should be addressed to:
 *
 *  Jack K. Cohen, Center for Wave Phenomena, Colorado School of Mines,
 *  Golden, CO 80401  (jkc@@dix.colorado.edu)
 *----------------------------------------------------------------------
 */

a25 1
/**************** end self doc ***********************************/
d31 1
@


1.2
log
@string -> String and so forth
@
text
@d1 1
a1 1
/* SUNULL: $Revision: 1.3 $ ; $Date: 90/11/17 15:47:47 $	*/
d20 19
a38 19
String sdoc =
" 								\n"
" SUNULL - create null (all zeroes) traces	 		\n"
" 								\n"
" sunull count= >outdata					\n"
" 								\n"
" Required parameter						\n"
" 	nt=		number of samples per trace		\n"
" 								\n"
" Optional parameters						\n"
" 	ntr=5		number of null traces to create		\n"
" 	dt=0.004	time sampling interval			\n"
" 								\n"
"Rationale: It is sometimes useful to insert null traces	\n"
"	 between \"panels\" in a shell loop.			\n"
" 								\n"
" See also: sukill, sumute, suzero				\n"
" 								\n"
;
d58 1
a58 1
	askdoc(0);
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
string sdoc =
@
