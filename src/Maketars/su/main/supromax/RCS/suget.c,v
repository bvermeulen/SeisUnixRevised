head	1.7;
access;
symbols;
locks; strict;
comment	@ * @;


1.7
date	2011.11.16.23.23.25;	author john;	state Exp;
branches;
next	1.6;

1.6
date	2011.11.12.00.39.45;	author john;	state Exp;
branches;
next	1.5;

1.5
date	2008.05.05.20.51.13;	author john;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.09.16.17.07;	author john;	state Exp;
branches;
next	1.3;

1.3
date	96.09.13.21.49.05;	author john;	state Exp;
branches;
next	1.2;

1.2
date	94.09.06.10.21.25;	author jkc;	state Exp;
branches;
next	1.1;

1.1
date	94.07.27.13.30.27;	author john;	state Exp;
branches;
next	;


desc
@get su traces for outside processing packages
@


1.7
log
@added Reg Beardsley's checkpar()
@
text
@/* Copyright (c) Colorado School of Mines, 2011.*/
/* All rights reserved.                       */

/* SUGET: $Revision: 1.5 $ ; $Date: 2008/05/05 20:51:13 $                */

#include "su.h"
#include "segy.h"

/*********************** self documentation **********************/
char *sdoc[]= {
"									",
" SUGET  - Connect SU program to file descriptor for input stream.	",
"									",
"    suget fd=$1 | next_su_module					",
"									",
" This program is for interfacing \" outside processing systems \"	",
" with SU. Typically, an outside system would execute the su command file",
" and a file descriptor would be passed by an outside system to		",
" the su command file so that output data from the outside system	",
" could be piped into the su programs executing inside the command file.",
"									",
" Example:    suget fd=$1 | next_su_module				",
"									",
"      fd=-1        file_descriptor_for_input_stream			",
"      verbose=0    minimal listing					",
"                   =1  asks for message with each trace processed.	",
NULL};

/*
 * Author: John Anderson (visiting scholar from Mobil) July 1994
 */
/**************** end self doc ********************************/

int fgettrn(FILE *fp, segy *tp);

segy tr;
int
main(int argc, char **argv)
{
	FILE *fp;
	int fd,j=0,verbose;

	initargs(argc,argv);
	requestdoc(1);

	if(!getparint("fd",&fd)) fd=-1;
	if(!getparint("verbose",&verbose)) verbose=0; 
        checkpars();
	warn("File descriptor passed to suget = %d",fd);
	if( (fp = (FILE *) fdopen(fd,"r"))==NULL) err("Bad file descriptor");
	warn("About to read first trace");
	if(!fgettr(fp,&tr)) err("Can't get first trace");

	do{
		if(verbose>0){
			warn("read trace %d",j);
			j++;
		}

		puttr(&tr);

	} while(fgettr(fp,&tr));

	return(CWP_Exit());
}
@


1.6
log
@copyright
@
text
@d48 1
@


1.5
log
@explicit cast put on fdopen
@
text
@d1 4
a4 1
/* SUGET: $Revision: 1.4 $ ; $Date: 2003/06/09 16:17:07 $                */
@


1.4
log
@9 June 2003
@
text
@d1 1
a1 1
/* SUGET: $Revision: 1.3 $ ; $Date: 1996/09/13 21:49:05 $                */
d46 1
a46 1
	if( (fp = fdopen(fd,"r"))==NULL) err("Bad file descriptor");
@


1.3
log
@silenced -Wall messages
@
text
@d1 1
a1 1
/* SUGET: $Revision: 1.2 $ ; $Date: 1994/09/06 10:21:25 $                */
d60 1
a60 1
	return (EXIT_SUCCESS);
@


1.2
log
@Added include of segy.h
@
text
@d1 1
a1 1
/* SUGET: $Revision: 1.1 $ ; $Date: 94/07/27 13:30:27 $                */
d34 2
a35 1
int main(int argc, char **argv)
d38 1
a38 1
	int fd,nread,j=0,verbose;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* SUGET: $Revision: 1.25 $ ; $Date: 94/06/02 15:28:20 $                */
d4 1
@
