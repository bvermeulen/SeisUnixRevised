head	1.19;
access;
symbols;
locks; strict;
comment	@ * @;


1.19
date	2011.11.12.00.01.04;	author john;	state Exp;
branches;
next	1.18;

1.18
date	2003.06.09.16.17.07;	author john;	state Exp;
branches;
next	1.17;

1.17
date	97.07.28.22.36.46;	author john;	state Exp;
branches;
next	1.16;

1.16
date	96.09.13.21.49.05;	author john;	state Exp;
branches;
next	1.15;

1.15
date	96.02.07.15.58.47;	author jkc;	state Exp;
branches;
next	1.14;

1.14
date	95.01.19.11.44.54;	author john;	state Exp;
branches;
next	1.13;

1.13
date	94.08.25.15.01.33;	author jkc;	state Exp;
branches;
next	1.12;

1.12
date	93.08.13.10.28.27;	author john;	state Exp;
branches;
next	1.11;

1.11
date	92.10.23.16.06.36;	author john;	state Exp;
branches;
next	1.10;

1.10
date	91.09.05.08.52.21;	author jkcohen;	state Exp;
branches;
next	1.9;

1.9
date	90.10.29.18.04.37;	author jkc;	state Exp;
branches;
next	1.8;

1.8
date	90.10.29.17.59.15;	author jkc;	state Exp;
branches;
next	1.7;

1.7
date	90.10.29.17.48.26;	author jkc;	state Exp;
branches;
next	1.6;

1.6
date	90.10.28.08.18.38;	author jkc;	state Exp;
branches;
next	1.5;

1.5
date	90.10.27.23.13.58;	author jkc;	state Exp;
branches;
next	1.4;

1.4
date	90.10.27.08.28.24;	author jkc;	state Exp;
branches;
next	1.3;

1.3
date	90.10.26.20.27.20;	author jkc;	state Exp;
branches;
next	1.2;

1.2
date	90.10.26.17.58.15;	author dhale;	state Exp;
branches;
next	1.1;

1.1
date	90.10.23.18.37.28;	author dhale;	state Exp;
branches;
next	;


desc
@convert chars to floats
@


1.19
log
@copyright
@
text
@/* Copyright (c) Colorado School of Mines, 2011.*/
/* All rights reserved.                       */

/* SUUNPACK1: $Revision: 1.18 $ ; $Date: 2003/06/09 16:17:07 $	*/

#include "su.h"
#include "segy.h"

/*********************** self documentation **********************/
char *sdoc[] = {
"								",
"SUUNPACK1 - unpack segy trace data from chars to floats	",
"								",
"    suunpack1 <packed_file >unpacked_file			",
"								",
"suunpack1 is the approximate inverse of supack1		",
"								",
NULL};

/* Credits:
 *	CWP: Jack K. Cohen, Shuki Ronen, Brian Sumner
 *
 * Caveats:
 *	This program is for single site use with supack1.  See the
 *	supack1 header comments.
 *
 * Notes:
 *	ungpow and unscale are defined in segy.h
 *	trid = CHARPACK is defined in su.h and segy.h
 *
 *
 * Trace header fields accessed: ns, trid, ungpow, unscale
 * Trace header fields modified:     trid, ungpow, unscale
 */
/**************** end self doc ***********************************/


segy tr;	/* on input: SEGY hdr & (signed char) trace data */
		/* on output: data is floats */

int
main(int argc, char **argv)
{
	float ungpow;
	int nt;
	cwp_Bool isone, istwo;
	float f_one = 1.0;
	float f_two = 2.0;

	/* Initialize */
	initargs(argc, argv);
	requestdoc(1);


	/* Get info from first trace */
	if (!gettr(&tr)) err("can't get first trace");
	if (tr.trid != CHARPACK) err("Not char packed traces");
	nt = tr.ns;
	ungpow = tr.ungpow;
	isone = CLOSETO(ungpow, f_one);
	istwo = CLOSETO(ungpow, f_two);


	/* Main loop over segy traces */
	do {
		/* Point input char trace at the trace data and unpack.
		   Since the floats take more room than the chars,
		   we load in from back end.
		
		   Note that the segy field tr.data is declared as
		   floats, so we need to invent a pointer for the
		   char array which is actually there.
		*/

		register int i;
		register float val;
		register signed char *itr = (signed char *) tr.data;

		if (istwo) {
			for (i = nt-1; i >= 0; --i) { 
				val = (float) itr[i];
				val *= tr.unscale;
				tr.data[i] = val * ABS(val);
			}
		} else if (isone) {
			for (i = nt-1; i >= 0; --i) { 
				val = (float) itr[i];
				val *= tr.unscale;
				tr.data[i] = val;
			}
		} else {
			for (i = nt-1; i >= 0; --i) { 
				val = (float) itr[i];
				val *= tr.unscale;
				tr.data[i] = (val >= 0.0) ?
					pow(val, ungpow) : -pow(-val, ungpow);
			}
		}


		/* Mark as seismic data and remove now unnecessary fields */
		tr.trid = 1;
		tr.ungpow = 0.0;
		tr.unscale = 0.0;


		/* Write out restored (unpacked) segy */
		puttr(&tr);


	} while (gettr(&tr));


	return(CWP_Exit());
}
@


1.18
log
@9 June 2003
@
text
@d1 4
a4 1
/* SUUNPACK1: $Revision: 1.17 $ ; $Date: 1997/07/28 22:36:46 $	*/
@


1.17
log
@changes suggested by Stew Levin to silence SGI compiler warnings, etc
@
text
@d1 1
a1 1
/* SUUNPACK1: $Revision: 1.16 $ ; $Date: 1996/09/13 21:49:05 $	*/
d111 1
a111 1
	return EXIT_SUCCESS;
@


1.16
log
@silenced -Wall messages
@
text
@d1 1
a1 1
/* SUUNPACK1: $Revision: 1.15 $ ; $Date: 1996/02/07 15:58:47 $	*/
d11 1
a11 1
"suunpack1 <packed_file >unpacked_file				",
d18 1
a18 1
 *	CWP: Jack, Shuki, Brian
d44 2
d57 2
a58 2
	isone = CLOSETO(ungpow, 1.0);
	istwo = CLOSETO(ungpow, 2.0);
@


1.15
log
@Deal with header fields accessed/modified down to sudoc.
@
text
@d1 1
a1 1
/* SUUNPACK1: $Revision: 1.14 $ ; $Date: 1995/01/19 11:44:54 $	*/
d38 1
@


1.14
log
@cosmetic
@
text
@d1 1
a1 1
/* SUUNPACK1: $Revision: 1.13 $ ; $Date: 94/08/25 15:01:33 $	*/
d28 3
@


1.13
log
@Removed copyright statement from codes that had it.
Moved self-doc line for sudoc.
@
text
@d1 1
a1 1
/* SUUNPACK1: $Revision: 1.12 $ ; $Date: 93/08/13 10:28:27 $	*/
d32 1
a32 1
segy tr;	/* on input: SEGY hdr & (signed char) trace data
d58 7
a64 6
		/* Since the floats take more room than the chars,
		/* we load in from back end.
		/*
		/* Note that the segy field tr.data is declared as
		/* floats, so we need to invent a pointer for the
		/* char array which is actually there. */
@


1.12
log
@changed Bool to cwp_Bool
@
text
@d1 1
a1 1
/* SUUNPACK1: $Revision: 1.11 $ ; $Date: 92/10/23 16:06:36 $	*/
a2 13
/*----------------------------------------------------------------------
 * Copyright (c) Colorado School of Mines, 1990.
 * All rights reserved.
 *
 * This code is part of SU.  SU stands for Seismic Unix, a processing line
 * developed at the Colorado School of Mines, partially based on Stanford
 * Exploration Project (SEP) software.  Inquiries should be addressed to:
 *
 *  Jack K. Cohen, Center for Wave Phenomena, Colorado School of Mines,
 *  Golden, CO 80401  (jkc@@dix.mines.colorado)
 *----------------------------------------------------------------------
 */

a15 1
/**************** end self doc ***********************************/
d29 1
@


1.11
log
@new selfdoc installed
@
text
@d1 1
a1 1
/* SUUNPACK1: $Revision: 1.10 $ ; $Date: 91/09/05 08:52:21 $	*/
d52 1
a52 1
	Bool isone, istwo;
@


1.10
log
@string -> String and so forth
@
text
@d1 1
a1 1
/* SUUNPACK1: $Revision: 1.9 $ ; $Date: 90/10/29 18:04:37 $	*/
d20 9
a28 9
String sdoc = "\
								\n\
SUUNPACK1 - unpack segy trace data from chars to floats		\n\
								\n\
suunpack1 <packed_file >unpacked_file				\n\
								\n\
suunpack1 is the approximate inverse of supack1			\n\
								\n\
";
d56 1
a56 1
	askdoc(1);
@


1.9
log
@Tweak
@
text
@d1 1
a1 1
/* SUUNPACK1: $Revision: 1.8 $ ; $Date: 90/10/29 17:59:15 $	*/
d20 1
a20 1
string sdoc = "\
d52 1
a52 1
	bool isone, istwo;
@


1.8
log
@Tweaks
@
text
@d1 1
a1 1
/* SUUNPACK1: $Revision: 1.7 $ ; $Date: 90/10/29 17:48:26 $	*/
d98 1
a98 1
				tr.data[i] = (val >=0) ?
@


1.7
log
@Some efficiencies, in particular handle ungpow=2 default case without pow.
@
text
@d1 1
a1 1
/* SUUNPACK1: $Revision: 1.6 $ ; $Date: 90/10/28 08:18:38 $	*/
d51 1
d62 1
d83 1
a83 1
			for (i = tr.ns - 1; i >= 0; --i) { 
d89 1
a89 1
			for (i = tr.ns - 1; i >= 0; --i) { 
d95 1
a95 1
			for (i = tr.ns - 1; i >= 0; --i) { 
@


1.6
log
@ANSI guarantees sign extension of signed chars when promoted--I think.
@
text
@d1 1
a1 1
/* SUUNPACK1: $Revision: 1.5 $ ; $Date: 90/10/27 23:13:58 $	*/
d45 1
a45 1
segy tr;	/* on input: SEGY hdr & (char) trace data
d50 2
a51 2
	signed char *itr;/* temp to hold a packed datum		*/
	register int i;	/* counter over samples on a trace	*/
a52 1

d58 6
a63 2
	/* Main loop over segy traces */
	while (gettr(&tr)) {
a64 4
		/* Make sure this is character packed trace */
		if (tr.trid != CHARPACK) { 
			err("Not char packed trace at #%d", tr.tracl);
		}
d66 2
d69 6
a74 2
		   Since the floats take more room than the chars,
		   we load in from back end.
d76 23
a98 10
		   Note that the segy field tr.data is declared as
		   floats, so we need to invent a pointer for the
		   char array which is actually there.
		*/
		itr = (signed char *) tr.data;
		for (i = tr.ns - 1; i >= 0; i--) { 
			tr.data[i] = (float) itr[i];
			tr.data[i] *= tr.unscale;
			tr.data[i] = (float) (SGN(tr.data[i]) *
				pow(ABS(tr.data[i]), tr.ungpow));
d101 1
d107 1
d111 2
a112 1
	}
@


1.5
log
@Explicitly use signed chars since guaranteed by ANSI C.
@
text
@d1 1
a1 1
/* SUUNPACK1: $Revision: 1.4 $ ; $Date: 90/10/27 08:28:24 $	*/
a41 8
 *	This program can be speeded up if your machine does sign extension
 *	of chars when they are cast to floats.  If your machine does that,
 *	(and most do) then you can change the line
 *		tr.data[i] = (float) (ISNEGCHAR(itr[i]) ?
 *				 SIGNEXTEND(itr[i]) : (int) itr[i]);
 * 	to
 *		tr.data[i] = (float) itr[i];
 *	(ISNEGCHAR and SIGNEXTEND are macros defined in cwp.h).
d46 1
a46 1
		   on output: data is floats */
d77 1
a77 6
			/* Next line is fancy version of
			   tr.data[i] = (float) itr[i];
			   for machines that don't sign extend
			*/
			tr.data[i] = (float) (ISNEGCHAR(itr[i]) ?
				 SIGNEXTEND(itr[i]) : (int) itr[i]);
@


1.4
log
@Unset tr.ungpow and tr.unscale after unpacking traces.
@
text
@d1 1
a1 1
/* SUUNPACK1: $Revision: 1.3 $ ; $Date: 90/10/26 20:27:20 $	*/
d49 1
a49 1
 *	(ISNEGCHAR and SIGNEXTEND are macros defined in cwpdefs.h).
d58 1
a58 1
	string itr;	/* temp to hold a packed datum		*/
d83 1
a83 1
		itr = (char *) tr.data;
d90 1
a90 1
					 SIGNEXTEND(itr[i]) : (int) itr[i]);
d93 1
a93 1
			  pow((double) ABS(tr.data[i]),(double) tr.ungpow));
@


1.3
log
@Revised for all-purpose fgettr,fputtr
@
text
@d1 1
a1 1
/* SUUNPACK1: $Revision: 1.2 $ ; $Date: 90/10/26 17:58:15 $	*/
d96 1
a96 1
		/* Mark as seismic data */
d98 2
@


1.2
log
@Set tr.trid to seismic after unpacking (by dave).
@
text
@d1 1
a1 1
/* SUUNPACK1: $Revision: 1.1 $ ; $Date: 90/10/23 18:37:28 $	*/
d68 1
a68 1
	while (gettr1(&tr)) { 	/* variant of gettr for chars */
a74 3
		/* Converting to seismic data */
		tr.trid = 1;

d95 3
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* SUUNPACK1: $Revision: 2.5 $ ; $Date: 89/05/25 16:54:48 $	*/
d74 3
@
