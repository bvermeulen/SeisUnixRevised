head	1.11;
access;
symbols;
locks
	john:1.11; strict;
comment	@ * @;


1.11
date	2011.11.16.23.09.52;	author john;	state Exp;
branches;
next	1.10;

1.10
date	2011.11.12.00.23.17;	author john;	state Exp;
branches;
next	1.9;

1.9
date	2006.11.07.22.58.42;	author john;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.09.16.17.07;	author john;	state Exp;
branches;
next	1.7;

1.7
date	97.07.28.22.36.46;	author john;	state Exp;
branches;
next	1.6;

1.6
date	96.09.13.21.49.05;	author john;	state Exp;
branches;
next	1.5;

1.5
date	96.03.26.22.46.31;	author john;	state Exp;
branches;
next	1.4;

1.4
date	96.01.30.15.53.16;	author jkc;	state Exp;
branches;
next	1.3;

1.3
date	95.10.24.16.37.19;	author john;	state Exp;
branches;
next	1.2;

1.2
date	95.10.24.16.22.15;	author john;	state Exp;
branches;
next	1.1;

1.1
date	95.10.24.15.47.15;	author john;	state Exp;
branches;
next	;


desc
@sumix - performs weighted moving average of traces (a trace mix)
@


1.11
log
@added Reg Beardsley's checkpar()
@
text
@/* Copyright (c) Colorado School of Mines, 2011.*/
/* All rights reserved.                       */

/* SUMIX: $Revision: 1.9 $ ; $Date: 2006/11/07 22:58:42 $	*/

#include "su.h"
#include "segy.h"

/*********************** self documentation **********************/
char *sdoc[] = {
"									",
" SUMIX - compute weighted moving average (trace MIX) on a panel	",
"	  of seismic data						",
"									",
" sumix <stdin >sdout 							",
" mix=.6,1,1,1,.6	array of weights for weighted average		",
"									",
"									",
" Note: 								",
" The number of values defined by mix=val1,val2,... determines the number",
" of traces to be averaged, the values determine the weights.		",
" 									",
" Examples: 								",
" sumix <stdin mix=.6,1,1,1,.6 >sdout 	(default) mix over 5 traces weights",
" sumix <stdin mix=1,1,1 >sdout 	simple 3 trace moving average	",
" 									",
NULL};

/* Author:
 *	CWP: John Stockwell, Oct 1995
 *
 * Trace header fields accessed: ns
 */
/**************** end self doc ***********************************/


/* default weighting values */
#define VAL0	0.6
#define VAL1	1.0
#define VAL2	1.0
#define VAL3	1.0
#define VAL4	0.6


segy tr;

int
main(int argc, char **argv)
{
	int nmix;		/* number of traces to mix over		*/
	int imix;		/* mixing counter			*/
	int it;			/* sample counter			*/
	int nt;			/* number of time samples per trace	*/
	int itr=0;		/* trace counter			*/
	size_t databytes;	/* number of bytes (nt*FSIZE)		*/
	size_t mixbytes;	/* number of bytes (nt*FSIZE*nmix)	*/
	float *mix;		/* array of mix values			*/
	float *temp;		/* temp array for mixing 		*/
	float **data;		/* array for mixing 			*/
	
	
	/* Initialize */
	initargs(argc, argv);
	requestdoc(1);

	/* Get info from first trace */
	if(!gettr(&tr))
		err("can't get first trace");
	nt = tr.ns;

	/* Get mix weighting values values */
	if ((nmix = countparval("mix"))!=0) {
		mix = ealloc1float(nmix);
		getparfloat("mix",mix);
		
	} else {
		nmix = 5;
		mix = ealloc1float(nmix);

		mix[0] = VAL0;
		mix[1] = VAL1;
		mix[2] = VAL2;
		mix[3] = VAL3;
		mix[4] = VAL4;
	}

        checkpars();

	/* Divide mixing weight by number of traces to mix */
	for (imix = 0; imix < nmix; ++imix)
		mix[imix]=mix[imix]/((float) nmix);

	/* Compute databytes per trace and bytes in mixing panel */
	databytes = FSIZE*nt;
	mixbytes = databytes*nmix;

	/* Allocate temporary space for mixing  */
	data = ealloc2float(nt,nmix);
	temp = ealloc1float(nt);

	/* Zero out data array */
	memset((void *) data[0], 0, mixbytes);

	/* Loop over remaining traces */
	do {

		++itr;

		/* Zero out temp */
		memset((void *) temp, 0, databytes);

		/* Read data portion of trace into first column of data[][] */
		memcpy( (void *) data[0], (const void *) tr.data, databytes);
	
		/* Loop over time samples */
		for (it=0; it<nt; ++it) {

			/* Weighted moving average (mix) */
			for(imix=0; imix<nmix; ++imix)
				temp[it]+=data[imix][it]*mix[imix];

			/* put mixed data back in seismic trace */
			tr.data[it] = temp[it]; 
		}

		/* Bump columns of data[][] over by 1 */
		/* to make space for data from next trace */
		for (imix=nmix-1; 0<imix; --imix)
			for (it=0; it<nt; ++it) 
				data[imix][it] = data[imix-1][it];

				
		puttr(&tr);
	} while (gettr(&tr)); 

	return(CWP_Exit());

}
@


1.10
log
@copyright
@
text
@d87 2
@


1.9
log
@changed    memset( .., (int) '\0',...) to memset( .., 0,..) as per suggestion of Marion Zhu and Reg Beardsley
@
text
@d1 4
a4 1
/* SUMIX: $Revision: 1.8 $ ; $Date: 2003/06/09 16:17:07 $	*/
@


1.8
log
@9 June 2003
@
text
@d1 1
a1 1
/* SUMIX: $Revision: 1.7 $ ; $Date: 1997/07/28 22:36:46 $	*/
d97 1
a97 1
	memset((void *) data[0], (int) '\0', mixbytes);
d105 1
a105 1
		memset((void *) temp, (int) '\0', databytes);
@


1.7
log
@changes suggested by Stew Levin to silence SGI compiler warnings, etc
@
text
@d1 1
a1 1
/* SUMIX: $Revision: 1.6 $ ; $Date: 1996/09/13 21:49:05 $	*/
d131 1
a131 1
	return EXIT_SUCCESS;
@


1.6
log
@silenced -Wall messages
@
text
@d1 1
a1 1
/* SUMIX: $Revision: 1.5 $ ; $Date: 1996/03/26 22:46:31 $	*/
d52 2
a53 2
	float databytes;	/* number of bytes (nt*FSIZE)		*/
	float mixbytes;		/* number of bytes (nt*FSIZE*nmix)	*/
@


1.5
log
@cosmetic
@
text
@d1 1
a1 1
/* SUMIX: $Revision: 1.4 $ ; $Date: 1996/01/30 15:53:16 $	*/
d44 1
@


1.4
log
@Deal with header fields accessed/modified in sudoc.
@
text
@d1 1
a1 1
/* SUMIX: $Revision: 1.3 $ ; $Date: 1995/10/24 16:37:19 $	*/
d13 1
a13 1
" mix=.6,1,1,1,.6	array of weights for weighted averatge		",
d18 1
a18 1
" of traces to be averaged, the values determin the weights.		",
@


1.3
log
@added explicit cast out of paranoia
@
text
@d1 1
a1 1
/* SUMIX: $Revision: 1.2 $ ; $Date: 1995/10/24 16:22:15 $	*/
d28 2
@


1.2
log
@fixed error in default parameters
@
text
@d1 1
a1 1
/* SUMIX: $Revision: 1.1 $ ; $Date: 1995/10/24 15:47:15 $	*/
d83 1
a83 1
		mix[imix]=mix[imix]/nmix;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* SUMIX: $Revision: 1.14 $ ; $Date: 94/08/25 14:59:39 $	*/
d10 1
a10 1
"          of seismic data						",
d14 3
a16 3
"							        	",
"							        	",
" Note: 							        ",
d18 3
a20 3
" of traces to be averaged, the values determin the weights.        	",
" 							        	",
" Examples: 							        ",
d23 1
a23 1
" 							        	",
d27 1
a27 1
 *        CWP: John Stockwell, Oct 1995
d65 4
a68 4
        /* Get mix weighting values values */
        if ((nmix = countparval("mix"))!=0) {
                mix = ealloc1float(nmix);
                getparfloat("mix",mix);
d70 10
a79 14
        } else {
                nmix = 5;
                mix = ealloc1float(nmix);

                mix[0] = VAL0/nmix;
                mix[1] = VAL1/nmix;
                mix[2] = VAL2/nmix;
                mix[3] = VAL3/nmix;
                mix[4] = VAL4/nmix;
        }

	databytes = FSIZE*nt;
	mixbytes = databytes*nmix;
	
d85 4
d110 1
a110 1
			/* Perform weighted moving average sample by sample */
d114 1
d119 1
@
