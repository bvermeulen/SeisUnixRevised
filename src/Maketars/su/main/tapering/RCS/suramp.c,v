head	1.13;
access;
symbols;
locks; strict;
comment	@ * @;


1.13
date	2011.11.16.23.33.10;	author john;	state Exp;
branches;
next	1.12;

1.12
date	2011.11.12.00.41.35;	author john;	state Exp;
branches;
next	1.11;

1.11
date	2006.06.20.18.07.03;	author john;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.09.16.17.07;	author john;	state Exp;
branches;
next	1.9;

1.9
date	97.10.13.15.48.19;	author john;	state Exp;
branches;
next	1.8;

1.8
date	96.09.18.19.26.09;	author jkc;	state Exp;
branches;
next	1.7;

1.7
date	96.09.13.21.49.05;	author john;	state Exp;
branches;
next	1.6;

1.6
date	96.02.05.16.48.44;	author jkc;	state Exp;
branches;
next	1.5;

1.5
date	95.08.04.15.42.30;	author jkc;	state Exp;
branches;
next	1.4;

1.4
date	94.08.25.15.00.39;	author jkc;	state Exp;
branches;
next	1.3;

1.3
date	92.10.26.11.00.12;	author john;	state Exp;
branches;
next	1.2;

1.2
date	91.09.05.08.51.37;	author jkcohen;	state Exp;
branches;
next	1.1;

1.1
date	91.02.28.16.21.18;	author jkcohen;	state Exp;
branches;
next	;


desc
@Taper ends of each trace for applics like time-variant processing
@


1.13
log
@added Reg Beardsley's checkpar()
@
text
@/* Copyright (c) Colorado School of Mines, 2011.*/
/* All rights reserved.                       */

/* SURAMP: $Revision: 1.11 $ ; $Date: 2006/06/20 18:07:03 $	*/

#include "su.h"
#include "segy.h"

/*********************** self documentation **********************/
char *sdoc[] = {
" 									",
" SURAMP - Linearly taper the start and/or end of traces to zero.	",
" 									",
" suramp <stdin >stdout [optional parameters]				",
" 									",
" Required parameters:							",
" 	if dt is not set in header, then dt is mandatory		",
" 							       		",
" Optional parameters							",
"	tmin=tr.delrt/1000	end of starting ramp (sec)		",
"	tmax=(nt-1)*dt		beginning of ending ramp (sec)		",
" 	dt = (from header)	sampling interval (sec)			",
" 									",
" The taper is a linear ramp from 0 to tmin and/or tmax to the		",
" end of the trace.  Default is a no-op!				",
" 									",
NULL};

/* Credits:
 *
 *	CWP: Jack K. Cohen, Ken Larner 
 *
 * Trace header fields accessed: ns, dt, delrt
 */
/**************** end self doc ***********************************/


segy tr;

int
main(int argc, char **argv)
{
	int nt;			/* number of sample points on traces	*/
	float dt;		/* time sampling interval		*/
	float *taper1=NULL;	/* vector of taper weights (up ramp)	*/
	float *taper2=NULL;	/* vector of taper weights (down ramp)	*/
	int ntaper1;		/* number of taper weights (up ramp)	*/
	int ntaper2;		/* number of taper weights (down ramp)	*/
	float tmin;		/* end of up ramp			*/
	float tmax;		/* start of down ramp			*/


	/* Initialize */
	initargs(argc, argv);
	requestdoc(1);


	/* Get info from first trace */
	if (!gettr(&tr))  err("can't get first trace");
	nt = (int) tr.ns;
	if (!getparfloat("dt", &dt))	dt = ((double) tr.dt)/1000000.0;
	if (!dt) err("dt field is zero and not getparred");


	/* Get parameters */
	if (!getparfloat("tmin", &tmin))  tmin = tr.delrt/1000.0;
	if (!getparfloat("tmax", &tmax))	tmax = (nt - 1)*dt;
        checkpars();
	
	/* Make sure that ntaper1 and ntaper2 never < 0 */
	ntaper1 = NINT(MAX(0,(tmin - tr.delrt/1000.0)/dt));
	ntaper2 = NINT(MAX(0,(tr.delrt/1000.0 + (nt - 1)*dt - tmax )/dt));

	/* Set up taper weights */
	if (ntaper1) {
		register int i;
		taper1 = ealloc1float(ntaper1);
		for (i = 0; i < ntaper1; ++i)
			taper1[i] = (float) (i+1)/ntaper1;
	}
	if (ntaper2) {
		register int i;
		taper2 = ealloc1float(ntaper2);
		for (i = 0; i < ntaper2; ++i)
			taper2[i] = (float) (ntaper2 - i)/ntaper2;
	}
						
	

	/* Main loop over traces */
	do {
		register int i;
		if (ntaper1) {
			for (i = 0; i < ntaper1; ++i)
				tr.data[i] *= taper1[i];
		}

		if (ntaper2) {
			for (i = 0; i < ntaper2; ++i)
				tr.data[nt - ntaper2 + i] *= taper2[i];
		}

		puttr(&tr);
	} while (gettr(&tr));

	return(CWP_Exit());
}
@


1.12
log
@copyright
@
text
@d68 1
@


1.11
log
@ Balazs Nemeth's fix
@
text
@d1 4
a4 1
/* SURAMP: $Revision: 1.10 $ ; $Date: 2003/06/09 16:17:07 $	*/
@


1.10
log
@9 June 2003
@
text
@d1 1
a1 1
/* SURAMP: $Revision: 1.9 $ ; $Date: 1997/10/13 15:48:19 $	*/
d28 1
a28 1
 *	CWP: Jack, Ken
d65 4
a68 3
	ntaper1 = (tmin - tr.delrt/1000.0)/dt;
	ntaper2 = (tr.delrt/1000.0 + (nt - 1)*dt - tmax )/dt;

@


1.9
log
@added Klass Koster's fix for ntaper2
@
text
@d1 1
a1 1
/* SURAMP: $Revision: 1.8 $ ; $Date: 1996/09/18 19:26:09 $	*/
d101 1
a101 1
	return EXIT_SUCCESS;
@


1.8
log
@Cosmetic.
@
text
@d1 1
a1 1
/* SURAMP: $Revision: 1.7 $ ; $Date: 1996/09/13 21:49:05 $	*/
d66 1
a66 1
	ntaper2 = ((nt - 1)*dt - tmax)/dt;
@


1.7
log
@silenced -Wall messages
@
text
@d1 1
a1 1
/* SURAMP: $Revision: 1.6 $ ; $Date: 1996/02/05 16:48:44 $	*/
d40 2
a41 2
	int nt;		/* number of sample points on traces	*/
	float dt;	/* time sampling interval		*/
d44 4
a47 4
	int ntaper1;	/* number of taper weights (up ramp)	*/
	int ntaper2;	/* number of taper weights (down ramp)	*/
	float tmin;	/* end of up ramp			*/
	float tmax;	/* start of down ramp			*/
@


1.6
log
@Deal with header words accessed/modified down to sudoc.
@
text
@d1 1
a1 1
/* SURAMP: $Revision: 1.5 $ ; $Date: 1995/08/04 15:42:30 $	*/
d37 1
d42 2
a43 2
	float *taper1;	/* vector of taper weights (up ramp)	*/
	float *taper2;	/* vector of taper weights (down ramp)	*/
@


1.5
log
@Changed cast of tr.dt to double for consistency.
@
text
@d1 1
a1 1
/* SURAMP: $Revision: 1.4 $ ; $Date: 1994/08/25 15:00:39 $	*/
d29 2
@


1.4
log
@Removed copyright statement from codes that had it.
Moved self-doc line for sudoc.
@
text
@d1 1
a1 1
/* SURAMP: $Revision: 1.3 $ ; $Date: 92/10/26 11:00:12 $	*/
d55 1
a55 1
	if (!getparfloat("dt", &dt))	dt = tr.dt/1000000.0;
d60 1
a60 1
	if (!getparfloat("tmin", &tmin))	tmin = tr.delrt/1000.0;
@


1.3
log
@new selfdoc installed
@
text
@d1 1
a1 1
/* SURAMP: $Revision: 1.2 $ ; $Date: 91/09/05 08:51:37 $	*/
a2 13
/*----------------------------------------------------------------------
 * Copyright (c) Colorado School of Mines, 1990.
 * All rights reserved.
 *
 * This code is part of SU.  SU stands for Seismic Unix, a processing line
 * developed at the Colorado School of Mines, partially based on Stanford
 * Exploration Project (SEP) software.  Inquiries should be addressed to:
 *
 *  Jack K. Cohen, Center for Wave Phenomena, Colorado School of Mines,
 *  Golden, CO 80401  (jkc@@dix.mines.colorado.edu)
 *----------------------------------------------------------------------
 */

a24 1
/**************** end self doc ***********************************/
d30 1
@


1.2
log
@string -> String and so forth
@
text
@d1 1
a1 1
/* SURAMP: $Revision: 1.1 $ ; $Date: 91/02/28 16:21:18 $	*/
d20 18
a37 18
String sdoc =
" 								\n"
" SURAMP - Linearly taper the start and/or end of traces to zero.\n"
" 								\n"
" suramp <stdin >stdout [optional parameters]			\n"
" 								\n"
" Required parameters:						\n"
" 	if dt is not set in header, then dt is mandatory	\n"
" 							        \n"
" Optional parameters						\n"
"	tmin=tr.delrt/1000	end of starting ramp (sec)	\n"
"	tmax=(nt-1)*dt		beginning of ending ramp (sec)	\n"
" 	dt = (from header)	sampling interval (sec)		\n"
" 								\n"
" The taper is a linear ramp from 0 to tmin and/or tmax to the	\n"
" end of the trace.  Default is a no-op!			\n"
" 								\n"
;
d62 1
a62 1
	askdoc(1);
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* SURAMP: $Revision: 1.5 $ ; $Date: 90/12/23 16:37:29 $	*/
d20 1
a20 1
string sdoc =
@
