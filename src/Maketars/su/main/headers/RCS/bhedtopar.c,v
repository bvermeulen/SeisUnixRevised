head	1.11;
access;
symbols;
locks
	john:1.11; strict;
comment	@ * @;


1.11
date	2011.11.16.22.10.29;	author john;	state Exp;
branches;
next	1.10;

1.10
date	2011.11.12.00.20.05;	author john;	state Exp;
branches;
next	1.9;

1.9
date	2006.03.30.18.22.35;	author john;	state Exp;
branches;
next	1.8;

1.8
date	2006.03.29.23.01.43;	author john;	state Exp;
branches;
next	1.7;

1.7
date	2005.12.07.17.11.15;	author john;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.09.16.17.07;	author john;	state Exp;
branches;
next	1.5;

1.5
date	2000.09.22.17.45.42;	author john;	state Exp;
branches;
next	1.4;

1.4
date	98.03.26.22.38.41;	author john;	state Exp;
branches;
next	1.3;

1.3
date	96.09.06.20.50.34;	author jkc;	state Exp;
branches;
next	1.2;

1.2
date	96.09.06.20.50.16;	author jkc;	state Exp;
branches;
next	1.1;

1.1
date	94.11.11.15.52.24;	author john;	state Exp;
branches;
next	;


desc
@bhedtopar --- convert a binary tape header file to parfile format

@


1.11
log
@added Reg Beardsley's checkpar() call
@
text
@/* Copyright (c) Colorado School of Mines, 2011.*/
/* All rights reserved.                       */

/* BHEDTOPAR: $Revision: 1.9 $ ; $Date: 2006/03/30 18:22:35 $	*/
#include "su_xdr.h"
#include "bhdr.h"
#include "bheader.h"
#include "tapesegy.h"

/*********************** self documentation **********************/
char *sdoc[] = {
" 									",
" BHEDTOPAR - convert a Binary tape HEaDer file to PAR file format	",
" 									",
"     bhedtopar < stdin outpar=parfile					",
" 									",
" Required parameter:							",
" 	none								",
" Optional parameters:							",
"	swap=0 			=1 to swap bytes			",
" 	outpar=/dev/tty		=parfile  name of output param file	",
" 									",
" Notes: 								",
" This program dumps the contents of a SEGY binary tape header file, as ",
" would be produced by segyread and segyhdrs to a file in \"parfile\" format.",
" A \"parfile\" is an ASCII file containing entries of the form param=value.",
" Here \"param\" is the keyword for the binary tape header field and	",
" \"value\" is the value of that field. The parfile may be edited as	",
" any ASCII file. The edited parfile may then be made into a new binary tape ",
" header file via the program    setbhed.				",
" 									",
" See    sudoc  setbhed   for examples					",
" 									",
NULL};

/* Credits:
 *
 *	CWP: John Stockwell  11 Nov 1994
 */
/**************** end self doc ***********************************/
/*
 * Revised:  7/5/95  Stewart A. Levin  (Mobil)
 *           Use new xdr routines for portability.
 */

/* prototypes of functions used internally */
static char *getbhkey(const int index);
static void fprintfparval(FILE *stream, cwp_String key,
				cwp_String type, Value val);

static bhed bh;		/* binary header read from file */

int main(int argc, char **argv)
{

	/* Declarations */
	int index; 		/* counter				*/
	int swap; 		/* swap bytes				*/
	char *outpar;		/* name of outpar			*/
	FILE *outparfp;		/*  ... its file pointer		*/
	FILE *infp=stdin;	/* input file pointer			*/
#ifdef SUXDR
	XDR  in_xdr;		/* for bhed conversion			*/
#endif

	/* Initialize */
	initargs(argc, argv);
	requestdoc(1);
	
	/* Get outpar */
	if (!getparstring("outpar", &outpar))  outpar = "/dev/tty" ;
	if (!getparint("swap", &swap))  swap = 0 ;
        checkpars();
	/* Open outpar for writing or parfile for reading   */
	outparfp=efopen(outpar,"w");

	/* read binary file from stdin */
#ifdef SUXDR
	xdrstdio_create(&in_xdr,stdin, XDR_DECODE);
	xdrbhdrsub(&in_xdr, &bh);
	xdr_destroy(&in_xdr);
#else
	efread((char *) &bh, 1, BNYBYTES, infp);
#endif

	/* convert binary header, field by field */
	for (index = 0; index < BHED_NKEYS; ++index) {
		Value val;
		char *key = getbhkey(index);

		/* if byte swapping is desired */
		if (swap) swapbhval(&bh,index);

		/* get values from binary header */
		getbhval(&bh,index,&val);


		/* print out in ascii */
		fprintfparval(outparfp, key, bhdr[index].type, val);

       	}

	efclose(outparfp);
                
	return(CWP_Exit());
}

static char *getbhkey(const int index)
/***************************************************************************
getbhkey - get Binary Header KEY
****************************************************************************
Notes:
****************************************************************************
Author: CWP: John Stockwell, 11 Nov 1994
***************************************************************************/
{
        return (index < BHED_NKEYS && index >= 0) ? bhdr[index].key : NULL;
}

static void fprintfparval(FILE *stream, cwp_String key,
				cwp_String type, Value val)
/**************************************************************************
fprintfparval - use fprintf to print the value of  Value in parfile format 
****************************************************************************
Notes:
****************************************************************************
Author: CWP: John Stockwell, 11 Nov 1994
***************************************************************************/
{

	switch(*type) {
	case 's':
		(void) fprintf(stream, "%s=%s\n",key,val.s);
	break;
	case 'h':
		(void) fprintf(stream, "%s=%d\n",key,val.h);
	break;
	case 'u':
		(void) fprintf(stream, "%s=%d\n",key,val.u);
	break;
	case 'i':
		(void) fprintf(stream, "%s=%d\n",key,val.i);
	break;
	case 'p':
		(void) fprintf(stream, "%s=%d\n",key,val.p);
	break;
	case 'l':
		(void) fprintf(stream, "%s=%ld\n",key,val.l);
	break;
	case 'v':
		(void) fprintf(stream, "%s=%ld\n",key,val.v);
	break;
	case 'f':
		(void) fprintf(stream, "%s=%f\n",key,val.f);
	break;
	case 'd':
		(void) fprintf(stream, "%s=%f\n",key,val.d);
	break;
	case 'U':
		(void) fprintf(stream, "%s=%d\n",key,val.U);
	break;
	case 'P':
		(void) fprintf(stream, "%s=%d\n",key,val.P);
	break;
	default:
		err("fprintfparval: unknown type %s", type);
	}

	return;
}
@


1.10
log
@copyright
@
text
@a4 1

d73 1
a73 1

@


1.9
log
@mih
moved infp outsid of XDR ve
fence
@
text
@d1 5
a5 1
/* BHEDTOPAR: $Revision: 1.8 $ ; $Date: 2006/03/29 23:01:43 $	*/
@


1.8
log
@Stew levin's changes
@
text
@d1 1
a1 1
/* BHEDTOPAR: $Revision: 1.7 $ ; $Date: 2005/12/07 17:11:15 $	*/
d58 1
a59 1
	FILE *infp=stdin;	/* input file pointer			*/
@


1.7
log
@7 Dec 2005 version
@
text
@d1 1
a1 1
/* BHEDTOPAR: $Revision: 1.6 $ ; $Date: 2003/06/09 16:17:07 $	*/
a55 1
	FILE *infp=stdin;	/* input file pointer			*/
d59 1
d136 1
a136 1
		(void) fprintf(stream, "%s=%u\n",key,val.u);
@


1.6
log
@9 June 2003
@
text
@d1 1
a1 1
/* BHEDTOPAR: $Revision: 1.5 $ ; $Date: 2000/09/22 17:45:42 $	*/
d136 1
a136 1
		(void) fprintf(stream, "%s=%d\n",key,val.u);
@


1.5
log
@added byte swapping option
@
text
@d1 1
a1 1
/* BHEDTOPAR: $Revision: 1.4 $ ; $Date: 1998/03/26 22:38:41 $	*/
d102 1
a102 1
	return EXIT_SUCCESS;
@


1.4
log
@added the new XDR version
@
text
@d1 1
a1 1
/* BHEDTOPAR: $Revision: 1.1 $ ; $Date: 94/11/11 15:52:24 $	*/
d17 1
d55 1
d69 1
d88 4
d94 3
a96 1
		fprintfparval(outparfp, key, bhdr[index].type ,val);
@


1.3
log
@-Wall.
@
text
@d1 3
a3 4
/* BHEDTOPAR: $Revision: 1.2 $ ; $Date: 1996/09/06 20:50:16 $	*/

#include "su.h"
#include "segy.h"
a4 1
#include "bhdr.h"
d37 4
d47 1
a47 1
bhed bh;		/* binary header read from file */
d49 1
a49 2
int
main(int argc, char **argv)
d57 3
d72 5
d78 1
@


1.2
log
@added
@
text
@d1 1
a1 1
/* BHEDTOPAR: $Revision: 1.1 $ ; $Date: 1994/11/11 15:52:24 $	*/
d47 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* BHEDTOPAR: $Revision: 1.20 $ ; $Date: 94/10/06 14:42:23 $	*/
d5 1
@
