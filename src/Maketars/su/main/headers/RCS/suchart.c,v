head	1.19;
access;
symbols;
locks; strict;
comment	@ * @;


1.19
date	2011.11.16.22.10.29;	author john;	state Exp;
branches;
next	1.18;

1.18
date	2011.11.12.00.20.05;	author john;	state Exp;
branches;
next	1.17;

1.17
date	2007.02.20.21.46.57;	author john;	state Exp;
branches;
next	1.16;

1.16
date	2006.10.17.21.53.07;	author john;	state Exp;
branches;
next	1.15;

1.15
date	2003.06.09.16.17.07;	author john;	state Exp;
branches;
next	1.14;

1.14
date	99.04.05.17.09.07;	author john;	state Exp;
branches;
next	1.13;

1.13
date	96.09.05.19.24.44;	author jkc;	state Exp;
branches;
next	1.12;

1.12
date	94.08.25.14.58.57;	author jkc;	state Exp;
branches;
next	1.11;

1.11
date	93.08.09.15.19.16;	author john;	state Exp;
branches;
next	1.10;

1.10
date	92.10.26.13.17.18;	author john;	state Exp;
branches;
next	1.9;

1.9
date	91.09.05.08.49.35;	author jkcohen;	state Exp;
branches;
next	1.8;

1.8
date	90.11.20.17.34.01;	author jkc;	state Exp;
branches;
next	1.7;

1.7
date	90.11.20.09.37.26;	author jkc;	state Exp;
branches;
next	1.6;

1.6
date	90.11.20.09.28.15;	author jkc;	state Exp;
branches;
next	1.5;

1.5
date	90.11.16.16.04.21;	author jkc;	state Exp;
branches;
next	1.4;

1.4
date	90.11.16.15.32.28;	author jkc;	state Exp;
branches;
next	1.3;

1.3
date	90.11.16.11.27.12;	author jkc;	state Exp;
branches;
next	1.2;

1.2
date	90.11.15.20.54.19;	author jkc;	state Exp;
branches;
next	1.1;

1.1
date	90.11.15.20.30.54;	author jkc;	state Exp;
branches;
next	;


desc
@Chart program for CWP graph programs
@


1.19
log
@added Reg Beardsley's checkpar() call
@
text
@/* Copyright (c) Colorado School of Mines, 2011.*/
/* All rights reserved.                       */

/* SUCHART: $Revision: 1.17 $ ; $Date: 2007/02/20 21:46:57 $	*/

#include "su.h"
#include "segy.h"

/*********************** self documentation **********************/
char *sdoc[] = {
" 								",
" SUCHART - prepare data for x vs. y plot			",
" 								",
" suchart <stdin >stdout key1=sx key2=gx			",
" 								",
" Required parameters:						",
" 	none							",
" 								",
" Optional parameters:						",
" 	key1=sx  	abscissa 				",
" 	key2=gx		ordinate				",
"	outpar=null	name of parameter file			",
" 								",
" The output is the (x, y) pairs of binary floats		",
" 								",
" Examples:							",
" suchart < sudata outpar=pfile >plot_data			",
" psgraph <plot_data par=pfile title=\"CMG\" \\			",
"	linewidth=0 marksize=2 mark=8 | ...			",
" rm plot_data 							",
" 								",
" suchart < sudata | psgraph n=1024 d1=.004 \\			",
"	linewidth=0 marksize=2 mark=8 | ...			",
" 								",
" fold chart: 							",
" suchart < stacked_data key1=cdp key2=nhs |			",
"            psgraph n=NUMBER_OF_TRACES d1=.004 \\		",
"	linewidth=0 marksize=2 mark=8 > chart.ps		",
" 								",
" 								",
NULL};

/* Credits:
 *	SEP: Einar Kjartansson
 *	CWP: Jack K. Cohen
 *
 * Notes:
 *	The vtof routine from valpkge converts values to floats.
 */
/**************** end self doc ***********************************/


segy tr;

int
main(int argc, char **argv)
{
	cwp_String key1,  key2;	/* x and y key header words	*/
	Value  val1,  val2;	/* ... their values		*/
	cwp_String type1, type2;/* ... their types		*/
	int index1, index2;	/* ... their indices in hdr.h	*/
	float x, y;		/* temps to hold current x & y 	*/
	cwp_String outpar;	/* name of par file		*/
	register int npairs;	/* number of pairs found	*/


	/* Hook up getpars */
	initargs(argc, argv);
	requestdoc(1);


	/* Prevent byte codes from spilling to screen */
	if (isatty(STDOUT)) err("must redirect or pipe binary output");


	/* Get parameters */
	if (!getparstring("key1", &key1))	key1 = "sx";
	if (!getparstring("key2", &key2))	key2 = "gx";

	type1 = hdtype(key1);
	type2 = hdtype(key2);

	index1 = getindex(key1);
	index2 = getindex(key2);


	/* Loop over traces */
	npairs = 0;
	while(gettr(&tr)) {

		gethval(&tr, index1, &val1);
		gethval(&tr, index2, &val2);

		x = vtof(type1, val1);
		y = vtof(type2, val2);

		efwrite(&x, FSIZE, 1, stdout);
		efwrite(&y, FSIZE, 1, stdout);

		++npairs;
	}


	/* Make parfile if needed */
	if (getparstring("outpar", &outpar))
		fprintf(efopen(outpar, "w"),
			"n=%d label1=%s label2=%s\n",
			npairs, key1, key2);

        checkpars();

	return(CWP_Exit());
}
@


1.18
log
@copyright
@
text
@d110 2
@


1.17
log
@additional notes in selfdoc
@
text
@d1 4
a4 1
/* SUCHART: $Revision: 1.16 $ ; $Date: 2006/10/17 21:53:07 $	*/
@


1.16
log
@changed "segy data" to "su_data"
@
text
@d1 1
a1 1
/* SUCHART: $Revision: 1.15 $ ; $Date: 2003/06/09 16:17:07 $	*/
d32 5
@


1.15
log
@9 June 2003
@
text
@d1 1
a1 1
/* SUCHART: $Revision: 1.14 $ ; $Date: 1999/04/05 17:09:07 $	*/
d24 1
a24 1
" suchart <segy_data outpar=pfile >plot_data			",
d29 1
a29 1
" suchart <segy_data | psgraph n=1024 d1=.004 \\		",
@


1.14
log
@cosmetic
@
text
@d1 1
a1 1
/* SUCHART: $Revision: 1.13 $ ; $Date: 1996/09/05 19:24:44 $	*/
d102 1
a102 1
	return EXIT_SUCCESS;
@


1.13
log
@Fixed -Wall complaint.
@
text
@d1 1
a1 1
/* SUCHART: $Revision: 1.12 $ ; $Date: 1994/08/25 14:58:57 $	*/
d36 2
a37 2
 *	SEP: Einar
 *	CWP: Jack
@


1.12
log
@Removed copyright statement from codes that had it.
Moved self-doc line for sudoc.
@
text
@d1 1
a1 1
/* SUCHART: $Revision: 1.11 $ ; $Date: 93/08/09 15:19:16 $	*/
d47 1
@


1.11
log
@changed String to cwp_String
@
text
@d1 1
a1 1
/* SUCHART: $Revision: 1.10 $ ; $Date: 92/10/26 13:17:18 $	*/
a2 13
/*----------------------------------------------------------------------
 * Copyright (c) Colorado School of Mines, 1990.
 * All rights reserved.
 *
 * This code is part of SU.  SU stands for Seismic Unix, a processing line
 * developed at the Colorado School of Mines, partially based on Stanford
 * Exploration Project (SEP) software.  Inquiries should be addressed to:
 *
 *  Jack K. Cohen, Center for Wave Phenomena, Colorado School of Mines,
 *  Golden, CO 80401  (jkc@@dix.colorado.mines.edu)
 *----------------------------------------------------------------------
 */

a33 1
/**************** end self doc ***********************************/
d42 1
d51 1
a51 1
	cwp_String type1, type2;	/* ... their types		*/
d54 1
a54 1
	cwp_String outpar;		/* name of par file		*/
@


1.10
log
@new selfdoc installed
@
text
@d1 1
a1 1
/* SUCHART: $Revision: 1.9 $ ; $Date: 91/09/05 08:49:35 $	*/
d62 1
a62 1
	String key1,  key2;	/* x and y key header words	*/
d64 1
a64 1
	String type1, type2;	/* ... their types		*/
d67 1
a67 1
	String outpar;		/* name of par file		*/
@


1.9
log
@string -> String and so forth
@
text
@d1 1
a1 1
/* SUCHART: $Revision: 1.8 $ ; $Date: 90/11/20 17:34:01 $	*/
d20 27
a46 28
String sdoc =
" 								\n"
" SUCHART - prepare data for x vs. y plot			\n"
" 								\n"
" suchart <stdin >stdout key1=sx key2=gx			\n"
" 								\n"
" Required parameters:						\n"
" 	none							\n"
" 								\n"
" Optional parameters:						\n"
" 	key1=sx  	abscissa 				\n"
" 	key2=gx		ordinate				\n"
"	outpar=null	name of parameter file			\n"
" 								\n"
" The output is the (x, y) pairs of binary floats		\n"
" 								\n"
" Examples:							\n"
" suchart <segy_data outpar=pfile >plot_data			\n"
" psgraph <plot_data par=pfile title=\"CMG\" \\			\n"
"	linewidth=0 marksize=2 mark=8 | pwin			\n"
" rm plot_data 							\n"
" 								\n"
" suchart <segy_data | psgraph n=1024 d1=.004 \\		\n"
"	linewidth=0 marksize=2 mark=8 | pwin			\n"
" 								\n"
" suchart <data | curve label1=shot label2=geo | vplot_pen	\n"
" 								\n"
;
d73 1
a73 1
	askdoc(1);
@


1.8
log
@Tweaks
@
text
@d1 1
a1 1
/* SUCHART: $Revision: 1.7 $ ; $Date: 90/11/20 09:37:26 $	*/
d20 1
a20 1
string sdoc =
d63 3
a65 3
	string key1,  key2;	/* x and y key header words	*/
	value  val1,  val2;	/* ... their values		*/
	string type1, type2;	/* ... their types		*/
d68 1
a68 1
	string outpar;		/* name of par file		*/
@


1.7
log
@Tweak self-doc
@
text
@d1 1
a1 1
/* SUCHART: $Revision: 1.7 $ ; $Date: 90/11/20 09:34:15 $	*/
d34 2
d110 1
a110 1
	if (getparstring("outpar", &outpar)){
a113 1
	}
@


1.6
log
@Back to producing just the pairs with a simple parfile
@
text
@d1 1
a1 1
/* SUCHART: $Revision: 1.5 $ ; $Date: 90/11/16 16:04:21 $	*/
d36 2
a37 1
" psgraph <plot_data par=pfile | pwin				\n"
d40 2
a41 1
" suchart <segy_data | psgraph n=1024 d1=.004 | pwin		\n"
@


1.5
log
@Corrected self-doc
@
text
@d1 1
a1 1
/* SUCHART: $Revision: 1.4 $ ; $Date: 90/11/16 15:32:28 $	*/
d34 2
a35 2
" Example:							\n"
" suchart outpar=pfile <segy_data >plot_data			\n"
d37 1
d39 4
a63 1
	FILE *pairfp;		/* temp file pointer for data	*/
a65 1
	register int i;		/* counter			*/
d88 1
a88 2
	/* Loop over traces and write pairs in a tmp file */
	pairfp = etmpfile();
d98 2
a99 2
		efwrite(&x, FSIZE, 1, pairfp);
		efwrite(&y, FSIZE, 1, pairfp);
a104 18
	/* Output arrays and params for graph program */
	erewind(pairfp);
	for (i = 0; i < npairs; ++i) {
		efread(&x, FSIZE, 1, pairfp);
		efread(&y, FSIZE, 1, pairfp);

		efwrite(&x, FSIZE, 1, stdout);
	};
	erewind(pairfp);
	for (i = 0; i < npairs; ++i) {
		efread(&x, FSIZE, 1, pairfp);
		efread(&y, FSIZE, 1, pairfp);

		efwrite(&y, FSIZE, 1, stdout);
	};
	efclose(pairfp);


d108 1
a108 2
			"n=%d dx=0.0 labelx=%s labely=%s "
			"linewidth=0 marksize=2 mark=8\n",
@


1.4
log
@oops, needed a SPACE between concatenated strings.
@
text
@d1 1
a1 1
/* SUCHART: $Revision: 1.3 $ ; $Date: 90/11/16 11:27:12 $	*/
d35 2
a36 1
" suchart outpar=pfile <data | psgraph par=pfile | pwin   	\n"
@


1.3
log
@Tweak doc
@
text
@d1 1
a1 1
/* SUCHART: $Revision: 1.2 $ ; $Date: 90/11/15 20:54:19 $	*/
d123 1
a123 1
			"n=%d dx=0.0 labelx=%s labely=%s"
@


1.2
log
@Further customizing to make it easier to use
graph programs.
@
text
@d1 1
a1 1
/* SUCHART: $Revision: 1.1 $ ; $Date: 90/11/15 20:30:54 $	*/
d32 1
d34 1
a34 1
" Examples:							\n"
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* SUCHART: $Revision: 1.2 $ ; $Date: 90/09/03 09:44:24 $	*/
d34 1
a34 1
" suchart <data | psgraph labelx=shot labely=geo | pwin   	\n"
a57 1
	FILE *outparfp;		/* file pointer for par file	*/
d83 1
a83 1
	/* Loop over traces */
d119 1
a119 1
	/* Open parfile if needed */
d121 4
a124 2
		outparfp = efopen(outpar, "w");
		fprintf(outparfp, "n=%d dx=0.0\n", npairs);
@
