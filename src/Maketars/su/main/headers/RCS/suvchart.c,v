head     1.3;
branch   ;
access   jkc john cartley dhale jkcohen;
symbols  ;
locks    ; strict;
comment  @ * @;


1.3
date     90.11.15.20.13.27;  author jkc;  state Exp;
branches ;
next     1.2;

1.2
date     90.09.03.09.44.24;  author jkc;  state Exp;
branches ;
next     1.1;

1.1
date     90.04.16.21.10.16;  author jkc;  state Exp;
branches ;
next     ;


desc
@Prepare x, y data from two header key words
@


1.3
log
@ANSI C tweaks.
@
text
@/* SUVCHART: $Revision: 1.2 $ ; $Date: 90/09/03 09:44:24 $	*/

/*----------------------------------------------------------------------
 * Copyright (c) Colorado School of Mines, 1990.
 * All rights reserved.
 *
 * This code is part of SU.  SU stands for Seismic Unix, a processing line
 * developed at the Colorado School of Mines, partially based on Stanford
 * Exploration Project (SEP) software.  Inquiries should be addressed to:
 *
 *  Jack K. Cohen, Center for Wave Phenomena, Colorado School of Mines,
 *  Golden, CO 80401  (jkc@@dix.colorado.mines.edu)
 *----------------------------------------------------------------------
 */

#include "su.h"
#include "segy.h"

/*********************** self documentation **********************/
string sdoc =
" 								\n"
" SUVCHART - prepare data for x vs. y plot			\n"
" 								\n"
" suvchart <stdin >stdout key1=sx key2=gx			\n"
" 								\n"
" Required parameters:						\n"
" 	none							\n"
" 								\n"
" Optional parameters:						\n"
" 	key1=sx		abscissa	 			\n"
" 	key2=gx		ordinate 				\n"
" 								\n"
" The output is pairs of binaries (vplot format)		\n"
" 								\n"
" Example:							\n"
" suchart <data | curve labelx=shot labely=geo | vplot_pen	\n"
" 								\n"
;
/**************** end self doc ***********************************/

/* Credits:
 *	SEP: Einar
 *	CWP: Jack
 *
 * Notes:
 *	The vtof routine from valpkge converts values to floats.
 */


segy tr;

main(int argc, char **argv)
{
	string key1,  key2;	/* x and y key header words	*/
	value  val1,  val2;	/* ... their values		*/
	string type1, type2;	/* ... their types		*/
	int index1, index2;	/* ... their indices in hdr.h	*/
	float x, y;		/* an x,y pair			*/


	/* Initialize */
	initargs(argc, argv);
	askdoc(1);


	/* Prevent byte codes from spilling to screen */
	if (isatty(STDOUT)) err("must redirect or pipe binary output");


	/* Initialize */
	if (!getparstring("key1", &key1))	key1 = "sx";
	if (!getparstring("key2", &key2))	key2 = "gx";

	type1 = hdtype(key1);
	type2 = hdtype(key2);

	index1 = getindex(key1);
	index2 = getindex(key2);


	/* Loop over traces */
	while(gettr(&tr)) {

		gethval(&tr, index1, &val1);
		gethval(&tr, index2, &val2);

		x = vtof(type1, val1);
		y = vtof(type2, val2);

		efwrite(&x, FSIZE, 1, stdout);
		efwrite(&y, FSIZE, 1, stdout);
	}

	return EXIT_SUCCESS;
}
@


1.2
log
@ANSI C and syscalls changes.
@
text
@d1 1
a1 1
/* SUCHART: $Revision: 1.1 $ ; $Date: 90/04/16 21:10:16 $	*/
d20 19
a38 21
string sdoc = "\
								\n\
SUCHART - prepare data for x vs. y plot				\n\
								\n\
suchart <stdin >stdout key1=sx key2=gx				\n\
								\n\
Required parameters:						\n\
	none							\n\
								\n\
Optional parameters:						\n\
	key1=sx	abscissa	 				\n\
	key2=gx	ordinate 					\n\
								\n\
The second header word value is	to be plotted against the first	\n\
(a stacking chart for the default choice of header words).  The	\n\
output is pairs of binaries.					\n\
								\n\
Example:							\n\
suchart <data | curve symbol=cdot xlabel=shot ylabel=geo | tube \n\
								\n\
";
d71 2
a72 2
	if (!sgetpar("key1", &key1))	key1 = "sx";
	if (!sgetpar("key2", &key2))	key2 = "gx";
a89 1

a91 1

@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* SUCHART: $Revision: 2.6 $ ; $Date: 89/05/25 16:49:49 $	*/
d4 1
a4 1
 * Copyright (c) Colorado School of Mines, 1989.
d12 1
a12 1
 *  Golden, CO 80401  (isis!csm9a!jkcohen)
d30 2
a31 2
	key1 = sx	abscissa 				\n\
	key2 = gx	ordinate 				\n\
d35 1
a35 1
output is pairs of binaries (vplot format).			\n\
a48 2
 *
 *
a50 5
/* Embed Revision Control System identifier strings */
static string progid =
	"   $Source: /src/su/src/RCS/suchart.c,v $";
static string revid =
	"   $Revision: 2.6 $ ; $Date: 89/05/25 16:49:49 $";
a51 2


d54 1
a54 2
main(argc, argv)
int argc; char **argv;
d63 1
a63 1
	/* Initialize SU */
a64 5
	if (!igetpar("ID", &ID))	ID = 0;
	if (ID) {
		(void) fprintf(stderr, "%s\n", progid);
		(void) fprintf(stderr, "%s\n", revid);
	}
d93 2
a94 2
		efwrite((char *) &x, FSIZE, 1, stdout);
		efwrite((char *) &y, FSIZE, 1, stdout);
d98 1
a98 2

	return SUCCEED;
@
