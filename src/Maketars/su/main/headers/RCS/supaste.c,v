head	1.17;
access;
symbols;
locks; strict;
comment	@ * @;


1.17
date	2011.11.16.22.10.29;	author john;	state Exp;
branches;
next	1.16;

1.16
date	2011.11.12.00.13.49;	author john;	state Exp;
branches;
next	1.15;

1.15
date	2011.01.21.20.06.59;	author john;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.09.16.17.07;	author john;	state Exp;
branches;
next	1.13;

1.13
date	2001.10.24.18.18.45;	author john;	state Exp;
branches;
next	1.12;

1.12
date	97.07.28.22.36.46;	author john;	state Exp;
branches;
next	1.11;

1.11
date	96.09.13.21.49.05;	author john;	state Exp;
branches;
next	1.10;

1.10
date	95.10.31.17.50.52;	author jkc;	state Exp;
branches;
next	1.9;

1.9
date	95.10.31.17.42.19;	author jkc;	state Exp;
branches;
next	1.8;

1.8
date	95.10.31.17.03.39;	author jkc;	state Exp;
branches;
next	1.7;

1.7
date	95.08.04.19.09.28;	author jkc;	state Exp;
branches;
next	1.6;

1.6
date	94.10.12.10.14.45;	author john;	state Exp;
branches;
next	1.5;

1.5
date	94.08.25.15.00.23;	author jkc;	state Exp;
branches;
next	1.4;

1.4
date	93.08.09.15.19.48;	author john;	state Exp;
branches;
next	1.3;

1.3
date	92.10.26.11.23.47;	author john;	state Exp;
branches;
next	1.2;

1.2
date	91.09.05.08.51.29;	author jkcohen;	state Exp;
branches;
next	1.1;

1.1
date	90.11.17.09.51.26;	author jkc;	state Exp;
branches;
next	;


desc
@paste existing headers on existing traces (inverse of sustrip)
@


1.17
log
@added Reg Beardsley's checkpar() call
@
text
@/* Copyright (c) Colorado School of Mines, 2011.*/
/* All rights reserved.                       */

/* SUPASTE: $Revision: 1.15 $ ; $Date: 2011/01/21 20:06:59 $	*/

#include "su.h"
#include "segy.h"
#include "header.h"

/*********************** self documentation **********************/
char *sdoc[] = {
" 								",
" SUPASTE - paste existing SU headers on existing binary data	",
" 								",
" supaste <bare_data >segys  ns= head=headers ftn=0		",
"								",
" Required parameter:						",
"	ns=the number of samples per trace			",
" 								",
" Optional parameters:						",
" 	head=headers	file with segy headers			",
"	ftn=0		Fortran flag				",
"			0 = unformatted data from C		",
"			1 = ... from Fortran			",
"	verbose=0	1= echo number of traces pasted		",
" Caution:							",
"	An incorrect ns field will munge subsequent processing.	",
"								",
" Notes:							",
" This program is used when the option head=headers is used in	",
" sustrip. See:   sudoc sustrip    for more details. 		",
"								",
" Related programs:  sustrip, suaddhead				",
NULL};

/* Credits:
 *	CWP:  Jack K. Cohen, November 1990
 */
/**************** end self doc ***********************************/


segy tr;

int
main(int argc, char **argv)
{
	cwp_String head;	/* name of file holding headers		*/
	FILE *headfp;		/* ... its file pointer			*/
	int ns;			/* number of data samples on the segys	*/
	int ftn;		/* fortran flag				*/
	int verbose;		/* flag				*/
	char junk[ISIZE];	/* to discard ftn junk  		*/


	/* Initialize */
	initargs(argc, argv);
	requestdoc(1);


	/* Get parameters */
	if (!getparint   ("ns"  , &ns))	 err("must specify ns=");
	if (!getparstring("head", &head))  head = "headers";
	if (!getparint   ("ftn"  , &ftn))  ftn  = 0;
	if (!getparint   ("verbose"  , &verbose))  verbose  = 0;
	if (ftn != 0 && ftn != 1)  err("ftn=%d must be 0 or 1", ftn);

        checkpars();


	/* Open file with saved headers */
	headfp = efopen(head, "r");


	/* Reconstruct the segys--if the ftn option is	*/
	/* selected, omit the int before and after each	*/
	/* trace giving the length of the trace in bytes*/
	/* as per the Fortran unformatted record format.*/
	while (!(feof(headfp) || ferror(headfp) || feof(stdin) || ferror(stdin))) {
		static int ntr=0; /* for user info only */

		/* Do read of header for the segy */
		if (0 >= efread(&tr, HDRBYTES, 1, headfp)) {
			if (verbose) warn("ntr=%d", ntr);
			break;	/* may or may not be successful return */
		}

		/* set output number of traces */
		tr.ns = ns;

		/* If Fortran data, read past the record size bytes */
		if (ftn) efread(junk, ISIZE, 1, stdin);


		/* Do read of data for the segy */
		switch (efread(tr.data, FSIZE, ns, stdin)) {
		case 0: /* oops, no data for this header */
			warn("header without data for trace #%d", ntr+1);
			return EXIT_FAILURE;
		default:
			puttr(&tr);
			++ntr;
		}

		/* If Fortran data, read past the record size bytes */
		if (ftn) efread(junk, ISIZE, 1, stdin);
	}


	return(CWP_Exit());
}
@


1.16
log
@copyright
@
text
@d67 2
@


1.15
log
@selfdoc updates
@
text
@d1 4
a4 1
/* SUPASTE: $Revision: 1.14 $ ; $Date: 2003/06/09 16:17:07 $	*/
@


1.14
log
@9 June 2003
@
text
@d1 1
a1 1
/* SUPASTE: $Revision: 1.13 $ ; $Date: 2001/10/24 18:18:45 $	*/
d10 1
a10 1
" SUPASTE - paste existing SEGY headers on existing data	",
d28 1
a28 1
" sustrip. See:   sudoc sustrip    for more details		",
d30 1
d34 1
a34 1
 *	CWP: Jack K. Cohen
@


1.13
log
@24 October 2001 version
@
text
@d1 1
a1 1
/* SUPASTE: $Revision: 1.12 $ ; $Date: 1997/07/28 22:36:46 $	*/
a67 3
	/* set output number of traces */
	tr.ns = ns;

d81 3
d103 1
a103 1
	return EXIT_SUCCESS;
@


1.12
log
@changes suggested by Stew Levin to silence SGI compiler warnings, etc
@
text
@d1 1
a1 1
/* SUPASTE: $Revision: 1.11 $ ; $Date: 1996/09/13 21:49:05 $	*/
d68 3
d86 1
@


1.11
log
@silenced -Wall messages
@
text
@d1 1
a1 1
/* SUPASTE: $Revision: 1.10 $ ; $Date: 1995/10/31 17:50:52 $	*/
d72 1
a72 1
	while (TRUE) {
@


1.10
log
@Put verbose option so doesn't tell ntr unless asked.
@
text
@d1 1
a1 1
/* SUPASTE: $Revision: 1.9 $ ; $Date: 1995/10/31 17:42:19 $	*/
d40 1
@


1.9
log
@Inequality in efread was backwards.  This has been broken for some
time!
@
text
@d1 1
a1 1
/* SUPASTE: $Revision: 1.8 $ ; $Date: 1995/10/31 17:03:39 $	*/
d22 1
d46 1
d57 3
a59 2
	if (!getparstring("head", &head))	head = "headers";
	if (!getparint   ("ftn"  , &ftn))	ftn  = 0;
d76 1
a76 1
			warn("ntr=%d", ntr);
@


1.8
log
@Cosmetic.
@
text
@d1 1
a1 1
/* SUPASTE: $Revision: 1.7 $ ; $Date: 1995/08/04 19:09:28 $	*/
d72 1
a72 1
		if (0 <= efread(&tr, HDRBYTES, 1, headfp)) {
@


1.7
log
@More robust use of efread -- thx Stew Levin
@
text
@d1 1
a1 1
/* SUPASTE: $Revision: 1.6 $ ; $Date: 1994/10/12 10:14:45 $	*/
d41 1
a41 1
	cwp_String head;		/* name of file holding headers		*/
@


1.6
log
@added Notes to selfdoc
@
text
@d1 1
a1 1
/* SUPASTE: $Revision: 1.5 $ ; $Date: 94/08/25 15:00:23 $	*/
d72 1
a72 1
		if (!efread(&tr, HDRBYTES, 1, headfp)) {
d74 1
a74 1
			return EXIT_SUCCESS;
@


1.5
log
@Removed copyright statement from codes that had it.
Moved self-doc line for sudoc.
@
text
@d1 1
a1 1
/* SUPASTE: $Revision: 1.4 $ ; $Date: 93/08/09 15:19:48 $	*/
d25 4
d32 1
a32 1
 *	CWP: Jack
@


1.4
log
@changed String to cwp_String
@
text
@d1 1
a1 1
/* SUPASTE: $Revision: 1.3 $ ; $Date: 92/10/26 11:23:47 $	*/
a2 13
/*----------------------------------------------------------------------
 * Copyright (c) Colorado School of Mines, 1990.
 * All rights reserved.
 *
 * This code is part of SU.  SU stands for Seismic Unix, a processing line
 * developed at the Colorado School of Mines, partially based on Stanford
 * Exploration Project (SEP) software.  Inquiries should be addressed to:
 *
 *  Jack K. Cohen, Center for Wave Phenomena, Colorado School of Mines,
 *  Golden, CO 80401  (jkc@@dix.mines.colorado.edu)
 *----------------------------------------------------------------------
 */

a25 1
/**************** end self doc ***********************************/
d30 1
@


1.3
log
@new selfdoc installed
@
text
@d1 1
a1 1
/* SUPASTE: $Revision: 1.2 $ ; $Date: 91/09/05 08:51:29 $	*/
d50 1
a50 1
	String head;		/* name of file holding headers		*/
@


1.2
log
@string -> String and so forth
@
text
@d1 1
a1 1
/* SUPASTE: $Revision: 1.1 $ ; $Date: 90/11/17 09:51:26 $	*/
d21 18
a38 18
String sdoc =
" 								\n"
" SUPASTE - paste existing SEGY headers on existing data	\n"
" 								\n"
" supaste <bare_data >segys  ns= head=headers ftn=0		\n"
"								\n"
" Required parameter:						\n"
"	ns=the number of samples per trace			\n"
" 								\n"
" Optional parameters:						\n"
" 	head=headers	file with segy headers			\n"
"	ftn=0		Fortran flag				\n"
"			0 = unformatted data from C		\n"
"			1 = ... from Fortran			\n"
" Caution:							\n"
"	An incorrect ns field will munge subsequent processing.	\n"
"								\n"
;
d59 1
a59 1
	askdoc(1);
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* SUPASTE: $Revision: 1.3 $ ; $Date: 90/11/16 10:34:32 $	*/
d21 1
a21 1
string sdoc =
d50 1
a50 1
	string head;		/* name of file holding headers		*/
@
