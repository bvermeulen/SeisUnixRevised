head	1.13;
access;
symbols;
locks; strict;
comment	@ * @;


1.13
date	2011.11.16.22.10.29;	author john;	state Exp;
branches;
next	1.12;

1.12
date	2011.11.12.00.20.05;	author john;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.09.16.17.07;	author john;	state Exp;
branches;
next	1.10;

1.10
date	96.09.04.19.20.18;	author jkc;	state Exp;
branches;
next	1.9;

1.9
date	96.01.24.18.04.02;	author jkc;	state Exp;
branches;
next	1.8;

1.8
date	94.08.25.14.58.33;	author jkc;	state Exp;
branches;
next	1.7;

1.7
date	94.07.15.14.05.34;	author john;	state Exp;
branches;
next	1.6;

1.6
date	93.08.09.15.19.08;	author john;	state Exp;
branches;
next	1.5;

1.5
date	92.10.26.13.18.55;	author john;	state Exp;
branches;
next	1.4;

1.4
date	91.09.05.08.49.19;	author jkcohen;	state Exp;
branches;
next	1.3;

1.3
date	90.12.26.21.24.23;	author jkc;	state Exp;
branches;
next	1.2;

1.2
date	90.09.03.09.45.29;	author jkc;	state Exp;
branches;
next	1.1;

1.1
date	90.04.16.14.00.01;	author jkc;	state Exp;
branches;
next	;


desc
@Replace header key word by its absolute value
@


1.13
log
@added Reg Beardsley's checkpar() call
@
text
@/* Copyright (c) Colorado School of Mines, 2011.*/
/* All rights reserved.                       */

/* SUABSHW: $Revision: 1.11 $ ; $Date: 2003/06/09 16:17:07 $	*/

#include "su.h"
#include "segy.h"

/*********************** self documentation **********************/
char *sdoc[] = {
" 								",
" SUABSHW - replace header key word by its absolute value	",
" 								",
" suabshw <stdin >stdout key=offset				",
" 								",
" Required parameters:						",
" 	none							",
" 								",
" Optional parameter:						",
" 	key=offset		header key word			",
" 								",
NULL};

/* Credits:
 *	CWP: Jack K. Cohen
 */
/**************** end self doc ***********************************/


#define KEY	"offset"	/* Default key word to take abs() of */

/* function prototype of function used internally */
void absval(cwp_String type, Value *valp);

segy tr;

int
main(int argc, char **argv)
{
	cwp_String key;	/* header key word from segy.h		*/
	cwp_String type;/* ... its type				*/
	int index;	/* ... its index in hdr.h		*/
	Value val;	/* ... its value			*/


	/* Initialize */
	initargs(argc, argv);
	requestdoc(1);


	/* Get key parameter */
	if (!getparstring("key", &key))	key = KEY;

        checkpars();

	type = hdtype(key);
	index = getindex(key);

	while (gettr(&tr)) {
		gethval(&tr, index, &val);
		absval(type, &val);
		puthval(&tr, index, &val);
		puttr(&tr);
	}


	return(CWP_Exit());
}


void absval(cwp_String type, Value *valp)
{
	switch (*type) {
	case 's': err("can't absval char header word"); break;
	case 'u':	/* do nothing if unsigned type */
	case 'v':
	case 'p':                                      break;
	case 'h': if (valp->h < 0) valp->h = -valp->h; break;
	case 'l': if (valp->l < 0) valp->l = -valp->l; break;
	case 'i': if (valp->i < 0) valp->i = -valp->i; break;
	case 'f': if (valp->f < 0) valp->f = -valp->f; break;
	case 'd': if (valp->d < 0) valp->d = -valp->d; break;
	default: err("unknown type %s", type);         break;
	}
}
@


1.12
log
@copyright
@
text
@d54 2
@


1.11
log
@9 June 2003
@
text
@d1 4
a4 1
/* SUABSHW: $Revision: 1.10 $ ; $Date: 1996/09/04 19:20:18 $	*/
@


1.10
log
@Fixed -Wall complaint.
@
text
@d1 1
a1 1
/* SUABSHW: $Revision: 1.9 $ ; $Date: 1996/01/24 18:04:02 $	*/
d62 1
a62 1
	return EXIT_SUCCESS;
@


1.9
log
@Made prototype more visible.
@
text
@d1 1
a1 1
/* SUABSHW: $Revision: 1.8 $ ; $Date: 1994/08/25 14:58:33 $	*/
d34 1
@


1.8
log
@Removed copyright statement from codes that had it.
Moved self-doc line for sudoc.
@
text
@d1 1
a1 1
/* SUABSHW: $Revision: 1.7 $ ; $Date: 94/07/15 14:05:34 $	*/
d29 3
a39 1
	void absval(cwp_String type, Value *valp);
@


1.7
log
@cosmetic
@
text
@d1 1
a1 1
/* SUABSHW: $Revision: 1.6 $ ; $Date: 93/08/09 15:19:08 $	*/
d34 1
a34 1
	cwp_String type;	/* ... its type				*/
@


1.6
log
@changed String to cwp_String
@
text
@d1 1
a1 1
/* SUABSHW: $Revision: 1.5 $ ; $Date: 92/10/26 13:18:55 $	*/
a2 13
/*----------------------------------------------------------------------
 * Copyright (c) Colorado School of Mines, 1990.
 * All rights reserved.
 *
 * This code is part of SU.  SU stands for Seismic Unix, a processing line
 * developed at the Colorado School of Mines, partially based on Stanford
 * Exploration Project (SEP) software.  Inquiries should be addressed to:
 *
 *  Jack K. Cohen, Center for Wave Phenomena, Colorado School of Mines,
 *  Golden, CO 80401  (jkc@@dix.mines.colorado.edu)
 *----------------------------------------------------------------------
 */

a19 1
/**************** end self doc ***********************************/
d22 1
a22 2
 *
 *	CWP: Jack
d24 1
@


1.5
log
@new selfdoc installed
@
text
@d1 1
a1 1
/* SUABSHW: $Revision: 1.4 $ ; $Date: 91/09/05 08:49:19 $	*/
d47 2
a48 2
	String key;	/* header key word from segy.h		*/
	String type;	/* ... its type				*/
d51 1
a51 1
	void absval(String type, Value *valp);
d77 1
a77 1
void absval(String type, Value *valp)
@


1.4
log
@string -> String and so forth
@
text
@d1 1
a1 1
/* SUABSHW: $Revision: 1.3 $ ; $Date: 90/12/26 21:24:23 $	*/
d20 13
a32 13
String sdoc =
" 								\n"
" SUABSHW - replace header key word by its absolute value	\n"
" 								\n"
" suabshw <stdin >stdout key=offset				\n"
" 								\n"
" Required parameters:						\n"
" 	none							\n"
" 								\n"
" Optional parameter:						\n"
" 	key=offset		header key word			\n"
" 								\n"
;
d56 1
a56 1
	askdoc(1);
@


1.3
log
@Tweaks
@
text
@d1 1
a1 1
/* SUABSHW: $Revision: 1.2 $ ; $Date: 90/09/03 09:45:29 $	*/
d20 1
a20 1
string sdoc =
d47 2
a48 2
	string key;	/* header key word from segy.h		*/
	string type;	/* ... its type				*/
d50 2
a51 2
	value val;	/* ... its value			*/
	void absval(string type, value *valp);
d77 1
a77 1
void absval(string type, value *valp)
@


1.2
log
@ANSI C changes and using d instead of z for double.
@
text
@d1 1
a1 1
/* SUABSHW: $Revision: 1.1 $ ; $Date: 90/04/16 14:00:01 $	*/
d20 13
a32 13
string sdoc = "\
								\n\
SUABSHW - replace header key word by its absolute value		\n\
								\n\
suabshw <stdin >stdout key=offset				\n\
								\n\
Required parameters:						\n\
	none							\n\
								\n\
Optional parameter:						\n\
	key=offset		header key word			\n\
								\n\
";
d36 1
a37 1
 *
d60 1
a60 1
	if (!sgetpar("key", &key))	key = KEY;
d80 1
a80 3
	case 's':
		err("can't absval char header word");
	break;
d83 7
a89 19
	case 'p':
	break;
	case 'h':
		if (valp->h < 0) valp->h = -valp->h;
	break;
	case 'l':
		if (valp->l < 0) valp->l = -valp->l;
	break;
	case 'i':
		if (valp->i < 0) valp->i = -valp->i;
	break;
	case 'f':
		if (valp->f < 0) valp->f = -valp->f;
	break;
	case 'd':
		if (valp->d < 0) valp->d = -valp->d;
	default:
		err("unknown type %s", type);
	break;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* SUABSHW: $Revision: 2.6 $ ; $Date: 89/05/25 16:49:19 $	*/
d4 1
a4 1
 * Copyright (c) Colorado School of Mines, 1989.
d12 1
a12 1
 *  Golden, CO 80401  (isis!csm9a!jkcohen)
d20 1
a20 1
char *sdoc = "\
d30 1
a30 1
	key = offset		header key word			\n\
a37 1
 *
a39 5
/* Embed Revision Control System identifier strings */
static string progid =
	"   $Source: /src/su/src/RCS/suabshw.c,v $";
static string revid =
	"   $Revision: 2.6 $ ; $Date: 89/05/25 16:49:19 $";
a40 2


d45 1
a45 2
main(argc, argv)
int argc; char **argv;
d51 1
a51 1
	void absval();	/* PARMS(char *type, value *valp)	*/
d54 1
a54 1
	/* Initialize SU */
a55 5
	if (!igetpar("ID", &ID))	ID = 0;
	if (ID) {
		(void) fprintf(stderr, "%s\n", progid);
		(void) fprintf(stderr, "%s\n", revid);
	}
d73 1
a73 1
	return SUCCEED;
d77 1
a77 3
void absval(type, valp)
char *type;
value *valp;
d79 1
a79 1
	switch(*type) {
d99 2
a100 2
	case 'z':
		if (valp->z < 0) valp->z = -valp->z;
@
