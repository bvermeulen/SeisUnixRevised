head	1.4;
access;
symbols;
locks
	john:1.4; strict;
comment	@ * @;


1.4
date	2011.10.20.21.05.20;	author john;	state Exp;
branches;
next	1.3;

1.3
date	2011.02.11.21.33.42;	author john;	state Exp;
branches;
next	1.2;

1.2
date	2011.02.11.21.30.44;	author john;	state Exp;
branches;
next	1.1;

1.1
date	2011.02.11.21.29.01;	author john;	state Exp;
branches;
next	;


desc
@simple differentiator
@


1.4
log
@added copyright statement
@
text
@/* Copyright (c) Colorado School of Mines, 2011.*/
/* All rights reserved.                       */

#include "cwp.h"

/*********************** self documentation **********************/
/**********************************************************************

DIFFERENTIATE - simple DIFFERENTIATOR codes

differentiate - 1D two point centered difference based derivative

************************************************************************
Function Prototype:
void differentiate(int n, float h, float *f, float *fprime);

***********************************************************************
differentiate:
Input:
n		number of samples
h		sample rate
f		array[n] of input values
Output:
fprime		array[n], the derivative of f

************************************************************************
fprime:
Notes:
This is a simple 2 point centered-difference differentiator.
The derivatives at the endpoints are computed via 2 point leading and
lagging differences. 

************************************************************************
Author: John Stockwell, CWP, 1994
************************************************************************/
/**************** end self doc ********************************/

#include "cwp.h"

void differentiate(int n, float h, float *f, float *fprime)
/************************************************************************
differentiate - compute the 1st derivative of a function f[]
************************************************************************
Input:
n		number of samples
h		sample rate
f		array[n] of input values

Output:
fprime		array[n], the derivative of f
************************************************************************
Notes:
This is a simple 2 point centered-difference differentiator.
The derivatives at the endpoints are computed via 2 point leading and
lagging differences. 
************************************************************************
Author: John Stockwell, CWP, 1994
************************************************************************/
{
	int i;	
	float *temp;
	float h2=2*h;

	/* allocate space in temporary vector */
	temp = alloc1float(n);

	/* do first as a leading difference */
	fprime[0] = (f[1] - f[0])/h;

	/* do the middle values as a centered difference */
	for (i=1; i<n-1; ++i) fprime[i] = (f[i+1] - f[i-1])/h2;

	/* do last value as a lagging difference */
	fprime[n-1] = (f[n-1] - f[n-2])/h;

}
@


1.3
log
@added include "cwp.h"
@
text
@d1 3
@


1.2
log
@changed ealloc to alloc
@
text
@d35 1
@


1.1
log
@Initial revision
@
text
@d61 1
a61 1
	temp = ealloc1float(n);
@
