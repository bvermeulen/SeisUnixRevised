head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	95.07.25.21.14.23;	author jkc;	state Exp;
branches;
next	1.3;

1.3
date	95.07.24.18.15.29;	author jkc;	state Exp;
branches;
next	1.2;

1.2
date	95.07.24.10.24.09;	author john;	state Exp;
branches;
next	1.1;

1.1
date	95.07.24.10.20.31;	author john;	state Exp;
branches;
next	;


desc
@super Grep script
@


1.4
log
@Added ability to pass along egrep options
@
text
@#! /bin/sh
# /*********************** self documentation **********************/
# Grep  - recursively call egrep in pwd
#
# Usage: Grep [-egrep_options] pattern
#
# Caution:  Do NOT redirect into file in pwd, either use something
#	like  >../Grep.out or perhaps pipe output into mail to yourself.
#
# Author: Jack, 7/95
#
# /**************** end self doc ********************************/
PATH=/bin:/usr/bin:/usr/ucb:
cmd=`basename $0`

BINDIR=$CWPROOT/bin

case $# in
0)  echo "Usage: $cmd [-egrep_options] pattern" 1>&2
    exit 1
esac

for i
do
	case $i in
	-*)
		option="$option $i"
		shift
	;;
	*)
		pattern="$*"
	;;
	esac
done

for i in `ls`
do
	if
		[ -d $i ]
	then
		cd $i
		$BINDIR/Grep $option "$pattern"
		cd ..
	elif
		[ -f $i ]
	then
		if
			egrep $option "$pattern" $i >/dev/null
		then
			echo
			echo "`pwd`/$i:"
			egrep $option "$pattern" $i
		fi
	fi
done

exit 0
@


1.3
log
@Since there doesn't seem to be a consistent status flag option
across platforms, settle for the inefficient kludge of
calling grep twice and discarding the output the first time.
@
text
@d3 3
a5 1
# Grep  - recursively call grep in pwd
d19 2
a20 4
        1) # OK
;;
        *) echo "Usage: $cmd pattern" 1>&2 ; exit 1
;;
d23 13
d42 1
a42 1
		$BINDIR/Grep "$*"
d48 1
a48 1
			egrep "$*" $i >/dev/null
d52 1
a52 1
			egrep "$*" $i
@


1.2
log
@changed path to Grep script.
@
text
@d35 1
a35 1
			egrep -q "$*" $i
@


1.1
log
@Initial revision
@
text
@d11 1
a11 1
PATH=/bin:/usr/bin:/usr/ucb
d14 1
a14 1
BINDIR=$HOME/bin
@
