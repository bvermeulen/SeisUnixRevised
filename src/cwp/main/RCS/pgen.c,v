head     1.2;
branch   ;
access   jkc john cartley;
symbols  ;
locks    ; strict;
comment  @ * @;


1.2
date     93.06.16.13.57.14;  author john;  state Exp;
branches ;
next     1.1;

1.1
date     92.06.12.10.28.18;  author john;  state Exp;
branches ;
next     ;


desc
@pgen.c
@


1.2
log
@added dummy "selfdoc" for updatedoc to find
@
text
@/*********************** self documentation **********************/
/*
 * PGEN - generate prompt string with path information
 *
 * designed to be called as:
 *
 * alias cd 'cd \!*; set prompt="`pgen`"'
 *
 * inside a user's working shell environment.
 */
/**************** end self doc ********************************/

/*
 * Credits:
 * This is Brian Sumner's code, stripped of much of its fun by Jack Cohen.
 *
 */


#define TCAPSLEN 315
#define BUFFSIZE 512

char tcapbuf[TCAPSLEN];
char *SO, *SE;
extern char *getwd();
extern char *index();
extern char *rindex();
char *getenv();
char *p;
char tcbuf[1024];
char hostname[BUFFSIZE];
char hostchar;
char dirs[BUFFSIZE], buff[BUFFSIZE];
char *cp;
char *p1, *p2;

#include <stdio.h>
#include <ctype.h>


main()
{
    p = tcapbuf;

    gethostname(hostname,(sizeof hostname) - 2);
    hostchar = toupper(hostname[0]);

    getwd(dirs);
    if ((cp=index(dirs,' ')) != (char *)0) *cp = 0;
    buff[0] = 0;
    cp = dirs;
    if ( 0 != (p2 = rindex(dirs,'/')) ) {
        *p2 = 0;
        if ((NULL != (p1 = rindex(dirs,'/'))) && (p1 != dirs)) {
            strcpy(buff,"...");
            cp = p1 + 1;
        }
        *p2 = '/';
    }
    strcat(buff,cp);
    printf("%s %c!: ", buff, hostchar);
}
@


1.1
log
@Initial revision
@
text
@d1 1
d3 2
a4 1
 * PGEN - generate prompt string
d9 7
a15 1
 * This is Brian's code, stripped of much of its fun by Jack.
@
