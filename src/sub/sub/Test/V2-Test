func Begin()
{
	Records = 0;
	Errors = 0;
}

func OnTrace()
{
	auto t;
	++Records;
	if(Records < 2) {
		print("Tr.ns = ", Tr.ns, "\n");
		print("Tr.trace[1] = ", Tr.trace[1], "\n");
		print("extra = ", Tr.extra, "\n");
		z = Tr.trace[$-3:$];
		print("Tr.trace[$-3:$] = ", z, "\n");
		print("Tr.trace[252:255] = ", Tr.trace[252:255], "\n");
		z[2:] = 23;
		print("z = ", z, "\n");
		Tr.trace[250:300] = Tr.trace[0:49];
		print( Tr.trace[298:300], " == ", Tr.trace[48:50], "\n");
		print( "Tr.ep was ", Tr.ep);
		Tr.ep = 7;
		print(" but now it's ", Tr.ep, "\n");
		print(length(Tr.trace), " samples in the first trace.\n");
		Tr.trace[:] = 0;
		print(length(Tr.trace), " samples in the first trace.\n");
		Tr.trace = fVector(37);
		print(length(Tr.trace), " samples in the first trace.\n");
	} else print(".");
	fputrb(stdout, Tr);
}

func End() {
	print("\n", Records, " records\n");
	if(Errors != 0)
		print(Errors, " errors.\n");
	else
		print("Ok.\n");
	exit(Errors);
}

