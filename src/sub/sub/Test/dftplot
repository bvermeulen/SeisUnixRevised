//
//  compute the amplitude spectra of the first 5 traces and plot them
//  with xgraph (which you will need to use this script).
//
//  this script assumes that the sample interval is not stored in the
//  SEGY record; it's set to 10 uS in Begin().  If the sample interval
//  is stored in the header you can extract it.
//
//  we don't plot the entire amplitude spectrum since it not usually
//  interesting over its entire range.
//

func Begin() {
    	dt = 10.0e-6;	// assume dt = 10 uS
    	fmin = 500; 	// minimum frequency to display
    	fmax = 10000;	// maximum frequency to display
    	Records = 0;
	xg = popen("xgraph", "w");
}

func End() {
	fclose(xg);
}

func plotAmplitude(series) {
    	auto et, ftet, pet, nx, i, df, f;
    	df = 1.0 /(dt * size(series));
    	et = extend(series, pfnext(size(series)));
    	ftet = fdft(et);
    	pet = sqrt(ftet[0]*ftet[0] + ftet[1]*ftet[1]);
    	nx = size(pet)/4;
    	fprint(xg, "\n");
	for(i = 0; i < nx; i++) {
    	    f = i * df;
    	    if((f >= fmin) && (f <= fmax))
        	    fprint(xg, f, " ", pet[i], "\n");
	}
}

func OnTrace() {
    	++Records;
    	plotAmplitude(Tr.trace);
    	if(Records < 5)
    	    return;
    	End();
    	exit(0);
}
