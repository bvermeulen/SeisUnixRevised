The GDB Debugger

(gdb) help
List of classes of commands:

running -- Running the program.
stack -- Examining the stack.
data -- Examining data.
breakpoints -- Making program stop at certain points.
files -- Specifying and examining files.
status -- Status inquiries.
support -- Support facilities.
user -- User-defined commands.
alias -- Aliases of other commands.
obscure -- Obscure features.

(gdb) help running
Running the program.

List of commands:

detach -- Detach the process previously attached.
attach -- Attach to a process that was started up outside of GDB.
kill -- Kill execution of program being debugged.
tresume -- Resume one or all of the threads in the inferior.
tsuspend -- Suspend one or all of the threads in the inferior.
handle -- Specify how to handle a signal.
really-run -- Same as run, but doesn't ask for confirmation.
run -- Start debugged program.  You may specify arguments to give it.
cont -- Continue program being debugged, after signal or breakpoint.
jump -- Continue program being debugged at specified line or address.
until -- Execute until the program reaches a source line greater than the current
step -- Step program until it reaches a different source line.
next -- Step program, proceeding through subroutine calls.
finish -- Execute until selected stack frame returns.
nexti -- Step one instruction, but proceed through subroutine calls.
stepi -- Step one instruction exactly.
signal -- Continue program giving it signal number SIGNUMBER.
args -- Specify arguments to give program being debugged when it is started.
tty -- Set terminal for future runs of program being debugged.
set environment -- Set environment variable value to give the program.
delete environment -- Cancel environment variable VAR for the program.

(gdb) help stack
Examining the stack.
The stack is made up of stack frames.  Gdb assigns numbers to stack frames
counting from zero for the innermost (currently executing) frame.

At any time gdb identifies one frame as the "selected" frame.
Variable lookups are done with respect to the selected frame.
When the program being debugged stops, gdb selects the innermost frame.
The commands below can be used to select other frames by number or address.

List of commands:

tl -- List all of threads.
thread-list -- List all of threads.
ts -- Select and print a thread.
thread-select -- Select and print a thread.
bt -- Print backtrace of all stack frames, or innermost COUNT frames.
backtrace -- Print backtrace of all stack frames, or innermost COUNT frames.
frame -- Select and print a stack frame.
down -- Select and print stack frame called by this one.
up -- Select and print stack frame that called this one.
return -- Make selected stack frame return to its caller.

(gdb) help data
Examining data.

List of commands:

pclass -- Print selectors implemented by a class
print -- Print value of expression EXP.
set -- Perform an assignment VAR = EXP.
set variable -- Perform an assignment VAR = EXP.
set array-max -- Set NUMBER as limit on string chars or array elements to print.
output -- Like "print" but don't put in value history and don't print newline.
printf -- printf "printf format string", arg1, arg2, arg3, ..., argn
display -- Print value of expression EXP each time the program stops.
whatis -- Print data type of expression EXP.
ptype -- Print definition of type TYPE.
x -- Examine memory: x/FMT ADDRESS.
	(gdb) help x
	Examine memory: x/FMT ADDRESS.
	ADDRESS is an expression for the memory address to examine.
	FMT is a repeat count followed by a format letter and a size letter.
	Format letters are o(octal), x(hex), d(decimal), u(unsigned decimal),
	    f(float), a(address), i(instruction), c(char) and s(string).
	Size letters are b(byte), h(halfword), w(word), g(giant, 8 bytes).
	    g is meaningful only with f, for type double.
	The specified number of objects of the specified size are printed
	according to the format.
	
	Defaults for format and size letters are those previously used.
	Default count is 1.  Default address is following last thing printed
	with this command or "print".

format -- Modify default print format:
delete display -- Cancel some expressions to be displayed when program stops.
disable display -- Disable some expressions to be displayed when program stops.
enable display -- Enable some expressions to be displayed when program stops.

(gdb) help breakpoints
Making program stop at certain points.

List of commands:

break -- Set breakpoint at specified line or function.
clear -- Clear breakpoint at specified line or function.
delete -- Delete some breakpoints or auto-display expressions.
disable -- Disable some breakpoints or auto-display expressions.
enable -- Enable some breakpoints or auto-display expressions.
tbreak -- Set a temporary breakpoint.  Args like "break" command.
condition -- Specify breakpoint number N to break only if COND is true.
commands -- Set commands to be executed when a breakpoint is hit.
ignore -- Set ignore-count of breakpoint number N to COUNT.

(gdb) help files
Specifying and examining files.

List of commands:

cd -- Set working directory to DIR for debugger and program being debugged.
pwd -- Print working directory.  This is used for your program as well.
exec-file -- Use FILE as program for getting contents of pure memory.
core-file -- Use FILE as core dump for examining memory and registers.
unview -- Cause source files not to be viewed in Edit.
view -- Cause source files to be viewed in Edit.
add-file -- Load the symbols from FILE.
symbol-file -- Load symbol table (in dbx format) from executable file FILE.
list -- List specified function or line.
reverse-search -- Search backward for regular expression (see regex(3)) from last line listed.
search -- Search for regular expression (see regex(3)) from last line listed.
forward-search -- Search for regular expression (see regex(3)) from last line listed.
idirectory -- Insert directory DIR at start of search path for source files.
directory -- Add directory DIR to end of search path for source files.

(gdb) help status
Status inquiries.

List of commands:

info -- Generic command for printing status.

(gdb) help support
Support facilities.

List of commands:

really-quit -- Exit gdb without asking for conformation.
help -- Print list of commands.
quit -- Exit gdb.
source -- Read commands from a file named FILE.
define -- Define a new command name.  Command name is argument.
document -- Document a user-defined command.
echo -- Print a constant string.  Give string as argument.
bind-to-key -- Map key to function.
set-savemacros -- Specify file to save keyboard macros to when gdb is exited.
set-macrofiles -- Specify files to be read to initialize macros for emacs-mode.
suspend -- Suspend gdb.
set-breakchars -- Set tenex word break characters different from default setting.
history -- Print command history.
editmode -- Set editmode: supported values are "emacs", "vi", "dumb".
shell -- Execute the rest of the line as a shell command.  
select-frame -- select frame at fp, pc.
icache -- Enable/disable the icache.
xprtail -- Dump the last N kernel xpr-buffers (only valid in kdebug mode).
xprdump -- Dump the kernel xpr-buffers (only valid in kdebug mode).
set prompt -- Change gdb's prompt from the default of "(gdb)"

(gdb) help user
User-defined commands.
The commands in this class are those defined by the user.
Use the "define" command to define a command.

List of commands:

tracenoevents -- User-defined.
traceevents -- User-defined.
flush -- User-defined.
shownops -- User-defined.
showps -- User-defined.

(gdb) help alias
Aliases of other commands.

List of commands:

ni -- Step one instruction, but proceed through subroutine calls.
si -- Step one instruction exactly.
where -- Print backtrace of all stack frames, or innermost COUNT frames.

(gdb) help obscure
Obscure features.

List of commands:

diagnose -- Toggle the value of diagnostic flags: kio
dump-me -- Get fatal error; make debugger dump its core.
term-status -- Print info on inferior's saved terminal status.
browse -- browse an object
opath-unalias -- Delete path alias for symbol lookup from .o file. OLDPATH
opath-alias -- Add path alias for lazy symbol lookup from .o file. OLDPATH=NEWPATH
printsyms -- Print dump of current symbol definitions to file OUTFILE.
