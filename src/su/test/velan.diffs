27a28
> "dv=50.0                 velocity sampling interval\n"
29,32d29
< "vmax=6000.0             last velocity\n"
< "slowness=0              =0 velocity linearly incremented\n"
< "                        =1 slowness linearly incremented \n"
< "                        =2 slowness squared linearly incremented \n"
36,39d32
< "normpow=1               =1 each sample is divided by number of live  \n"
< "                           traces after nmo\n"
< "                        =0 each sample is divided by total \n"
< "                           number of traces in cmp\n"
85,86d77
< 	float  ifold;    /* fold counter */
< 	float vmax;     /* last velocity */
93,94d83
< 	int normpow;    /* divide by nnz[i] or fold */
< 	int slowness;   /* slowness increment flag */
111,112d99
< 	float dsigma;   /* 1/p^2 increment */
< 	float sstart;   /* maximum 1/p^2 */
114,115d100
< 	float sigma;    /* value of 1/p^2 */
< 	float *vel;     /* velocity array */
135a121
> 	if (!getparfloat("dv",&dv)) dv = 50.0;
137,138d122
< 	if (!getparfloat("vmax",&vmax)) vmax = 6000.0;
<         if (!getparint ("slowness", &slowness))  slowness = 0;
143d126
<         if (!getparint ("normpow", &normpow)) normpow = 1;
145,146c128,129
< 	
< /* determine output sampling */
---
> 
> 	/* determine output sampling */
164d146
< 	vel = ealloc1float(nv);
175,209d156
< 	if (slowness==1){
< 
< 		/* compute the sigma increment */
< 		dsigma = (1/(fv) - 1/(vmax) )/(nv-1);
< 
< 		/* compute the maximum 1/p */
< 		sstart = 1/(fv);
< 
< 		/* compute the velocity array due to 1/p^2 increment */
< 		for (iv=0; iv<nv; ++iv) {
< 			sigma = sstart - iv*dsigma;
< 			vel[iv] = 1 / (sigma);
< 		}
< 	}else if (slowness==0){
< 		/* compute the velovity increment */
< 		dv = (vmax-fv)/(nv-1);
< 	
< 		/* compute the velocity array */
< 		for (iv=0; iv<nv; ++iv) {
< 			vel[iv] = fv + iv*dv;
< 		}
< 	}else if (slowness==2){
< 		/* compute the sigma increment */
< 		dsigma = (1/(fv*fv) - 1/(vmax*vmax) )/(nv-1);
< 
< 		/* compute the maximum 1/p */
< 		sstart = 1/(fv*fv);
< 
< 		/* compute the velocity array due to 1/p^2 increment */
< 		for (iv=0; iv<nv; ++iv) {
< 			sigma = sstart - iv*dsigma;
< 			vel[iv] = 1 / sqrt(sigma);
< 		}
< 	}
< 
213d159
< 	ifold=0.0;
230,232d175
< 
< 			/* count the number of traces in CMP */
< 			ifold +=1.0;
255,268c198,202
< 					if (normpow) {
< 						for (is=ismin; is<ismax; ++is) {
< 							nsum += num[iv][is]*
< 								num[iv][is];
< 							dsum += nnz[iv][is]*
< 								den[iv][is];
<          					}
< 					} else {
< 						for (is=ismin; is<ismax; ++is) {
< 							nsum += num[iv][is]*
< 								num[iv][is];
< 							dsum += ifold* 
< 								den[iv][is];
<          					}
---
> 					for (is=ismin; is<ismax; ++is) {
> 						nsum += num[iv][is]*
> 							num[iv][is];
> 						dsum += nnz[iv][is]*
> 							den[iv][is];
295,297d228
< 
< 			/* reset trace counter to zero */
< 			ifold =0.0;
301,304c232
< 		for (iv=0; iv<nv; ++iv){
< 
< 			/* set velocity */
< 			v = vel[iv];
---
> 		for (iv=0,v=fv; iv<nv; ++iv,v+=dv) {
