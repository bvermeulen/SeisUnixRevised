head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2015.08.11.21.31.50;	author john;	state Exp;
branches;
next	1.4;

1.4
date	2012.01.11.00.44.40;	author john;	state Exp;
branches;
next	1.3;

1.3
date	2011.11.16.22.10.29;	author john;	state Exp;
branches;
next	1.2;

1.2
date	2011.11.12.00.20.05;	author john;	state Exp;
branches;
next	1.1;

1.1
date	2009.07.23.22.30.05;	author john;	state Exp;
branches;
next	;


desc
@count traces in an sudata file.
@


1.5
log
@*** empty log message ***
@
text
@/* Copyright (c) Colorado School of Mines, 2011.*/
/* All rights reserved.                       */

/* SUTRCOUNT: $Revision: 1.4 $ ; $Date: 2012/01/11 00:44:40 $	*/


#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include "su.h"
#include "segy.h"

/*********************** self documentation *****************************/
char *sdoc[] = {
" SUTRCOUNT - SU program to count the TRaces in infile		",
"       							",
"   sutrcount < infile					     	",
" Required parameters:						",
"       none							",
" Optional parameter:						",
"    outpar=stdout						",
" Notes:       							",
" Once you have the value of ntr, you may set the ntr header field",
" via:      							",
"       sushw key=ntr a=NTR < datain.su  > dataout.su 		",
" Where NTR is the value of the count obtained with sutrcount 	",
NULL};

/*
 * Credits:  B.Nemeth, Potash Corporation, Saskatchewan 
 * 		given to CWP in 2008 with permission of Potash Corporation
 */

/**************** end self doc ********************************/
   
/* Segy data constants */
segy tr;				/* SEGY trace */

int 
main(int argc, char **argv)
{
	/* Segy data constans */
	int ntr=0;		/* number of traces			*/
	char *outpar=NULL;	/* name of file holding output		*/
	FILE *outparfp=stdout;	/* ... its file pointer			*/

	initargs(argc, argv);
   	requestdoc(1);
	
	/* Get information from the first header */
	if (!gettr(&tr)) err("can't get first trace");
	if (!getparstring("outpar", &outpar))	outpar = "/dev/stdout" ;
	
	outparfp = efopen(outpar, "w");

        checkpars();
	/* Loop over traces getting a count */
	do {
		++ntr;
	} while(gettr(&tr));

	fprintf(outparfp, "%d", ntr);

	return(CWP_Exit());

}
@


1.4
log
@got rid of the ntr=
@
text
@d4 1
a4 1
/* SUTRCOUNT: $Revision: 1.3 $ ; $Date: 2011/11/16 22:10:29 $	*/
d21 1
a21 1
"    outpar=/dev/tty						",
d45 1
a45 1
	FILE *outparfp=NULL;	/* ... its file pointer			*/
d52 2
a53 1
	if (!getparstring("outpar", &outpar))  outpar = "/dev/tty" ;
d55 1
d62 3
a64 1
	fprintf(outparfp, "%d\n", ntr);
a65 1
	return EXIT_SUCCESS;
@


1.3
log
@added Reg Beardsley's checkpar() call
@
text
@d4 1
a4 1
/* SUTRCOUNT: $Revision: 1.1 $ ; $Date: 2009/07/23 22:30:05 $	*/
d60 1
a60 1
	fprintf(outparfp, "ntr=%d\n", ntr);
@


1.2
log
@copyright
@
text
@d54 1
a54 1

@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/* SUTRCOUNT: $Revision: 1.17 $ ; $Date: 2007/05/11 19:06:22 $	*/
@
