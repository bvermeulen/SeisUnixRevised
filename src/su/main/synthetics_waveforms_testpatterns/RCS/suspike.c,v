head	1.15;
access;
symbols;
locks; strict;
comment	@ * @;


1.15
date	2011.11.12.00.40.42;	author john;	state Exp;
branches;
next	1.14;

1.14
date	2006.11.07.22.58.42;	author john;	state Exp;
branches;
next	1.13;

1.13
date	2005.12.20.23.14.28;	author john;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.09.16.17.07;	author john;	state Exp;
branches;
next	1.11;

1.11
date	96.02.21.23.39.07;	author jkc;	state Exp;
branches;
next	1.10;

1.10
date	96.02.21.21.56.50;	author jkc;	state Exp;
branches;
next	1.9;

1.9
date	96.02.20.23.01.57;	author jkc;	state Exp;
branches;
next	1.8;

1.8
date	96.02.05.21.23.25;	author jkc;	state Exp;
branches;
next	1.7;

1.7
date	94.08.25.15.00.59;	author jkc;	state Exp;
branches;
next	1.6;

1.6
date	93.11.24.16.09.10;	author john;	state Exp;
branches;
next	1.5;

1.5
date	92.10.26.14.08.44;	author john;	state Exp;
branches;
next	1.4;

1.4
date	91.09.05.08.51.53;	author jkcohen;	state Exp;
branches;
next	1.3;

1.3
date	91.02.14.14.02.44;	author jkc;	state Exp;
branches;
next	1.2;

1.2
date	90.09.03.09.54.52;	author jkc;	state Exp;
branches;
next	1.1;

1.1
date	90.04.20.20.40.23;	author jkc;	state Exp;
branches;
next	;


desc
@synthetic data generator
@


1.15
log
@copyright
@
text
@/* Copyright (c) Colorado School of Mines, 2011.*/
/* All rights reserved.                       */

/* SUSPIKE: $Revision: 1.14 $ ; $Date: 2006/11/07 22:58:42 $	*/

#include "su.h"
#include "segy.h"

/*********************** self documentation **********************/
char *sdoc[] = {
"								",
" SUSPIKE - make a small spike data set 			",
"								",
" suspike [optional parameters] > out_data_file  		",
"								",
" Creates a common offset su data file with up to four spikes	",
" for impulse response studies					",
"								",
" Optional parameters:						",
"	nt=64 		number of time samples			",
"	ntr=32		number of traces			",
" 	dt=0.004 	time sample rate in seconds		",
" 	offset=400 	offset					",
"	nspk=4		number of spikes			",
"	ix1= ntr/4	trace number (from left) for spike #1	",
"	it1= nt/4 	time sample to spike #1			",
"	ix2 = ntr/4	trace for spike #2			",
"	it2 = 3*nt/4 	time for spike #2			",
"	ix3 = 3*ntr/4;	trace for spike #3			",
"	it3 = nt/4;	time for spike #3			",
"	ix4 = 3*ntr/4;	trace for spike #4			",
"	it4 = 3*nt/4;	time for spike #4			",
"								",
NULL};

/* Credits:
 *	CWP: Shuki Ronen, Chris Liner
 *
 * Trace header fields set: ns, dt, offset
 */
/**************** end self doc ***********************************/


segy tr;

int
main(int argc, char **argv)
{
	int nt;				/* number of time samples	*/
	int ntr;			/* number of traces		*/
	int itr;			/* trace counter		*/
	int nspk;			/* number of spikes		*/
	int it1;			/* time of 1st spike		*/
	int ix1;			/* position of 1st spike	*/
	int it2;			/* time of 2nd spike		*/
	int ix2;			/* position of 2nd spike	*/
	int ix3;			/* position of 3rd spike	*/
	int it3;			/* time of 3rd spike		*/
	int ix4;			/* position of 4th spike	*/
	int it4;			/* time of 4th spike		*/
	float dt;			/* time sampling interval	*/
	float offset;			/* offset			*/


	/* Initialize */
	initargs(argc, argv);
	requestdoc(0); /* stdin not used */


	nt = 64;	getparint("nt", &nt);
	CHECK_NT("nt",nt);				tr.ns = nt;
	ntr = 32;	getparint("ntr", &ntr);
	dt = 0.004;	getparfloat("dt", &dt);		tr.dt = dt*1000000;
	offset = 400;	getparfloat("offset", &offset);	tr.offset = offset;
	nspk = 4;	getparint("nspk", &nspk);
	ix1 = ntr/4;	getparint("ix1", &ix1); 
	it1 = nt/4;	getparint("it1", &it1);
	ix2 = ntr/4;	getparint("ix2", &ix2);
	it2 = 3*nt/4;	getparint("it2", &it2);
	ix3 = 3*ntr/4;	getparint("ix3", &ix3);
	it3 = nt/4;	getparint("it3", &it3);
	ix4 = 3*ntr/4;	getparint("ix4", &ix4);
	it4 = 3*nt/4;	getparint("it4", &it4);

	for (itr = 0; itr < ntr; itr++) {
		memset( (void *) tr.data, 0, nt * FSIZE);
		if (itr == ix1-1) tr.data[it1-1] = 1.0;  
		if (nspk > 1 && itr == ix2-1) tr.data[it2-1] = 1.0;
		if (nspk > 2 && itr == ix3-1) tr.data[it3-1] = 1.0;
		if (nspk > 3 && itr == ix4-1) tr.data[it4-1] = 1.0;
		tr.tracl = itr + 1;
		puttr(&tr);
	}


	return(CWP_Exit());
}
@


1.14
log
@changed    memset( .., (int) '\0',...) to memset( .., 0,..) as per suggestion of Marion Zhu and Reg Beardsley
@
text
@d1 4
a4 1
/* SUSPIKE: $Revision: 1.13 $ ; $Date: 2005/12/20 23:14:28 $	*/
@


1.13
log
@fixed small bug.
@
text
@d1 1
a1 1
/* SUSPIKE: $Revision: 1.12 $ ; $Date: 2003/06/09 16:17:07 $	*/
d83 1
a83 1
		memset( (void *) tr.data, (int) '\0', nt * FSIZE);
@


1.12
log
@9 June 2003
@
text
@d1 1
a1 1
/* SUSPIKE: $Revision: 1.11 $ ; $Date: 1996/02/21 23:39:07 $	*/
d46 14
a59 4
	int nt,ntr,itr;
	int nspk,ix1,it1,ix2,it2;
	int ix3,it3,ix4,it4;
	float dt,offset;
@


1.11
log
@Using two argument CHECK_NT macro to check the relevant time sample
quantity.
@
text
@d1 1
a1 1
/* SUSPIKE: $Revision: 1.10 $ ; $Date: 1996/02/21 21:56:50 $	*/
d83 1
a83 1
	return EXIT_SUCCESS;
@


1.10
log
@Using CHECK_NT macro.
@
text
@d1 1
a1 1
/* SUSPIKE: $Revision: 1.9 $ ; $Date: 1996/02/20 23:01:57 $	*/
d58 1
a58 1
	CHECK_NT(nt);					tr.ns = nt;
@


1.9
log
@Protect against nt >SU_NFLTS.
@
text
@d1 1
a1 1
/* SUSPIKE: $Revision: 1.8 $ ; $Date: 1996/02/05 21:23:25 $	*/
d43 1
d58 1
a58 3
	if (nt > SU_NFLTS) err("Cannot have nt=%d > SU_NFLTS=%d",nt,SU_NFLTS);
        else tr.ns = nt;

@


1.8
log
@Deal with header words accessed/modified down to sudoc.
@
text
@d1 1
a1 1
/* SUSPIKE: $Revision: 1.7 $ ; $Date: 1994/08/25 15:00:59 $	*/
d56 4
a59 1
	nt = 64;	getparint("nt", &nt);		tr.ns = nt;
@


1.7
log
@Removed copyright statement from codes that had it.
Moved self-doc line for sudoc.
@
text
@d1 1
a1 1
/* SUSPIKE: $Revision: 1.6 $ ; $Date: 93/11/24 16:09:10 $	*/
d36 1
@


1.6
log
@changed bcopy to memset
@
text
@d1 1
a1 1
/* SUSPIKE: $Revision: 1.5 $ ; $Date: 92/10/26 14:08:44 $	*/
a2 13
/*----------------------------------------------------------------------
 * Copyright (c) Colorado School of Mines, 1990.
 * All rights reserved.
 *
 * This code is part of SU.  SU stands for Seismic Unix, a processing line
 * developed at the Colorado School of Mines, partially based on Stanford
 * Exploration Project (SEP) software.  Inquiries should be addressed to:
 *
 *  Jack K. Cohen, Center for Wave Phenomena, Colorado School of Mines,
 *  Golden, CO 80401  (jkc@@dix.mines.colorado.edu)
 *----------------------------------------------------------------------
 */

a31 1
/**************** end self doc ***********************************/
d37 1
@


1.5
log
@new selfdoc installed
@
text
@d1 1
a1 1
/* SUSPIKE: $Revision: 1.4 $ ; $Date: 91/09/05 08:51:53 $	*/
d83 1
a83 1
		bzero(tr.data, nt * FSIZE);
@


1.4
log
@string -> String and so forth
@
text
@d1 1
a1 1
/* SUSPIKE: $Revision: 1.3 $ ; $Date: 91/02/14 14:02:44 $	*/
d20 25
a44 24
String sdoc = "\
								\n\
SUSPIKE - make a small spike data set 				\n\
								\n\
suspike [optional parameters] > out_data_file  			\n\
								\n\
Creates a common offset su data file with up to four spikes	\n\
for impulse response studies					\n\
								\n\
Optional parameters:						\n\
	nt=64 		number of time samples			\n\
	ntr=32		number of traces			\n\
 	dt=0.004 	time sample rate in seconds		\n\
 	offset=400 	offset					\n\
	nspk=4		number of spikes			\n\
	ix1= ntr/4	trace number (from left) for spike #1	\n\
	it1= nt/4 	time sample to spike #1			\n\
	ix2 = ntr/4	trace for spike #2			\n\
	it2 = 3*nt/4 	time for spike #2			\n\
	ix3 = 3*ntr/4;	trace for spike #3			\n\
	it3 = nt/4;	time for spike #3			\n\
	ix4 = 3*ntr/4;	trace for spike #4			\n\
	it4 = 3*nt/4;	time for spike #4			\n\
";
d48 1
a48 1
 *	CWP: Shuki, Chris
d65 1
a65 1
	askdoc(0); /* stdin not used */
@


1.3
log
@Don't set tr.ntr anymore
@
text
@d1 1
a1 1
/* SUSPIKE: $Revision: 1.2 $ ; $Date: 90/09/03 09:54:52 $	*/
d20 1
a20 1
string sdoc = "\
d67 13
a79 13
	nt = 64;	igetpar("nt", &nt);		tr.ns = nt;
	ntr = 32;	igetpar("ntr", &ntr);
	dt = 0.004;	fgetpar("dt", &dt);		tr.dt = dt*1000000;
	offset = 400;	fgetpar("offset", &offset);	tr.offset = offset;
	nspk = 4;	igetpar("nspk", &nspk);
	ix1 = ntr/4;	igetpar("ix1", &ix1); 
	it1 = nt/4;	igetpar("it1", &it1);
	ix2 = ntr/4;	igetpar("ix2", &ix2);
	it2 = 3*nt/4;	igetpar("it2", &it2);
	ix3 = 3*ntr/4;	igetpar("ix3", &ix3);
	it3 = nt/4;	igetpar("it3", &it3);
	ix4 = 3*ntr/4;	igetpar("ix4", &ix4);
	it4 = 3*nt/4;	igetpar("it4", &it4);
@


1.2
log
@ANSI C changes
@
text
@d1 1
a1 1
/* SUSPIKE: $Revision: 1.1 $ ; $Date: 90/04/20 20:40:23 $	*/
d68 1
a68 1
	ntr = 32;	igetpar("ntr", &ntr);		tr.ntr = ntr;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* SUSPIKE: $Revision: 2.7 $ ; $Date: 89/06/14 12:26:47 $	*/
d12 1
a12 1
 *  Golden, CO 80401  (isis!csm9a!jkcohen)
d30 7
a36 7
	nt = 64 	number of time samples			\n\
	ntr = 32	number of traces			\n\
 	dt = 0.004 	time sample rate in seconds		\n\
 	offset = 400 	offset					\n\
	nspk = 4	number of spikes			\n\
	ix1 = ntr/4	trace number (from left) for spike #1	\n\
	it1 = nt/4 	time sample to spike #1			\n\
a48 1
 *
a50 5
/* Embed Revision Control System identifier strings */
static string progid =
	"   $Source: /src/su/src/RCS/suspike.c,v $";
static string revid =
	"   $Revision: 2.7 $ ; $Date: 89/06/14 12:26:47 $";
a51 1

d54 1
a54 2
main(argc,argv)
int argc; char **argv;
a63 5
	if (!igetpar("ID", &ID))	ID = 0;
	if (ID) {
		(void) fprintf(stderr, "%s\n", progid);
		(void) fprintf(stderr, "%s\n", revid);
	}
@
