head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2011.11.12.00.01.45;	author john;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.09.16.17.07;	author john;	state Exp;
branches;
next	1.3;

1.3
date	97.07.28.22.36.46;	author john;	state Exp;
branches;
next	1.2;

1.2
date	96.09.13.21.49.05;	author john;	state Exp;
branches;
next	1.1;

1.1
date	96.02.05.20.35.37;	author jkc;	state Exp;
branches;
next	;


desc
@@


1.5
log
@copyright
@
text
@/* Copyright (c) Colorado School of Mines, 2011.*/
/* All rights reserved.                       */

/* SUOLDTONEW: $Revision: 1.4 $ ; $Date: 2003/06/09 16:17:07 $	*/

#include "su.h"
#include "segy.h"
#include "header.h"

/*********************** self documentation **********************/
char *sdoc[] = {
" 								",
" SUOLDTONEW - convert existing su data to xdr format		",
" 								",
" suoldtonew <oldsu >newsu  					",
"								",
" Required parameters:						",
"	none							",
" 								",
" Optional parameters:						",
"	none							",
"								",
" Notes:							",
" This program is used to convert native machine datasets to	",
" xdr-based, system-independent format.				",
"								",
NULL};

/*
 * Author: Stewart A. Levin, Mobil, 1966
 *  
 */
/**************** end self doc ***********************************/


segy tr;

int
main(int argc, char **argv)
{

	/* Initialize */
	initargs(argc, argv);
	requestdoc(1);


	while (!(feof(stdin) || ferror(stdin))) {
		static int ntr=0; /* for user info only */

		/* Do read of header for the segy */
		if (0 >= efread(&tr, HDRBYTES, 1, stdin)) {
			warn("converted %d traces to XDR format", ntr);
			break; /* loop exit */
		}

		/* Do read of data for the segy */
		switch(efread((char *) (&(tr.data[0])), FSIZE, tr.ns, stdin)) {
		case 0: /* oops, no data for this header */
			err("header without data for trace #%d", ntr+1);
		default:
			puttr(&tr);
			++ntr;
		}
	}


	return(CWP_Exit());
}
@


1.4
log
@9 June 2003
@
text
@d1 4
a4 1
/* SUOLDTONEW: $Revision: 1.3 $ ; $Date: 1997/07/28 22:36:46 $	*/
@


1.3
log
@changes suggested by Stew Levin to silence SGI compiler warnings, etc
@
text
@d1 1
a1 1
/* SUOLDTONEW: $Revision: 1.2 $ ; $Date: 1996/09/13 21:49:05 $	*/
d64 1
a64 1
	return EXIT_SUCCESS;
@


1.2
log
@silenced -Wall messages
@
text
@d1 1
a1 1
/* SUOLDTONEW: $Revision: 1.1 $ ; $Date: 1996/02/05 20:35:37 $	*/
d44 1
a44 1
	while (TRUE) {
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* SUOLDTONEW: $Revision: 1.0 $ ; $Date: 95/07/26 00:00:00 $	*/
d35 1
@
