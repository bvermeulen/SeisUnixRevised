head	1.8;
access;
symbols;
locks; strict;
comment	@ * @;


1.8
date	2011.11.16.17.23.05;	author john;	state Exp;
branches;
next	1.7;

1.7
date	2011.11.11.23.58.23;	author john;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.09.16.17.07;	author john;	state Exp;
branches;
next	1.5;

1.5
date	96.08.20.19.08.58;	author jkc;	state Exp;
branches;
next	1.4;

1.4
date	96.02.05.16.18.07;	author jkc;	state Exp;
branches;
next	1.3;

1.3
date	95.08.04.19.38.43;	author jkc;	state Exp;
branches;
next	1.2;

1.2
date	94.08.25.15.00.30;	author jkc;	state Exp;
branches;
next	1.1;

1.1
date	94.07.27.10.25.09;	author john;	state Exp;
branches;
next	;


desc
@John Anderson's programmed gain control
@


1.8
log
@added Reg Beardsley's checkpar
@
text
@/* Copyright (c) Colorado School of Mines, 2011.*/
/* All rights reserved.                       */

#include "su.h"
#include "segy.h" 

/*********************** self documentation **********************/
char *sdoc[] = { 
" SUPGC   -   Programmed Gain Control--apply agc like function	",
"              but the same function to all traces preserving	",
"              relative amplitudes spatially.			",
" Required parameter:						",
" file=             name of input file				",
"								",
" Optional parameters:						",
" ntrscan=200       number of traces to scan for gain function	",
" lwindow=1.0       length of time window in seconds		",
"								",
NULL};

/*
 * Author: John Anderson (visitor to CWP from Mobil)
 *
 * Trace header fields accessed: ns, dt
 */

/**************** end self doc ********************************/

segy tr;	/* Input and output trace data of length nt */
int main (int argc, char **argv)
{
	FILE *fp;
	char *file;
	int ntrscan;
	int icount,j,k,kk,nt,lw;
	float lwindow,dt,sum;
	float *gain,*g;

	/* hook up getpars */
	initargs(argc,argv);
	requestdoc(1);

	/* get parameters */
	if (!getparint("ntrscan",&ntrscan)) ntrscan = 200;
        if(!getparstring("file",&file)) file=NULL;
	if(!getparfloat("lwindow",&lwindow)) lwindow=1.0;

        checkpars();

	/* get info from first trace */
        if( (fp = fopen(file,"r"))==NULL) 
		err("could not open input file");
        if(!fgettr(fp,&tr)) err("Can't get first trace");
	nt=tr.ns;
	dt = ((double) tr.dt)/1000000.0;
	lw=NINT(0.5*lwindow/dt);
	warn("window length= %d samples",lw); 

	gain=ealloc1float(nt);
	g=ealloc1float(nt);

	for(j=0;j<nt;j++) gain[j]=0.;	
	icount=0;
	do{
		for(j=0;j<nt;j++)  gain[j]+=fabs(tr.data[j]);
		icount++;
		
	} while(fgettr(fp,&tr) && icount<ntrscan);

	rewind(fp);

	for(j=0;j<nt;j++) {
		sum=0.;
		kk=0;
		for(k=MAX(j-lw,0);k<MIN(j+lw,nt);k++){
			kk++;
			sum+=gain[k];
		}
		if(sum==0.) sum=1.;
		g[j]=kk*icount/sum;
	}
	
	warn("scan covered %d traces",icount);		

	if(!fgettr(fp,&tr))err("failure after rewind");
	do {
		for(j=0;j<nt;j++) tr.data[j]*=g[j];

		puttr(&tr);

	} while(fgettr(fp,&tr));


	fclose(fp);
	return(CWP_Exit());
}
@


1.7
log
@copyright
@
text
@d48 2
@


1.6
log
@9 June 2003
@
text
@d1 3
@


1.5
log
@Changed lwindow to seconds for consistency with code.
Per Toralf.
@
text
@d90 1
a90 1
	return EXIT_SUCCESS;
@


1.4
log
@Deal with header words accessed/modified down to sudoc.
@
text
@d14 1
a14 1
" lwindow=400       length of time window in ms			",
d43 1
a43 1
	if(!getparfloat("lwindow",&lwindow)) lwindow=400.;
d51 1
a51 1
	lw=0.5*lwindow/dt;
@


1.3
log
@Corrected conversion of tr.dt to seconds
@
text
@d20 2
@


1.2
log
@Removed copyright statement from codes that had it.
Moved self-doc line for sudoc.
@
text
@d48 1
a48 1
	dt=0.001*tr.dt;
d58 1
a58 2
		for(j=0;j<nt;j++) 
			gain[j]+=fabs(tr.data[j]);
@


1.1
log
@Initial revision
@
text
@a3 1

@
