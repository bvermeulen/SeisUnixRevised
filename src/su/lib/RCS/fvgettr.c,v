head     1.3;
branch   ;
access   john;
symbols  ;
locks    ; strict;
comment  @ * @;


1.3
date     92.10.30.09.02.59;  author john;  state Exp;
branches ;
next     1.2;

1.2
date     91.09.05.08.47.44;  author jkcohen;  state Exp;
branches ;
next     1.1;

1.1
date     91.06.28.09.40.52;  author jkcohen;  state Exp;
branches ;
next     ;


desc
@Get variable length traces.  Such traces in a SINGLE file would
violate the SEG-Y standard, but when traces come from 2 or more
files as in suvcat, this may be needed.
@


1.3
log
@new selfdoc installed in test program
@
text
@/* FVGETTR: $Revision: 1.2 $; $Date: 91/09/05 08:47:44 $	*/

/*----------------------------------------------------------------------
 * Copyright (c) Colorado School of Mines, 1989.
 * All rights reserved.
 *
 * This code is part of SU.  SU stands for Seismic Unix, a processing line
 * developed at the Colorado School of Mines, partially based on Stanford
 * Exploration Project (SEP) software.  Inquiries should be addressed to:
 *
 *  Jack K. Cohen, Center for Wave Phenomena, Colorado School of Mines,
 *  Golden, CO 80401  (jkc@@dix.mines.colorado.edu)
 *----------------------------------------------------------------------
 */

#include "su.h"
#include "segy.h"
#include "header.h"

/* fvgettr - get a segy trace from a file by file pointer (nt can vary)
 *
 * Returns:
 *	int: number of bytes read on current trace (0 after last trace)
 *
 * Synopsis:
 *	int fvgettr(FILE *fp, segy *tp)
 *
 *
 * Credits:
 *	SEP: Einar, Stew
 *	CWP: Shuki, Jack
 *
 */


int fvgettr(FILE *fp, segy *tp)
{
	static unsigned long itr = 0;	/* number of traces read	*/
	static Bool first = true;	/* to check if first entry	*/
	static FileType ftype;		/* file type of input *fp	*/
	static unsigned short bytesper;	/* bytes per datum (packed?)	*/
	int nt;				/* samples on trace (can vary)	*/
	int databytes;			/* data bytes on current segy	*/
	int nsegy; 			/* total bytes on current segy	*/
	int nread;			/* bytes seen by fread calls	*/


	if (first) {
		first = false;

		switch (ftype = filestat(fileno(fp))) {
		case DIRECTORY:
			err("%s: stdin can't be a directory", __FILE__);
		case TTY:
			err("%s: stdin can't be tty", __FILE__);
		default:
			if      (tp->trid==CHARPACK)   bytesper=sizeof(char);
			else if (tp->trid==SHORTPACK)  bytesper=sizeof(short);
			else			       bytesper=sizeof(float);
		}
	}

	/* Get the header */
	switch (nread = efread(tp, 1, HDRBYTES, fp)) {
	case 0:   return 0; /* no more traces */
	default:  if (nread != HDRBYTES)
			err("%s: bad header, trace #%ld", __FILE__, itr);
	break;
	}

	/* Have the header, now for the data */
	nt = tp->ns;
	if (nt > SU_NFLTS)
		err("%s: unable to handle %d > %d "
			"samples per trace", __FILE__, nt, SU_NFLTS);

	databytes = bytesper * nt;
	nsegy = HDRBYTES + databytes;

	switch (nread = efread(tp->data, 1, databytes, fp)) {
	case 0:   err("%s: no data on trace #%ld, itr", __FILE__);
	default:  if (nread != databytes)
			 err("%s: trace #%ld, read only %d bytes of %u",
				__FILE__, itr, nread, databytes);
	break;
	}

	++itr;
	return nsegy;
}



#ifdef TEST

/*********************** self documentation **********************/
char *sdoc = {
"								",
" tvgettr <stdin >stdout					",
"								",
"	Test harness for fvgettr.c				",
"	Changes cdp to abs(cdp)					",
"	Contrast the following results:	 			",
"	suplane offset=-100 | sugethw offset 			",
"	suplane offset=-100 | tgettr | sugethw offset		",
"								",
NULL};
/*****************************************************************/

segy tr;

main(int argc, char **argv)
{
	initargs(argc, argv);
	requestdoc(1);

 	while (fvgettr(stdin, &tr)) {
 		tr.offset = abs(tr.offset);
 		puttr(&tr);
 	}

	return EXIT_SUCCESS;
}
#endif
@


1.2
log
@string -> String and so forth.
@
text
@d1 1
a1 1
/* FVGETTR: $Revision: 1.1 $; $Date: 91/06/28 09:40:52 $	*/
d97 11
a107 11
string sdoc = "\
								\n\
tvgettr <stdin >stdout						\n\
								\n\
	Test harness for fvgettr.c				\n\
	Changes cdp to abs(cdp)					\n\
	Contrast the following results:	 			\n\
	suplane offset=-100 | sugethw offset 			\n\
	suplane offset=-100 | tgettr | sugethw offset		\n\
								\n\
";
d115 1
a115 1
	askdoc(1);
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* FVGETTR: $Revision: 1.11 $; $Date: 91/06/27 14:55:22 $	*/
d39 2
a40 2
	static bool first = true;	/* to check if first entry	*/
	static filetype ftype;		/* file type of input *fp	*/
@
