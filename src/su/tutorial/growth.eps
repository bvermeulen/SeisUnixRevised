%!PS-Adobe-2.0 EPSF-2.0
%%Title: growth
%%Creator: PresentationBuilder
%%CreationDate: Thu Apr 28 15:40:43 1994
%%For: jkc
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 35 391 441 689
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
-3 351 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/drawwedge {
    newpath 0 0 moveto arc closepath 1.415 setmiterlimit gsave fill grestore gsave setgray stroke grestore
} bind def [[] [4] [2] [2 2 4 4]] /dasharray exch def /elp {
    translate scale newpath 0 exch 0 exch 0 360 arc
} bind def /c {
    gsave translate scale newpath 0.5 0.5 0.5 0 360 arc fill grestore
} bind def /frc {
    gsave translate scale newpath 0.5 0.5 0.5 0 360 arc stroke grestore
} bind def /ffrc {
    gsave /lg exch def 4 copy c gsave lg setgray translate scale newpath 0.5 0.5 0.5 0 360 arc stroke grestore grestore
} bind def /ffrr {
    gsave /lg exch def 4 copy gsave rectfill grestore lg setgray rectstroke grestore
} bind def /ffrr3d {
    gsave /sgray exch def /egray exch def /lg exch def 7 7 translate 1 1 7 {
        sgray egray sub 7 div mul sgray exch sub setgray 4 copy rectfill -1 -1 translate
    } for egray setgray 4 copy rectfill lg setgray rectstroke grestore
} bind def /fr3d {
    gsave /sgray exch def /egray exch def 7 7 translate 1 1 7 {
        sgray egray sub 7 div mul sgray exch sub setgray 4 copy gsave rectfill grestore -1 -1 translate
    } for grestore
} bind def /l {
    moveto lineto stroke
} bind def /arrow {
    /t_y2 exch def /t_x2 exch def /t_y1 exch def /t_x1 exch def t_y2 t_y1 sub t_x2 t_x1 sub atan /t_deg exch def currentlinewidth 1 gt {
        /t_sc currentlinewidth def
    } {
        /t_sc 1 def
    } ifelse t_x2 t_y2 moveto t_deg rotate t_sc dup scale -7 0 rmoveto 0 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath 1 t_sc div dup scale t_deg neg rotate t_x1 t_y1 currentpoint fill
} bind def /pline {
    /yarray exch def /xarray exch def newpath xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for fill
} bind def /ffrpline {
    /yarray exch def /xarray exch def /lg exch def newpath xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for gsave fill grestore lg setgray stroke
} bind def /frpline {
    /yarray exch def /xarray exch def /lg exch def newpath xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for gsave lg setgray stroke grestore
} bind def /colorfrpline {
    /yarray exch def /xarray exch def gsave setrgbcolor newpath xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for stroke grestore
} bind def /frpline3d {
    /sgray exch def /egray exch def /yarray exch def /xarray exch def newpath gsave 7 -7 translate sgray egray sgray sub 7 div egray {
        setgray xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
            dup xarray exch get exch yarray exch get lineto
        } for stroke -1 1 translate
    } for grestore
} bind def /arrowhead {
    gsave currentpoint 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 gt {
        dup scale
    } {
        pop
    } ifelse -7 0 rmoveto 0 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath fill grestore newpath
} bind def /rl^ {
    currentlinewidth currentpoint 5 3 roll rlineto currentpoint stroke moveto arrowhead
} bind def /rl2^ {
    /h exch def /w exch def currentpoint /prevy exch def /prevx exch def w h rl^ prevx w add prevy h add moveto w -1 mul h -1 mul currentlinewidth currentpoint 5 3 roll rmoveto currentpoint moveto arrowhead
} bind def /setup {
    setgray dasharray exch get 0 setdash setlinewidth setlinecap setlinejoin gsave
} bind def /setup1 {
    setgray dasharray exch get 0 setdash setlinewidth gsave
} bind def /setup2 {
    setgray dasharray exch get 0 setdash setlinewidth
} bind def /rshow {
    /st exch def /ang exch def gsave currentpoint translate ang rotate currentpoint -1 mul -1 mul exch translate st show grestore
} bind def /rcshow {
    /st exch def /ang exch def gsave currentpoint exch st stringwidth pop add exch translate ang rotate currentpoint exch st stringwidth pop add exch -1 mul -1 mul exch translate st show grestore
} bind def /sbox {
    /ingray exch def /lgray exch def gsave 4 copy 5 -5 translate lgray setgray rectfill grestore ingray setgray 4 copy rectfill gsave lgray setgray rectstroke grestore
} bind def
/definepattern {
    7 dict begin /FontDict 9 dict def FontDict begin /cache exch def /key exch def /proc exch cvx def /mtx exch matrix invertmatrix def /height exch def /width exch def /ctm matrix currentmatrix def /ptm matrix identmatrix def /str (12345678901234567890123456789012) def end /FontBBox [ 0 0 FontDict /width get FontDict /height get ] def /FontMatrix FontDict /mtx get def /Encoding StandardEncoding def /FontType 3 def /BuildChar {
        pop begin FontDict begin width 0 cache {
            0 0 width height setcachedevice
        } {
            setcharwidth
        } ifelse 0 0 moveto width 0 lineto width height lineto 0 height lineto closepath clip newpath gsave proc grestore end end
    } def FontDict /key get currentdict definefont end
} bind def /patternpath {
    dup type /dicttype eq {
        begin FontDict /ctm get setmatrix
    } {
        exch begin FontDict /ctm get setmatrix concat
    } ifelse currentdict setfont FontDict begin FontMatrix concat width 0 dtransform round width div exch round width div exch 0 height dtransform round height div exch round height div exch 0 0 transform round exch round exch ptm astore setmatrix pathbbox height div ceiling height mul 4 1 roll width div ceiling width mul 4 1 roll height div floor height mul 4 1 roll width div floor width mul 4 1 roll 2 index sub height div ceiling cvi exch 3 index sub width div ceiling cvi exch 4 2 roll moveto FontMatrix ptm invertmatrix pop {
        gsave ptm concat dup str length idiv {
            str show
        } repeat dup str length mod str exch 0 exch getinterval show grestore 0 height rmoveto
    } repeat pop end end
} bind def /patternfill {
    gsave clip patternpath grestore newpath
} bind def /setpat {
    patternarray exch get findfont
} bind def /patrect {
    gsave moveto dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath setpat gsave 1 setgray fill grestore patternfill grestore
} bind def /patcirc {
    gsave translate scale newpath 0.5 0.5 0.5 0 360 arc gsave 1 setgray fill grestore 0 setgray setpat patternfill grestore
} bind def /patpline {
    gsave /yarray exch def /xarray exch def /patnum exch def xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for closepath gsave 1 setgray fill grestore 0 setgray patnum setpat patternfill grestore
} bind def /patpline3D {
    gsave /yarray exch def /xarray exch def /patnum exch def /gr exch def xarray 0 get yarray 0 get moveto 1 1 3 {
        dup xarray exch get exch yarray exch get lineto
    } for closepath gsave gr 0 eq {
        1 setgray
    } {
        0.8 setgray
    } ifelse fill grestore 0 setgray patnum setpat patternfill grestore
} bind def /patfrpline {
    gsave /yarray exch def /xarray exch def /patnum exch def xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for closepath gsave 1 setgray fill grestore gsave 0 setgray patnum setpat patternfill grestore setgray stroke grestore
} bind def /colorpatfrpline {
    gsave /yarray exch def /xarray exch def /patnum exch def xarray 0 get yarray 0 get moveto 0 1 xarray length 1 sub {
        dup xarray exch get exch yarray exch get lineto
    } for closepath gsave 1 setgray fill grestore gsave 0 setgray patnum setpat patternfill grestore setrgbcolor stroke grestore
} bind def /drawpatwedge {
    newpath 0 0 moveto arc closepath 1.415 setmiterlimit gsave 1 setgray fill grestore gsave 0 setgray setpat patternfill grestore setgray stroke
} bind def 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /RightDiag true definepattern pop 15 15 [ 200 72 div 0 0 200 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /LightRightDiag true definepattern pop 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /LeftDiag true definepattern pop 15 15 [ 200 72 div 0 0 200 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /LightLeftDiag true definepattern pop 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 0 7.5 moveto 15 7.5 lineto 2 setlinewidth stroke
} bind /Horiz true definepattern pop 15 15 [ 400 72 div 0 0 400 72 div 0 0 ] {
    2 setlinecap 0 7.5 moveto 15 7.5 lineto 2 setlinewidth stroke
} bind /LightHoriz true definepattern pop 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /Vert true definepattern pop 15 15 [ 400 72 div 0 0 400 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /LightVert true definepattern pop 30 30 [ 200 36 div 0 0 200 36 div 0 0 ] {
    2 2 scale 2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 0.5 setlinewidth stroke
} bind /Crosshatch true definepattern pop 30 30 [ 400 36 div 0 0 400 36 div 0 0 ] {
    2 2 scale 2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 0.5 setlinewidth stroke
} bind /Crosshatch2 true definepattern pop [/RightDiag /LightRightDiag /LeftDiag /LightLeftDiag /Vert /LightVert /Horiz /LightHoriz /Crosshatch /Crosshatch2] /patternarray exch def
%%EndSetup
gsave
35 391 406 298 rectclip
35 391 406 298 rectclip
0 0 0.666667 setup2
gsave
0.666667 setgray
40 396 396 288 rectfill
gsave 0.333333 setgray 40 396 396 288 rectstroke grestore
0.333333 setgray
45 391 396 5 rectfill
436 391 5 288 rectfill
grestore
1 0 1 setup2
1 setgray
76 447 355 185 rectfill
gsave 0.666667 setgray 76 447 355 185 rectstroke grestore
gsave
76 447 355 185 rectclip
0 0 0 setup2
0 0 0 setup2
0 setgray
gsave
newpath
systemdict
begin
-1000 -10000 10000 100000 setbbox
76 484 moveto
355 0 rlineto
76 521 moveto
355 0 rlineto
76 558 moveto
355 0 rlineto
76 595 moveto
355 0 rlineto
end
stroke
grestore
0.25 0 0 setup2
0.25 0 0 setup2
0.25 0 0 setup2
0 setgray
[78.113098 447 13.523809 11.100006 95.863098 447 13.523809 12.579987 113.613098 447 13.523809 14.059998 131.363098 447 13.523809 17.019989 149.113098 447 13.523809 18.5 166.863098 447 13.523809 22.200012 184.613098 447 13.523809 23.679993 202.363098 447 13.523809 42.179993 220.113098 447 13.523809 48.100006 237.863098 447 13.523809 53.279999 255.613098 447 13.523809 65.859985 273.363098 447 13.523809 82.140015 291.113098 447 13.523809 85.839966 308.863098 447 13.523809 93.97998 326.613098 447 13.523809 105.080017 344.363098 447 13.523809 116.179993 362.113098 447 13.523809 124.320007 379.863098 447 13.523809 132.460022 397.613098 447 13.523809 146.52002 415.363098 447 13.523809 160.580017] rectfill
0 setgray
[78.113098 447 13.523809 11.100006 95.863098 447 13.523809 12.579987 113.613098 447 13.523809 14.059998 131.363098 447 13.523809 17.019989 149.113098 447 13.523809 18.5 166.863098 447 13.523809 22.200012 184.613098 447 13.523809 23.679993 202.363098 447 13.523809 42.179993 220.113098 447 13.523809 48.100006 237.863098 447 13.523809 53.279999 255.613098 447 13.523809 65.859985 273.363098 447 13.523809 82.140015 291.113098 447 13.523809 85.839966 308.863098 447 13.523809 93.97998 326.613098 447 13.523809 105.080017 344.363098 447 13.523809 116.179993 362.113098 447 13.523809 124.320007 379.863098 447 13.523809 132.460022 397.613098 447 13.523809 146.52002 415.363098 447 13.523809 160.580017] rectstroke
grestore
0 0 1 setup2
0 setgray
gsave 76 447 76 355 add 447 0 add l grestore
0 setgray
0 setlinewidth
0 0 1 setup2
0 0 1 setup2
gsave
58 425 53 22 rectclip
gsave
[1 0 0 -1 63 442] concat
/Helvetica findfont 9 scalefont [1 0 0 -1 0 0] makefont
150
exch
defineuserobject
150 execuserobject setfont
0 nxsetgray
7 9 moveto (Sep 92) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
111 425 54 22 rectclip
gsave
[1 0 0 -1 116 442] concat
150 execuserobject setfont
0 nxsetgray
7 9 moveto (Dec 92) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
163 425 55 22 rectclip
gsave
[1 0 0 -1 168 442] concat
150 execuserobject setfont
0 nxsetgray
8 9 moveto (Mar 93) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
218 425 52 22 rectclip
gsave
[1 0 0 -1 223 442] concat
150 execuserobject setfont
0 nxsetgray
7 9 moveto (Jun 93) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
271 425 53 22 rectclip
gsave
[1 0 0 -1 276 442] concat
150 execuserobject setfont
0 nxsetgray
7 9 moveto (Sep 93) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
324 425 54 22 rectclip
gsave
[1 0 0 -1 329 442] concat
150 execuserobject setfont
0 nxsetgray
7 9 moveto (Dec 93) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
376 425 56 22 rectclip
gsave
[1 0 0 -1 381 442] concat
150 execuserobject setfont
0 nxsetgray
8 9 moveto (Mar 94) show
grestore
grestore
0 setgray
0 0 1 setup2
0 setgray
gsave 76 447 76 0 add 447 185 add l grestore
/Helvetica 9 selectfont
0 setgray
0 0 1 setup2
0 0 1 setup2
gsave
54 436 21 22 rectclip
gsave
[1 0 0 -1 59 453] concat
150 execuserobject setfont
0 nxsetgray
2 9 moveto (0) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
49 473 26 22 rectclip
gsave
[1 0 0 -1 54 490] concat
150 execuserobject setfont
0 nxsetgray
2 9 moveto (50) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
44 510 31 22 rectclip
gsave
[1 0 0 -1 49 527] concat
150 execuserobject setfont
0 nxsetgray
2 9 moveto (100) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
44 547 31 22 rectclip
gsave
[1 0 0 -1 49 564] concat
150 execuserobject setfont
0 nxsetgray
2 9 moveto (150) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
44 584 31 22 rectclip
gsave
[1 0 0 -1 49 601] concat
150 execuserobject setfont
0 nxsetgray
2 9 moveto (200) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
44 621 31 22 rectclip
gsave
[1 0 0 -1 49 638] concat
150 execuserobject setfont
0 nxsetgray
2 9 moveto (250) show
grestore
grestore
0 setgray
0 setlinewidth
gsave
newpath
systemdict
begin
-1000 -1000 10000 10000 setbbox
71 447 moveto
5 0 rlineto
71 484 moveto
5 0 rlineto
71 521 moveto
5 0 rlineto
71 558 moveto
5 0 rlineto
71 595 moveto
5 0 rlineto
71 632 moveto
5 0 rlineto
end
stroke
grestore
0 setgray
0 0 1 setup2
gsave
171 396 134 34 rectclip
0.25 0 0 setup2
181 409 17 11 0 ffrr
0 0 1 setup2
0 0 1 setup2
gsave
198 401 101 24 rectclip
gsave
[1 0 0 -1 203 420] concat
/Helvetica findfont 11 scalefont [1 0 0 -1 0 0] makefont
64
exch
defineuserobject
64 execuserobject setfont
0 nxsetgray
2 11 moveto (Cumulative Total) show
grestore
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
172 642 108 33 rectclip
gsave
[1 0 0 -1 0 1317] concat
/Helvetica-Bold findfont 18 scalefont [1 0 0 -1 0 0] makefont
151
exch
defineuserobject
151 execuserobject setfont
0 nxsetgray
179 665 moveto (SU Installs) show
grestore
grestore
0 0 1 setup2
0 0 1 setup2
gsave
40 634 11 24 rectclip
gsave
[1 0 0 -1 0 1292] concat
gsave
0 0 0 0 rectclip
64 execuserobject setfont
0 nxsetgray
47 650 moveto (S) show
grestore
grestore
grestore
gsave
0 0 540 720 rectclip
[1 0 0 -1 0 720] concat
0.333333 setgray
grestore
grestore
%%Trailer
%%DocumentFonts: Helvetica-Bold
%%+ Helvetica
