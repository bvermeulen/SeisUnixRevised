.TH LGETPAR 3SU SU
.SH NAME
.B lgetpar \-
get a long parameter or parameter vector
.SH SYNOPSIS
.nf
#include "cwp.h"
int lgetpar(name, ptr)
char *name;
long *ptr;
.SH DESCRIPTION
.I Lgetpar
is a routine that handles type long input parameters in the
the Fortran namelist format.
The arguments are normally taken from the command line.
However, if the command line argument
.I "par=filename"
is encountered, then
.I filename
is searched in addition.
.PP
The format for a parameter is
.I "name=value".
.I Name
is the name of the variable and
.I value
is its value.  No embedded blanks are allowed.
The arguments may be in any order.
.PP
Parameter \fIvectors\fP are input by the construction
.I "name=value1,value2,value3,...".
Only use this form of input if the program is expecting a vector,
otherwise a variable may be overwritten or a memory fault may occur.
.PP
In the parameter files, individual parameter specifications
are separated from each other by any number of blanks, tabs, or
newlines.
.PP
Maxgetpar(3SU) returns the maximum number of vector entries in any parameter.
This is useful for parsimonious dynamic space allocation.
.SH PARAMETERS
.TP 8
.I name
is the name the variable is known by externally (i.e. on the command line).
If the variable is defined more than once on the command line the last
definition is used by
.I lgetpar.
.TP
.I ptr
is a pointer to the location of the parameter value.
If no occurence of the parameter is found then the contents of
.I ptr
are unchanged.
Thus defaults can be set in advance of parsing.
.SH RETURN VALUE
.I lgetpar
returns the number of occurences of the variable found or zero if
the parameter is not specified.
.P
Thus if the command line is
.na
.nf
.sp
        x=1 v=3,2,1,0 y=-1 x=0
.fi
.ad
.sp
then
.sp
.na
.nf
        long x, y, v[N];
        lgetpar("y", &y);       returns 1
        lgetpar("z", &z);       returns 0
        lgetpar("x", &x);       returns 1
        lgetpar("v", v);        returns 4 (hopefully N>4)
.fi
.ad
.sp
A common use of this feature is if a variable must be getparred:
.sp
.na
.nf
        if (!lgetpar("z", &z)) err("must specify z");
.fi
.ad
.P
However, a macro is provided in cwp.h, so that the last code
can be written simply as:
.sp
.na
.nf
        MUSTlgetPAR("z", &z);
.fi
.ad
.SH EXAMPLE
.na
.nf
        long x;
        ...
        /* Defaults;    User overrides */
        x = 12;         lgetpar("x", &x);
        ...
.fi
.ad
.SH DIAGNOSTICS
Self-explanatory system subroutine call errors and
.TP 8
.I "getpars: xargc=... -- not initiated in main"
The standard call to initgetpar(3SU) was omitted from the program.
.SH SEE ALSO
hgetpar(3SU) ugetpar(3SU) vgetpar(3SU) igetpar(3SU) pgetpar(3SU)
fgetpar(3SU) zgetpar(3SU) sgetpar(3SU) maxgetpar(3SU) initgetpar(3SU)
.SH AUTHOR
Designed by Robert Clayton and Jon Claerbout.
This version was written by Shuki.
.SH REVISION LEVEL
1.20
