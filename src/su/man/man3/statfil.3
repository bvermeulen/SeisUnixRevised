.TH STATFIL 3SU SU
.SH NAME
.B statfil \-
determine type of file (tty, disk, directory, tape, pipe)
.SH SYNOPSIS
.nf
#include "../include/cwp.h"
#include <sys/stat.h>
filetype statfil(fd);
int fd;
.SH DESCRIPTION
.I Statfil
determines the type of the file from its file descriptor fd.
.P
A test driver is contained in the statfil.c source code and the
makefile in the su/lib directory has a routine for compiling and
running the driver.
.SH PARAMETERS
.TP 8
.I fd
the file identifier of the file to be analysed.
.SH DEFINES
.I filetype
is a typedef defined in cwp.h as:
.sp
.na
.nf
    typedef enum {
	BADFILETYPE = -1, TTY, DISK, DIRECTORY, TAPE, PIPE
    } filetype;
.ad
.SH RETURN VALUE
.TP 12
.I TTY
a terminal as determined by isatty(3) on fd.
.TP
.I DISK
a regular file as determined by fstat(2) on fd or /dev/null as
determined by the device number obtained from
stat(2) on /dev/null.
.TP
.I DIRECTORY
a directory file as determined by fstat(2) on fd.
.TP
.I TAPE
a raw tape file as determined by fstat(2) on fd and stat(2) on /dev/rmt0.
It is a fatal error to use the tape file in character mode instead of
raw mode.  Correct detection and classification of tape devices
relies on making appropriate entries for MTDEVICE and RMTDEVICE
in .../su/include/portdefs.h (this file is recursively included in cwp.h).
.TP
.I PIPE
a pipe as determined by fstat(2) on fd (zero links).
.TP
.I BADFILETYPE
Either fstat failed or some other file type (eg. a FIFO).
.SH EXAMPLE
.na
.nf
	#include "../include/cwp.h"
	...
	filetype ftype;
	...
		ftype = statfil(STDIN)
		switch(ftype) {
		case TTY:
			...
.fi
.ad
(STDIN is a #define in cwp.h for the 0 file descriptor.)
.SH FORTRAN USAGE
.na
.nf
	integer function statfil()
	integer ifd, ftype

*	...Determine filetype of stdin: 0 = tty, 1 = disk, etc.
	ifd = 0
	ftype = statfil(ifd)
.ad
.SH BUGS
Depends on making correct entries for MTDEVICE and RMTDEVICE in
the include file, portdefs.h.
.SH DIAGNOSTICS
Most self-explanatory.  Also:
.TP 8
.I "use rmt instead of mt"
refers to use of tape in character mode instead of
raw mode.  Since the manual page recommends raw mode for handling
large amounts of data, we have made this an error condition.
.TP
.I "couldn't determine file type"
refers to a file that exists, but isn't in our "filetype" typedef
(eg. a FIFO).
.SH SEE ALSO
isatty(3), fstat(2), stat(2), statprint(3su).
.SH AUTHOR
Einar, Stew, Jack
.SH SOURCE
su/lib/statfil.c
.SH REVISION LEVEL
1.26
