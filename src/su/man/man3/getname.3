.TH GETNAME 3SU SU
.SH NAME
.B getname \-
get file name in current directory tree from file descriptor
.SH SYNOPSIS
.nf
#include "../include/cwp.h"
#include <sys/stat.h>
char *getname(fd);
int fd;
.SH DESCRIPTION
.I getname
determines the name of a file from its file descriptor, fd.
Typically, fd is the standard input (STDIN) or standard output (STDOUT).
.P
A test driver is contained in the getname.c source code and the
makefile in the su/lib directory has a routine for compiling and
running the driver.
.SH PARAMETERS
.TP 8
.I fd
the file identifier of the file.
.SH DEFINES
.TP 8
.I STDIN
is a define in cwpdefs.h for the standard input file descriptor.
.TP 8
.I STDOUT
is a define in cwpdefs.h for the standard output file descriptor.
.TP 8
.I STDERR
is a define in cwpdefs.h for the standard error file descriptor.
.SH RETURN VALUE
A string representing the name of the file on normal exit,
NULL (0) if the file is not found in current directory tree, and
a printed file type in the style of statprint(3SU)
if the file is not a disk file (eg. PIPE).  
.SH EXAMPLE
.na
.nf
	char *holdname;
	...
	holdname = getname(STDIN);
	fprintf(stderr, "getname on stdin  returns ");
	fprintf(stderr, ":%s:\n", holdname);
.fi
.ad
.P
This code segment is part of the test driver in getname.c and illustrates
getting and printing the file name (if successful) corresponding to the
standard input.
.SH CAVEAT
.I Getname
works by making a system call to find(1); thus it is painfully slow.
Shuki had a much faster version, but it relied on the BSD directory
structure and hence was not portable to pure AT&T systems.
.SH DIAGNOSTICS
Most self-explanatory.  Also:
.TP 8
.I "use rmt instead of mt"
.SH SEE ALSO
find(1) statprint(3SU) getkey(3SU)
.SH AUTHOR
Jack
.SH SOURCE
su/lib/getname.c
.SH REVISION LEVEL
1.28
