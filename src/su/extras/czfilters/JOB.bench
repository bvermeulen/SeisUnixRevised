#! /bin/sh -v
# JOB.bench - run CZ starting and ending with SEG-Y data
# $Author: jkc $
# $Source: /src/su/czfilters/RCS/JOB.bench,v $
# $Revision: 1.9 $ ; $Date: 88/05/23 08:10:48 $

###  Set up data for CZ benchmark as per CZ release notes.
###  First create TRACES (bare seismic data for 2 flat reflectors) and
###  record stdout output in the file "SYNINFO".  Let stderr come to tty.
rm -f TRACES
czsyn <datasyn >SYNINFO


###  Use suaddhead to make SEG-Y data
###  There are 1001 points on a trace (4 sec @ 4 mils or see SYNINFO)
suaddhead <TRACES ns=1001 ftn=1 |
sushw key=dt a=4000 >DATA


###  Now use cz1fil to make first data file, here called "data1in"
cz1fil <DATA >data1in par=parcz1


###  And use cz2fil to make second data file here called "data2in"
cz2fil <DATA >data2in par=parcz2


###  Run the CZ suite and record stdout output in "CZINFO".  Stderr to tty.
rm -f DATA1 CZINFO
cz1in <data1in >CZINFO
rm -f PTRACES
cz1 >>CZINFO
rm -f DATA2
cz2in <data2in >>CZINFO
rm -f INVTRACES TABLES SUMS
cz2 >>CZINFO


###  Now use cz3fil to make bare traces and suaddhead, sushw par files
###  Use sed to strip out Fortran's inserted blanks in the par files
###  and to separate the parfil into the required pieces for the 3 parfiles.
###  The name of the (temporary) bare trace file is hardwired as "BARE".
rm -f BARE parfil
cz3fil <data2in >>CZINFO
sed 's/=  */=/' parfil >par.tmp
sed -n '
	/ns/p
	/ftn/p
' par.tmp >paraddhead
sed -n '/dz/p' par.tmp >parshw1
sed -n '/zmin/p' par.tmp >parshw2
rm -f par.tmp parfil


###  Put headers back on to make SEG-Y traces in file called "IMAGE"
###  (or whatever you like, by altering the last line of this file).
suaddhead <BARE par=paraddhead |
sushw par=parshw1 |
sushw par=parshw2 >IMAGE

###  Typical print job (after examining header to get zmin and dz)
#suwind <IMAGE key=tracl j=5 |
#sutwig title="CZ inversion" label1=Depth tmin=12.5 dt=15.49
