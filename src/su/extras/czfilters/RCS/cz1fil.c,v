head     1.9;
access   jkc shuki seb wenji;
symbols  ;
locks    ; strict;
comment  @ * @;


1.9
date     88.05.21.05.22.36;  author jkc;  state Exp;
branches ;
next     1.8;

1.8
date     88.05.20.23.01.39;  author jkc;  state Exp;
branches ;
next     1.7;

1.7
date     88.05.20.22.40.34;  author jkc;  state Exp;
branches ;
next     1.6;

1.6
date     87.09.23.21.37.53;  author jkc;  state Exp;
branches ;
next     1.5;

1.5
date     87.09.23.15.41.12;  author shuki;  state Exp;
branches ;
next     1.4;

1.4
date     87.09.23.15.31.11;  author jkc;  state Exp;
branches ;
next     1.3;

1.3
date     87.09.01.17.10.43;  author jkc;  state Exp;
branches ;
next     1.2;

1.2
date     87.09.01.09.05.32;  author jkc;  state Exp;
branches ;
next     1.1;

1.1
date     87.08.27.12.09.51;  author jkc;  state Exp;
branches ;
next     ;


desc
@Produce data file for CZ1 / CZ2D1
@


1.9
log
@Tweak self-doc.
@
text
@/* cz1fil - filter to produce data file for cz1
 *
 * Credits:
 *	CWP: Jack
 *
 * This program belongs to the Center for Wave Phenomena
 * Colorado School of Mines
 *
 * $Author: jkc $
 * $Source: /src/su/czfilters/RCS/cz1fil.c,v $
 * $Revision: 1.8 $ ; $Date: 88/05/20 23:01:39 $
*/

/*********************** self documentation **********************/
char *sdoc = "\
								\n\
CZ1FIL - filter to produce data file for cz1 on stdout		\n\
								\n\
cz1fil <segy_traces >data1_file [optional parameters]		\n\
								\n\
Required parameters:						\n\
	none							\n\
								\n\
Optional parameters: (nyquist calculated internally)		\n\
	f1 = 0.10*(nyquist)	left  low  corner frequency (Hz)\n\
	f2 = 0.15*(nyquist)	left  high corner frequency (Hz)\n\
	f3 = 0.45*(nyquist)	right low  corner frequency (Hz)\n\
	f4 = 0.50*(nyquist)	right high corner frequency (Hz)\n\
	traces = TRACES		name of headerless data	file	\n\
								\n\
";
/*****************************************************************/

/* Embed Revision Control System identifier strings */
static char progid[] =
	"   $Source: /src/su/czfilters/RCS/cz1fil.c,v $";
static char revid[] =
	"   $Revision: 1.8 $ ; $Date: 88/05/20 23:01:39 $";


#include "../include/cwp.h"
#include "../include/segy.h"

segy tr;


main(argc,argv)
int argc ; char **argv;
{
	float dt;		/* time sample rate		*/
	float f1;		/* low end of frequency band	*/
	float f2;		/* end of upward taper		*/
	float f3;		/* start of downward taper	*/
	float f4;		/* high end of frequency band	*/
	int ntr;		/* number of traces		*/
	float nyq;		/* nyquist frequency		*/
	float tinit;		/* minimum time (0.0)		*/
	float tfin;		/* maximum time			*/
	float tskip;		/* obsolete parameter (0.0)	*/
	int tpts;		/* number of time points	*/
	char *traces;		/* stripped time trace file	*/


	initgetpar(argc, argv); askdoc(1);


	tinit = 0.0;
	tskip = 0.0;

	/* Get information from the first header */
	ntr = gettra(STDIN, &tr, 0);
	dt = tr.dt*0.000001;
	nyq = 0.5/dt;
	tpts = tr.ns;
	tfin = (tpts - 1)*dt;


	/* Default parameters;	User-defined overrides */
	traces = "TRACES";	sgetpar("traces", &traces);
	f1 = 0.10 * nyq;	fgetpar("f1", &f1);
	f2 = 0.15 * nyq;	fgetpar("f2", &f2);
	f3 = 0.45 * nyq;	fgetpar("f3", &f3);
	f4 = 0.49 * nyq;	fgetpar("f4", &f4);


	/* Write out the cz1 data file */
	printf("%s\n", traces);
	printf("%d\n", ntr);
	printf("%g %g\n", tinit, tfin);
	printf("%g\n", tskip);
	printf("%g\n", dt);
	printf("%g %g %g %g\n", f1, f2, f3, f4);
}
@


1.8
log
@Modern self-doc.  Make names consistent with suband.
@
text
@d11 1
a11 1
 * $Revision: 1.7 $ ; $Date: 88/05/20 22:40:34 $
d19 1
a19 1
cz1fil <stdin >stdout [optional parameters] 			\n\
d38 1
a38 1
	"   $Revision: 1.7 $ ; $Date: 88/05/20 22:40:34 $";
@


1.7
log
@Thorough updating.  Use gettra to get ntr for sure.  Put datafile
on stdout--why not?
@
text
@d11 1
a11 1
 * $Revision: 1.6 $ ; $Date: 87/09/23 21:37:53 $
d17 1
a17 2
CZ1FIL - cz1fil <stdin >stdout [traces=TRACES]			\n\
	[fll=.1*nyq]  [fhl=.15*nyq] [flr=.45*nyq] [fhr=.49*nyq]	\n\
d19 1
a19 2
	Produces data file for cz1 on stdout.  The quantity,	\n\
	'nyq', is the Nyquist frequency.			\n\
d21 10
d38 1
a38 1
	"   $Revision: 1.6 $ ; $Date: 87/09/23 21:37:53 $";
d51 4
a54 4
	float fll;		/* low end of frequency band	*/
	float fhl;		/* end of upward taper		*/
	float flr;		/* start of downward taper	*/
	float fhr;		/* high end of frequency band	*/
d80 4
a83 4
	fll = 0.10 * nyq;	fgetpar("fll", &fll);
	fhl = 0.15 * nyq;	fgetpar("fhl", &fhl);
	flr = 0.45 * nyq;	fgetpar("flr", &flr);
	fhr = 0.49 * nyq;	fgetpar("fhr", &fhr);
d92 1
a92 1
	printf("%g %g %g %g\n", fll, fhl, flr, fhr);
@


1.6
log
@Cosmetics.
@
text
@d9 3
a11 4
 * $Author: shuki $
 * $Source: /src/segy/czfilters/RCS/cz1fil.c,v $
 * $Revision: 1.5 $ ; $Date: 87/09/23 15:41:12 $
 * $State: Exp $
d17 1
a17 1
CZ1FIL - cz1fil <stdin [traces=TRACES]				\n\
d20 1
a20 1
	Produces data file for cz1 on stderr.  The quantity,	\n\
d28 1
a28 1
	"   $Source: /src/segy/czfilters/RCS/cz1fil.c,v $";
d30 1
a30 1
	"   $Revision: 1.5 $ ; $Date: 87/09/23 15:41:12 $";
d36 1
a36 1
Segy tr;
d53 1
a53 1
	char traces[15];	/* stripped time trace file	*/
a54 2
	xargc = argc; xargv = argv;
	if (isatty(STDIN) || !strcmp(argv[1] , "-")) selfdoc();
d56 3
d63 1
a63 1
	gettr(STDIN, &tr);
a67 1
	ntr = tr.ntr;
a68 7
	/* Get number of traces if not in recorded in header */
	if (!ntr) {
		ntr = 1;
		while (gettr(STDIN, &tr)) {
			ntr++;
		}
	}
d71 1
a71 1
	strcpy(traces, "TRACES"); sgetpar("traces", traces);
d77 8
a84 7
	/* write out the cz1 data file */
	fprintf(stderr, "%s\n", traces);
	fprintf(stderr, "%d\n", ntr);
	fprintf(stderr, "%g %g\n", tinit, tfin);
	fprintf(stderr, "%g\n", tskip);
	fprintf(stderr, "%g\n", dt);
	fprintf(stderr, "%g %g %g %g\n", fll, fhl, flr, fhr);
@


1.5
log
@getpar(0,
gettr(0,
@
text
@d9 1
a9 1
 * $Author: jkc $
d11 1
a11 1
 * $Revision: 1.4 $ ; $Date: 87/09/23 15:31:11 $
d31 1
a31 1
	"   $Revision: 1.4 $ ; $Date: 87/09/23 15:31:11 $";
d63 1
a63 1
	gettr(0,&tr);
d73 1
a73 1
		while (gettr(0,&tr)) {
@


1.4
log
@New getpar.
@
text
@d11 1
a11 1
 * $Revision: 1.3 $ ; $Date: 87/09/01 17:10:43 $
d31 1
a31 1
	"   $Revision: 1.3 $ ; $Date: 87/09/01 17:10:43 $";
d63 1
a63 1
	gettr(&tr);
d73 1
a73 1
		while (gettr(&tr)) {
@


1.3
log
@Changed to %g format.
@
text
@d11 1
a11 1
 * $Revision: 1.2 $ ; $Date: 87/09/01 09:05:32 $
d31 1
a31 1
	"   $Revision: 1.2 $ ; $Date: 87/09/01 09:05:32 $";
d79 5
a83 5
	strcpy(traces, "TRACES"); getpar("traces", "s", traces);
	fll = 0.10 * nyq;	getpar("fll", "f", &fll);
	fhl = 0.15 * nyq;	getpar("fhl", "f", &fhl);
	flr = 0.45 * nyq;	getpar("flr", "f", &flr);
	fhr = 0.49 * nyq;	getpar("fhr", "f", &fhr);
@


1.2
log
@Took epsilon off of fhr to make CZ1IN happy.
Read ntr from header, if it's there.
@
text
@d10 2
a11 2
 * $Source: /src/segy/filters/RCS/cz1fil.c,v $
 * $Revision: 1.1 $ ; $Date: 87/08/27 12:09:51 $
d29 1
a29 1
	"   $Source: /src/segy/filters/RCS/cz1fil.c,v $";
d31 1
a31 1
	"   $Revision: 1.1 $ ; $Date: 87/08/27 12:09:51 $";
d88 4
a91 4
	fprintf(stderr, "%f %f\n", tinit, tfin);
	fprintf(stderr, "%f\n", tskip);
	fprintf(stderr, "%f\n", dt);
	fprintf(stderr, "%f %f %f %f\n", fll, fhl, flr, fhr);
@


1.1
log
@Initial revision
@
text
@d10 2
a11 2
 * $Source: /src/segy/src/RCS/suwind.c,v $
 * $Revision: 1.30 $ ; $Date: 87/08/25 13:16:29 $
d19 1
a19 1
	[fll=.1*nyq]  [fhl=.15*nyq] [flr=.45*nyq] [fhr=.5*nyq]	\n\
d29 1
a29 1
	"   $Source: /src/segy/src/RCS/suwind.c,v $";
d31 1
a31 1
	"   $Revision: 1.30 $ ; $Date: 87/08/25 13:16:29 $";
d68 1
d70 6
a75 4
	/* Count the traces */
	ntr = 1;
	while (gettr(&tr)) {
		ntr++;
d83 1
a83 1
	fhr = 0.50 * nyq;	getpar("fhr", "f", &fhr);
@
