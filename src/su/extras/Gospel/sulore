The traditional su main has expected seismic data from stdin and
has flowed seismic data to stdout.  It has expected all parameters
to be in namelist (param=value_vector) form.

So most SU programs have the syntax:
% suprog <INDATA >OUTDATA par1=val1 par2=val2 ...

But there are exceptions.  For example, suprhws (print header words)
does not use the namelist format because it would be a pain
in the ass.  It goes like
% suprhws <DATA tracl cdp ...
instead of
% suprhws <DATA key1=tracl key2=cdp ...
or
% suprhws <DATA key=tracl,cdp,....

A case could be made for not having such exceptions.  We COULD use the
last format.  Opinions?

In case you don't see it, suprhws is real handy for both exploring
headers and testing:
% suwind <DATA key=tracl bad=3,6 count=5 j=3 | suprhws tracl

Traditionally, su programs have had a self-doc feature.  When I started
on SU, I adopted a convention that the usage:
% suprog -

would evoke the sdoc string.  After some bickering, Shuki induced me
to also evoke self-doc by mentioning just the program name.  I guess
what bothered me was the possibility of a program that just did it's
thing with no inputs and no parameters:
% suprog
in this case, the name alone could not evoke self-doc!  I am content
to continue to give self-doc both ways, but again I invite comments.

More recently there was a major change where the gettr/puttr (get
or put a segy trace by sequential access) routines acquired an additional
argument denoting the file descriptor of input/output respectively.
Since 99.98% of all su programs use stdin/stdout, I thought that the
right design was
fgettr(fd, &trace)
gettr(&trace) == fgettr(STDIN, &trace)
and
fputtr(fd, &trace)
puttr(&trace) == fputtr(STDIN, &trace)

analogous to printf and fprintf.  This would avoid two stupid
declarations (infd, outfd) in those 99.98% of the programs that
really just need the one argument form.  However, Shuki pointed
out that if we adopted the two argument form, he could look at the
first argument to an su command and see if it was a file in the pwd.
Thus we could accept
% suprog DATA ...
as well as
% suprog <DATA

It IS convenient.  It also is a bit kludgey.  In programs affiliated
with su, but not part of it, we can't use that mechanism as Chris and
I found out yesterday.  In the simpler good old days (pre input.c),
he could have just stolen /src/segy/maintop.c without hassle.
Opinions?

