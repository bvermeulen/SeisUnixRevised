/*
 * sumax - get maximum value
 */

#include <stdio.h>
#include <math.h>
#include "../include/su.h"

extern char *sdoc;
extern int xargc;
extern char **xargv;
extern bool verbose;
extern bool hisout,bhout;

extern float vmax(),vabsmax();
static float (*maxfun)();

static char *lsdoc = 
"sumax [-v -a] <stdin >stdout				\n\
							\n\
OPTIONS:						\n\
	-v verbose on to print maximum of every trace	\n\
	-a use absolute values				\n\
							\n";

/* INITIALIZE SELF DOCUMENTATION */
initsdoc()
{
	 sdoc = lsdoc;
}

/* GET OPTIONS AND PARAMETERS */
optpars()
{
	int c;

	/* SET HISTORY AND BINARY OUTPUT OFF FOR MAIN */
	hisout = false;
	bhout = false;

	maxfun = vmax;
	verbose = false;

	while( (c=getopt(xargc,xargv,"va"))!=EOF) {
		switch(c) {
		case 'a':
			maxfun = vabsmax;
			break;
		case 'v':
			verbose = true;
			break;
		case '?':
			warn("getopt returned '?'");
		}
	}
}

/* ADD HISTORY TO ASCII HEADER */
addhis(outfd)
int outfd;
{
	if(hisout) hislog(outfd);
}

static int gitr;		/* trace with global max */
#define HUGE 1e38
static float gmax= -HUGE;	/* global absolute maximum */

/* TRACE SEQUENTIAL MAX FINDING */
trseq(itr,atr,abh)
int itr;
Sutrace *atr;
Subhed *abh;
{
	float tmax;

	tmax = maxfun(atr->data,abh->ns);

	if(verbose) printf("%d %e\n", itr, tmax);

	if(tmax > gmax) {
		gmax = tmax;
		gitr = itr;
	}
	return(0);
}

postp()
{
	printf("Global max=%e at trace %d\n",gmax,gitr);
}
