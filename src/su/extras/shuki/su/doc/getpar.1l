.TH GETPAR 1l LSU

.SH NAME
igetpar(), lgetpar(), ugetpar(), hgetpar(), fgetpar(), zgetpar(),
sgetpar(), bgetpar() - get input parameters from command line
and/or parfile.

.SH SYNOPSIS
.nf
	int igetpar(name, ptr)
	char *name;
	int *ptr;

	int lgetpar(name, ptr)
	char *name;
	long *ptr;

	int ugetpar(name, ptr)
	char *name;
	unsigned short *ptr;

	int hgetpar(name, ptr)
	char *name;
	short *ptr;

	int fgetpar(name, ptr)
	char *name;
	float *ptr;

	int zgetpar(name, ptr)
	char *name;
	double *ptr;

	int sgetpar(name, ptr)
	char *name;
	char *ptr;

	int bgetpar(name,ptr)
	char *name;
	bool *ptr;

	int maxgetpar()

.SH DESCRIPTION
.I Xgetpar( name, ptr )
are a set of routines to handle input parameters in a manner
which is similar (but not the same as) the old Fortran namelists.

The argument
.I name
is name the variable name on the command line.

The argument
.I ptr
is a pointer to a variable that can recieve the value.

The arguments are normally taken from the command line
However if in the command line the argument
.I "par=filename"
is encountered, then
.I filename
is searched in addition.

In the parameter files individual parameter specifications
are separated from each other by any number of blanks, tabs, or
newlines.

If the variable is listed twice
on the command line, the last variable is used.
The command line arguments overrides the parfile.
If the command line is
.nf
	a.out i=1 i=2
.br
\f2Xgetpar \f1 will see the i=2 argument.

Vectors arguments may be input using commas.
For example, with i=1,2,3 in the command line or the parfile,
\f2Xgetpar("i",i)\f1 will get \f2i[0]=1, i[1]=2, i[2]=3\f1.
(\f2sgetpar\f1 is excluded).
Use this form of input if the program is expecting a vector or else
you will probably overwrite some variable or cause a memory fault.

\f2maxgetpar()\f1 return the maximum possible return value of any
\f2Xgetpar\f1 (except \f2sgetpar()\f1.

.SH EXAMPLE
.nf
int xargc; char **xargv;
main(ac,av)
int ac; char **av;
{
	float x = 1.2345;
	int ix = 7;
	int *v,nv;
	char title[25] = "no title";

	/* SET UP EXTERNAL VALUES */
	xargc= ac; xargv= av;

	/* GET ARGS (IF ANY) */

	sgetpar("title",title);

	if(fgetpar("x",&x))
		printf("Getparred ");
	else
		printf("Default ");
	printf("x=%f\n",x);

	igetpar("ix",&ix);

	v = (int*) malloc( maxgetpar()*sizeof(int) );
	nv = igetpar("v",v);

	...
   }

.SH DIAGNOSTICS
NOT READY

.SH RETURN
The number of arguments gotten.
.I sgetpar()
returns the string length.
.I maxgetpar()
return the maximum possible return value of any
.I Xgetpar
(except
.I sgetpar().

.SH SEE ALSO
getopt(3)

.SH AUTHUR
Shuki
