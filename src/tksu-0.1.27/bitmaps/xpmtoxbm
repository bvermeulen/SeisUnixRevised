#!/bin/sh
#
# xpmtoxbm --
#
#	Convert xpm file to a set of xbm files, one for each indexed color
#	in the xpm file.  Usage:  `xpmtoxbm <file.xpm>'.  The xbm files
#	created have the names <file>1.xbm, <file>2.xbm, etc.
#
# CVS: $id$
#
# The next line restarts using tclsh \
exec tclsh8.0 "$0" "$@"

set pixmapFile [lindex $argv 0]
if {$pixmapFile == ""} {
    puts "Usage: xpmtoxbm <file.xpm>"
    exit 1
}
set pixmapName [file rootname $pixmapFile]

# Read the whole thing in.

set fid [open $pixmapFile r]
set xpm [read $fid]
close $fid

# Retain everything enclosed within the braces.  Strip off all trailing
# commas before treating xpm as a list.

regexp {\{(.+)\}} $xpm match xpm
regsub -all {\",} $xpm \" xpm

set iline 0
foreach line $xpm {
    incr iline

    # Dimensions:
    if {$iline == 1} {

    	set nx [lindex $line 0]; # number of columns
	set ny [lindex $line 1]; # number of rows
	set nc [lindex $line 2]; # number of color indices
	set ic 0

    # Color index table:
    } elseif {$ic < $nc} {

	set symbol($ic) [string index $line 0]
	if {$symbol($ic) == " "} {
	    set color($ic) [lindex $line 1]
	} else {
	    set color($ic) [lindex $line 2]
	}
    	incr ic

    # Pixmap body:
    } else {

	if {[string length $line] != $nx} {
	    puts "Pixmap line length is bad"
	    exit 1
	}
	lappend pixmap $line
    }
}

if {[llength $pixmap] != $ny} {
    puts "Pixmap line count is bad"
    exit 1
}

# For each color (except `None'), pack the on-bits into a bitmap.

foreach ic [array names symbol] {
    if {$color($ic) == "None"} continue

    set bitmapName ${pixmapName}${ic}
    set c $symbol($ic)
    set bitmap ""

    foreach line $pixmap {
	set byte 0
	set bit 0x01

    	for {set ix 0} {$ix < $nx} {incr ix} {
	    if {[string index $line $ix] == $c} {
	    	set byte [expr $byte + $bit]
	    }
	    set bit [expr $bit << 1]
	    if {$bit > 0x80} {
	    	lappend bitmap [format {0x%02x} $byte]
		set byte 0
		set bit 0x01
	    }
	}
	if {$bit != 0x01} {
	    lappend bitmap [format {0x%02x} $byte]
	}
    }

# Write bitmap to file.

    set fid [open $bitmapName.xbm w]
    puts $fid "/* Color should be $color($ic) */"
    puts $fid "#define ${bitmapName}_width $nx"
    puts $fid "#define ${bitmapName}_height $ny"
    puts -nonewline $fid "static unsigned char ${bitmapName}_bits\[\] = \{"

    set ibyte 0
    foreach byte $bitmap {
	if {$ibyte == 0} {
	    puts -nonewline $fid "\n   "
	}
	puts -nonewline $fid "$byte, "
	incr ibyte
    	if {$ibyte == 12} {
	    set ibyte 0
	}
    }
    puts $fid "\n\};"
    close $fid
}
exit 0
