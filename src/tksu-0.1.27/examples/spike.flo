#!/bin/sh
#----------------------------------------------------------
echo 1>&2 Tksu flowsheet /home/jeff/tksu/examples/spike.flo
echo 1>&2 Created Sun Oct 13 21:28:30 PDT 2002
echo 1>&2 Started `date`
echo 1>&2 Process ID = $$
#----------------------------------------------------------

trap abort SIGTERM SIGINT SIGHUP SIGQUIT

pid=$$
mkdir -p /tmp/tksu
jobpid=/tmp/tksu/tksu-$pid-run
modpids=/tmp/tksu/tksu-$pid-pids
echo /home/jeff/tksu/examples/spike.flo > $jobpid

cleanup () {
    rm -f $fifos $modpids
}

abort () {
    kill `cat $modpids`
    cleanup
    exit 1
}

waitfor () {
    echo -n "$! " >> $modpids
    wait $!
    status=$?
    if [ $1 = tee ]; then return 0; fi
    if [ $status -ge 128 ]
    then
        signum=`expr $status - 128`
        signame="(`kill -l $signum`)"
    else
        signame=""
    fi
    echo 1>&2 "Module $1 exited with status $status $signame"
}

#----------------------------------------------------------
# Group suspike-1:
#----------------------------------------------------------

function suspike_1 () {
    echo 1>&2 Group suspike-1:
    if [ "$1" = "-check" ]; then
        echo 1>&2 No obvious errors detected
        return 0
    fi

    echo -n " " > $modpids
    status=$?
    if [ $status != 0 ]; then exit $status; fi

#   Named pipes:
    fifos="\
        /tmp/tksu/tksu-$pid-6 \
        /tmp/tksu/tksu-$pid-4 \
        /tmp/tksu/tksu-$pid-1 \
        /tmp/tksu/tksu-$pid-8 \
        /tmp/tksu/tksu-$pid-7 \
        /tmp/tksu/tksu-$pid-5 \
        /tmp/tksu/tksu-$pid-3 \
        /tmp/tksu/tksu-$pid-2 \
    "
    mkfifo $fifos

#   Output port tees:
    (
        tee </tmp/tksu/tksu-$pid-6 /tmp/tksu/tksu-$pid-7  >/tmp/tksu/tksu-$pid-3 &
        waitfor tee
    )&

#   Module suspike-1:
    (
        suspike >/tmp/tksu/tksu-$pid-1 nt=500 ix1=8 ix2=8 ix3=24 ix4=24 &
        waitfor suspike-1
    )&

#   Module suband-1:
    (
        suband </tmp/tksu/tksu-$pid-1 >/tmp/tksu/tksu-$pid-2 f1=10 f2=15 \
            f3=45 f4=50 &
        waitfor suband-1
    )&

#   Module susum-1:
    (
        susum /tmp/tksu/tksu-$pid-2 /tmp/tksu/tksu-$pid-3 \
            >/tmp/tksu/tksu-$pid-4 &
        waitfor susum-1
    )&

#   Module suband-2:
    (
        suband </tmp/tksu/tksu-$pid-5 >/tmp/tksu/tksu-$pid-6 f1=20 f2=30 \
            f3=90 f4=100 &
        waitfor suband-2
    )&

#   Module suximage-1:
    (
        suximage </tmp/tksu/tksu-$pid-4 >/dev/null &
        waitfor suximage-1
    )&

#   Module suspike-2:
    (
        suspike >/tmp/tksu/tksu-$pid-5 nt=500 ix1=9 ix2=9 ix3=23 ix4=23 &
        waitfor suspike-2
    )&

#   Module suascii-1:
    (
        suascii </tmp/tksu/tksu-$pid-7 >/tmp/tksu/tksu-$pid-8 bare=2 &
        waitfor suascii-1
    )&

#   Module tolog-1:
    (
        tolog /tmp/tksu/tksu-$pid-8 &
        waitfor tolog-1
    )&

#   Wait for modules to finish, then report exit status
    wait
    echo 1>&2 Completed group suspike-1
    echo 1>&2
    cleanup
    rm -f $jobpid
    return 0
}

#----------------------------------------------------------
echo 1>&2
echo 1>&2 Check flow:
#----------------------------------------------------------

status=0
for leader in suspike_1; do
    $leader -check
    status=`expr $status + $?`
done
if [ "$1" = "-check" -o $status -ne 0 ]; then
    exit $status
fi

#----------------------------------------------------------
echo 1>&2
echo 1>&2 Execute flow:
#----------------------------------------------------------

for leader in suspike_1; do
    $leader
    status=`expr $status + $?`
    if [ $status -ne 0 ]; then break; fi
done
if [ $status = 0 ]; then sdesc=normal; else sdesc=error; fi
echo 1>&2 "Flow exited with $sdesc status ($status)"
exit $status

#-----------------------------------------------------------
# Tksu canvas definition -- please do not edit this section.
#-----------------------------------------------------------
<< TksuCanvasEnd
set ModuleValues(suband-2) {
    {param f1 f1 20 {} {}}
    {param f2 f2 30 {} {}}
    {param f3 f3 90 {} {}}
    {param f4 f4 100 {} {}}
};
set ModuleValues(suximage-1) {
    {port stdout stdout temp {} {}}
    {port mpicks mpicks file {} {}}
    {port par par file {} {}}
};
set ModuleValues(suspike-1) {
    {port par par file {} {}}
    {param nt nt 500 {} {}}
    {param ix1 ix1 8 {} {}}
    {param ix2 ix2 8 {} {}}
    {param ix3 ix3 24 {} {}}
    {param ix4 ix4 24 {} {}}
};
set ModuleValues(suxwigb-1) {
    {port stdout stdout temp {} {}}
    {port mpicks mpicks file {} {}}
    {port par par file {} {}}
};
set ModuleValues(tolog-1) {
};
set ModuleValues(suascii-1) {
    {port par par file {} {}}
    {param bare bare 2 {} {}}
};
set ModuleValues(susum-1) {
};
set ModuleValues(suband-1) {
    {param f1 f1 10 {} {}}
    {param f2 f2 15 {} {}}
    {param f3 f3 45 {} {}}
    {param f4 f4 50 {} {}}
};
set ModuleValues(suspike-2) {
    {port par par file {} {}}
    {param nt nt 500 {} {}}
    {param ix1 ix1 9 {} {}}
    {param ix2 ix2 9 {} {}}
    {param ix3 ix3 23 {} {}}
    {param ix4 ix4 23 {} {}}
};
set ModuleCoords(suband-2) {192.0 128.0};
set ModuleCoords(suximage-1) {32.0 320.0};
set ModuleCoords(suspike-1) {32.0 32.0};
set ModuleCoords(suxwigb-1) {32.0 416.0};
set ModuleCoords(tolog-1) {192.0 320.0};
set ModuleCoords(suascii-1) {192.0 224.0};
set ModuleCoords(susum-1) {32.0 224.0};
set ModuleCoords(suband-1) {32.0 128.0};
set ModuleCoords(suspike-2) {192.0 32.0};
set LinkValues(1) {suxwigb-1 stdin susum-1 stdout};
set LinkValues(2) {suximage-1 stdin susum-1 stdout};
set LinkValues(3) {suband-1 stdin suspike-1 stdout};
set LinkValues(4) {susum-1 data-2 suband-2 stdout};
set LinkValues(5) {suband-2 stdin suspike-2 stdout};
set LinkValues(6) {suascii-1 stdin suband-2 stdout};
set LinkValues(7) {susum-1 data-1 suband-1 stdout};
set LinkValues(8) {tolog-1 textfile-1 suascii-1 stdout};
set LinkCoords(1) {{48.0 16.022668004 48.0000000001} {267.0 296.0 388.0 417.0}};
set LinkCoords(2) {48.0 {267.0 321.0}};
set LinkCoords(3) {48.0 {75.0 129.0}};
set LinkCoords(4) {{208.0 72.0} {171.0 198.0 225.0}};
set LinkCoords(5) {208.0 {75.0 129.0}};
set LinkCoords(6) {208.0 {171.0 225.0}};
set LinkCoords(7) {48.0 {171.0 225.0}};
set LinkCoords(8) {{208.0 208.0 208.0} {267.0 297.490566038 290.509433962 321.0}};
set HardDisabled suxwigb-1
TksuCanvasEnd
#-----------------------------------------------------------
