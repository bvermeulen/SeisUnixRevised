#!/bin/sh
#----------------------------------------------------------
echo 1>&2 Tksu flowsheet /home/jeff/tksu/examples/trimodel.flo
echo 1>&2 Created Sun Oct 13 21:33:27 PDT 2002
echo 1>&2 Started `date`
echo 1>&2 Process ID = $$
#----------------------------------------------------------

trap abort SIGTERM SIGINT SIGHUP SIGQUIT

pid=$$
mkdir -p /tmp/tksu
jobpid=/tmp/tksu/tksu-$pid-run
modpids=/tmp/tksu/tksu-$pid-pids
echo /home/jeff/tksu/examples/trimodel.flo > $jobpid

cleanup () {
    rm -f $fifos $modpids
}

abort () {
    kill `cat $modpids`
    cleanup
    exit 1
}

waitfor () {
    echo -n "$! " >> $modpids
    wait $!
    status=$?
    if [ $1 = tee ]; then return 0; fi
    if [ $status -ge 128 ]
    then
        signum=`expr $status - 128`
        signame="(`kill -l $signum`)"
    else
        signame=""
    fi
    echo 1>&2 "Module $1 exited with status $status $signame"
}

#----------------------------------------------------------
# Group trimodel-1:
#----------------------------------------------------------

function trimodel_1 () {
    echo 1>&2 Group trimodel-1:
    if [ "$1" = "-check" ]; then
        echo 1>&2 No obvious errors detected
        return 0
    fi

    echo -n " " > $modpids
    status=$?
    if [ $status != 0 ]; then exit $status; fi

#   Named pipes:
    fifos="\
        /tmp/tksu/tksu-$pid-6 \
        /tmp/tksu/tksu-$pid-7 \
        /tmp/tksu/tksu-$pid-5 \
        /tmp/tksu/tksu-$pid-4 \
    "
    mkfifo $fifos

#   Output port tees:
    (
        tee </tmp/tksu/tksu-$pid-4 /tmp/tksu/tksu-$pid-5  >/tmp/tksu/tksu-$pid-6 &
        waitfor tee
    )&

#   Module trimodel-1:
    (
        trimodel >/tmp/tksu/tksu-$pid-4 par=trimodel.par xedge=0,1 \
            xedge=0,1 zedge=0,0 zedge=1,1 sedge=1,1 sedge=2,2 &
        waitfor trimodel-1
    )&

#   Module sxplot-1:
    (
        sxplot </tmp/tksu/tksu-$pid-5 &
        waitfor sxplot-1
    )&

#   Module tri2uni-1:
    (
        tri2uni </tmp/tksu/tksu-$pid-6 >/tmp/tksu/tksu-$pid-7 n1=11 \
            n2=11 d1=0.1 d2=0.1 &
        waitfor tri2uni-1
    )&

#   Module ximage-1:
    (
        ximage </tmp/tksu/tksu-$pid-7 >/dev/null n1=11 n2=11 wbox=200 \
            hbox=200 &
        waitfor ximage-1
    )&

#   Wait for modules to finish, then report exit status
    wait
    echo 1>&2 Completed group trimodel-1
    echo 1>&2
    cleanup
    rm -f $jobpid
    return 0
}

#----------------------------------------------------------
echo 1>&2
echo 1>&2 Check flow:
#----------------------------------------------------------

status=0
for leader in trimodel_1; do
    $leader -check
    status=`expr $status + $?`
done
if [ "$1" = "-check" -o $status -ne 0 ]; then
    exit $status
fi

#----------------------------------------------------------
echo 1>&2
echo 1>&2 Execute flow:
#----------------------------------------------------------

for leader in trimodel_1; do
    $leader
    status=`expr $status + $?`
    if [ $status -ne 0 ]; then break; fi
done
if [ $status = 0 ]; then sdesc=normal; else sdesc=error; fi
echo 1>&2 "Flow exited with $sdesc status ($status)"
exit $status

#-----------------------------------------------------------
# Tksu canvas definition -- please do not edit this section.
#-----------------------------------------------------------
<< TksuCanvasEnd
set ModuleValues(sxplot-1) {
    {port par par file {} {}}
};
set ModuleValues(ximage-1) {
    {port stdout stdout temp {} {}}
    {port mpicks mpicks file {} {}}
    {port par par file {} {}}
    {param n1 n1 11 {} {}}
    {param n2 n2 11 {} {}}
    {param wbox wbox 200 {} {}}
    {param hbox hbox 200 {} {}}
};
set ModuleValues(trimodel-1) {
    {port par par {file trimodel.par} {} {}}
    {param dup-xedge xedge(2) 0,1 {} {}}
    {param dup-xedge xedge(3) 0,1 {} {}}
    {param dup-zedge zedge(1) 0,0 {} {}}
    {param dup-zedge zedge(2) 1,1 {} {}}
    {param dup-sedge sedge(1) 1,1 {} {}}
    {param dup-sedge sedge(2) 2,2 {} {}}
};
set ModuleValues(tri2uni-1) {
    {port par par file {} {}}
    {param n1 n1 11 {} {}}
    {param n2 n2 11 {} {}}
    {param d1 d1 0.1 {} {}}
    {param d2 d2 0.1 {} {}}
};
set ModuleCoords(sxplot-1) {192.0 128.0};
set ModuleCoords(ximage-1) {32.0 224.0};
set ModuleCoords(trimodel-1) {32.0 32.0};
set ModuleCoords(tri2uni-1) {32.0 128.0};
set LinkValues(1) {tri2uni-1 stdin trimodel-1 stdout};
set LinkValues(2) {ximage-1 stdin tri2uni-1 stdout};
set LinkValues(3) {sxplot-1 stdin trimodel-1 stdout};
set LinkCoords(1) {{48.0 48.0} {75.0 102.0 129.0}};
set LinkCoords(2) {{48.0 48.0} {171.0 198.0 225.0}};
set LinkCoords(3) {{48.0 208.0} {75.0 102.0 129.0}};
set HardDisabled {}
TksuCanvasEnd
#-----------------------------------------------------------
